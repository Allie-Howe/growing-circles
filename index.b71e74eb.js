// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"l57oZ":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "5c1b77e3b71e74eb";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && ![
        "localhost",
        "127.0.0.1",
        "0.0.0.0"
    ].includes(hostname) ? "wss" : "ws";
    var ws;
    if (HMR_USE_SSE) ws = new EventSource("/__parcel_hmr");
    else try {
        ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    } catch (err) {
        if (err.message) console.error(err.message);
        ws = {};
    }
    // Web extension context
    var extCtx = typeof browser === "undefined" ? typeof chrome === "undefined" ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    if (ws instanceof WebSocket) {
        ws.onerror = function(e) {
            if (e.message) console.error(e.message);
        };
        ws.onclose = function() {
            console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
        };
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"h7u1C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "STROKE_COL", ()=>STROKE_COL);
var _p5 = require("p5");
var _p5Default = parcelHelpers.interopDefault(_p5);
var _circle = require("./circle");
var _lodash = require("lodash");
const STROKE_COL = 255;
const CIRCLE_COUNT = 96;
const sketch = (p5)=>{
    const circles = [];
    p5.windowResized = ()=>{
        p5.resizeCanvas(window.innerWidth, window.innerHeight);
    };
    p5.setup = ()=>{
        p5.createCanvas(window.innerWidth, window.innerHeight);
        p5.pixelDensity(1);
        p5.noFill();
        p5.strokeWeight(8);
        p5.stroke(STROKE_COL);
        (0, _lodash.range)(CIRCLE_COUNT).forEach((i)=>circles.push(new (0, _circle.Circle)(i * 100)));
    };
    p5.draw = ()=>{
        p5.background(0);
        p5.translate(p5.width / 2, p5.height / 2);
        circles.forEach((c)=>c.draw(p5));
    };
};
new (0, _p5Default.default)(sketch);

},{"p5":"iwHoP","@parcel/transformer-js/src/esmodule-helpers.js":"crPa1","./circle":"9zv4H","lodash":"fAiEq"}],"iwHoP":[function(require,module,exports) {
/*! p5.js v1.5.0 October 18, 2022 */ var global = arguments[3];
!function(e) {
    module.exports = e();
}(function() {
    var s, e, t;
    return (function o(n, s, i) {
        function a(t, e) {
            if (!s[t]) {
                if (!n[t]) {
                    var r = undefined;
                    if (!e && r) return r(t, !0);
                    if (l) return l(t, !0);
                    throw (e = new Error("Cannot find module '" + t + "'")).code = "MODULE_NOT_FOUND", e;
                }
                r = s[t] = {
                    exports: {}
                }, n[t][0].call(r.exports, function(e) {
                    return a(n[t][1][e] || e);
                }, r, r.exports, o, n, s, i);
            }
            return s[t].exports;
        }
        for(var l = undefined, e = 0; e < i.length; e++)a(i[e]);
        return a;
    })({
        1: [
            function(e, t, r) {
                "use strict";
                r.byteLength = function(e) {
                    var e = c(e), t = e[0], e = e[1];
                    return 3 * (t + e) / 4 - e;
                }, r.toByteArray = function(e) {
                    var t, r, o = c(e), n = o[0], o = o[1], s = new u(function(e, t) {
                        return 3 * (e + t) / 4 - t;
                    }(n, o)), i = 0, a = 0 < o ? n - 4 : n;
                    for(r = 0; r < a; r += 4)t = l[e.charCodeAt(r)] << 18 | l[e.charCodeAt(r + 1)] << 12 | l[e.charCodeAt(r + 2)] << 6 | l[e.charCodeAt(r + 3)], s[i++] = t >> 16 & 255, s[i++] = t >> 8 & 255, s[i++] = 255 & t;
                    2 === o && (t = l[e.charCodeAt(r)] << 2 | l[e.charCodeAt(r + 1)] >> 4, s[i++] = 255 & t);
                    1 === o && (t = l[e.charCodeAt(r)] << 10 | l[e.charCodeAt(r + 1)] << 4 | l[e.charCodeAt(r + 2)] >> 2, s[i++] = t >> 8 & 255, s[i++] = 255 & t);
                    return s;
                }, r.fromByteArray = function(e) {
                    for(var t, r = e.length, o = r % 3, n = [], s = 0, i = r - o; s < i; s += 16383)n.push(function(e, t, r) {
                        for(var o, n = [], s = t; s < r; s += 3)o = (e[s] << 16 & 16711680) + (e[s + 1] << 8 & 65280) + (255 & e[s + 2]), n.push(function(e) {
                            return a[e >> 18 & 63] + a[e >> 12 & 63] + a[e >> 6 & 63] + a[63 & e];
                        }(o));
                        return n.join("");
                    }(e, s, i < s + 16383 ? i : s + 16383));
                    1 == o ? (t = e[r - 1], n.push(a[t >> 2] + a[t << 4 & 63] + "==")) : 2 == o && (t = (e[r - 2] << 8) + e[r - 1], n.push(a[t >> 10] + a[t >> 4 & 63] + a[t << 2 & 63] + "="));
                    return n.join("");
                };
                for(var a = [], l = [], u = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = 0, s = o.length; n < s; ++n)a[n] = o[n], l[o.charCodeAt(n)] = n;
                function c(e) {
                    var t = e.length;
                    if (0 < t % 4) throw new Error("Invalid string. Length must be a multiple of 4");
                    e = e.indexOf("="), t = (e = -1 === e ? t : e) === t ? 0 : 4 - e % 4;
                    return [
                        e,
                        t
                    ];
                }
                l["-".charCodeAt(0)] = 62, l["_".charCodeAt(0)] = 63;
            },
            {}
        ],
        2: [
            function(e, t, r) {},
            {}
        ],
        3: [
            function(e, t, r) {
                arguments[4][2][0].apply(r, arguments);
            },
            {
                dup: 2
            }
        ],
        4: [
            function(A, e, P) {
                (function(d) {
                    "use strict";
                    var S = A("base64-js"), s = A("ieee754"), e = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null, t = (P.Buffer = d, P.SlowBuffer = function(e) {
                        +e != e && (e = 0);
                        return d.alloc(+e);
                    }, P.INSPECT_MAX_BYTES = 50, 2147483647);
                    function l(e) {
                        if (t < e) throw new RangeError('The value "' + e + '" is invalid for option "size"');
                        e = new Uint8Array(e);
                        return Object.setPrototypeOf(e, d.prototype), e;
                    }
                    function d(e, t, r) {
                        if ("number" != typeof e) return o(e, t, r);
                        if ("string" == typeof t) throw new TypeError('The "string" argument must be of type string. Received type number');
                        return i(e);
                    }
                    function o(e, t, r) {
                        if ("string" == typeof e) {
                            var o = e, n = t;
                            if (d.isEncoding(n = "string" == typeof n && "" !== n ? n : "utf8")) return s = 0 | f(o, n), i = l(s), i = (o = i.write(o, n)) !== s ? i.slice(0, o) : i;
                            throw new TypeError("Unknown encoding: " + n);
                        }
                        if (ArrayBuffer.isView(e)) return u(e);
                        if (null != e) {
                            if (O(e, ArrayBuffer) || e && O(e.buffer, ArrayBuffer)) {
                                var s = e, o = t, i = r;
                                if (o < 0 || s.byteLength < o) throw new RangeError('"offset" is outside of buffer bounds');
                                if (s.byteLength < o + (i || 0)) throw new RangeError('"length" is outside of buffer bounds');
                                return s = void 0 === o && void 0 === i ? new Uint8Array(s) : void 0 === i ? new Uint8Array(s, o) : new Uint8Array(s, o, i), Object.setPrototypeOf(s, d.prototype), s;
                            }
                            if ("number" == typeof e) throw new TypeError('The "value" argument must not be of type number. Received type number');
                            n = e.valueOf && e.valueOf();
                            if (null != n && n !== e) return d.from(n, t, r);
                            var a = function(e) {
                                var t, r;
                                if (d.isBuffer(e)) return t = 0 | c(e.length), 0 !== (r = l(t)).length && e.copy(r, 0, 0, t), r;
                                if (void 0 !== e.length) return "number" != typeof e.length || L(e.length) ? l(0) : u(e);
                                if ("Buffer" === e.type && Array.isArray(e.data)) return u(e.data);
                            }(e);
                            if (a) return a;
                            if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive]) return d.from(e[Symbol.toPrimitive]("string"), t, r);
                        }
                        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                    }
                    function n(e) {
                        if ("number" != typeof e) throw new TypeError('"size" argument must be of type number');
                        if (e < 0) throw new RangeError('The value "' + e + '" is invalid for option "size"');
                    }
                    function i(e) {
                        return n(e), l(e < 0 ? 0 : 0 | c(e));
                    }
                    function u(e) {
                        for(var t = e.length < 0 ? 0 : 0 | c(e.length), r = l(t), o = 0; o < t; o += 1)r[o] = 255 & e[o];
                        return r;
                    }
                    function c(e) {
                        if (t <= e) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + t.toString(16) + " bytes");
                        return 0 | e;
                    }
                    function f(e, t) {
                        if (d.isBuffer(e)) return e.length;
                        if (ArrayBuffer.isView(e) || O(e, ArrayBuffer)) return e.byteLength;
                        if ("string" != typeof e) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
                        var r = e.length, o = 2 < arguments.length && !0 === arguments[2];
                        if (!o && 0 === r) return 0;
                        for(var n = !1;;)switch(t){
                            case "ascii":
                            case "latin1":
                            case "binary":
                                return r;
                            case "utf8":
                            case "utf-8":
                                return E(e).length;
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return 2 * r;
                            case "hex":
                                return r >>> 1;
                            case "base64":
                                return T(e).length;
                            default:
                                if (n) return o ? -1 : E(e).length;
                                t = ("" + t).toLowerCase(), n = !0;
                        }
                    }
                    function r(e, t, r) {
                        var o, n = !1;
                        if ((t = void 0 === t || t < 0 ? 0 : t) > this.length) return "";
                        if ((r = void 0 === r || r > this.length ? this.length : r) <= 0) return "";
                        if ((r >>>= 0) <= (t >>>= 0)) return "";
                        for(e = e || "utf8";;)switch(e){
                            case "hex":
                                var s = this, i = t, a = r, l = s.length;
                                (!a || a < 0 || l < a) && (a = l);
                                for(var u = "", c = i = !i || i < 0 ? 0 : i; c < a; ++c)u += k[s[c]];
                                return u;
                            case "utf8":
                            case "utf-8":
                                return M(this, t, r);
                            case "ascii":
                                var d = this, l = t, f = r, h = "";
                                f = Math.min(d.length, f);
                                for(var p = l; p < f; ++p)h += String.fromCharCode(127 & d[p]);
                                return h;
                            case "latin1":
                            case "binary":
                                var m = this, i = t, y = r, g = "";
                                y = Math.min(m.length, y);
                                for(var v = i; v < y; ++v)g += String.fromCharCode(m[v]);
                                return g;
                            case "base64":
                                return b = this, o = r, 0 === (j = t) && o === b.length ? S.fromByteArray(b) : S.fromByteArray(b.slice(j, o));
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                for(var b = t, j = r, _ = this.slice(b, j), x = "", w = 0; w < _.length; w += 2)x += String.fromCharCode(_[w] + 256 * _[w + 1]);
                                return x;
                            default:
                                if (n) throw new TypeError("Unknown encoding: " + e);
                                e = (e + "").toLowerCase(), n = !0;
                        }
                    }
                    function a(e, t, r) {
                        var o = e[t];
                        e[t] = e[r], e[r] = o;
                    }
                    function h(e, t, r, o, n) {
                        if (0 === e.length) return -1;
                        if ("string" == typeof r ? (o = r, r = 0) : 2147483647 < r ? r = 2147483647 : r < -2147483648 && (r = -2147483648), (r = (r = L(r = +r) ? n ? 0 : e.length - 1 : r) < 0 ? e.length + r : r) >= e.length) {
                            if (n) return -1;
                            r = e.length - 1;
                        } else if (r < 0) {
                            if (!n) return -1;
                            r = 0;
                        }
                        if ("string" == typeof t && (t = d.from(t, o)), d.isBuffer(t)) return 0 === t.length ? -1 : p(e, t, r, o, n);
                        if ("number" == typeof t) return t &= 255, "function" == typeof Uint8Array.prototype.indexOf ? (n ? Uint8Array.prototype.indexOf : Uint8Array.prototype.lastIndexOf).call(e, t, r) : p(e, [
                            t
                        ], r, o, n);
                        throw new TypeError("val must be string, number or Buffer");
                    }
                    function p(e, t, r, o, n) {
                        var s = 1, i = e.length, a = t.length;
                        if (void 0 !== o && ("ucs2" === (o = String(o).toLowerCase()) || "ucs-2" === o || "utf16le" === o || "utf-16le" === o)) {
                            if (e.length < 2 || t.length < 2) return -1;
                            i /= s = 2, a /= 2, r /= 2;
                        }
                        function l(e, t) {
                            return 1 === s ? e[t] : e.readUInt16BE(t * s);
                        }
                        if (n) for(var u = -1, c = r; c < i; c++)if (l(e, c) === l(t, -1 === u ? 0 : c - u)) {
                            if (c - (u = -1 === u ? c : u) + 1 === a) return u * s;
                        } else -1 !== u && (c -= c - u), u = -1;
                        else for(c = r = i < r + a ? i - a : r; 0 <= c; c--){
                            for(var d = !0, f = 0; f < a; f++)if (l(e, c + f) !== l(t, f)) {
                                d = !1;
                                break;
                            }
                            if (d) return c;
                        }
                        return -1;
                    }
                    function y(e, t, r, o) {
                        return C(function(e) {
                            for(var t = [], r = 0; r < e.length; ++r)t.push(255 & e.charCodeAt(r));
                            return t;
                        }(t), e, r, o);
                    }
                    function g(e, t, r, o) {
                        return C(function(e, t) {
                            for(var r, o, n = [], s = 0; s < e.length && !((t -= 2) < 0); ++s)o = e.charCodeAt(s), r = o >> 8, o = o % 256, n.push(o), n.push(r);
                            return n;
                        }(t, e.length - r), e, r, o);
                    }
                    function M(e, t, r) {
                        r = Math.min(e.length, r);
                        for(var o = [], n = t; n < r;){
                            var s, i, a, l, u = e[n], c = null, d = 239 < u ? 4 : 223 < u ? 3 : 191 < u ? 2 : 1;
                            if (n + d <= r) switch(d){
                                case 1:
                                    u < 128 && (c = u);
                                    break;
                                case 2:
                                    128 == (192 & (s = e[n + 1])) && 127 < (l = (31 & u) << 6 | 63 & s) && (c = l);
                                    break;
                                case 3:
                                    s = e[n + 1], i = e[n + 2], 128 == (192 & s) && 128 == (192 & i) && 2047 < (l = (15 & u) << 12 | (63 & s) << 6 | 63 & i) && (l < 55296 || 57343 < l) && (c = l);
                                    break;
                                case 4:
                                    s = e[n + 1], i = e[n + 2], a = e[n + 3], 128 == (192 & s) && 128 == (192 & i) && 128 == (192 & a) && 65535 < (l = (15 & u) << 18 | (63 & s) << 12 | (63 & i) << 6 | 63 & a) && l < 1114112 && (c = l);
                            }
                            null === c ? (c = 65533, d = 1) : 65535 < c && (c -= 65536, o.push(c >>> 10 & 1023 | 55296), c = 56320 | 1023 & c), o.push(c), n += d;
                        }
                        var f = o, h = f.length;
                        if (h <= v) return String.fromCharCode.apply(String, f);
                        for(var p = "", m = 0; m < h;)p += String.fromCharCode.apply(String, f.slice(m, m += v));
                        return p;
                    }
                    P.kMaxLength = t, (d.TYPED_ARRAY_SUPPORT = function() {
                        try {
                            var e = new Uint8Array(1), t = {
                                foo: function() {
                                    return 42;
                                }
                            };
                            return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), 42 === e.foo();
                        } catch (e) {
                            return !1;
                        }
                    }()) || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(d.prototype, "parent", {
                        enumerable: !0,
                        get: function() {
                            if (d.isBuffer(this)) return this.buffer;
                        }
                    }), Object.defineProperty(d.prototype, "offset", {
                        enumerable: !0,
                        get: function() {
                            if (d.isBuffer(this)) return this.byteOffset;
                        }
                    }), "undefined" != typeof Symbol && null != Symbol.species && d[Symbol.species] === d && Object.defineProperty(d, Symbol.species, {
                        value: null,
                        configurable: !0,
                        enumerable: !1,
                        writable: !1
                    }), d.poolSize = 8192, d.from = o, Object.setPrototypeOf(d.prototype, Uint8Array.prototype), Object.setPrototypeOf(d, Uint8Array), d.alloc = function(e, t, r) {
                        return t, r, n(e), !(e <= 0) && void 0 !== t ? "string" == typeof r ? l(e).fill(t, r) : l(e).fill(t) : l(e);
                    }, d.allocUnsafe = i, d.allocUnsafeSlow = i, d.isBuffer = function(e) {
                        return null != e && !0 === e._isBuffer && e !== d.prototype;
                    }, d.compare = function(e, t) {
                        if (O(e, Uint8Array) && (e = d.from(e, e.offset, e.byteLength)), O(t, Uint8Array) && (t = d.from(t, t.offset, t.byteLength)), !d.isBuffer(e) || !d.isBuffer(t)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                        if (e === t) return 0;
                        for(var r = e.length, o = t.length, n = 0, s = Math.min(r, o); n < s; ++n)if (e[n] !== t[n]) {
                            r = e[n], o = t[n];
                            break;
                        }
                        return r < o ? -1 : o < r ? 1 : 0;
                    }, d.isEncoding = function(e) {
                        switch(String(e).toLowerCase()){
                            case "hex":
                            case "utf8":
                            case "utf-8":
                            case "ascii":
                            case "latin1":
                            case "binary":
                            case "base64":
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return !0;
                            default:
                                return !1;
                        }
                    }, d.concat = function(e, t) {
                        if (!Array.isArray(e)) throw new TypeError('"list" argument must be an Array of Buffers');
                        if (0 === e.length) return d.alloc(0);
                        if (void 0 === t) for(n = t = 0; n < e.length; ++n)t += e[n].length;
                        for(var r = d.allocUnsafe(t), o = 0, n = 0; n < e.length; ++n){
                            var s = e[n];
                            if (O(s, Uint8Array) && (s = d.from(s)), !d.isBuffer(s)) throw new TypeError('"list" argument must be an Array of Buffers');
                            s.copy(r, o), o += s.length;
                        }
                        return r;
                    }, d.byteLength = f, d.prototype._isBuffer = !0, d.prototype.swap16 = function() {
                        var e = this.length;
                        if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                        for(var t = 0; t < e; t += 2)a(this, t, t + 1);
                        return this;
                    }, d.prototype.swap32 = function() {
                        var e = this.length;
                        if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                        for(var t = 0; t < e; t += 4)a(this, t, t + 3), a(this, t + 1, t + 2);
                        return this;
                    }, d.prototype.swap64 = function() {
                        var e = this.length;
                        if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                        for(var t = 0; t < e; t += 8)a(this, t, t + 7), a(this, t + 1, t + 6), a(this, t + 2, t + 5), a(this, t + 3, t + 4);
                        return this;
                    }, d.prototype.toLocaleString = d.prototype.toString = function() {
                        var e = this.length;
                        return 0 === e ? "" : 0 === arguments.length ? M(this, 0, e) : r.apply(this, arguments);
                    }, d.prototype.equals = function(e) {
                        if (d.isBuffer(e)) return this === e || 0 === d.compare(this, e);
                        throw new TypeError("Argument must be a Buffer");
                    }, d.prototype.inspect = function() {
                        var e = "", t = P.INSPECT_MAX_BYTES, e = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim();
                        return this.length > t && (e += " ... "), "<Buffer " + e + ">";
                    }, e && (d.prototype[e] = d.prototype.inspect), d.prototype.compare = function(e, t, r, o, n) {
                        if (O(e, Uint8Array) && (e = d.from(e, e.offset, e.byteLength)), !d.isBuffer(e)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
                        if (void 0 === r && (r = e ? e.length : 0), void 0 === o && (o = 0), void 0 === n && (n = this.length), (t = void 0 === t ? 0 : t) < 0 || r > e.length || o < 0 || n > this.length) throw new RangeError("out of range index");
                        if (n <= o && r <= t) return 0;
                        if (n <= o) return -1;
                        if (r <= t) return 1;
                        if (this === e) return 0;
                        for(var s = (n >>>= 0) - (o >>>= 0), i = (r >>>= 0) - (t >>>= 0), a = Math.min(s, i), l = this.slice(o, n), u = e.slice(t, r), c = 0; c < a; ++c)if (l[c] !== u[c]) {
                            s = l[c], i = u[c];
                            break;
                        }
                        return s < i ? -1 : i < s ? 1 : 0;
                    }, d.prototype.includes = function(e, t, r) {
                        return -1 !== this.indexOf(e, t, r);
                    }, d.prototype.indexOf = function(e, t, r) {
                        return h(this, e, t, r, !0);
                    }, d.prototype.lastIndexOf = function(e, t, r) {
                        return h(this, e, t, r, !1);
                    }, d.prototype.write = function(e, t, r, o) {
                        if (void 0 === t) o = "utf8", r = this.length, t = 0;
                        else if (void 0 === r && "string" == typeof t) o = t, r = this.length, t = 0;
                        else {
                            if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                            t >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === o && (o = "utf8")) : (o = r, r = void 0);
                        }
                        var n = this.length - t;
                        if ((void 0 === r || n < r) && (r = n), 0 < e.length && (r < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                        o = o || "utf8";
                        for(var s, i, a, l = !1;;)switch(o){
                            case "hex":
                                var u = this, c = e, d = t, f = r, h = (d = Number(d) || 0, u.length - d);
                                (!f || h < (f = Number(f))) && (f = h), (h = c.length) / 2 < f && (f = h / 2);
                                for(var p = 0; p < f; ++p){
                                    var m = parseInt(c.substr(2 * p, 2), 16);
                                    if (L(m)) return p;
                                    u[d + p] = m;
                                }
                                return p;
                            case "utf8":
                            case "utf-8":
                                return h = t, a = r, C(E(e, (i = this).length - h), i, h, a);
                            case "ascii":
                                return y(this, e, t, r);
                            case "latin1":
                            case "binary":
                                return y(this, e, t, r);
                            case "base64":
                                return i = this, a = t, s = r, C(T(e), i, a, s);
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return g(this, e, t, r);
                            default:
                                if (l) throw new TypeError("Unknown encoding: " + o);
                                o = ("" + o).toLowerCase(), l = !0;
                        }
                    }, d.prototype.toJSON = function() {
                        return {
                            type: "Buffer",
                            data: Array.prototype.slice.call(this._arr || this, 0)
                        };
                    };
                    var v = 4096;
                    function m(e, t, r) {
                        if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
                        if (r < e + t) throw new RangeError("Trying to access beyond buffer length");
                    }
                    function b(e, t, r, o, n, s) {
                        if (!d.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
                        if (n < t || t < s) throw new RangeError('"value" argument is out of bounds');
                        if (r + o > e.length) throw new RangeError("Index out of range");
                    }
                    function j(e, t, r, o) {
                        if (r + o > e.length) throw new RangeError("Index out of range");
                        if (r < 0) throw new RangeError("Index out of range");
                    }
                    function _(e, t, r, o, n) {
                        return t = +t, r >>>= 0, n || j(e, 0, r, 4), s.write(e, t, r, o, 23, 4), r + 4;
                    }
                    function x(e, t, r, o, n) {
                        return t = +t, r >>>= 0, n || j(e, 0, r, 8), s.write(e, t, r, o, 52, 8), r + 8;
                    }
                    d.prototype.slice = function(e, t) {
                        var r = this.length, r = ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : r < e && (e = r), (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : r < t && (t = r), t < e && (t = e), this.subarray(e, t));
                        return Object.setPrototypeOf(r, d.prototype), r;
                    }, d.prototype.readUIntLE = function(e, t, r) {
                        e >>>= 0, t >>>= 0, r || m(e, t, this.length);
                        for(var o = this[e], n = 1, s = 0; ++s < t && (n *= 256);)o += this[e + s] * n;
                        return o;
                    }, d.prototype.readUIntBE = function(e, t, r) {
                        e >>>= 0, t >>>= 0, r || m(e, t, this.length);
                        for(var o = this[e + --t], n = 1; 0 < t && (n *= 256);)o += this[e + --t] * n;
                        return o;
                    }, d.prototype.readUInt8 = function(e, t) {
                        return e >>>= 0, t || m(e, 1, this.length), this[e];
                    }, d.prototype.readUInt16LE = function(e, t) {
                        return e >>>= 0, t || m(e, 2, this.length), this[e] | this[e + 1] << 8;
                    }, d.prototype.readUInt16BE = function(e, t) {
                        return e >>>= 0, t || m(e, 2, this.length), this[e] << 8 | this[e + 1];
                    }, d.prototype.readUInt32LE = function(e, t) {
                        return e >>>= 0, t || m(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3];
                    }, d.prototype.readUInt32BE = function(e, t) {
                        return e >>>= 0, t || m(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
                    }, d.prototype.readIntLE = function(e, t, r) {
                        e >>>= 0, t >>>= 0, r || m(e, t, this.length);
                        for(var o = this[e], n = 1, s = 0; ++s < t && (n *= 256);)o += this[e + s] * n;
                        return (n *= 128) <= o && (o -= Math.pow(2, 8 * t)), o;
                    }, d.prototype.readIntBE = function(e, t, r) {
                        e >>>= 0, t >>>= 0, r || m(e, t, this.length);
                        for(var o = t, n = 1, s = this[e + --o]; 0 < o && (n *= 256);)s += this[e + --o] * n;
                        return (n *= 128) <= s && (s -= Math.pow(2, 8 * t)), s;
                    }, d.prototype.readInt8 = function(e, t) {
                        return e >>>= 0, t || m(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e];
                    }, d.prototype.readInt16LE = function(e, t) {
                        e >>>= 0, t || m(e, 2, this.length);
                        t = this[e] | this[e + 1] << 8;
                        return 32768 & t ? 4294901760 | t : t;
                    }, d.prototype.readInt16BE = function(e, t) {
                        e >>>= 0, t || m(e, 2, this.length);
                        t = this[e + 1] | this[e] << 8;
                        return 32768 & t ? 4294901760 | t : t;
                    }, d.prototype.readInt32LE = function(e, t) {
                        return e >>>= 0, t || m(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
                    }, d.prototype.readInt32BE = function(e, t) {
                        return e >>>= 0, t || m(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
                    }, d.prototype.readFloatLE = function(e, t) {
                        return e >>>= 0, t || m(e, 4, this.length), s.read(this, e, !0, 23, 4);
                    }, d.prototype.readFloatBE = function(e, t) {
                        return e >>>= 0, t || m(e, 4, this.length), s.read(this, e, !1, 23, 4);
                    }, d.prototype.readDoubleLE = function(e, t) {
                        return e >>>= 0, t || m(e, 8, this.length), s.read(this, e, !0, 52, 8);
                    }, d.prototype.readDoubleBE = function(e, t) {
                        return e >>>= 0, t || m(e, 8, this.length), s.read(this, e, !1, 52, 8);
                    }, d.prototype.writeUIntLE = function(e, t, r, o) {
                        e = +e, t >>>= 0, r >>>= 0, o || b(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                        var n = 1, s = 0;
                        for(this[t] = 255 & e; ++s < r && (n *= 256);)this[t + s] = e / n & 255;
                        return t + r;
                    }, d.prototype.writeUIntBE = function(e, t, r, o) {
                        e = +e, t >>>= 0, r >>>= 0, o || b(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                        var n = r - 1, s = 1;
                        for(this[t + n] = 255 & e; 0 <= --n && (s *= 256);)this[t + n] = e / s & 255;
                        return t + r;
                    }, d.prototype.writeUInt8 = function(e, t, r) {
                        return e = +e, t >>>= 0, r || b(this, e, t, 1, 255, 0), this[t] = 255 & e, t + 1;
                    }, d.prototype.writeUInt16LE = function(e, t, r) {
                        return e = +e, t >>>= 0, r || b(this, e, t, 2, 65535, 0), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2;
                    }, d.prototype.writeUInt16BE = function(e, t, r) {
                        return e = +e, t >>>= 0, r || b(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2;
                    }, d.prototype.writeUInt32LE = function(e, t, r) {
                        return e = +e, t >>>= 0, r || b(this, e, t, 4, 4294967295, 0), this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e, t + 4;
                    }, d.prototype.writeUInt32BE = function(e, t, r) {
                        return e = +e, t >>>= 0, r || b(this, e, t, 4, 4294967295, 0), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4;
                    }, d.prototype.writeIntLE = function(e, t, r, o) {
                        e = +e, t >>>= 0, o || b(this, e, t, r, (o = Math.pow(2, 8 * r - 1)) - 1, -o);
                        var n = 0, s = 1, i = 0;
                        for(this[t] = 255 & e; ++n < r && (s *= 256);)e < 0 && 0 === i && 0 !== this[t + n - 1] && (i = 1), this[t + n] = (e / s >> 0) - i & 255;
                        return t + r;
                    }, d.prototype.writeIntBE = function(e, t, r, o) {
                        e = +e, t >>>= 0, o || b(this, e, t, r, (o = Math.pow(2, 8 * r - 1)) - 1, -o);
                        var n = r - 1, s = 1, i = 0;
                        for(this[t + n] = 255 & e; 0 <= --n && (s *= 256);)e < 0 && 0 === i && 0 !== this[t + n + 1] && (i = 1), this[t + n] = (e / s >> 0) - i & 255;
                        return t + r;
                    }, d.prototype.writeInt8 = function(e, t, r) {
                        return e = +e, t >>>= 0, r || b(this, e, t, 1, 127, -128), this[t] = 255 & (e = e < 0 ? 255 + e + 1 : e), t + 1;
                    }, d.prototype.writeInt16LE = function(e, t, r) {
                        return e = +e, t >>>= 0, r || b(this, e, t, 2, 32767, -32768), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2;
                    }, d.prototype.writeInt16BE = function(e, t, r) {
                        return e = +e, t >>>= 0, r || b(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2;
                    }, d.prototype.writeInt32LE = function(e, t, r) {
                        return e = +e, t >>>= 0, r || b(this, e, t, 4, 2147483647, -2147483648), this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4;
                    }, d.prototype.writeInt32BE = function(e, t, r) {
                        return e = +e, t >>>= 0, r || b(this, e, t, 4, 2147483647, -2147483648), this[t] = (e = e < 0 ? 4294967295 + e + 1 : e) >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4;
                    }, d.prototype.writeFloatLE = function(e, t, r) {
                        return _(this, e, t, !0, r);
                    }, d.prototype.writeFloatBE = function(e, t, r) {
                        return _(this, e, t, !1, r);
                    }, d.prototype.writeDoubleLE = function(e, t, r) {
                        return x(this, e, t, !0, r);
                    }, d.prototype.writeDoubleBE = function(e, t, r) {
                        return x(this, e, t, !1, r);
                    }, d.prototype.copy = function(e, t, r, o) {
                        if (!d.isBuffer(e)) throw new TypeError("argument should be a Buffer");
                        if (r = r || 0, o || 0 === o || (o = this.length), t >= e.length && (t = e.length), (o = 0 < o && o < r ? r : o) === r) return 0;
                        if (0 === e.length || 0 === this.length) return 0;
                        if ((t = t || 0) < 0) throw new RangeError("targetStart out of bounds");
                        if (r < 0 || r >= this.length) throw new RangeError("Index out of range");
                        if (o < 0) throw new RangeError("sourceEnd out of bounds");
                        o > this.length && (o = this.length);
                        var n = (o = e.length - t < o - r ? e.length - t + r : o) - r;
                        if (this === e && "function" == typeof Uint8Array.prototype.copyWithin) this.copyWithin(t, r, o);
                        else if (this === e && r < t && t < o) for(var s = n - 1; 0 <= s; --s)e[s + t] = this[s + r];
                        else Uint8Array.prototype.set.call(e, this.subarray(r, o), t);
                        return n;
                    }, d.prototype.fill = function(e, t, r, o) {
                        if ("string" == typeof e) {
                            if ("string" == typeof t ? (o = t, t = 0, r = this.length) : "string" == typeof r && (o = r, r = this.length), void 0 !== o && "string" != typeof o) throw new TypeError("encoding must be a string");
                            if ("string" == typeof o && !d.isEncoding(o)) throw new TypeError("Unknown encoding: " + o);
                            var n;
                            1 === e.length && (n = e.charCodeAt(0), ("utf8" === o && n < 128 || "latin1" === o) && (e = n));
                        } else "number" == typeof e ? e &= 255 : "boolean" == typeof e && (e = Number(e));
                        if (t < 0 || this.length < t || this.length < r) throw new RangeError("Out of range index");
                        var s;
                        if (!(r <= t)) {
                            if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, "number" == typeof (e = e || 0)) for(s = t; s < r; ++s)this[s] = e;
                            else {
                                var i = d.isBuffer(e) ? e : d.from(e, o), a = i.length;
                                if (0 === a) throw new TypeError('The value "' + e + '" is invalid for argument "value"');
                                for(s = 0; s < r - t; ++s)this[s + t] = i[s % a];
                            }
                        }
                        return this;
                    };
                    var w = /[^+/0-9A-Za-z-_]/g;
                    function E(e, t) {
                        t = t || 1 / 0;
                        for(var r, o = e.length, n = null, s = [], i = 0; i < o; ++i){
                            if (55295 < (r = e.charCodeAt(i)) && r < 57344) {
                                if (!n) {
                                    if (56319 < r) {
                                        -1 < (t -= 3) && s.push(239, 191, 189);
                                        continue;
                                    }
                                    if (i + 1 === o) {
                                        -1 < (t -= 3) && s.push(239, 191, 189);
                                        continue;
                                    }
                                    n = r;
                                    continue;
                                }
                                if (r < 56320) {
                                    -1 < (t -= 3) && s.push(239, 191, 189), n = r;
                                    continue;
                                }
                                r = 65536 + (n - 55296 << 10 | r - 56320);
                            } else n && -1 < (t -= 3) && s.push(239, 191, 189);
                            if (n = null, r < 128) {
                                if (--t < 0) break;
                                s.push(r);
                            } else if (r < 2048) {
                                if ((t -= 2) < 0) break;
                                s.push(r >> 6 | 192, 63 & r | 128);
                            } else if (r < 65536) {
                                if ((t -= 3) < 0) break;
                                s.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
                            } else {
                                if (!(r < 1114112)) throw new Error("Invalid code point");
                                if ((t -= 4) < 0) break;
                                s.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
                            }
                        }
                        return s;
                    }
                    function T(e) {
                        return S.toByteArray(function(e) {
                            if ((e = (e = e.split("=")[0]).trim().replace(w, "")).length < 2) return "";
                            for(; e.length % 4 != 0;)e += "=";
                            return e;
                        }(e));
                    }
                    function C(e, t, r, o) {
                        for(var n = 0; n < o && !(n + r >= t.length || n >= e.length); ++n)t[n + r] = e[n];
                        return n;
                    }
                    function O(e, t) {
                        return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name;
                    }
                    function L(e) {
                        return e != e;
                    }
                    var k = function() {
                        for(var e = "0123456789abcdef", t = new Array(256), r = 0; r < 16; ++r)for(var o = 16 * r, n = 0; n < 16; ++n)t[o + n] = e[r] + e[n];
                        return t;
                    }();
                }).call(this, A("buffer").Buffer);
            },
            {
                "base64-js": 1,
                buffer: 4,
                ieee754: 238
            }
        ],
        5: [
            function(e, t, r) {
                t.exports = function(e) {
                    if ("function" != typeof e) throw TypeError(String(e) + " is not a function");
                    return e;
                };
            },
            {}
        ],
        6: [
            function(e, t, r) {
                var o = e("../internals/is-object");
                t.exports = function(e) {
                    if (o(e) || null === e) return e;
                    throw TypeError("Can't set " + String(e) + " as a prototype");
                };
            },
            {
                "../internals/is-object": 74
            }
        ],
        7: [
            function(e, t, r) {
                var o = e("../internals/well-known-symbol"), n = e("../internals/object-create"), e = e("../internals/object-define-property"), s = o("unscopables"), i = Array.prototype;
                null == i[s] && e.f(i, s, {
                    configurable: !0,
                    value: n(null)
                }), t.exports = function(e) {
                    i[s][e] = !0;
                };
            },
            {
                "../internals/object-create": 90,
                "../internals/object-define-property": 92,
                "../internals/well-known-symbol": 146
            }
        ],
        8: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/string-multibyte").charAt;
                t.exports = function(e, t, r) {
                    return t + (r ? o(e, t).length : 1);
                };
            },
            {
                "../internals/string-multibyte": 123
            }
        ],
        9: [
            function(e, t, r) {
                t.exports = function(e, t, r) {
                    if (e instanceof t) return e;
                    throw TypeError("Incorrect " + (r ? r + " " : "") + "invocation");
                };
            },
            {}
        ],
        10: [
            function(e, t, r) {
                var o = e("../internals/is-object");
                t.exports = function(e) {
                    if (o(e)) return e;
                    throw TypeError(String(e) + " is not an object");
                };
            },
            {
                "../internals/is-object": 74
            }
        ],
        11: [
            function(e, t, r) {
                t.exports = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView;
            },
            {}
        ],
        12: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return l(e) && u(E, c(e));
                }
                var n, s = e("../internals/array-buffer-native"), i = e("../internals/descriptors"), a = e("../internals/global"), l = e("../internals/is-object"), u = e("../internals/has"), c = e("../internals/classof"), d = e("../internals/create-non-enumerable-property"), f = e("../internals/redefine"), h = e("../internals/object-define-property").f, p = e("../internals/object-get-prototype-of"), m = e("../internals/object-set-prototype-of"), y = e("../internals/well-known-symbol"), e = e("../internals/uid"), g = a.Int8Array, v = g && g.prototype, b = a.Uint8ClampedArray, b = b && b.prototype, j = g && p(g), _ = v && p(v), x = Object.prototype, w = x.isPrototypeOf, y = y("toStringTag"), S = e("TYPED_ARRAY_TAG"), M = s && !!m && "Opera" !== c(a.opera), e = !1, E = {
                    Int8Array: 1,
                    Uint8Array: 1,
                    Uint8ClampedArray: 1,
                    Int16Array: 2,
                    Uint16Array: 2,
                    Int32Array: 4,
                    Uint32Array: 4,
                    Float32Array: 4,
                    Float64Array: 8
                };
                for(n in E)a[n] || (M = !1);
                if ((!M || "function" != typeof j || j === Function.prototype) && (j = function() {
                    throw TypeError("Incorrect invocation");
                }, M)) for(n in E)a[n] && m(a[n], j);
                if ((!M || !_ || _ === x) && (_ = j.prototype, M)) for(n in E)a[n] && m(a[n].prototype, _);
                if (M && p(b) !== _ && m(b, _), i && !u(_, y)) for(n in e = !0, h(_, y, {
                    get: function() {
                        return l(this) ? this[S] : void 0;
                    }
                }), E)a[n] && d(a[n], S, n);
                t.exports = {
                    NATIVE_ARRAY_BUFFER_VIEWS: M,
                    TYPED_ARRAY_TAG: e && S,
                    aTypedArray: function(e) {
                        if (o(e)) return e;
                        throw TypeError("Target is not a typed array");
                    },
                    aTypedArrayConstructor: function(e) {
                        if (m) {
                            if (w.call(j, e)) return e;
                        } else for(var t in E)if (u(E, n)) {
                            t = a[t];
                            if (t && (e === t || w.call(t, e))) return e;
                        }
                        throw TypeError("Target is not a typed array constructor");
                    },
                    exportTypedArrayMethod: function(e, t, r) {
                        if (i) {
                            if (r) for(var o in E){
                                o = a[o];
                                o && u(o.prototype, e) && delete o.prototype[e];
                            }
                            _[e] && !r || f(_, e, !r && M && v[e] || t);
                        }
                    },
                    exportTypedArrayStaticMethod: function(e, t, r) {
                        var o, n;
                        if (i) {
                            if (m) {
                                if (r) for(o in E)(n = a[o]) && u(n, e) && delete n[e];
                                if (j[e] && !r) return;
                                try {
                                    return f(j, e, !r && M && g[e] || t);
                                } catch (e) {}
                            }
                            for(o in E)!(n = a[o]) || n[e] && !r || f(n, e, t);
                        }
                    },
                    isView: function(e) {
                        e = c(e);
                        return "DataView" === e || u(E, e);
                    },
                    isTypedArray: o,
                    TypedArray: j,
                    TypedArrayPrototype: _
                };
            },
            {
                "../internals/array-buffer-native": 11,
                "../internals/classof": 29,
                "../internals/create-non-enumerable-property": 38,
                "../internals/descriptors": 43,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/is-object": 74,
                "../internals/object-define-property": 92,
                "../internals/object-get-prototype-of": 97,
                "../internals/object-set-prototype-of": 101,
                "../internals/redefine": 108,
                "../internals/uid": 143,
                "../internals/well-known-symbol": 146
            }
        ],
        13: [
            function(e, t, I) {
                "use strict";
                function r(e) {
                    return [
                        255 & e
                    ];
                }
                function o(e) {
                    return [
                        255 & e,
                        e >> 8 & 255
                    ];
                }
                function n(e) {
                    return [
                        255 & e,
                        e >> 8 & 255,
                        e >> 16 & 255,
                        e >> 24 & 255
                    ];
                }
                function s(e) {
                    return e[3] << 24 | e[2] << 16 | e[1] << 8 | e[0];
                }
                function i(e) {
                    return L(e, 23, 4);
                }
                function U(e) {
                    return L(e, 52, 8);
                }
                function a(e, t) {
                    H(e[w], t, {
                        get: function() {
                            return b(this)[t];
                        }
                    });
                }
                function l(e, t, r, o) {
                    if (r = m(r), e = b(e), r + t > e.byteLength) throw O(S);
                    var n = b(e.buffer).bytes, r = r + e.byteOffset, e = n.slice(r, r + t);
                    return o ? e : e.reverse();
                }
                function u(e, t, r, o, n, s) {
                    if (r = m(r), e = b(e), r + t > e.byteLength) throw O(S);
                    for(var i = b(e.buffer).bytes, a = r + e.byteOffset, l = o(+n), u = 0; u < t; u++)i[a + u] = l[s ? u : t - u - 1];
                }
                var c = e("../internals/global"), d = e("../internals/descriptors"), N = e("../internals/array-buffer-native"), F = e("../internals/create-non-enumerable-property"), f = e("../internals/redefine-all"), h = e("../internals/fails"), p = e("../internals/an-instance"), B = e("../internals/to-integer"), G = e("../internals/to-length"), m = e("../internals/to-index"), y = e("../internals/ieee754"), V = e("../internals/object-get-prototype-of"), g = e("../internals/object-set-prototype-of"), z = e("../internals/object-get-own-property-names").f, H = e("../internals/object-define-property").f, W = e("../internals/array-fill"), v = e("../internals/set-to-string-tag"), e = e("../internals/internal-state"), b = e.get, j = e.set, _ = "ArrayBuffer", x = "DataView", w = "prototype", S = "Wrong index", M = c[_], E = M, T = c[x], e = T && T[w], C = Object.prototype, O = c.RangeError, L = y.pack, k = y.unpack;
                if (N) {
                    if (!h(function() {
                        M(1);
                    }) || !h(function() {
                        new M(-1);
                    }) || h(function() {
                        return new M, new M(1.5), new M(NaN), M.name != _;
                    })) {
                        for(var A, c = (E = function(e) {
                            return p(this, E), new M(m(e));
                        })[w] = M[w], P = z(M), R = 0; P.length > R;)(A = P[R++]) in E || F(E, A, M[A]);
                        c.constructor = E;
                    }
                    g && V(e) !== C && g(e, C);
                    var y = new T(new E(2)), D = e.setInt8;
                    y.setInt8(0, 2147483648), y.setInt8(1, 2147483649), !y.getInt8(0) && y.getInt8(1) || f(e, {
                        setInt8: function(e, t) {
                            D.call(this, e, t << 24 >> 24);
                        },
                        setUint8: function(e, t) {
                            D.call(this, e, t << 24 >> 24);
                        }
                    }, {
                        unsafe: !0
                    });
                } else E = function(e) {
                    p(this, E, _);
                    e = m(e);
                    j(this, {
                        bytes: W.call(new Array(e), 0),
                        byteLength: e
                    }), d || (this.byteLength = e);
                }, T = function(e, t, r) {
                    p(this, T, x), p(e, E, x);
                    var o = b(e).byteLength, t = B(t);
                    if (t < 0 || o < t) throw O("Wrong offset");
                    if (o < t + (r = void 0 === r ? o - t : G(r))) throw O("Wrong length");
                    j(this, {
                        buffer: e,
                        byteLength: r,
                        byteOffset: t
                    }), d || (this.buffer = e, this.byteLength = r, this.byteOffset = t);
                }, d && (a(E, "byteLength"), a(T, "buffer"), a(T, "byteLength"), a(T, "byteOffset")), f(T[w], {
                    getInt8: function(e) {
                        return l(this, 1, e)[0] << 24 >> 24;
                    },
                    getUint8: function(e) {
                        return l(this, 1, e)[0];
                    },
                    getInt16: function(e) {
                        e = l(this, 2, e, 1 < arguments.length ? arguments[1] : void 0);
                        return (e[1] << 8 | e[0]) << 16 >> 16;
                    },
                    getUint16: function(e) {
                        e = l(this, 2, e, 1 < arguments.length ? arguments[1] : void 0);
                        return e[1] << 8 | e[0];
                    },
                    getInt32: function(e) {
                        return s(l(this, 4, e, 1 < arguments.length ? arguments[1] : void 0));
                    },
                    getUint32: function(e) {
                        return s(l(this, 4, e, 1 < arguments.length ? arguments[1] : void 0)) >>> 0;
                    },
                    getFloat32: function(e) {
                        return k(l(this, 4, e, 1 < arguments.length ? arguments[1] : void 0), 23);
                    },
                    getFloat64: function(e) {
                        return k(l(this, 8, e, 1 < arguments.length ? arguments[1] : void 0), 52);
                    },
                    setInt8: function(e, t) {
                        u(this, 1, e, r, t);
                    },
                    setUint8: function(e, t) {
                        u(this, 1, e, r, t);
                    },
                    setInt16: function(e, t) {
                        u(this, 2, e, o, t, 2 < arguments.length ? arguments[2] : void 0);
                    },
                    setUint16: function(e, t) {
                        u(this, 2, e, o, t, 2 < arguments.length ? arguments[2] : void 0);
                    },
                    setInt32: function(e, t) {
                        u(this, 4, e, n, t, 2 < arguments.length ? arguments[2] : void 0);
                    },
                    setUint32: function(e, t) {
                        u(this, 4, e, n, t, 2 < arguments.length ? arguments[2] : void 0);
                    },
                    setFloat32: function(e, t) {
                        u(this, 4, e, i, t, 2 < arguments.length ? arguments[2] : void 0);
                    },
                    setFloat64: function(e, t) {
                        u(this, 8, e, U, t, 2 < arguments.length ? arguments[2] : void 0);
                    }
                });
                v(E, _), v(T, x), t.exports = {
                    ArrayBuffer: E,
                    DataView: T
                };
            },
            {
                "../internals/an-instance": 9,
                "../internals/array-buffer-native": 11,
                "../internals/array-fill": 15,
                "../internals/create-non-enumerable-property": 38,
                "../internals/descriptors": 43,
                "../internals/fails": 51,
                "../internals/global": 59,
                "../internals/ieee754": 65,
                "../internals/internal-state": 70,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-names": 95,
                "../internals/object-get-prototype-of": 97,
                "../internals/object-set-prototype-of": 101,
                "../internals/redefine-all": 107,
                "../internals/set-to-string-tag": 117,
                "../internals/to-index": 131,
                "../internals/to-integer": 133,
                "../internals/to-length": 134
            }
        ],
        14: [
            function(e, t, r) {
                "use strict";
                var l = e("../internals/to-object"), u = e("../internals/to-absolute-index"), c = e("../internals/to-length"), d = Math.min;
                t.exports = [].copyWithin || function(e, t) {
                    var r = l(this), o = c(r.length), n = u(e, o), s = u(t, o), e = 2 < arguments.length ? arguments[2] : void 0, i = d((void 0 === e ? o : u(e, o)) - s, o - n), a = 1;
                    for(s < n && n < s + i && (a = -1, s += i - 1, n += i - 1); 0 < i--;)s in r ? r[n] = r[s] : delete r[n], n += a, s += a;
                    return r;
                };
            },
            {
                "../internals/to-absolute-index": 130,
                "../internals/to-length": 134,
                "../internals/to-object": 135
            }
        ],
        15: [
            function(e, t, r) {
                "use strict";
                var i = e("../internals/to-object"), a = e("../internals/to-absolute-index"), l = e("../internals/to-length");
                t.exports = function(e) {
                    for(var t = i(this), r = l(t.length), o = arguments.length, n = a(1 < o ? arguments[1] : void 0, r), o = 2 < o ? arguments[2] : void 0, s = void 0 === o ? r : a(o, r); n < s;)t[n++] = e;
                    return t;
                };
            },
            {
                "../internals/to-absolute-index": 130,
                "../internals/to-length": 134,
                "../internals/to-object": 135
            }
        ],
        16: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-iteration").forEach, n = e("../internals/array-method-is-strict"), e = e("../internals/array-method-uses-to-length"), n = n("forEach"), e = e("forEach");
                t.exports = n && e ? [].forEach : function(e) {
                    return o(this, e, 1 < arguments.length ? arguments[1] : void 0);
                };
            },
            {
                "../internals/array-iteration": 19,
                "../internals/array-method-is-strict": 22,
                "../internals/array-method-uses-to-length": 23
            }
        ],
        17: [
            function(e, t, r) {
                "use strict";
                var h = e("../internals/function-bind-context"), p = e("../internals/to-object"), m = e("../internals/call-with-safe-iteration-closing"), y = e("../internals/is-array-iterator-method"), g = e("../internals/to-length"), v = e("../internals/create-property"), b = e("../internals/get-iterator-method");
                t.exports = function(e) {
                    var t, r, o, n, s, i, a = p(e), e = "function" == typeof this ? this : Array, l = arguments.length, u = 1 < l ? arguments[1] : void 0, c = void 0 !== u, d = b(a), f = 0;
                    if (c && (u = h(u, 2 < l ? arguments[2] : void 0, 2)), null == d || e == Array && y(d)) for(r = new e(t = g(a.length)); f < t; f++)i = c ? u(a[f], f) : a[f], v(r, f, i);
                    else for(s = (n = d.call(a)).next, r = new e; !(o = s.call(n)).done; f++)i = c ? m(n, u, [
                        o.value,
                        f
                    ], !0) : o.value, v(r, f, i);
                    return r.length = f, r;
                };
            },
            {
                "../internals/call-with-safe-iteration-closing": 26,
                "../internals/create-property": 40,
                "../internals/function-bind-context": 54,
                "../internals/get-iterator-method": 57,
                "../internals/is-array-iterator-method": 71,
                "../internals/to-length": 134,
                "../internals/to-object": 135
            }
        ],
        18: [
            function(e, t, r) {
                function o(a) {
                    return function(e, t, r) {
                        var o, n = l(e), s = u(n.length), i = c(r, s);
                        if (a && t != t) {
                            for(; i < s;)if ((o = n[i++]) != o) return !0;
                        } else for(; i < s; i++)if ((a || i in n) && n[i] === t) return a || i || 0;
                        return !a && -1;
                    };
                }
                var l = e("../internals/to-indexed-object"), u = e("../internals/to-length"), c = e("../internals/to-absolute-index");
                t.exports = {
                    includes: o(!0),
                    indexOf: o(!1)
                };
            },
            {
                "../internals/to-absolute-index": 130,
                "../internals/to-indexed-object": 132,
                "../internals/to-length": 134
            }
        ],
        19: [
            function(e, t, r) {
                function o(f) {
                    var h = 1 == f, p = 2 == f, m = 3 == f, y = 4 == f, g = 6 == f, v = 5 == f || g;
                    return function(e, t, r, o) {
                        for(var n, s, i = _(e), a = j(i), l = b(t, r, 3), u = x(a.length), c = 0, t = o || w, d = h ? t(e, u) : p ? t(e, 0) : void 0; c < u; c++)if ((v || c in a) && (s = l(n = a[c], c, i), f)) {
                            if (h) d[c] = s;
                            else if (s) switch(f){
                                case 3:
                                    return !0;
                                case 5:
                                    return n;
                                case 6:
                                    return c;
                                case 2:
                                    S.call(d, n);
                            }
                            else if (y) return !1;
                        }
                        return g ? -1 : m || y ? y : d;
                    };
                }
                var b = e("../internals/function-bind-context"), j = e("../internals/indexed-object"), _ = e("../internals/to-object"), x = e("../internals/to-length"), w = e("../internals/array-species-create"), S = [].push;
                t.exports = {
                    forEach: o(0),
                    map: o(1),
                    filter: o(2),
                    some: o(3),
                    every: o(4),
                    find: o(5),
                    findIndex: o(6)
                };
            },
            {
                "../internals/array-species-create": 25,
                "../internals/function-bind-context": 54,
                "../internals/indexed-object": 66,
                "../internals/to-length": 134,
                "../internals/to-object": 135
            }
        ],
        20: [
            function(e, t, r) {
                "use strict";
                var n = e("../internals/to-indexed-object"), s = e("../internals/to-integer"), i = e("../internals/to-length"), o = e("../internals/array-method-is-strict"), e = e("../internals/array-method-uses-to-length"), a = Math.min, l = [].lastIndexOf, u = !!l && 1 / [
                    1
                ].lastIndexOf(1, -0) < 0, o = o("lastIndexOf"), e = e("indexOf", {
                    ACCESSORS: !0,
                    1: 0
                });
                t.exports = u || !o || !e ? function(e) {
                    if (u) return l.apply(this, arguments) || 0;
                    var t = n(this), r = i(t.length), o = r - 1;
                    for((o = 1 < arguments.length ? a(o, s(arguments[1])) : o) < 0 && (o = r + o); 0 <= o; o--)if (o in t && t[o] === e) return o || 0;
                    return -1;
                } : l;
            },
            {
                "../internals/array-method-is-strict": 22,
                "../internals/array-method-uses-to-length": 23,
                "../internals/to-indexed-object": 132,
                "../internals/to-integer": 133,
                "../internals/to-length": 134
            }
        ],
        21: [
            function(e, t, r) {
                var o = e("../internals/fails"), n = e("../internals/well-known-symbol"), s = e("../internals/engine-v8-version"), i = n("species");
                t.exports = function(t) {
                    return 51 <= s || !o(function() {
                        var e = [];
                        return (e.constructor = {})[i] = function() {
                            return {
                                foo: 1
                            };
                        }, 1 !== e[t](Boolean).foo;
                    });
                };
            },
            {
                "../internals/engine-v8-version": 48,
                "../internals/fails": 51,
                "../internals/well-known-symbol": 146
            }
        ],
        22: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/fails");
                t.exports = function(e, t) {
                    var r = [][e];
                    return !!r && o(function() {
                        r.call(null, t || function() {
                            throw 1;
                        }, 1);
                    });
                };
            },
            {
                "../internals/fails": 51
            }
        ],
        23: [
            function(e, t, r) {
                function i(e) {
                    throw e;
                }
                var a = e("../internals/descriptors"), l = e("../internals/fails"), u = e("../internals/has"), c = Object.defineProperty, d = {};
                t.exports = function(e, t) {
                    var r, o, n, s;
                    return u(d, e) ? d[e] : (r = [][e], o = !!u(t = t || {}, "ACCESSORS") && t.ACCESSORS, n = u(t, 0) ? t[0] : i, s = u(t, 1) ? t[1] : void 0, d[e] = !!r && !l(function() {
                        if (o && !a) return !0;
                        var e = {
                            length: -1
                        };
                        o ? c(e, 1, {
                            enumerable: !0,
                            get: i
                        }) : e[1] = 1, r.call(e, n, s);
                    }));
                };
            },
            {
                "../internals/descriptors": 43,
                "../internals/fails": 51,
                "../internals/has": 60
            }
        ],
        24: [
            function(e, t, r) {
                function o(u) {
                    return function(e, t, r, o) {
                        c(t);
                        var n = d(e), s = f(n), i = h(n.length), a = u ? i - 1 : 0, l = u ? -1 : 1;
                        if (r < 2) for(;;){
                            if (a in s) {
                                o = s[a], a += l;
                                break;
                            }
                            if (a += l, u ? a < 0 : i <= a) throw TypeError("Reduce of empty array with no initial value");
                        }
                        for(; u ? 0 <= a : a < i; a += l)a in s && (o = t(o, s[a], a, n));
                        return o;
                    };
                }
                var c = e("../internals/a-function"), d = e("../internals/to-object"), f = e("../internals/indexed-object"), h = e("../internals/to-length");
                t.exports = {
                    left: o(!1),
                    right: o(!0)
                };
            },
            {
                "../internals/a-function": 5,
                "../internals/indexed-object": 66,
                "../internals/to-length": 134,
                "../internals/to-object": 135
            }
        ],
        25: [
            function(e, t, r) {
                var o = e("../internals/is-object"), n = e("../internals/is-array"), s = e("../internals/well-known-symbol")("species");
                t.exports = function(e, t) {
                    var r;
                    return new (void 0 === (r = n(e) && ("function" == typeof (r = e.constructor) && (r === Array || n(r.prototype)) || o(r) && null === (r = r[s])) ? void 0 : r) ? Array : r)(0 === t ? 0 : t);
                };
            },
            {
                "../internals/is-array": 72,
                "../internals/is-object": 74,
                "../internals/well-known-symbol": 146
            }
        ],
        26: [
            function(e, t, r) {
                var n = e("../internals/an-object");
                t.exports = function(t, e, r, o) {
                    try {
                        return o ? e(n(r)[0], r[1]) : e(r);
                    } catch (e) {
                        o = t.return;
                        throw void 0 !== o && n(o.call(t)), e;
                    }
                };
            },
            {
                "../internals/an-object": 10
            }
        ],
        27: [
            function(e, t, r) {
                var n = e("../internals/well-known-symbol")("iterator"), s = !1;
                try {
                    var o = 0, i = {
                        next: function() {
                            return {
                                done: !!o++
                            };
                        },
                        return: function() {
                            s = !0;
                        }
                    };
                    i[n] = function() {
                        return this;
                    }, Array.from(i, function() {
                        throw 2;
                    });
                } catch (e) {}
                t.exports = function(e, t) {
                    if (!t && !s) return !1;
                    var r = !1;
                    try {
                        var o = {};
                        o[n] = function() {
                            return {
                                next: function() {
                                    return {
                                        done: r = !0
                                    };
                                }
                            };
                        }, e(o);
                    } catch (e) {}
                    return r;
                };
            },
            {
                "../internals/well-known-symbol": 146
            }
        ],
        28: [
            function(e, t, r) {
                var o = {}.toString;
                t.exports = function(e) {
                    return o.call(e).slice(8, -1);
                };
            },
            {}
        ],
        29: [
            function(e, t, r) {
                var o = e("../internals/to-string-tag-support"), n = e("../internals/classof-raw"), s = e("../internals/well-known-symbol")("toStringTag"), i = "Arguments" == n(function() {
                    return arguments;
                }());
                t.exports = o ? n : function(e) {
                    var t;
                    return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof (t = function(e, t) {
                        try {
                            return e[t];
                        } catch (e) {}
                    }(e = Object(e), s)) ? t : i ? n(e) : "Object" == (t = n(e)) && "function" == typeof e.callee ? "Arguments" : t;
                };
            },
            {
                "../internals/classof-raw": 28,
                "../internals/to-string-tag-support": 139,
                "../internals/well-known-symbol": 146
            }
        ],
        30: [
            function(e, t, r) {
                "use strict";
                var u = e("../internals/object-define-property").f, c = e("../internals/object-create"), d = e("../internals/redefine-all"), f = e("../internals/function-bind-context"), h = e("../internals/an-instance"), p = e("../internals/iterate"), i = e("../internals/define-iterator"), a = e("../internals/set-species"), m = e("../internals/descriptors"), y = e("../internals/internal-metadata").fastKey, e = e("../internals/internal-state"), g = e.set, v = e.getterFor;
                t.exports = {
                    getConstructor: function(e, r, o, n) {
                        function s(e, t, r) {
                            var o, n = l(e), s = i(e, t);
                            return s ? s.value = r : (n.last = s = {
                                index: o = y(t, !0),
                                key: t,
                                value: r,
                                previous: t = n.last,
                                next: void 0,
                                removed: !1
                            }, n.first || (n.first = s), t && (t.next = s), m ? n.size++ : e.size++, "F" !== o && (n.index[o] = s)), e;
                        }
                        function i(e, t) {
                            var r, e = l(e), o = y(t);
                            if ("F" !== o) return e.index[o];
                            for(r = e.first; r; r = r.next)if (r.key == t) return r;
                        }
                        var a = e(function(e, t) {
                            h(e, a, r), g(e, {
                                type: r,
                                index: c(null),
                                first: void 0,
                                last: void 0,
                                size: 0
                            }), m || (e.size = 0), null != t && p(t, e[n], e, o);
                        }), l = v(r);
                        return d(a.prototype, {
                            clear: function() {
                                for(var e = l(this), t = e.index, r = e.first; r;)r.removed = !0, r.previous && (r.previous = r.previous.next = void 0), delete t[r.index], r = r.next;
                                e.first = e.last = void 0, m ? e.size = 0 : this.size = 0;
                            },
                            delete: function(e) {
                                var t, r, o = l(this), e = i(this, e);
                                return e && (t = e.next, r = e.previous, delete o.index[e.index], e.removed = !0, r && (r.next = t), t && (t.previous = r), o.first == e && (o.first = t), o.last == e && (o.last = r), m ? o.size-- : this.size--), !!e;
                            },
                            forEach: function(e) {
                                for(var t, r = l(this), o = f(e, 1 < arguments.length ? arguments[1] : void 0, 3); t = t ? t.next : r.first;)for(o(t.value, t.key, this); t && t.removed;)t = t.previous;
                            },
                            has: function(e) {
                                return !!i(this, e);
                            }
                        }), d(a.prototype, o ? {
                            get: function(e) {
                                e = i(this, e);
                                return e && e.value;
                            },
                            set: function(e, t) {
                                return s(this, 0 === e ? 0 : e, t);
                            }
                        } : {
                            add: function(e) {
                                return s(this, e = 0 === e ? 0 : e, e);
                            }
                        }), m && u(a.prototype, "size", {
                            get: function() {
                                return l(this).size;
                            }
                        }), a;
                    },
                    setStrong: function(e, t, r) {
                        var o = t + " Iterator", n = v(t), s = v(o);
                        i(e, t, function(e, t) {
                            g(this, {
                                type: o,
                                target: e,
                                state: n(e),
                                kind: t,
                                last: void 0
                            });
                        }, function() {
                            for(var e = s(this), t = e.kind, r = e.last; r && r.removed;)r = r.previous;
                            return e.target && (e.last = r = r ? r.next : e.state.first) ? "keys" == t ? {
                                value: r.key,
                                done: !1
                            } : "values" == t ? {
                                value: r.value,
                                done: !1
                            } : {
                                value: [
                                    r.key,
                                    r.value
                                ],
                                done: !1
                            } : {
                                value: e.target = void 0,
                                done: !0
                            };
                        }, r ? "entries" : "values", !r, !0), a(t);
                    }
                };
            },
            {
                "../internals/an-instance": 9,
                "../internals/define-iterator": 41,
                "../internals/descriptors": 43,
                "../internals/function-bind-context": 54,
                "../internals/internal-metadata": 69,
                "../internals/internal-state": 70,
                "../internals/iterate": 77,
                "../internals/object-create": 90,
                "../internals/object-define-property": 92,
                "../internals/redefine-all": 107,
                "../internals/set-species": 116
            }
        ],
        31: [
            function(e, t, r) {
                "use strict";
                function l(e) {
                    return e.frozen || (e.frozen = new o);
                }
                function o() {
                    this.entries = [];
                }
                function n(e, t) {
                    return i(e.entries, function(e) {
                        return e[0] === t;
                    });
                }
                var u = e("../internals/redefine-all"), c = e("../internals/internal-metadata").getWeakData, d = e("../internals/an-object"), f = e("../internals/is-object"), h = e("../internals/an-instance"), p = e("../internals/iterate"), s = e("../internals/array-iteration"), m = e("../internals/has"), e = e("../internals/internal-state"), y = e.set, g = e.getterFor, i = s.find, a = s.findIndex, v = 0;
                o.prototype = {
                    get: function(e) {
                        e = n(this, e);
                        if (e) return e[1];
                    },
                    has: function(e) {
                        return !!n(this, e);
                    },
                    set: function(e, t) {
                        var r = n(this, e);
                        r ? r[1] = t : this.entries.push([
                            e,
                            t
                        ]);
                    },
                    delete: function(t) {
                        var e = a(this.entries, function(e) {
                            return e[0] === t;
                        });
                        return ~e && this.entries.splice(e, 1), !!~e;
                    }
                }, t.exports = {
                    getConstructor: function(e, r, o, n) {
                        function s(e, t, r) {
                            var o = a(e), n = c(d(t), !0);
                            return !0 === n ? l(o).set(t, r) : n[o.id] = r, e;
                        }
                        var i = e(function(e, t) {
                            h(e, i, r), y(e, {
                                type: r,
                                id: v++,
                                frozen: void 0
                            }), null != t && p(t, e[n], e, o);
                        }), a = g(r);
                        return u(i.prototype, {
                            delete: function(e) {
                                var t, r = a(this);
                                return !!f(e) && (!0 === (t = c(e)) ? l(r).delete(e) : t && m(t, r.id) && delete t[r.id]);
                            },
                            has: function(e) {
                                var t, r = a(this);
                                return !!f(e) && (!0 === (t = c(e)) ? l(r).has(e) : t && m(t, r.id));
                            }
                        }), u(i.prototype, o ? {
                            get: function(e) {
                                var t, r = a(this);
                                if (f(e)) return !0 === (t = c(e)) ? l(r).get(e) : t ? t[r.id] : void 0;
                            },
                            set: function(e, t) {
                                return s(this, e, t);
                            }
                        } : {
                            add: function(e) {
                                return s(this, e, !0);
                            }
                        }), i;
                    }
                };
            },
            {
                "../internals/an-instance": 9,
                "../internals/an-object": 10,
                "../internals/array-iteration": 19,
                "../internals/has": 60,
                "../internals/internal-metadata": 69,
                "../internals/internal-state": 70,
                "../internals/is-object": 74,
                "../internals/iterate": 77,
                "../internals/redefine-all": 107
            }
        ],
        32: [
            function(e, t, r) {
                "use strict";
                var y = e("../internals/export"), g = e("../internals/global"), v = e("../internals/is-forced"), b = e("../internals/redefine"), j = e("../internals/internal-metadata"), _ = e("../internals/iterate"), x = e("../internals/an-instance"), w = e("../internals/is-object"), S = e("../internals/fails"), M = e("../internals/check-correctness-of-iteration"), E = e("../internals/set-to-string-tag"), T = e("../internals/inherit-if-required");
                t.exports = function(r, e, t) {
                    function o(e) {
                        var r = h[e];
                        b(h, e, "add" == e ? function(e) {
                            return r.call(this, 0 === e ? 0 : e), this;
                        } : "delete" == e ? function(e) {
                            return !(c && !w(e)) && r.call(this, 0 === e ? 0 : e);
                        } : "get" == e ? function(e) {
                            return c && !w(e) ? void 0 : r.call(this, 0 === e ? 0 : e);
                        } : "has" == e ? function(e) {
                            return !(c && !w(e)) && r.call(this, 0 === e ? 0 : e);
                        } : function(e, t) {
                            return r.call(this, 0 === e ? 0 : e, t), this;
                        });
                    }
                    var n, s, i, a, l, u = -1 !== r.indexOf("Map"), c = -1 !== r.indexOf("Weak"), d = u ? "set" : "add", f = g[r], h = f && f.prototype, p = f, m = {};
                    return v(r, "function" != typeof f || !(c || h.forEach && !S(function() {
                        (new f).entries().next();
                    }))) ? (p = t.getConstructor(e, r, u, d), j.REQUIRED = !0) : v(r, !0) && (s = (n = new p)[d](c ? {} : -0, 1) != n, i = S(function() {
                        n.has(1);
                    }), a = M(function(e) {
                        new f(e);
                    }), l = !c && S(function() {
                        for(var e = new f, t = 5; t--;)e[d](t, t);
                        return !e.has(-0);
                    }), a || (((p = e(function(e, t) {
                        x(e, p, r);
                        e = T(new f, e, p);
                        return null != t && _(t, e[d], e, u), e;
                    })).prototype = h).constructor = p), (i || l) && (o("delete"), o("has"), u && o("get")), (l || s) && o(d), c && h.clear && delete h.clear), m[r] = p, y({
                        global: !0,
                        forced: p != f
                    }, m), E(p, r), c || t.setStrong(p, r, u), p;
                };
            },
            {
                "../internals/an-instance": 9,
                "../internals/check-correctness-of-iteration": 27,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/global": 59,
                "../internals/inherit-if-required": 67,
                "../internals/internal-metadata": 69,
                "../internals/is-forced": 73,
                "../internals/is-object": 74,
                "../internals/iterate": 77,
                "../internals/redefine": 108,
                "../internals/set-to-string-tag": 117
            }
        ],
        33: [
            function(e, t, r) {
                var a = e("../internals/has"), l = e("../internals/own-keys"), u = e("../internals/object-get-own-property-descriptor"), c = e("../internals/object-define-property");
                t.exports = function(e, t) {
                    for(var r = l(t), o = c.f, n = u.f, s = 0; s < r.length; s++){
                        var i = r[s];
                        a(e, i) || o(e, i, n(t, i));
                    }
                };
            },
            {
                "../internals/has": 60,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/own-keys": 103
            }
        ],
        34: [
            function(e, t, r) {
                var o = e("../internals/well-known-symbol")("match");
                t.exports = function(t) {
                    var r = /./;
                    try {
                        "/./"[t](r);
                    } catch (e) {
                        try {
                            return r[o] = !1, "/./"[t](r);
                        } catch (e) {}
                    }
                    return !1;
                };
            },
            {
                "../internals/well-known-symbol": 146
            }
        ],
        35: [
            function(e, t, r) {
                e = e("../internals/fails");
                t.exports = !e(function() {
                    function e() {}
                    return e.prototype.constructor = null, Object.getPrototypeOf(new e) !== e.prototype;
                });
            },
            {
                "../internals/fails": 51
            }
        ],
        36: [
            function(e, t, r) {
                var s = e("../internals/require-object-coercible"), i = /"/g;
                t.exports = function(e, t, r, o) {
                    var e = String(s(e)), n = "<" + t;
                    return "" !== r && (n += " " + r + '="' + String(o).replace(i, "&quot;") + '"'), n + ">" + e + "</" + t + ">";
                };
            },
            {
                "../internals/require-object-coercible": 113
            }
        ],
        37: [
            function(e, t, r) {
                "use strict";
                function o() {
                    return this;
                }
                var n = e("../internals/iterators-core").IteratorPrototype, s = e("../internals/object-create"), i = e("../internals/create-property-descriptor"), a = e("../internals/set-to-string-tag"), l = e("../internals/iterators");
                t.exports = function(e, t, r) {
                    t += " Iterator";
                    return e.prototype = s(n, {
                        next: i(1, r)
                    }), a(e, t, !1, !0), l[t] = o, e;
                };
            },
            {
                "../internals/create-property-descriptor": 39,
                "../internals/iterators": 79,
                "../internals/iterators-core": 78,
                "../internals/object-create": 90,
                "../internals/set-to-string-tag": 117
            }
        ],
        38: [
            function(e, t, r) {
                var o = e("../internals/descriptors"), n = e("../internals/object-define-property"), s = e("../internals/create-property-descriptor");
                t.exports = o ? function(e, t, r) {
                    return n.f(e, t, s(1, r));
                } : function(e, t, r) {
                    return e[t] = r, e;
                };
            },
            {
                "../internals/create-property-descriptor": 39,
                "../internals/descriptors": 43,
                "../internals/object-define-property": 92
            }
        ],
        39: [
            function(e, t, r) {
                t.exports = function(e, t) {
                    return {
                        enumerable: !(1 & e),
                        configurable: !(2 & e),
                        writable: !(4 & e),
                        value: t
                    };
                };
            },
            {}
        ],
        40: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/to-primitive"), n = e("../internals/object-define-property"), s = e("../internals/create-property-descriptor");
                t.exports = function(e, t, r) {
                    t = o(t);
                    t in e ? n.f(e, t, s(0, r)) : e[t] = r;
                };
            },
            {
                "../internals/create-property-descriptor": 39,
                "../internals/object-define-property": 92,
                "../internals/to-primitive": 138
            }
        ],
        41: [
            function(e, t, r) {
                "use strict";
                function m() {
                    return this;
                }
                var y = e("../internals/export"), g = e("../internals/create-iterator-constructor"), v = e("../internals/object-get-prototype-of"), b = e("../internals/object-set-prototype-of"), j = e("../internals/set-to-string-tag"), _ = e("../internals/create-non-enumerable-property"), x = e("../internals/redefine"), o = e("../internals/well-known-symbol"), w = e("../internals/is-pure"), S = e("../internals/iterators"), e = e("../internals/iterators-core"), M = e.IteratorPrototype, E = e.BUGGY_SAFARI_ITERATORS, T = o("iterator"), C = "values", O = "entries";
                t.exports = function(e, t, r, o, n, s, i) {
                    g(r, t, o);
                    function a(e) {
                        if (e === n && h) return h;
                        if (!E && e in d) return d[e];
                        switch(e){
                            case "keys":
                            case C:
                            case O:
                                return function() {
                                    return new r(this, e);
                                };
                        }
                        return function() {
                            return new r(this);
                        };
                    }
                    var l, u, o = t + " Iterator", c = !1, d = e.prototype, f = d[T] || d["@@iterator"] || n && d[n], h = !E && f || a(n), p = "Array" == t && d.entries || f;
                    if (p && (p = v(p.call(new e)), M !== Object.prototype && p.next && (w || v(p) === M || (b ? b(p, M) : "function" != typeof p[T] && _(p, T, m)), j(p, o, !0, !0), w && (S[o] = m))), n == C && f && f.name !== C && (c = !0, h = function() {
                        return f.call(this);
                    }), w && !i || d[T] === h || _(d, T, h), S[t] = h, n) {
                        if (l = {
                            values: a(C),
                            keys: s ? h : a("keys"),
                            entries: a(O)
                        }, i) for(u in l)!E && !c && u in d || x(d, u, l[u]);
                        else y({
                            target: t,
                            proto: !0,
                            forced: E || c
                        }, l);
                    }
                    return l;
                };
            },
            {
                "../internals/create-iterator-constructor": 37,
                "../internals/create-non-enumerable-property": 38,
                "../internals/export": 50,
                "../internals/is-pure": 75,
                "../internals/iterators": 79,
                "../internals/iterators-core": 78,
                "../internals/object-get-prototype-of": 97,
                "../internals/object-set-prototype-of": 101,
                "../internals/redefine": 108,
                "../internals/set-to-string-tag": 117,
                "../internals/well-known-symbol": 146
            }
        ],
        42: [
            function(e, t, r) {
                var o = e("../internals/path"), n = e("../internals/has"), s = e("../internals/well-known-symbol-wrapped"), i = e("../internals/object-define-property").f;
                t.exports = function(e) {
                    var t = o.Symbol || (o.Symbol = {});
                    n(t, e) || i(t, e, {
                        value: s.f(e)
                    });
                };
            },
            {
                "../internals/has": 60,
                "../internals/object-define-property": 92,
                "../internals/path": 104,
                "../internals/well-known-symbol-wrapped": 145
            }
        ],
        43: [
            function(e, t, r) {
                e = e("../internals/fails");
                t.exports = !e(function() {
                    return 7 != Object.defineProperty({}, 1, {
                        get: function() {
                            return 7;
                        }
                    })[1];
                });
            },
            {
                "../internals/fails": 51
            }
        ],
        44: [
            function(e, t, r) {
                var o = e("../internals/global"), e = e("../internals/is-object"), n = o.document, s = e(n) && e(n.createElement);
                t.exports = function(e) {
                    return s ? n.createElement(e) : {};
                };
            },
            {
                "../internals/global": 59,
                "../internals/is-object": 74
            }
        ],
        45: [
            function(e, t, r) {
                t.exports = {
                    CSSRuleList: 0,
                    CSSStyleDeclaration: 0,
                    CSSValueList: 0,
                    ClientRectList: 0,
                    DOMRectList: 0,
                    DOMStringList: 0,
                    DOMTokenList: 1,
                    DataTransferItemList: 0,
                    FileList: 0,
                    HTMLAllCollection: 0,
                    HTMLCollection: 0,
                    HTMLFormElement: 0,
                    HTMLSelectElement: 0,
                    MediaList: 0,
                    MimeTypeArray: 0,
                    NamedNodeMap: 0,
                    NodeList: 1,
                    PaintRequestList: 0,
                    Plugin: 0,
                    PluginArray: 0,
                    SVGLengthList: 0,
                    SVGNumberList: 0,
                    SVGPathSegList: 0,
                    SVGPointList: 0,
                    SVGStringList: 0,
                    SVGTransformList: 0,
                    SourceBufferList: 0,
                    StyleSheetList: 0,
                    TextTrackCueList: 0,
                    TextTrackList: 0,
                    TouchList: 0
                };
            },
            {}
        ],
        46: [
            function(e, t, r) {
                e = e("../internals/engine-user-agent");
                t.exports = /(iphone|ipod|ipad).*applewebkit/i.test(e);
            },
            {
                "../internals/engine-user-agent": 47
            }
        ],
        47: [
            function(e, t, r) {
                e = e("../internals/get-built-in");
                t.exports = e("navigator", "userAgent") || "";
            },
            {
                "../internals/get-built-in": 56
            }
        ],
        48: [
            function(e, t, r) {
                var o, n, s = e("../internals/global"), e = e("../internals/engine-user-agent"), s = s.process, s = s && s.versions, s = s && s.v8;
                s ? n = (o = s.split("."))[0] + o[1] : e && (!(o = e.match(/Edge\/(\d+)/)) || 74 <= o[1]) && (o = e.match(/Chrome\/(\d+)/)) && (n = o[1]), t.exports = n && +n;
            },
            {
                "../internals/engine-user-agent": 47,
                "../internals/global": 59
            }
        ],
        49: [
            function(e, t, r) {
                t.exports = [
                    "constructor",
                    "hasOwnProperty",
                    "isPrototypeOf",
                    "propertyIsEnumerable",
                    "toLocaleString",
                    "toString",
                    "valueOf"
                ];
            },
            {}
        ],
        50: [
            function(e, t, r) {
                var u = e("../internals/global"), c = e("../internals/object-get-own-property-descriptor").f, d = e("../internals/create-non-enumerable-property"), f = e("../internals/redefine"), h = e("../internals/set-global"), p = e("../internals/copy-constructor-properties"), m = e("../internals/is-forced");
                t.exports = function(e, t) {
                    var r, o, n, s = e.target, i = e.global, a = e.stat, l = i ? u : a ? u[s] || h(s, {}) : (u[s] || {}).prototype;
                    if (l) for(r in t){
                        if (o = t[r], n = e.noTargetGet ? (n = c(l, r)) && n.value : l[r], !m(i ? r : s + (a ? "." : "#") + r, e.forced) && void 0 !== n) {
                            if (typeof o == typeof n) continue;
                            p(o, n);
                        }
                        (e.sham || n && n.sham) && d(o, "sham", !0), f(l, r, o, e);
                    }
                };
            },
            {
                "../internals/copy-constructor-properties": 33,
                "../internals/create-non-enumerable-property": 38,
                "../internals/global": 59,
                "../internals/is-forced": 73,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/redefine": 108,
                "../internals/set-global": 115
            }
        ],
        51: [
            function(e, t, r) {
                t.exports = function(e) {
                    try {
                        return !!e();
                    } catch (e) {
                        return !0;
                    }
                };
            },
            {}
        ],
        52: [
            function(e, t, r) {
                "use strict";
                e("../modules/es.regexp.exec");
                var u = e("../internals/redefine"), c = e("../internals/fails"), d = e("../internals/well-known-symbol"), f = e("../internals/regexp-exec"), h = e("../internals/create-non-enumerable-property"), p = d("species"), m = !c(function() {
                    var e = /./;
                    return e.exec = function() {
                        var e = [];
                        return e.groups = {
                            a: "7"
                        }, e;
                    }, "7" !== "".replace(e, "$<a>");
                }), y = "$0" === "a".replace(/./, "$0"), e = d("replace"), g = !!/./[e] && "" === /./[e]("a", "$0"), v = !c(function() {
                    var e = /(?:)/, t = e.exec, e = (e.exec = function() {
                        return t.apply(this, arguments);
                    }, "ab".split(e));
                    return 2 !== e.length || "a" !== e[0] || "b" !== e[1];
                });
                t.exports = function(r, e, t, o) {
                    var s, n, i = d(r), a = !c(function() {
                        var e = {};
                        return e[i] = function() {
                            return 7;
                        }, 7 != ""[r](e);
                    }), l = a && !c(function() {
                        var e = !1, t = /a/;
                        return "split" === r && ((t = {
                            constructor: {}
                        }).constructor[p] = function() {
                            return t;
                        }, t.flags = "", t[i] = /./[i]), t.exec = function() {
                            return e = !0, null;
                        }, t[i](""), !e;
                    });
                    a && l && ("replace" !== r || m && y && !g) && ("split" !== r || v) || (s = /./[i], t = (l = t(i, ""[r], function(e, t, r, o, n) {
                        return t.exec === f ? a && !n ? {
                            done: !0,
                            value: s.call(t, r, o)
                        } : {
                            done: !0,
                            value: e.call(r, t, o)
                        } : {
                            done: !1
                        };
                    }, {
                        REPLACE_KEEPS_$0: y,
                        REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: g
                    }))[0], n = l[1], u(String.prototype, r, t), u(RegExp.prototype, i, 2 == e ? function(e, t) {
                        return n.call(e, this, t);
                    } : function(e) {
                        return n.call(e, this);
                    })), o && h(RegExp.prototype[i], "sham", !0);
                };
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/fails": 51,
                "../internals/redefine": 108,
                "../internals/regexp-exec": 110,
                "../internals/well-known-symbol": 146,
                "../modules/es.regexp.exec": 181
            }
        ],
        53: [
            function(e, t, r) {
                e = e("../internals/fails");
                t.exports = !e(function() {
                    return Object.isExtensible(Object.preventExtensions({}));
                });
            },
            {
                "../internals/fails": 51
            }
        ],
        54: [
            function(e, t, r) {
                var s = e("../internals/a-function");
                t.exports = function(o, n, e) {
                    if (s(o), void 0 === n) return o;
                    switch(e){
                        case 0:
                            return function() {
                                return o.call(n);
                            };
                        case 1:
                            return function(e) {
                                return o.call(n, e);
                            };
                        case 2:
                            return function(e, t) {
                                return o.call(n, e, t);
                            };
                        case 3:
                            return function(e, t, r) {
                                return o.call(n, e, t, r);
                            };
                    }
                    return function() {
                        return o.apply(n, arguments);
                    };
                };
            },
            {
                "../internals/a-function": 5
            }
        ],
        55: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/a-function"), n = e("../internals/is-object"), c = [].slice, d = {};
                t.exports = Function.bind || function(i) {
                    var a = o(this), l = c.call(arguments, 1), u = function() {
                        var e = l.concat(c.call(arguments));
                        if (this instanceof u) {
                            var t = a, r = e.length, o = e;
                            if (!(r in d)) {
                                for(var n = [], s = 0; s < r; s++)n[s] = "a[" + s + "]";
                                d[r] = Function("C,a", "return new C(" + n.join(",") + ")");
                            }
                            return d[r](t, o);
                        }
                        return a.apply(i, e);
                    };
                    return n(a.prototype) && (u.prototype = a.prototype), u;
                };
            },
            {
                "../internals/a-function": 5,
                "../internals/is-object": 74
            }
        ],
        56: [
            function(e, t, r) {
                function o(e) {
                    return "function" == typeof e ? e : void 0;
                }
                var n = e("../internals/path"), s = e("../internals/global");
                t.exports = function(e, t) {
                    return arguments.length < 2 ? o(n[e]) || o(s[e]) : n[e] && n[e][t] || s[e] && s[e][t];
                };
            },
            {
                "../internals/global": 59,
                "../internals/path": 104
            }
        ],
        57: [
            function(e, t, r) {
                var o = e("../internals/classof"), n = e("../internals/iterators"), s = e("../internals/well-known-symbol")("iterator");
                t.exports = function(e) {
                    if (null != e) return e[s] || e["@@iterator"] || n[o(e)];
                };
            },
            {
                "../internals/classof": 29,
                "../internals/iterators": 79,
                "../internals/well-known-symbol": 146
            }
        ],
        58: [
            function(e, t, r) {
                var o = e("../internals/an-object"), n = e("../internals/get-iterator-method");
                t.exports = function(e) {
                    var t = n(e);
                    if ("function" != typeof t) throw TypeError(String(e) + " is not iterable");
                    return o(t.call(e));
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/get-iterator-method": 57
            }
        ],
        59: [
            function(e, r, t) {
                (function(e) {
                    function t(e) {
                        return e && e.Math == Math && e;
                    }
                    r.exports = t("object" == typeof globalThis && globalThis) || t("object" == typeof window && window) || t("object" == typeof self && self) || t("object" == typeof e && e) || Function("return this")();
                }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
            },
            {}
        ],
        60: [
            function(e, t, r) {
                var o = {}.hasOwnProperty;
                t.exports = function(e, t) {
                    return o.call(e, t);
                };
            },
            {}
        ],
        61: [
            function(e, t, r) {
                t.exports = {};
            },
            {}
        ],
        62: [
            function(e, t, r) {
                var o = e("../internals/global");
                t.exports = function(e, t) {
                    var r = o.console;
                    r && r.error && (1 === arguments.length ? r.error(e) : r.error(e, t));
                };
            },
            {
                "../internals/global": 59
            }
        ],
        63: [
            function(e, t, r) {
                e = e("../internals/get-built-in");
                t.exports = e("document", "documentElement");
            },
            {
                "../internals/get-built-in": 56
            }
        ],
        64: [
            function(e, t, r) {
                var o = e("../internals/descriptors"), n = e("../internals/fails"), s = e("../internals/document-create-element");
                t.exports = !o && !n(function() {
                    return 7 != Object.defineProperty(s("div"), "a", {
                        get: function() {
                            return 7;
                        }
                    }).a;
                });
            },
            {
                "../internals/descriptors": 43,
                "../internals/document-create-element": 44,
                "../internals/fails": 51
            }
        ],
        65: [
            function(e, t, r) {
                var f = Math.abs, h = Math.pow, p = Math.floor, m = Math.log, y = Math.LN2;
                t.exports = {
                    pack: function(e, t, r) {
                        var o, n, s, i = new Array(r), a = 8 * r - t - 1, r = (1 << a) - 1, l = r >> 1, u = 23 === t ? h(2, -24) - h(2, -77) : 0, c = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0, d = 0;
                        for((e = f(e)) != e || e === 1 / 0 ? (n = e != e ? 1 : 0, o = r) : (o = p(m(e) / y), e * (s = h(2, -o)) < 1 && (o--, s *= 2), 2 <= (e += 1 <= o + l ? u / s : u * h(2, 1 - l)) * s && (o++, s /= 2), r <= o + l ? (n = 0, o = r) : 1 <= o + l ? (n = (e * s - 1) * h(2, t), o += l) : (n = e * h(2, l - 1) * h(2, t), o = 0)); 8 <= t; i[d++] = 255 & n, n /= 256, t -= 8);
                        for(o = o << t | n, a += t; 0 < a; i[d++] = 255 & o, o /= 256, a -= 8);
                        return i[--d] |= 128 * c, i;
                    },
                    unpack: function(e, t) {
                        var r, o = e.length, n = 8 * o - t - 1, s = (1 << n) - 1, i = s >> 1, a = n - 7, l = o - 1, n = e[l--], u = 127 & n;
                        for(n >>= 7; 0 < a; u = 256 * u + e[l], l--, a -= 8);
                        for(r = u & (1 << -a) - 1, u >>= -a, a += t; 0 < a; r = 256 * r + e[l], l--, a -= 8);
                        if (0 === u) u = 1 - i;
                        else {
                            if (u === s) return r ? NaN : n ? -1 / 0 : 1 / 0;
                            r += h(2, t), u -= i;
                        }
                        return (n ? -1 : 1) * r * h(2, u - t);
                    }
                };
            },
            {}
        ],
        66: [
            function(e, t, r) {
                var o = e("../internals/fails"), n = e("../internals/classof-raw"), s = "".split;
                t.exports = o(function() {
                    return !Object("z").propertyIsEnumerable(0);
                }) ? function(e) {
                    return "String" == n(e) ? s.call(e, "") : Object(e);
                } : Object;
            },
            {
                "../internals/classof-raw": 28,
                "../internals/fails": 51
            }
        ],
        67: [
            function(e, t, r) {
                var o = e("../internals/is-object"), n = e("../internals/object-set-prototype-of");
                t.exports = function(e, t, r) {
                    return n && "function" == typeof (t = t.constructor) && t !== r && o(t = t.prototype) && t !== r.prototype && n(e, t), e;
                };
            },
            {
                "../internals/is-object": 74,
                "../internals/object-set-prototype-of": 101
            }
        ],
        68: [
            function(e, t, r) {
                var e = e("../internals/shared-store"), o = Function.toString;
                "function" != typeof e.inspectSource && (e.inspectSource = function(e) {
                    return o.call(e);
                }), t.exports = e.inspectSource;
            },
            {
                "../internals/shared-store": 119
            }
        ],
        69: [
            function(e, t, r) {
                function o(e) {
                    a(e, c, {
                        value: {
                            objectID: "O" + ++d,
                            weakData: {}
                        }
                    });
                }
                var n = e("../internals/hidden-keys"), s = e("../internals/is-object"), i = e("../internals/has"), a = e("../internals/object-define-property").f, l = e("../internals/uid"), u = e("../internals/freezing"), c = l("meta"), d = 0, f = Object.isExtensible || function() {
                    return !0;
                }, h = t.exports = {
                    REQUIRED: !1,
                    fastKey: function(e, t) {
                        if (!s(e)) return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;
                        if (!i(e, c)) {
                            if (!f(e)) return "F";
                            if (!t) return "E";
                            o(e);
                        }
                        return e[c].objectID;
                    },
                    getWeakData: function(e, t) {
                        if (!i(e, c)) {
                            if (!f(e)) return !0;
                            if (!t) return !1;
                            o(e);
                        }
                        return e[c].weakData;
                    },
                    onFreeze: function(e) {
                        return u && h.REQUIRED && f(e) && !i(e, c) && o(e), e;
                    }
                };
                n[c] = !0;
            },
            {
                "../internals/freezing": 53,
                "../internals/has": 60,
                "../internals/hidden-keys": 61,
                "../internals/is-object": 74,
                "../internals/object-define-property": 92,
                "../internals/uid": 143
            }
        ],
        70: [
            function(e, t, r) {
                var o, n, s, i, a, l, u, c, d = e("../internals/native-weak-map"), f = e("../internals/global"), h = e("../internals/is-object"), p = e("../internals/create-non-enumerable-property"), m = e("../internals/has"), y = e("../internals/shared-key"), e = e("../internals/hidden-keys"), f = f.WeakMap;
                u = d ? (o = new f, n = o.get, s = o.has, i = o.set, a = function(e, t) {
                    return i.call(o, e, t), t;
                }, l = function(e) {
                    return n.call(o, e) || {};
                }, function(e) {
                    return s.call(o, e);
                }) : (e[c = y("state")] = !0, a = function(e, t) {
                    return p(e, c, t), t;
                }, l = function(e) {
                    return m(e, c) ? e[c] : {};
                }, function(e) {
                    return m(e, c);
                }), t.exports = {
                    set: a,
                    get: l,
                    has: u,
                    enforce: function(e) {
                        return u(e) ? l(e) : a(e, {});
                    },
                    getterFor: function(t) {
                        return function(e) {
                            if (h(e) && (e = l(e)).type === t) return e;
                            throw TypeError("Incompatible receiver, " + t + " required");
                        };
                    }
                };
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/hidden-keys": 61,
                "../internals/is-object": 74,
                "../internals/native-weak-map": 85,
                "../internals/shared-key": 118
            }
        ],
        71: [
            function(e, t, r) {
                var o = e("../internals/well-known-symbol"), n = e("../internals/iterators"), s = o("iterator"), i = Array.prototype;
                t.exports = function(e) {
                    return void 0 !== e && (n.Array === e || i[s] === e);
                };
            },
            {
                "../internals/iterators": 79,
                "../internals/well-known-symbol": 146
            }
        ],
        72: [
            function(e, t, r) {
                var o = e("../internals/classof-raw");
                t.exports = Array.isArray || function(e) {
                    return "Array" == o(e);
                };
            },
            {
                "../internals/classof-raw": 28
            }
        ],
        73: [
            function(e, t, r) {
                function o(e, t) {
                    return (e = a[i(e)]) == u || e != l && ("function" == typeof t ? n(t) : !!t);
                }
                var n = e("../internals/fails"), s = /#|\.prototype\./, i = o.normalize = function(e) {
                    return String(e).replace(s, ".").toLowerCase();
                }, a = o.data = {}, l = o.NATIVE = "N", u = o.POLYFILL = "P";
                t.exports = o;
            },
            {
                "../internals/fails": 51
            }
        ],
        74: [
            function(e, t, r) {
                t.exports = function(e) {
                    return "object" == typeof e ? null !== e : "function" == typeof e;
                };
            },
            {}
        ],
        75: [
            function(e, t, r) {
                t.exports = !1;
            },
            {}
        ],
        76: [
            function(e, t, r) {
                var o = e("../internals/is-object"), n = e("../internals/classof-raw"), s = e("../internals/well-known-symbol")("match");
                t.exports = function(e) {
                    var t;
                    return o(e) && (void 0 !== (t = e[s]) ? !!t : "RegExp" == n(e));
                };
            },
            {
                "../internals/classof-raw": 28,
                "../internals/is-object": 74,
                "../internals/well-known-symbol": 146
            }
        ],
        77: [
            function(e, t, r) {
                function f(e, t) {
                    this.stopped = e, this.result = t;
                }
                var h = e("../internals/an-object"), p = e("../internals/is-array-iterator-method"), m = e("../internals/to-length"), y = e("../internals/function-bind-context"), g = e("../internals/get-iterator-method"), v = e("../internals/call-with-safe-iteration-closing");
                (t.exports = function(e, t, r, o, n) {
                    var s, i, a, l, u, c, d = y(t, r, o ? 2 : 1);
                    if (n) s = e;
                    else {
                        if ("function" != typeof (t = g(e))) throw TypeError("Target is not iterable");
                        if (p(t)) {
                            for(i = 0, a = m(e.length); i < a; i++)if ((l = o ? d(h(c = e[i])[0], c[1]) : d(e[i])) && l instanceof f) return l;
                            return new f(!1);
                        }
                        s = t.call(e);
                    }
                    for(u = s.next; !(c = u.call(s)).done;)if ("object" == typeof (l = v(s, d, c.value, o)) && l && l instanceof f) return l;
                    return new f(!1);
                }).stop = function(e) {
                    return new f(!0, e);
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/call-with-safe-iteration-closing": 26,
                "../internals/function-bind-context": 54,
                "../internals/get-iterator-method": 57,
                "../internals/is-array-iterator-method": 71,
                "../internals/to-length": 134
            }
        ],
        78: [
            function(e, t, r) {
                "use strict";
                var o, n, s = e("../internals/object-get-prototype-of"), i = e("../internals/create-non-enumerable-property"), a = e("../internals/has"), l = e("../internals/well-known-symbol"), e = e("../internals/is-pure"), l = l("iterator"), u = !1;
                [].keys && ("next" in (n = [].keys()) ? (s = s(s(n))) !== Object.prototype && (o = s) : u = !0), null == o && (o = {}), e || a(o, l) || i(o, l, function() {
                    return this;
                }), t.exports = {
                    IteratorPrototype: o,
                    BUGGY_SAFARI_ITERATORS: u
                };
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/has": 60,
                "../internals/is-pure": 75,
                "../internals/object-get-prototype-of": 97,
                "../internals/well-known-symbol": 146
            }
        ],
        79: [
            function(e, t, r) {
                t.exports = {};
            },
            {}
        ],
        80: [
            function(e, t, r) {
                t.exports = Math.sign || function(e) {
                    return 0 == (e = +e) || e != e ? e : e < 0 ? -1 : 1;
                };
            },
            {}
        ],
        81: [
            function(e, t, r) {
                var o, n, s, i, a, l, u, c, d = e("../internals/global"), f = e("../internals/object-get-own-property-descriptor").f, h = e("../internals/classof-raw"), p = e("../internals/task").set, e = e("../internals/engine-is-ios"), m = d.MutationObserver || d.WebKitMutationObserver, y = d.process, g = d.Promise, v = "process" == h(y), h = f(d, "queueMicrotask"), f = h && h.value;
                f || (o = function() {
                    var e, t;
                    for(v && (e = y.domain) && e.exit(); n;){
                        t = n.fn, n = n.next;
                        try {
                            t();
                        } catch (e) {
                            throw n ? i() : s = void 0, e;
                        }
                    }
                    s = void 0, e && e.enter();
                }, i = v ? function() {
                    y.nextTick(o);
                } : m && !e ? (a = !0, l = document.createTextNode(""), new m(o).observe(l, {
                    characterData: !0
                }), function() {
                    l.data = a = !a;
                }) : g && g.resolve ? (u = g.resolve(void 0), c = u.then, function() {
                    c.call(u, o);
                }) : function() {
                    p.call(d, o);
                }), t.exports = f || function(e) {
                    e = {
                        fn: e,
                        next: void 0
                    };
                    s && (s.next = e), n || (n = e, i()), s = e;
                };
            },
            {
                "../internals/classof-raw": 28,
                "../internals/engine-is-ios": 46,
                "../internals/global": 59,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/task": 128
            }
        ],
        82: [
            function(e, t, r) {
                e = e("../internals/global");
                t.exports = e.Promise;
            },
            {
                "../internals/global": 59
            }
        ],
        83: [
            function(e, t, r) {
                e = e("../internals/fails");
                t.exports = !!Object.getOwnPropertySymbols && !e(function() {
                    return !String(Symbol());
                });
            },
            {
                "../internals/fails": 51
            }
        ],
        84: [
            function(e, t, r) {
                var o = e("../internals/fails"), n = e("../internals/well-known-symbol"), s = e("../internals/is-pure"), i = n("iterator");
                t.exports = !o(function() {
                    var e = new URL("b?a=1&b=2&c=3", "http://a"), r = e.searchParams, o = "";
                    return e.pathname = "c%20d", r.forEach(function(e, t) {
                        r.delete("b"), o += t + e;
                    }), s && !e.toJSON || !r.sort || "http://a/c%20d?a=1&c=3" !== e.href || "3" !== r.get("c") || "a=1" !== String(new URLSearchParams("?a=1")) || !r[i] || "a" !== new URL("https://a@b").username || "b" !== new URLSearchParams(new URLSearchParams("a=b")).get("a") || "xn--e1aybc" !== new URL("http://\u0442\u0435\u0441\u0442").host || "#%D0%B1" !== new URL("http://a#\u0431").hash || "a1c3" !== o || "x" !== new URL("http://x", void 0).host;
                });
            },
            {
                "../internals/fails": 51,
                "../internals/is-pure": 75,
                "../internals/well-known-symbol": 146
            }
        ],
        85: [
            function(e, t, r) {
                var o = e("../internals/global"), e = e("../internals/inspect-source"), o = o.WeakMap;
                t.exports = "function" == typeof o && /native code/.test(e(o));
            },
            {
                "../internals/global": 59,
                "../internals/inspect-source": 68
            }
        ],
        86: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    var r, o;
                    this.promise = new e(function(e, t) {
                        if (void 0 !== r || void 0 !== o) throw TypeError("Bad Promise constructor");
                        r = e, o = t;
                    }), this.resolve = n(r), this.reject = n(o);
                }
                var n = e("../internals/a-function");
                t.exports.f = function(e) {
                    return new o(e);
                };
            },
            {
                "../internals/a-function": 5
            }
        ],
        87: [
            function(e, t, r) {
                var o = e("../internals/is-regexp");
                t.exports = function(e) {
                    if (o(e)) throw TypeError("The method doesn't accept regular expressions");
                    return e;
                };
            },
            {
                "../internals/is-regexp": 76
            }
        ],
        88: [
            function(e, t, r) {
                var o = e("../internals/global").isFinite;
                t.exports = Number.isFinite || function(e) {
                    return "number" == typeof e && o(e);
                };
            },
            {
                "../internals/global": 59
            }
        ],
        89: [
            function(e, t, r) {
                "use strict";
                var f = e("../internals/descriptors"), o = e("../internals/fails"), h = e("../internals/object-keys"), p = e("../internals/object-get-own-property-symbols"), m = e("../internals/object-property-is-enumerable"), y = e("../internals/to-object"), g = e("../internals/indexed-object"), n = Object.assign, s = Object.defineProperty;
                t.exports = !n || o(function() {
                    var e, t, r, o;
                    return !(!f || 1 === n({
                        b: 1
                    }, n(s({}, "a", {
                        enumerable: !0,
                        get: function() {
                            s(this, "b", {
                                value: 3,
                                enumerable: !1
                            });
                        }
                    }), {
                        b: 2
                    })).b) || (t = {}, o = "abcdefghijklmnopqrst", (e = {})[r = Symbol()] = 7, o.split("").forEach(function(e) {
                        t[e] = e;
                    }), 7 != n({}, e)[r] || h(n({}, t)).join("") != o);
                }) ? function(e, t) {
                    for(var r = y(e), o = arguments.length, n = 1, s = p.f, i = m.f; n < o;)for(var a, l = g(arguments[n++]), u = s ? h(l).concat(s(l)) : h(l), c = u.length, d = 0; d < c;)a = u[d++], f && !i.call(l, a) || (r[a] = l[a]);
                    return r;
                } : n;
            },
            {
                "../internals/descriptors": 43,
                "../internals/fails": 51,
                "../internals/indexed-object": 66,
                "../internals/object-get-own-property-symbols": 96,
                "../internals/object-keys": 99,
                "../internals/object-property-is-enumerable": 100,
                "../internals/to-object": 135
            }
        ],
        90: [
            function(e, t, r) {
                function o() {}
                var n, s = e("../internals/an-object"), i = e("../internals/object-define-properties"), a = e("../internals/enum-bug-keys"), l = e("../internals/hidden-keys"), u = e("../internals/html"), c = e("../internals/document-create-element"), e = e("../internals/shared-key"), d = "prototype", f = "script", h = e("IE_PROTO"), p = function(e) {
                    return "<" + f + ">" + e + "</" + f + ">";
                }, m = function() {
                    try {
                        n = document.domain && new ActiveXObject("htmlfile");
                    } catch (e) {}
                    m = n ? ((e = n).write(p("")), e.close(), t = e.parentWindow.Object, e = null, t) : (e = c("iframe"), t = "java" + f + ":", e.style.display = "none", u.appendChild(e), e.src = String(t), (t = e.contentWindow.document).open(), t.write(p("document.F=Object")), t.close(), t.F);
                    for(var e1, t, r = a.length; r--;)delete m[d][a[r]];
                    return m();
                };
                l[h] = !0, t.exports = Object.create || function(e, t) {
                    var r;
                    return null !== e ? (o[d] = s(e), r = new o, o[d] = null, r[h] = e) : r = m(), void 0 === t ? r : i(r, t);
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/document-create-element": 44,
                "../internals/enum-bug-keys": 49,
                "../internals/hidden-keys": 61,
                "../internals/html": 63,
                "../internals/object-define-properties": 91,
                "../internals/shared-key": 118
            }
        ],
        91: [
            function(e, t, r) {
                var o = e("../internals/descriptors"), i = e("../internals/object-define-property"), a = e("../internals/an-object"), l = e("../internals/object-keys");
                t.exports = o ? Object.defineProperties : function(e, t) {
                    a(e);
                    for(var r, o = l(t), n = o.length, s = 0; s < n;)i.f(e, r = o[s++], t[r]);
                    return e;
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/descriptors": 43,
                "../internals/object-define-property": 92,
                "../internals/object-keys": 99
            }
        ],
        92: [
            function(e, t, r) {
                var o = e("../internals/descriptors"), n = e("../internals/ie8-dom-define"), s = e("../internals/an-object"), i = e("../internals/to-primitive"), a = Object.defineProperty;
                r.f = o ? a : function(e, t, r) {
                    if (s(e), t = i(t, !0), s(r), n) try {
                        return a(e, t, r);
                    } catch (e) {}
                    if ("get" in r || "set" in r) throw TypeError("Accessors not supported");
                    return "value" in r && (e[t] = r.value), e;
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/descriptors": 43,
                "../internals/ie8-dom-define": 64,
                "../internals/to-primitive": 138
            }
        ],
        93: [
            function(e, t, r) {
                var o = e("../internals/descriptors"), n = e("../internals/object-property-is-enumerable"), s = e("../internals/create-property-descriptor"), i = e("../internals/to-indexed-object"), a = e("../internals/to-primitive"), l = e("../internals/has"), u = e("../internals/ie8-dom-define"), c = Object.getOwnPropertyDescriptor;
                r.f = o ? c : function(e, t) {
                    if (e = i(e), t = a(t, !0), u) try {
                        return c(e, t);
                    } catch (e) {}
                    if (l(e, t)) return s(!n.f.call(e, t), e[t]);
                };
            },
            {
                "../internals/create-property-descriptor": 39,
                "../internals/descriptors": 43,
                "../internals/has": 60,
                "../internals/ie8-dom-define": 64,
                "../internals/object-property-is-enumerable": 100,
                "../internals/to-indexed-object": 132,
                "../internals/to-primitive": 138
            }
        ],
        94: [
            function(e, t, r) {
                var o = e("../internals/to-indexed-object"), n = e("../internals/object-get-own-property-names").f, s = {}.toString, i = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
                t.exports.f = function(e) {
                    if (!i || "[object Window]" != s.call(e)) return n(o(e));
                    try {
                        return n(e);
                    } catch (e) {
                        return i.slice();
                    }
                };
            },
            {
                "../internals/object-get-own-property-names": 95,
                "../internals/to-indexed-object": 132
            }
        ],
        95: [
            function(e, t, r) {
                var o = e("../internals/object-keys-internal"), n = e("../internals/enum-bug-keys").concat("length", "prototype");
                r.f = Object.getOwnPropertyNames || function(e) {
                    return o(e, n);
                };
            },
            {
                "../internals/enum-bug-keys": 49,
                "../internals/object-keys-internal": 98
            }
        ],
        96: [
            function(e, t, r) {
                r.f = Object.getOwnPropertySymbols;
            },
            {}
        ],
        97: [
            function(e, t, r) {
                var o = e("../internals/has"), n = e("../internals/to-object"), s = e("../internals/shared-key"), e = e("../internals/correct-prototype-getter"), i = s("IE_PROTO"), a = Object.prototype;
                t.exports = e ? Object.getPrototypeOf : function(e) {
                    return e = n(e), o(e, i) ? e[i] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? a : null;
                };
            },
            {
                "../internals/correct-prototype-getter": 35,
                "../internals/has": 60,
                "../internals/shared-key": 118,
                "../internals/to-object": 135
            }
        ],
        98: [
            function(e, t, r) {
                var i = e("../internals/has"), a = e("../internals/to-indexed-object"), l = e("../internals/array-includes").indexOf, u = e("../internals/hidden-keys");
                t.exports = function(e, t) {
                    var r, o = a(e), n = 0, s = [];
                    for(r in o)!i(u, r) && i(o, r) && s.push(r);
                    for(; t.length > n;)!i(o, r = t[n++]) || ~l(s, r) || s.push(r);
                    return s;
                };
            },
            {
                "../internals/array-includes": 18,
                "../internals/has": 60,
                "../internals/hidden-keys": 61,
                "../internals/to-indexed-object": 132
            }
        ],
        99: [
            function(e, t, r) {
                var o = e("../internals/object-keys-internal"), n = e("../internals/enum-bug-keys");
                t.exports = Object.keys || function(e) {
                    return o(e, n);
                };
            },
            {
                "../internals/enum-bug-keys": 49,
                "../internals/object-keys-internal": 98
            }
        ],
        100: [
            function(e, t, r) {
                "use strict";
                var o = {}.propertyIsEnumerable, n = Object.getOwnPropertyDescriptor, s = n && !o.call({
                    1: 2
                }, 1);
                r.f = s ? function(e) {
                    e = n(this, e);
                    return !!e && e.enumerable;
                } : o;
            },
            {}
        ],
        101: [
            function(e, t, r) {
                var n = e("../internals/an-object"), s = e("../internals/a-possible-prototype");
                t.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
                    var r, o = !1, e = {};
                    try {
                        (r = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(e, []), o = e instanceof Array;
                    } catch (e) {}
                    return function(e, t) {
                        return n(e), s(t), o ? r.call(e, t) : e.__proto__ = t, e;
                    };
                }() : void 0);
            },
            {
                "../internals/a-possible-prototype": 6,
                "../internals/an-object": 10
            }
        ],
        102: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/to-string-tag-support"), n = e("../internals/classof");
                t.exports = o ? ({}).toString : function() {
                    return "[object " + n(this) + "]";
                };
            },
            {
                "../internals/classof": 29,
                "../internals/to-string-tag-support": 139
            }
        ],
        103: [
            function(e, t, r) {
                var o = e("../internals/get-built-in"), n = e("../internals/object-get-own-property-names"), s = e("../internals/object-get-own-property-symbols"), i = e("../internals/an-object");
                t.exports = o("Reflect", "ownKeys") || function(e) {
                    var t = n.f(i(e)), r = s.f;
                    return r ? t.concat(r(e)) : t;
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/get-built-in": 56,
                "../internals/object-get-own-property-names": 95,
                "../internals/object-get-own-property-symbols": 96
            }
        ],
        104: [
            function(e, t, r) {
                e = e("../internals/global");
                t.exports = e;
            },
            {
                "../internals/global": 59
            }
        ],
        105: [
            function(e, t, r) {
                t.exports = function(e) {
                    try {
                        return {
                            error: !1,
                            value: e()
                        };
                    } catch (e) {
                        return {
                            error: !0,
                            value: e
                        };
                    }
                };
            },
            {}
        ],
        106: [
            function(e, t, r) {
                var o = e("../internals/an-object"), n = e("../internals/is-object"), s = e("../internals/new-promise-capability");
                t.exports = function(e, t) {
                    return o(e), n(t) && t.constructor === e ? t : ((0, (e = s.f(e)).resolve)(t), e.promise);
                };
            },
            {
                "../internals/an-object": 10,
                "../internals/is-object": 74,
                "../internals/new-promise-capability": 86
            }
        ],
        107: [
            function(e, t, r) {
                var n = e("../internals/redefine");
                t.exports = function(e, t, r) {
                    for(var o in t)n(e, o, t[o], r);
                    return e;
                };
            },
            {
                "../internals/redefine": 108
            }
        ],
        108: [
            function(e, t, r) {
                var i = e("../internals/global"), a = e("../internals/create-non-enumerable-property"), l = e("../internals/has"), u = e("../internals/set-global"), o = e("../internals/inspect-source"), e = e("../internals/internal-state"), n = e.get, c = e.enforce, d = String(String).split("String");
                (t.exports = function(e, t, r, o) {
                    var n = !!o && !!o.unsafe, s = !!o && !!o.enumerable, o = !!o && !!o.noTargetGet;
                    "function" == typeof r && ("string" != typeof t || l(r, "name") || a(r, "name", t), c(r).source = d.join("string" == typeof t ? t : "")), e === i ? s ? e[t] = r : u(t, r) : (n ? !o && e[t] && (s = !0) : delete e[t], s ? e[t] = r : a(e, t, r));
                })(Function.prototype, "toString", function() {
                    return "function" == typeof this && n(this).source || o(this);
                });
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/inspect-source": 68,
                "../internals/internal-state": 70,
                "../internals/set-global": 115
            }
        ],
        109: [
            function(e, t, r) {
                var o = e("./classof-raw"), n = e("./regexp-exec");
                t.exports = function(e, t) {
                    var r = e.exec;
                    if ("function" == typeof r) {
                        r = r.call(e, t);
                        if ("object" != typeof r) throw TypeError("RegExp exec method returned something other than an Object or null");
                        return r;
                    }
                    if ("RegExp" !== o(e)) throw TypeError("RegExp#exec called on incompatible receiver");
                    return n.call(e, t);
                };
            },
            {
                "./classof-raw": 28,
                "./regexp-exec": 110
            }
        ],
        110: [
            function(e, t, r) {
                "use strict";
                var o, n, d = e("./regexp-flags"), e = e("./regexp-sticky-helpers"), f = RegExp.prototype.exec, h = String.prototype.replace, s = f, p = (o = /a/, n = /b*/g, f.call(o, "a"), f.call(n, "a"), 0 !== o.lastIndex || 0 !== n.lastIndex), m = e.UNSUPPORTED_Y || e.BROKEN_CARET, y = void 0 !== /()??/.exec("")[1];
                t.exports = s = p || y || m ? function(e) {
                    var t, r, o, n, s = this, i = m && s.sticky, a = d.call(s), l = s.source, u = 0, c = e;
                    return i && (-1 === (a = a.replace("y", "")).indexOf("g") && (a += "g"), c = String(e).slice(s.lastIndex), 0 < s.lastIndex && (!s.multiline || s.multiline && "\n" !== e[s.lastIndex - 1]) && (l = "(?: " + l + ")", c = " " + c, u++), r = new RegExp("^(?:" + l + ")", a)), y && (r = new RegExp("^" + l + "$(?!\\s)", a)), p && (t = s.lastIndex), o = f.call(i ? r : s, c), i ? o ? (o.input = o.input.slice(u), o[0] = o[0].slice(u), o.index = s.lastIndex, s.lastIndex += o[0].length) : s.lastIndex = 0 : p && o && (s.lastIndex = s.global ? o.index + o[0].length : t), y && o && 1 < o.length && h.call(o[0], r, function() {
                        for(n = 1; n < arguments.length - 2; n++)void 0 === arguments[n] && (o[n] = void 0);
                    }), o;
                } : s;
            },
            {
                "./regexp-flags": 111,
                "./regexp-sticky-helpers": 112
            }
        ],
        111: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/an-object");
                t.exports = function() {
                    var e = o(this), t = "";
                    return e.global && (t += "g"), e.ignoreCase && (t += "i"), e.multiline && (t += "m"), e.dotAll && (t += "s"), e.unicode && (t += "u"), e.sticky && (t += "y"), t;
                };
            },
            {
                "../internals/an-object": 10
            }
        ],
        112: [
            function(e, t, r) {
                "use strict";
                e = e("./fails");
                function o(e, t) {
                    return RegExp(e, t);
                }
                r.UNSUPPORTED_Y = e(function() {
                    var e = o("a", "y");
                    return e.lastIndex = 2, null != e.exec("abcd");
                }), r.BROKEN_CARET = e(function() {
                    var e = o("^r", "gy");
                    return e.lastIndex = 2, null != e.exec("str");
                });
            },
            {
                "./fails": 51
            }
        ],
        113: [
            function(e, t, r) {
                t.exports = function(e) {
                    if (null == e) throw TypeError("Can't call method on " + e);
                    return e;
                };
            },
            {}
        ],
        114: [
            function(e, t, r) {
                t.exports = Object.is || function(e, t) {
                    return e === t ? 0 !== e || 1 / e == 1 / t : e != e && t != t;
                };
            },
            {}
        ],
        115: [
            function(e, t, r) {
                var o = e("../internals/global"), n = e("../internals/create-non-enumerable-property");
                t.exports = function(t, r) {
                    try {
                        n(o, t, r);
                    } catch (e) {
                        o[t] = r;
                    }
                    return r;
                };
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/global": 59
            }
        ],
        116: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/get-built-in"), n = e("../internals/object-define-property"), s = e("../internals/well-known-symbol"), i = e("../internals/descriptors"), a = s("species");
                t.exports = function(e) {
                    var e = o(e), t = n.f;
                    i && e && !e[a] && t(e, a, {
                        configurable: !0,
                        get: function() {
                            return this;
                        }
                    });
                };
            },
            {
                "../internals/descriptors": 43,
                "../internals/get-built-in": 56,
                "../internals/object-define-property": 92,
                "../internals/well-known-symbol": 146
            }
        ],
        117: [
            function(e, t, r) {
                var o = e("../internals/object-define-property").f, n = e("../internals/has"), s = e("../internals/well-known-symbol")("toStringTag");
                t.exports = function(e, t, r) {
                    e && !n(e = r ? e : e.prototype, s) && o(e, s, {
                        configurable: !0,
                        value: t
                    });
                };
            },
            {
                "../internals/has": 60,
                "../internals/object-define-property": 92,
                "../internals/well-known-symbol": 146
            }
        ],
        118: [
            function(e, t, r) {
                var o = e("../internals/shared"), n = e("../internals/uid"), s = o("keys");
                t.exports = function(e) {
                    return s[e] || (s[e] = n(e));
                };
            },
            {
                "../internals/shared": 120,
                "../internals/uid": 143
            }
        ],
        119: [
            function(e, t, r) {
                var o = e("../internals/global"), e = e("../internals/set-global"), n = "__core-js_shared__", o = o[n] || e(n, {});
                t.exports = o;
            },
            {
                "../internals/global": 59,
                "../internals/set-global": 115
            }
        ],
        120: [
            function(e, t, r) {
                var o = e("../internals/is-pure"), n = e("../internals/shared-store");
                (t.exports = function(e, t) {
                    return n[e] || (n[e] = void 0 !== t ? t : {});
                })("versions", []).push({
                    version: "3.6.5",
                    mode: o ? "pure" : "global",
                    copyright: "\xa9 2020 Denis Pushkarev (zloirock.ru)"
                });
            },
            {
                "../internals/is-pure": 75,
                "../internals/shared-store": 119
            }
        ],
        121: [
            function(e, t, r) {
                var o = e("../internals/an-object"), n = e("../internals/a-function"), s = e("../internals/well-known-symbol")("species");
                t.exports = function(e, t) {
                    var e = o(e).constructor;
                    return void 0 === e || null == (e = o(e)[s]) ? t : n(e);
                };
            },
            {
                "../internals/a-function": 5,
                "../internals/an-object": 10,
                "../internals/well-known-symbol": 146
            }
        ],
        122: [
            function(e, t, r) {
                var o = e("../internals/fails");
                t.exports = function(t) {
                    return o(function() {
                        var e = ""[t]('"');
                        return e !== e.toLowerCase() || 3 < e.split('"').length;
                    });
                };
            },
            {
                "../internals/fails": 51
            }
        ],
        123: [
            function(e, t, r) {
                function o(n) {
                    return function(e, t) {
                        var r, e = String(i(e)), t = s(t), o = e.length;
                        return t < 0 || o <= t ? n ? "" : void 0 : (r = e.charCodeAt(t)) < 55296 || 56319 < r || t + 1 === o || (o = e.charCodeAt(t + 1)) < 56320 || 57343 < o ? n ? e.charAt(t) : r : n ? e.slice(t, t + 2) : o - 56320 + (r - 55296 << 10) + 65536;
                    };
                }
                var s = e("../internals/to-integer"), i = e("../internals/require-object-coercible");
                t.exports = {
                    codeAt: o(!1),
                    charAt: o(!0)
                };
            },
            {
                "../internals/require-object-coercible": 113,
                "../internals/to-integer": 133
            }
        ],
        124: [
            function(e, t, r) {
                "use strict";
                function g(e) {
                    return e + 22 + 75 * (e < 26);
                }
                function s(e) {
                    var t, r = [], o = (e = function(e) {
                        for(var t = [], r = 0, o = e.length; r < o;){
                            var n, s = e.charCodeAt(r++);
                            55296 <= s && s <= 56319 && r < o ? 56320 == (64512 & (n = e.charCodeAt(r++))) ? t.push(((1023 & s) << 10) + (1023 & n) + 65536) : (t.push(s), r--) : t.push(s);
                        }
                        return t;
                    }(e)).length, n = 128, s = 0, i = 72;
                    for(c = 0; c < e.length; c++)(t = e[c]) < 128 && r.push(E(t));
                    var a = r.length, l = a;
                    for(a && r.push("-"); l < o;){
                        for(var u = v, c = 0; c < e.length; c++)n <= (t = e[c]) && t < u && (u = t);
                        var d = l + 1;
                        if (u - n > M((v - s) / d)) throw RangeError(w);
                        for(s += (u - n) * d, n = u, c = 0; c < e.length; c++){
                            if ((t = e[c]) < n && ++s > v) throw RangeError(w);
                            if (t == n) {
                                for(var f = s, h = b;; h += b){
                                    var p = h <= i ? 1 : i + j <= h ? j : h - i;
                                    if (f < p) break;
                                    var m = f - p, y = b - p;
                                    r.push(E(g(p + m % y))), f = M(m / y);
                                }
                                r.push(E(g(f))), i = function(e, t, r) {
                                    var o = 0;
                                    for(e = r ? M(e / x) : e >> 1, e += M(e / t); S * j >> 1 < e; o += b)e = M(e / S);
                                    return M(o + (S + 1) * e / (e + _));
                                }(s, d, l == a), s = 0, ++l;
                            }
                        }
                        ++s, ++n;
                    }
                    return r.join("");
                }
                var v = 2147483647, b = 36, j = 26, _ = 38, x = 700, i = /[^\0-\u007E]/, a = /[.\u3002\uFF0E\uFF61]/g, w = "Overflow: input needs wider integers to process", S = b - 1, M = Math.floor, E = String.fromCharCode;
                t.exports = function(e) {
                    for(var t, r = [], o = e.toLowerCase().replace(a, ".").split("."), n = 0; n < o.length; n++)t = o[n], r.push(i.test(t) ? "xn--" + s(t) : t);
                    return r.join(".");
                };
            },
            {}
        ],
        125: [
            function(e, t, r) {
                "use strict";
                var n = e("../internals/to-integer"), s = e("../internals/require-object-coercible");
                t.exports = "".repeat || function(e) {
                    var t = String(s(this)), r = "", o = n(e);
                    if (o < 0 || o == 1 / 0) throw RangeError("Wrong number of repetitions");
                    for(; 0 < o; (o >>>= 1) && (t += t))1 & o && (r += t);
                    return r;
                };
            },
            {
                "../internals/require-object-coercible": 113,
                "../internals/to-integer": 133
            }
        ],
        126: [
            function(e, t, r) {
                var o = e("../internals/fails"), n = e("../internals/whitespaces");
                t.exports = function(e) {
                    return o(function() {
                        return !!n[e]() || "\u200B\x85\u180E" != "\u200B\x85\u180E"[e]() || n[e].name !== e;
                    });
                };
            },
            {
                "../internals/fails": 51,
                "../internals/whitespaces": 147
            }
        ],
        127: [
            function(e, t, r) {
                function o(t) {
                    return function(e) {
                        e = String(n(e));
                        return 1 & t && (e = e.replace(s, "")), e = 2 & t ? e.replace(i, "") : e;
                    };
                }
                var n = e("../internals/require-object-coercible"), e = "[" + e("../internals/whitespaces") + "]", s = RegExp("^" + e + e + "*"), i = RegExp(e + e + "*$");
                t.exports = {
                    start: o(1),
                    end: o(2),
                    trim: o(3)
                };
            },
            {
                "../internals/require-object-coercible": 113,
                "../internals/whitespaces": 147
            }
        ],
        128: [
            function(e, t, r) {
                function o(e) {
                    return function() {
                        x(e);
                    };
                }
                function n(e) {
                    x(e.data);
                }
                function s(e) {
                    a.postMessage(e + "", h.protocol + "//" + h.host);
                }
                var i, a = e("../internals/global"), l = e("../internals/fails"), u = e("../internals/classof-raw"), c = e("../internals/function-bind-context"), d = e("../internals/html"), f = e("../internals/document-create-element"), e = e("../internals/engine-is-ios"), h = a.location, p = a.setImmediate, m = a.clearImmediate, y = a.process, g = a.MessageChannel, v = a.Dispatch, b = 0, j = {}, _ = "onreadystatechange", x = function(e) {
                    var t;
                    j.hasOwnProperty(e) && (t = j[e], delete j[e], t());
                };
                p && m || (p = function(e) {
                    for(var t = [], r = 1; r < arguments.length;)t.push(arguments[r++]);
                    return j[++b] = function() {
                        ("function" == typeof e ? e : Function(e)).apply(void 0, t);
                    }, i(b), b;
                }, m = function(e) {
                    delete j[e];
                }, "process" == u(y) ? i = function(e) {
                    y.nextTick(o(e));
                } : v && v.now ? i = function(e) {
                    v.now(o(e));
                } : g && !e ? (e = (u = new g).port2, u.port1.onmessage = n, i = c(e.postMessage, e, 1)) : !a.addEventListener || "function" != typeof postMessage || a.importScripts || l(s) || "file:" === h.protocol ? i = _ in f("script") ? function(e) {
                    d.appendChild(f("script"))[_] = function() {
                        d.removeChild(this), x(e);
                    };
                } : function(e) {
                    setTimeout(o(e), 0);
                } : (i = s, a.addEventListener("message", n, !1))), t.exports = {
                    set: p,
                    clear: m
                };
            },
            {
                "../internals/classof-raw": 28,
                "../internals/document-create-element": 44,
                "../internals/engine-is-ios": 46,
                "../internals/fails": 51,
                "../internals/function-bind-context": 54,
                "../internals/global": 59,
                "../internals/html": 63
            }
        ],
        129: [
            function(e, t, r) {
                var o = e("../internals/classof-raw");
                t.exports = function(e) {
                    if ("number" != typeof e && "Number" != o(e)) throw TypeError("Incorrect invocation");
                    return +e;
                };
            },
            {
                "../internals/classof-raw": 28
            }
        ],
        130: [
            function(e, t, r) {
                var o = e("../internals/to-integer"), n = Math.max, s = Math.min;
                t.exports = function(e, t) {
                    e = o(e);
                    return e < 0 ? n(e + t, 0) : s(e, t);
                };
            },
            {
                "../internals/to-integer": 133
            }
        ],
        131: [
            function(e, t, r) {
                var o = e("../internals/to-integer"), n = e("../internals/to-length");
                t.exports = function(e) {
                    if (void 0 === e) return 0;
                    var e = o(e), t = n(e);
                    if (e !== t) throw RangeError("Wrong length or index");
                    return t;
                };
            },
            {
                "../internals/to-integer": 133,
                "../internals/to-length": 134
            }
        ],
        132: [
            function(e, t, r) {
                var o = e("../internals/indexed-object"), n = e("../internals/require-object-coercible");
                t.exports = function(e) {
                    return o(n(e));
                };
            },
            {
                "../internals/indexed-object": 66,
                "../internals/require-object-coercible": 113
            }
        ],
        133: [
            function(e, t, r) {
                var o = Math.ceil, n = Math.floor;
                t.exports = function(e) {
                    return isNaN(e = +e) ? 0 : (0 < e ? n : o)(e);
                };
            },
            {}
        ],
        134: [
            function(e, t, r) {
                var o = e("../internals/to-integer"), n = Math.min;
                t.exports = function(e) {
                    return 0 < e ? n(o(e), 9007199254740991) : 0;
                };
            },
            {
                "../internals/to-integer": 133
            }
        ],
        135: [
            function(e, t, r) {
                var o = e("../internals/require-object-coercible");
                t.exports = function(e) {
                    return Object(o(e));
                };
            },
            {
                "../internals/require-object-coercible": 113
            }
        ],
        136: [
            function(e, t, r) {
                var o = e("../internals/to-positive-integer");
                t.exports = function(e, t) {
                    e = o(e);
                    if (e % t) throw RangeError("Wrong offset");
                    return e;
                };
            },
            {
                "../internals/to-positive-integer": 137
            }
        ],
        137: [
            function(e, t, r) {
                var o = e("../internals/to-integer");
                t.exports = function(e) {
                    e = o(e);
                    if (e < 0) throw RangeError("The argument can't be less than 0");
                    return e;
                };
            },
            {
                "../internals/to-integer": 133
            }
        ],
        138: [
            function(e, t, r) {
                var n = e("../internals/is-object");
                t.exports = function(e, t) {
                    if (!n(e)) return e;
                    var r, o;
                    if (t && "function" == typeof (r = e.toString) && !n(o = r.call(e)) || "function" == typeof (r = e.valueOf) && !n(o = r.call(e)) || !t && "function" == typeof (r = e.toString) && !n(o = r.call(e))) return o;
                    throw TypeError("Can't convert object to primitive value");
                };
            },
            {
                "../internals/is-object": 74
            }
        ],
        139: [
            function(e, t, r) {
                var o = {};
                o[e("../internals/well-known-symbol")("toStringTag")] = "z", t.exports = "[object z]" === String(o);
            },
            {
                "../internals/well-known-symbol": 146
            }
        ],
        140: [
            function(e, t, I) {
                "use strict";
                function h(e, t) {
                    for(var r = 0, o = t.length, n = new (Q(e))(o); r < o;)n[r] = t[r++];
                    return n;
                }
                function r(e, t) {
                    E(e, t, {
                        get: function() {
                            return M(this)[t];
                        }
                    });
                }
                function p(e) {
                    return e instanceof C || "ArrayBuffer" == (e = B(e)) || "SharedArrayBuffer" == e;
                }
                function o(e, t) {
                    return P(e) && "symbol" != typeof t && t in e && String(+t) == String(t);
                }
                function n(e, t) {
                    return o(e, t = d(t, !0)) ? N(2, e[t]) : X(e, t);
                }
                function s(e, t, r) {
                    return !(o(e, t = d(t, !0)) && b(r) && f(r, "value")) || f(r, "get") || f(r, "set") || r.configurable || f(r, "writable") && !r.writable || f(r, "enumerable") && !r.enumerable ? E(e, t, r) : (e[t] = r.value, e);
                }
                var a = e("../internals/export"), l = e("../internals/global"), i = e("../internals/descriptors"), U = e("../internals/typed-array-constructors-require-wrappers"), u = e("../internals/array-buffer-view-core"), c = e("../internals/array-buffer"), m = e("../internals/an-instance"), N = e("../internals/create-property-descriptor"), y = e("../internals/create-non-enumerable-property"), F = e("../internals/to-length"), g = e("../internals/to-index"), v = e("../internals/to-offset"), d = e("../internals/to-primitive"), f = e("../internals/has"), B = e("../internals/classof"), b = e("../internals/is-object"), G = e("../internals/object-create"), j = e("../internals/object-set-prototype-of"), V = e("../internals/object-get-own-property-names").f, _ = e("../internals/typed-array-from"), z = e("../internals/array-iteration").forEach, H = e("../internals/set-species"), x = e("../internals/object-define-property"), w = e("../internals/object-get-own-property-descriptor"), S = e("../internals/internal-state"), W = e("../internals/inherit-if-required"), M = S.get, q = S.set, E = x.f, X = w.f, Y = Math.round, T = l.RangeError, C = c.ArrayBuffer, Z = c.DataView, O = u.NATIVE_ARRAY_BUFFER_VIEWS, L = u.TYPED_ARRAY_TAG, k = u.TypedArray, A = u.TypedArrayPrototype, Q = u.aTypedArrayConstructor, P = u.isTypedArray, R = "BYTES_PER_ELEMENT", D = "Wrong length";
                i ? (O || (w.f = n, x.f = s, r(A, "buffer"), r(A, "byteOffset"), r(A, "byteLength"), r(A, "length")), a({
                    target: "Object",
                    stat: !0,
                    forced: !O
                }, {
                    getOwnPropertyDescriptor: n,
                    defineProperty: s
                }), t.exports = function(e, t, n) {
                    function u(e, o) {
                        E(e, o, {
                            get: function() {
                                var e = this, t = o;
                                return (e = M(e)).view[r](t * c + e.byteOffset, !0);
                            },
                            set: function(e) {
                                var t = this, r = o;
                                t = M(t), n && (e = (e = Y(e)) < 0 ? 0 : 255 < e ? 255 : 255 & e), t.view[s](r * c + t.byteOffset, e, !0);
                            },
                            enumerable: !0
                        });
                    }
                    var c = e.match(/\d+$/)[0] / 8, d = e + (n ? "Clamped" : "") + "Array", r = "get" + e, s = "set" + e, i = l[d], f = i, e = f && f.prototype, o = {};
                    O ? U && (f = t(function(e, t, r, o) {
                        return m(e, f, d), W(b(t) ? p(t) ? void 0 !== o ? new i(t, v(r, c), o) : void 0 !== r ? new i(t, v(r, c)) : new i(t) : P(t) ? h(f, t) : _.call(f, t) : new i(g(t)), e, f);
                    }), j && j(f, k), z(V(i), function(e) {
                        e in f || y(f, e, i[e]);
                    }), f.prototype = e) : (f = t(function(e, t, r, o) {
                        m(e, f, d);
                        var n, s, i = 0, a = 0;
                        if (b(t)) {
                            if (!p(t)) return P(t) ? h(f, t) : _.call(f, t);
                            var l = t, a = v(r, c), r = t.byteLength;
                            if (void 0 === o) {
                                if (r % c) throw T(D);
                                if ((n = r - a) < 0) throw T(D);
                            } else if (r < (n = F(o) * c) + a) throw T(D);
                            s = n / c;
                        } else s = g(t), l = new C(n = s * c);
                        for(q(e, {
                            buffer: l,
                            byteOffset: a,
                            byteLength: n,
                            length: s,
                            view: new Z(l)
                        }); i < s;)u(e, i++);
                    }), j && j(f, k), e = f.prototype = G(A)), e.constructor !== f && y(e, "constructor", f), L && y(e, L, d), o[d] = f, a({
                        global: !0,
                        forced: f != i,
                        sham: !O
                    }, o), R in f || y(f, R, c), R in e || y(e, R, c), H(d);
                }) : t.exports = function() {};
            },
            {
                "../internals/an-instance": 9,
                "../internals/array-buffer": 13,
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19,
                "../internals/classof": 29,
                "../internals/create-non-enumerable-property": 38,
                "../internals/create-property-descriptor": 39,
                "../internals/descriptors": 43,
                "../internals/export": 50,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/inherit-if-required": 67,
                "../internals/internal-state": 70,
                "../internals/is-object": 74,
                "../internals/object-create": 90,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/object-get-own-property-names": 95,
                "../internals/object-set-prototype-of": 101,
                "../internals/set-species": 116,
                "../internals/to-index": 131,
                "../internals/to-length": 134,
                "../internals/to-offset": 136,
                "../internals/to-primitive": 138,
                "../internals/typed-array-constructors-require-wrappers": 141,
                "../internals/typed-array-from": 142
            }
        ],
        141: [
            function(e, t, r) {
                var o = e("../internals/global"), n = e("../internals/fails"), s = e("../internals/check-correctness-of-iteration"), e = e("../internals/array-buffer-view-core").NATIVE_ARRAY_BUFFER_VIEWS, i = o.ArrayBuffer, a = o.Int8Array;
                t.exports = !e || !n(function() {
                    a(1);
                }) || !n(function() {
                    new a(-1);
                }) || !s(function(e) {
                    new a, new a(null), new a(1.5), new a(e);
                }, !0) || n(function() {
                    return 1 !== new a(new i(2), 1, void 0).length;
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/check-correctness-of-iteration": 27,
                "../internals/fails": 51,
                "../internals/global": 59
            }
        ],
        142: [
            function(e, t, r) {
                var f = e("../internals/to-object"), h = e("../internals/to-length"), p = e("../internals/get-iterator-method"), m = e("../internals/is-array-iterator-method"), y = e("../internals/function-bind-context"), g = e("../internals/array-buffer-view-core").aTypedArrayConstructor;
                t.exports = function(e) {
                    var t, r, o, n, s, i, a = f(e), l = arguments.length, u = 1 < l ? arguments[1] : void 0, c = void 0 !== u, d = p(a);
                    if (null != d && !m(d)) for(i = (s = d.call(a)).next, a = []; !(n = i.call(s)).done;)a.push(n.value);
                    for(c && 2 < l && (u = y(u, arguments[2], 2)), r = h(a.length), o = new (g(this))(r), t = 0; t < r; t++)o[t] = c ? u(a[t], t) : a[t];
                    return o;
                };
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/function-bind-context": 54,
                "../internals/get-iterator-method": 57,
                "../internals/is-array-iterator-method": 71,
                "../internals/to-length": 134,
                "../internals/to-object": 135
            }
        ],
        143: [
            function(e, t, r) {
                var o = 0, n = Math.random();
                t.exports = function(e) {
                    return "Symbol(" + String(void 0 === e ? "" : e) + ")_" + (++o + n).toString(36);
                };
            },
            {}
        ],
        144: [
            function(e, t, r) {
                e = e("../internals/native-symbol");
                t.exports = e && !Symbol.sham && "symbol" == typeof Symbol.iterator;
            },
            {
                "../internals/native-symbol": 83
            }
        ],
        145: [
            function(e, t, r) {
                e = e("../internals/well-known-symbol");
                r.f = e;
            },
            {
                "../internals/well-known-symbol": 146
            }
        ],
        146: [
            function(e, t, r) {
                var o = e("../internals/global"), n = e("../internals/shared"), s = e("../internals/has"), i = e("../internals/uid"), a = e("../internals/native-symbol"), e = e("../internals/use-symbol-as-uid"), l = n("wks"), u = o.Symbol, c = e ? u : u && u.withoutSetter || i;
                t.exports = function(e) {
                    return s(l, e) || (a && s(u, e) ? l[e] = u[e] : l[e] = c("Symbol." + e)), l[e];
                };
            },
            {
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/native-symbol": 83,
                "../internals/shared": 120,
                "../internals/uid": 143,
                "../internals/use-symbol-as-uid": 144
            }
        ],
        147: [
            function(e, t, r) {
                t.exports = "	\n\v\f\r \xa0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
            },
            {}
        ],
        148: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/global"), s = e("../internals/array-buffer"), e = e("../internals/set-species"), i = "ArrayBuffer", s = s[i];
                o({
                    global: !0,
                    forced: n[i] !== s
                }, {
                    ArrayBuffer: s
                }), e(i);
            },
            {
                "../internals/array-buffer": 13,
                "../internals/export": 50,
                "../internals/global": 59,
                "../internals/set-species": 116
            }
        ],
        149: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/fails"), d = e("../internals/is-array"), f = e("../internals/is-object"), h = e("../internals/to-object"), p = e("../internals/to-length"), m = e("../internals/create-property"), y = e("../internals/array-species-create"), s = e("../internals/array-method-has-species-support"), i = e("../internals/well-known-symbol"), e = e("../internals/engine-v8-version"), g = i("isConcatSpreadable"), v = 9007199254740991, b = "Maximum allowed index exceeded", i = 51 <= e || !n(function() {
                    var e = [];
                    return e[g] = !1, e.concat()[0] !== e;
                }), e = s("concat");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !i || !e
                }, {
                    concat: function(e) {
                        for(var t, r, o, n, s, i = h(this), a = y(i, 0), l = 0, u = -1, c = arguments.length; u < c; u++)if (s = void 0, !f(n = o = -1 === u ? i : arguments[u]) || (void 0 !== (s = n[g]) ? !s : !d(n))) {
                            if (v <= l) throw TypeError(b);
                            m(a, l++, o);
                        } else {
                            if (r = p(o.length), v < l + r) throw TypeError(b);
                            for(t = 0; t < r; t++, l++)t in o && m(a, l, o[t]);
                        }
                        return a.length = l, a;
                    }
                });
            },
            {
                "../internals/array-method-has-species-support": 21,
                "../internals/array-species-create": 25,
                "../internals/create-property": 40,
                "../internals/engine-v8-version": 48,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/is-array": 72,
                "../internals/is-object": 74,
                "../internals/to-length": 134,
                "../internals/to-object": 135,
                "../internals/well-known-symbol": 146
            }
        ],
        150: [
            function(e, t, r) {
                var o = e("../internals/export"), n = e("../internals/array-copy-within"), e = e("../internals/add-to-unscopables");
                o({
                    target: "Array",
                    proto: !0
                }, {
                    copyWithin: n
                }), e("copyWithin");
            },
            {
                "../internals/add-to-unscopables": 7,
                "../internals/array-copy-within": 14,
                "../internals/export": 50
            }
        ],
        151: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/array-iteration").every, s = e("../internals/array-method-is-strict"), e = e("../internals/array-method-uses-to-length"), s = s("every"), e = e("every");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !s || !e
                }, {
                    every: function(e) {
                        return n(this, e, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/array-iteration": 19,
                "../internals/array-method-is-strict": 22,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        152: [
            function(e, t, r) {
                var o = e("../internals/export"), n = e("../internals/array-fill"), e = e("../internals/add-to-unscopables");
                o({
                    target: "Array",
                    proto: !0
                }, {
                    fill: n
                }), e("fill");
            },
            {
                "../internals/add-to-unscopables": 7,
                "../internals/array-fill": 15,
                "../internals/export": 50
            }
        ],
        153: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/array-iteration").filter, s = e("../internals/array-method-has-species-support"), e = e("../internals/array-method-uses-to-length"), s = s("filter"), e = e("filter");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !s || !e
                }, {
                    filter: function(e) {
                        return n(this, e, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/array-iteration": 19,
                "../internals/array-method-has-species-support": 21,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        154: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), e = e("../internals/array-for-each");
                o({
                    target: "Array",
                    proto: !0,
                    forced: [].forEach != e
                }, {
                    forEach: e
                });
            },
            {
                "../internals/array-for-each": 16,
                "../internals/export": 50
            }
        ],
        155: [
            function(e, t, r) {
                var o = e("../internals/export"), n = e("../internals/array-from");
                o({
                    target: "Array",
                    stat: !0,
                    forced: !e("../internals/check-correctness-of-iteration")(function(e) {
                        Array.from(e);
                    })
                }, {
                    from: n
                });
            },
            {
                "../internals/array-from": 17,
                "../internals/check-correctness-of-iteration": 27,
                "../internals/export": 50
            }
        ],
        156: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/array-includes").includes, s = e("../internals/add-to-unscopables");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !e("../internals/array-method-uses-to-length")("indexOf", {
                        ACCESSORS: !0,
                        1: 0
                    })
                }, {
                    includes: function(e) {
                        return n(this, e, 1 < arguments.length ? arguments[1] : void 0);
                    }
                }), s("includes");
            },
            {
                "../internals/add-to-unscopables": 7,
                "../internals/array-includes": 18,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        157: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/array-includes").indexOf, s = e("../internals/array-method-is-strict"), e = e("../internals/array-method-uses-to-length"), i = [].indexOf, a = !!i && 1 / [
                    1
                ].indexOf(1, -0) < 0, s = s("indexOf"), e = e("indexOf", {
                    ACCESSORS: !0,
                    1: 0
                });
                o({
                    target: "Array",
                    proto: !0,
                    forced: a || !s || !e
                }, {
                    indexOf: function(e) {
                        return a ? i.apply(this, arguments) || 0 : n(this, e, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/array-includes": 18,
                "../internals/array-method-is-strict": 22,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        158: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/to-indexed-object"), n = e("../internals/add-to-unscopables"), s = e("../internals/iterators"), i = e("../internals/internal-state"), e = e("../internals/define-iterator"), a = "Array Iterator", l = i.set, u = i.getterFor(a);
                t.exports = e(Array, "Array", function(e, t) {
                    l(this, {
                        type: a,
                        target: o(e),
                        index: 0,
                        kind: t
                    });
                }, function() {
                    var e = u(this), t = e.target, r = e.kind, o = e.index++;
                    return !t || o >= t.length ? {
                        value: e.target = void 0,
                        done: !0
                    } : "keys" == r ? {
                        value: o,
                        done: !1
                    } : "values" == r ? {
                        value: t[o],
                        done: !1
                    } : {
                        value: [
                            o,
                            t[o]
                        ],
                        done: !1
                    };
                }, "values"), s.Arguments = s.Array, n("keys"), n("values"), n("entries");
            },
            {
                "../internals/add-to-unscopables": 7,
                "../internals/define-iterator": 41,
                "../internals/internal-state": 70,
                "../internals/iterators": 79,
                "../internals/to-indexed-object": 132
            }
        ],
        159: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/indexed-object"), s = e("../internals/to-indexed-object"), e = e("../internals/array-method-is-strict"), i = [].join, n = n != Object, e = e("join", ",");
                o({
                    target: "Array",
                    proto: !0,
                    forced: n || !e
                }, {
                    join: function(e) {
                        return i.call(s(this), void 0 === e ? "," : e);
                    }
                });
            },
            {
                "../internals/array-method-is-strict": 22,
                "../internals/export": 50,
                "../internals/indexed-object": 66,
                "../internals/to-indexed-object": 132
            }
        ],
        160: [
            function(e, t, r) {
                var o = e("../internals/export"), e = e("../internals/array-last-index-of");
                o({
                    target: "Array",
                    proto: !0,
                    forced: e !== [].lastIndexOf
                }, {
                    lastIndexOf: e
                });
            },
            {
                "../internals/array-last-index-of": 20,
                "../internals/export": 50
            }
        ],
        161: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/array-iteration").map, s = e("../internals/array-method-has-species-support"), e = e("../internals/array-method-uses-to-length"), s = s("map"), e = e("map");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !s || !e
                }, {
                    map: function(e) {
                        return n(this, e, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/array-iteration": 19,
                "../internals/array-method-has-species-support": 21,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        162: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), u = e("../internals/is-object"), c = e("../internals/is-array"), d = e("../internals/to-absolute-index"), f = e("../internals/to-length"), h = e("../internals/to-indexed-object"), p = e("../internals/create-property"), n = e("../internals/well-known-symbol"), s = e("../internals/array-method-has-species-support"), e = e("../internals/array-method-uses-to-length"), s = s("slice"), e = e("slice", {
                    ACCESSORS: !0,
                    0: 0,
                    1: 2
                }), m = n("species"), y = [].slice, g = Math.max;
                o({
                    target: "Array",
                    proto: !0,
                    forced: !s || !e
                }, {
                    slice: function(e, t) {
                        var r, o, n, s = h(this), i = f(s.length), a = d(e, i), l = d(void 0 === t ? i : t, i);
                        if (c(s) && ((r = "function" == typeof (r = s.constructor) && (r === Array || c(r.prototype)) || u(r) && null === (r = r[m]) ? void 0 : r) === Array || void 0 === r)) return y.call(s, a, l);
                        for(o = new (void 0 === r ? Array : r)(g(l - a, 0)), n = 0; a < l; a++, n++)a in s && p(o, n, s[a]);
                        return o.length = n, o;
                    }
                });
            },
            {
                "../internals/array-method-has-species-support": 21,
                "../internals/array-method-uses-to-length": 23,
                "../internals/create-property": 40,
                "../internals/export": 50,
                "../internals/is-array": 72,
                "../internals/is-object": 74,
                "../internals/to-absolute-index": 130,
                "../internals/to-indexed-object": 132,
                "../internals/to-length": 134,
                "../internals/well-known-symbol": 146
            }
        ],
        163: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/array-iteration").some, s = e("../internals/array-method-is-strict"), e = e("../internals/array-method-uses-to-length"), s = s("some"), e = e("some");
                o({
                    target: "Array",
                    proto: !0,
                    forced: !s || !e
                }, {
                    some: function(e) {
                        return n(this, e, 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/array-iteration": 19,
                "../internals/array-method-is-strict": 22,
                "../internals/array-method-uses-to-length": 23,
                "../internals/export": 50
            }
        ],
        164: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), d = e("../internals/to-absolute-index"), f = e("../internals/to-integer"), h = e("../internals/to-length"), p = e("../internals/to-object"), m = e("../internals/array-species-create"), y = e("../internals/create-property"), n = e("../internals/array-method-has-species-support"), e = e("../internals/array-method-uses-to-length"), n = n("splice"), e = e("splice", {
                    ACCESSORS: !0,
                    0: 0,
                    1: 2
                }), g = Math.max, v = Math.min;
                o({
                    target: "Array",
                    proto: !0,
                    forced: !n || !e
                }, {
                    splice: function(e, t) {
                        var r, o, n, s, i, a, l = p(this), u = h(l.length), c = d(e, u), e = arguments.length;
                        if (0 === e ? r = o = 0 : o = 1 === e ? (r = 0, u - c) : (r = e - 2, v(g(f(t), 0), u - c)), 9007199254740991 < u + r - o) throw TypeError("Maximum allowed length exceeded");
                        for(n = m(l, o), s = 0; s < o; s++)(i = c + s) in l && y(n, s, l[i]);
                        if (r < (n.length = o)) {
                            for(s = c; s < u - o; s++)a = s + r, (i = s + o) in l ? l[a] = l[i] : delete l[a];
                            for(s = u; u - o + r < s; s--)delete l[s - 1];
                        } else if (o < r) for(s = u - o; c < s; s--)a = s + r - 1, (i = s + o - 1) in l ? l[a] = l[i] : delete l[a];
                        for(s = 0; s < r; s++)l[s + c] = arguments[s + 2];
                        return l.length = u - o + r, n;
                    }
                });
            },
            {
                "../internals/array-method-has-species-support": 21,
                "../internals/array-method-uses-to-length": 23,
                "../internals/array-species-create": 25,
                "../internals/create-property": 40,
                "../internals/export": 50,
                "../internals/to-absolute-index": 130,
                "../internals/to-integer": 133,
                "../internals/to-length": 134,
                "../internals/to-object": 135
            }
        ],
        165: [
            function(e, t, r) {
                var o = e("../internals/descriptors"), e = e("../internals/object-define-property").f, n = Function.prototype, s = n.toString, i = /^\s*function ([^ (]*)/;
                !o || "name" in n || e(n, "name", {
                    configurable: !0,
                    get: function() {
                        try {
                            return s.call(this).match(i)[1];
                        } catch (e) {
                            return "";
                        }
                    }
                });
            },
            {
                "../internals/descriptors": 43,
                "../internals/object-define-property": 92
            }
        ],
        166: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/collection"), e = e("../internals/collection-strong");
                t.exports = o("Map", function(e) {
                    return function() {
                        return e(this, arguments.length ? arguments[0] : void 0);
                    };
                }, e);
            },
            {
                "../internals/collection": 32,
                "../internals/collection-strong": 30
            }
        ],
        167: [
            function(e, t, r) {
                var e = e("../internals/export"), o = Math.hypot, l = Math.abs, u = Math.sqrt;
                e({
                    target: "Math",
                    stat: !0,
                    forced: !!o && o(1 / 0, NaN) !== 1 / 0
                }, {
                    hypot: function(e, t) {
                        for(var r, o, n = 0, s = 0, i = arguments.length, a = 0; s < i;)a < (r = l(arguments[s++])) ? (n = n * (o = a / r) * o + 1, a = r) : n += 0 < r ? (o = r / a) * o : r;
                        return a === 1 / 0 ? 1 / 0 : a * u(n);
                    }
                });
            },
            {
                "../internals/export": 50
            }
        ],
        168: [
            function(e, t, r) {
                e("../internals/export")({
                    target: "Math",
                    stat: !0
                }, {
                    sign: e("../internals/math-sign")
                });
            },
            {
                "../internals/export": 50,
                "../internals/math-sign": 80
            }
        ],
        169: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    var t, r, o, n, s, i, a, l = d(e, !1);
                    if ("string" == typeof l && 2 < l.length) {
                        if (43 === (e = (l = g(l)).charCodeAt(0)) || 45 === e) {
                            if (88 === (t = l.charCodeAt(2)) || 120 === t) return NaN;
                        } else if (48 === e) {
                            switch(l.charCodeAt(1)){
                                case 66:
                                case 98:
                                    r = 2, o = 49;
                                    break;
                                case 79:
                                case 111:
                                    r = 8, o = 55;
                                    break;
                                default:
                                    return +l;
                            }
                            for(s = (n = l.slice(2)).length, i = 0; i < s; i++)if ((a = n.charCodeAt(i)) < 48 || o < a) return NaN;
                            return parseInt(n, r);
                        }
                    }
                    return +l;
                }
                var n = e("../internals/descriptors"), s = e("../internals/global"), i = e("../internals/is-forced"), a = e("../internals/redefine"), l = e("../internals/has"), u = e("../internals/classof-raw"), c = e("../internals/inherit-if-required"), d = e("../internals/to-primitive"), f = e("../internals/fails"), h = e("../internals/object-create"), p = e("../internals/object-get-own-property-names").f, m = e("../internals/object-get-own-property-descriptor").f, y = e("../internals/object-define-property").f, g = e("../internals/string-trim").trim, v = "Number", b = s[v], j = b.prototype, _ = u(h(j)) == v;
                if (i(v, !b(" 0o1") || !b("0b1") || b("+0x1"))) {
                    for(var x, w = function(e) {
                        var e = arguments.length < 1 ? 0 : e, t = this;
                        return t instanceof w && (_ ? f(function() {
                            j.valueOf.call(t);
                        }) : u(t) != v) ? c(new b(o(e)), t, w) : o(e);
                    }, S = n ? p(b) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), M = 0; S.length > M; M++)l(b, x = S[M]) && !l(w, x) && y(w, x, m(b, x));
                    (w.prototype = j).constructor = w, a(s, v, w);
                }
            },
            {
                "../internals/classof-raw": 28,
                "../internals/descriptors": 43,
                "../internals/fails": 51,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/inherit-if-required": 67,
                "../internals/is-forced": 73,
                "../internals/object-create": 90,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/object-get-own-property-names": 95,
                "../internals/redefine": 108,
                "../internals/string-trim": 127,
                "../internals/to-primitive": 138
            }
        ],
        170: [
            function(e, t, r) {
                e("../internals/export")({
                    target: "Number",
                    stat: !0
                }, {
                    isFinite: e("../internals/number-is-finite")
                });
            },
            {
                "../internals/export": 50,
                "../internals/number-is-finite": 88
            }
        ],
        171: [
            function(e, t, r) {
                "use strict";
                function c(e, t, r) {
                    return 0 === t ? r : t % 2 == 1 ? c(e, t - 1, r * e) : c(e * e, t / 2, r);
                }
                var o = e("../internals/export"), d = e("../internals/to-integer"), f = e("../internals/this-number-value"), h = e("../internals/string-repeat"), e = e("../internals/fails"), n = 1..toFixed, p = Math.floor;
                o({
                    target: "Number",
                    proto: !0,
                    forced: n && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== 0xde0b6b3a7640080.toFixed(0)) || !e(function() {
                        n.call({});
                    })
                }, {
                    toFixed: function(e) {
                        function t(e, t) {
                            for(var r = -1, o = t; ++r < 6;)o += e * a[r], a[r] = o % 1e7, o = p(o / 1e7);
                        }
                        function r(e) {
                            for(var t = 6, r = 0; 0 <= --t;)r += a[t], a[t] = p(r / e), r = r % e * 1e7;
                        }
                        function o() {
                            for(var e, t = 6, r = ""; 0 <= --t;)"" === r && 0 !== t && 0 === a[t] || (e = String(a[t]), r = "" === r ? e : r + h.call("0", 7 - e.length) + e);
                            return r;
                        }
                        var n, s, i = f(this), e = d(e), a = [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ], l = "", u = "0";
                        if (e < 0 || 20 < e) throw RangeError("Incorrect fraction digits");
                        if (i != i) return "NaN";
                        if (i <= -1000000000000000000000 || 1e21 <= i) return String(i);
                        if (i < 0 && (l = "-", i = -i), 1e-21 < i) {
                            if (i = (n = function(e) {
                                for(var t = 0, r = e; 4096 <= r;)t += 12, r /= 4096;
                                for(; 2 <= r;)t += 1, r /= 2;
                                return t;
                            }(i * c(2, 69, 1)) - 69) < 0 ? i * c(2, -n, 1) : i / c(2, n, 1), i *= 4503599627370496, 0 < (n = 52 - n)) {
                                for(t(0, i), s = e; 7 <= s;)t(1e7, 0), s -= 7;
                                for(t(c(10, s, 1), 0), s = n - 1; 23 <= s;)r(8388608), s -= 23;
                                r(1 << s), t(1, 1), r(2), u = o();
                            } else t(0, i), t(1 << -n, 0), u = o() + h.call("0", e);
                        }
                        return u = 0 < e ? l + ((i = u.length) <= e ? "0." + h.call("0", e - i) + u : u.slice(0, i - e) + "." + u.slice(i - e)) : l + u;
                    }
                });
            },
            {
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/string-repeat": 125,
                "../internals/this-number-value": 129,
                "../internals/to-integer": 133
            }
        ],
        172: [
            function(e, t, r) {
                var o = e("../internals/export"), e = e("../internals/object-assign");
                o({
                    target: "Object",
                    stat: !0,
                    forced: Object.assign !== e
                }, {
                    assign: e
                });
            },
            {
                "../internals/export": 50,
                "../internals/object-assign": 89
            }
        ],
        173: [
            function(e, t, r) {
                var o = e("../internals/export"), n = e("../internals/fails"), s = e("../internals/to-indexed-object"), i = e("../internals/object-get-own-property-descriptor").f, e = e("../internals/descriptors"), n = n(function() {
                    i(1);
                });
                o({
                    target: "Object",
                    stat: !0,
                    forced: !e || n,
                    sham: !e
                }, {
                    getOwnPropertyDescriptor: function(e, t) {
                        return i(s(e), t);
                    }
                });
            },
            {
                "../internals/descriptors": 43,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/to-indexed-object": 132
            }
        ],
        174: [
            function(e, t, r) {
                var o = e("../internals/export"), n = e("../internals/fails"), e = e("../internals/object-get-own-property-names-external").f;
                o({
                    target: "Object",
                    stat: !0,
                    forced: n(function() {
                        return !Object.getOwnPropertyNames(1);
                    })
                }, {
                    getOwnPropertyNames: e
                });
            },
            {
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/object-get-own-property-names-external": 94
            }
        ],
        175: [
            function(e, t, r) {
                var o = e("../internals/export"), n = e("../internals/fails"), s = e("../internals/to-object"), i = e("../internals/object-get-prototype-of"), e = e("../internals/correct-prototype-getter");
                o({
                    target: "Object",
                    stat: !0,
                    forced: n(function() {
                        i(1);
                    }),
                    sham: !e
                }, {
                    getPrototypeOf: function(e) {
                        return i(s(e));
                    }
                });
            },
            {
                "../internals/correct-prototype-getter": 35,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/object-get-prototype-of": 97,
                "../internals/to-object": 135
            }
        ],
        176: [
            function(e, t, r) {
                var o = e("../internals/export"), n = e("../internals/to-object"), s = e("../internals/object-keys");
                o({
                    target: "Object",
                    stat: !0,
                    forced: e("../internals/fails")(function() {
                        s(1);
                    })
                }, {
                    keys: function(e) {
                        return s(n(e));
                    }
                });
            },
            {
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/object-keys": 99,
                "../internals/to-object": 135
            }
        ],
        177: [
            function(e, t, r) {
                var o = e("../internals/to-string-tag-support"), n = e("../internals/redefine"), e = e("../internals/object-to-string");
                o || n(Object.prototype, "toString", e, {
                    unsafe: !0
                });
            },
            {
                "../internals/object-to-string": 102,
                "../internals/redefine": 108,
                "../internals/to-string-tag-support": 139
            }
        ],
        178: [
            function(e, I, U) {
                "use strict";
                var r, t, o, n, s = e("../internals/export"), i = e("../internals/is-pure"), g = e("../internals/global"), a = e("../internals/get-built-in"), l = e("../internals/native-promise-constructor"), N = e("../internals/redefine"), F = e("../internals/redefine-all"), B = e("../internals/set-to-string-tag"), G = e("../internals/set-species"), V = e("../internals/is-object"), c = e("../internals/a-function"), z = e("../internals/an-instance"), H = e("../internals/classof-raw"), W = e("../internals/inspect-source"), d = e("../internals/iterate"), q = e("../internals/check-correctness-of-iteration"), X = e("../internals/species-constructor"), v = e("../internals/task").set, u = e("../internals/microtask"), f = e("../internals/promise-resolve"), Y = e("../internals/host-report-errors"), h = e("../internals/new-promise-capability"), b = e("../internals/perform"), p = e("../internals/internal-state"), Z = e("../internals/is-forced"), m = e("../internals/well-known-symbol"), y = e("../internals/engine-v8-version"), Q = m("species"), j = "Promise", _ = p.get, K = p.set, J = p.getterFor(j), x = l, w = g.TypeError, S = g.document, M = g.process, E = a("fetch"), T = h.f, $ = T, C = "process" == H(M), ee = !!(S && S.createEvent && g.dispatchEvent), O = "unhandledrejection", te = "rejectionhandled", L = 1, re = 2, k = 1, oe = 2, e = Z(j, function() {
                    var e, t;
                    if (!(W(x) !== String(x))) {
                        if (66 === y) return !0;
                        if (!C && "function" != typeof PromiseRejectionEvent) return !0;
                    }
                    return !(!i || x.prototype.finally) || !(51 <= y && /native code/.test(x)) && (t = function(e) {
                        e(function() {}, function() {});
                    }, ((e = x.resolve(1)).constructor = {})[Q] = t, !(e.then(function() {}) instanceof t));
                }), m = e || !q(function(e) {
                    x.all(e).catch(function() {});
                }), ne = function(e) {
                    var t;
                    return !(!V(e) || "function" != typeof (t = e.then)) && t;
                }, A = function(h, p, m) {
                    var y;
                    p.notified || (p.notified = !0, y = p.reactions, u(function() {
                        for(var r, o, e = p.value, t = p.state == L, n = 0; y.length > n;){
                            var s, i, a, l = y[n++], u = t ? l.ok : l.fail, c = l.resolve, d = l.reject, f = l.domain;
                            try {
                                u ? (t || (p.rejection === oe && function(e, t) {
                                    v.call(g, function() {
                                        if (C) M.emit("rejectionHandled", e);
                                        else se(te, e, t.value);
                                    });
                                }(h, p), p.rejection = k), !0 === u ? s = e : (f && f.enter(), s = u(e), f && (f.exit(), a = !0)), s === l.promise ? d(w("Promise-chain cycle")) : (i = ne(s)) ? i.call(s, c, d) : c(s)) : d(e);
                            } catch (e) {
                                f && !a && f.exit(), d(e);
                            }
                        }
                        p.reactions = [], p.notified = !1, m && !p.rejection && (r = h, o = p, v.call(g, function() {
                            var e = o.value, t = ie(o);
                            if (t && (t = b(function() {
                                C ? M.emit("unhandledRejection", e, r) : se(O, r, e);
                            }), o.rejection = C || ie(o) ? oe : k, t.error)) throw t.value;
                        }));
                    }));
                }, se = function(e, t, r) {
                    var o;
                    ee ? ((o = S.createEvent("Event")).promise = t, o.reason = r, o.initEvent(e, !1, !0), g.dispatchEvent(o)) : o = {
                        promise: t,
                        reason: r
                    }, (t = g["on" + e]) ? t(o) : e === O && Y("Unhandled promise rejection", r);
                }, ie = function(e) {
                    return e.rejection !== k && !e.parent;
                }, P = function(t, r, o, n) {
                    return function(e) {
                        t(r, o, e, n);
                    };
                }, R = function(e, t, r, o) {
                    t.done || (t.done = !0, (t = o ? o : t).value = r, t.state = re, A(e, t, !0));
                }, D = function(r, o, e, t) {
                    if (!o.done) {
                        o.done = !0, t && (o = t);
                        try {
                            if (r === e) throw w("Promise can't be resolved itself");
                            var n = ne(e);
                            n ? u(function() {
                                var t = {
                                    done: !1
                                };
                                try {
                                    n.call(e, P(D, r, t, o), P(R, r, t, o));
                                } catch (e) {
                                    R(r, t, e, o);
                                }
                            }) : (o.value = e, o.state = L, A(r, o, !1));
                        } catch (e) {
                            R(r, {
                                done: !1
                            }, e, o);
                        }
                    }
                };
                e && (x = function(e) {
                    z(this, x, j), c(e), r.call(this);
                    var t = _(this);
                    try {
                        e(P(D, this, t), P(R, this, t));
                    } catch (e) {
                        R(this, t, e);
                    }
                }, (r = function(e) {
                    K(this, {
                        type: j,
                        done: !1,
                        notified: !1,
                        parent: !1,
                        reactions: [],
                        rejection: !1,
                        state: 0,
                        value: void 0
                    });
                }).prototype = F(x.prototype, {
                    then: function(e, t) {
                        var r = J(this), o = T(X(this, x));
                        return o.ok = "function" != typeof e || e, o.fail = "function" == typeof t && t, o.domain = C ? M.domain : void 0, r.parent = !0, r.reactions.push(o), 0 != r.state && A(this, r, !1), o.promise;
                    },
                    catch: function(e) {
                        return this.then(void 0, e);
                    }
                }), t = function() {
                    var e = new r, t = _(e);
                    this.promise = e, this.resolve = P(D, e, t), this.reject = P(R, e, t);
                }, h.f = T = function(e) {
                    return e === x || e === o ? new t : $(e);
                }, i || "function" != typeof l || (n = l.prototype.then, N(l.prototype, "then", function(e, t) {
                    var r = this;
                    return new x(function(e, t) {
                        n.call(r, e, t);
                    }).then(e, t);
                }, {
                    unsafe: !0
                }), "function" == typeof E && s({
                    global: !0,
                    enumerable: !0,
                    forced: !0
                }, {
                    fetch: function(e) {
                        return f(x, E.apply(g, arguments));
                    }
                }))), s({
                    global: !0,
                    wrap: !0,
                    forced: e
                }, {
                    Promise: x
                }), B(x, j, !1, !0), G(j), o = a(j), s({
                    target: j,
                    stat: !0,
                    forced: e
                }, {
                    reject: function(e) {
                        var t = T(this);
                        return t.reject.call(void 0, e), t.promise;
                    }
                }), s({
                    target: j,
                    stat: !0,
                    forced: i || e
                }, {
                    resolve: function(e) {
                        return f(i && this === o ? x : this, e);
                    }
                }), s({
                    target: j,
                    stat: !0,
                    forced: m
                }, {
                    all: function(e) {
                        var a = this, t = T(a), l = t.resolve, u = t.reject, r = b(function() {
                            var o = c(a.resolve), n = [], s = 0, i = 1;
                            d(e, function(e) {
                                var t = s++, r = !1;
                                n.push(void 0), i++, o.call(a, e).then(function(e) {
                                    r || (r = !0, n[t] = e, --i || l(n));
                                }, u);
                            }), --i || l(n);
                        });
                        return r.error && u(r.value), t.promise;
                    },
                    race: function(e) {
                        var r = this, o = T(r), n = o.reject, t = b(function() {
                            var t = c(r.resolve);
                            d(e, function(e) {
                                t.call(r, e).then(o.resolve, n);
                            });
                        });
                        return t.error && n(t.value), o.promise;
                    }
                });
            },
            {
                "../internals/a-function": 5,
                "../internals/an-instance": 9,
                "../internals/check-correctness-of-iteration": 27,
                "../internals/classof-raw": 28,
                "../internals/engine-v8-version": 48,
                "../internals/export": 50,
                "../internals/get-built-in": 56,
                "../internals/global": 59,
                "../internals/host-report-errors": 62,
                "../internals/inspect-source": 68,
                "../internals/internal-state": 70,
                "../internals/is-forced": 73,
                "../internals/is-object": 74,
                "../internals/is-pure": 75,
                "../internals/iterate": 77,
                "../internals/microtask": 81,
                "../internals/native-promise-constructor": 82,
                "../internals/new-promise-capability": 86,
                "../internals/perform": 105,
                "../internals/promise-resolve": 106,
                "../internals/redefine": 108,
                "../internals/redefine-all": 107,
                "../internals/set-species": 116,
                "../internals/set-to-string-tag": 117,
                "../internals/species-constructor": 121,
                "../internals/task": 128,
                "../internals/well-known-symbol": 146
            }
        ],
        179: [
            function(e, t, r) {
                var o = e("../internals/export"), n = e("../internals/get-built-in"), s = e("../internals/a-function"), i = e("../internals/an-object"), a = e("../internals/is-object"), l = e("../internals/object-create"), u = e("../internals/function-bind"), e = e("../internals/fails"), c = n("Reflect", "construct"), d = e(function() {
                    function e() {}
                    return !(c(function() {}, [], e) instanceof e);
                }), f = !e(function() {
                    c(function() {});
                }), n = d || f;
                o({
                    target: "Reflect",
                    stat: !0,
                    forced: n,
                    sham: n
                }, {
                    construct: function(e, t) {
                        s(e), i(t);
                        var r = arguments.length < 3 ? e : s(arguments[2]);
                        if (f && !d) return c(e, t, r);
                        if (e == r) {
                            switch(t.length){
                                case 0:
                                    return new e;
                                case 1:
                                    return new e(t[0]);
                                case 2:
                                    return new e(t[0], t[1]);
                                case 3:
                                    return new e(t[0], t[1], t[2]);
                                case 4:
                                    return new e(t[0], t[1], t[2], t[3]);
                            }
                            var o = [
                                null
                            ];
                            return o.push.apply(o, t), new (u.apply(e, o));
                        }
                        o = r.prototype, r = l(a(o) ? o : Object.prototype), o = Function.apply.call(e, r, t);
                        return a(o) ? o : r;
                    }
                });
            },
            {
                "../internals/a-function": 5,
                "../internals/an-object": 10,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/function-bind": 55,
                "../internals/get-built-in": 56,
                "../internals/is-object": 74,
                "../internals/object-create": 90
            }
        ],
        180: [
            function(e, t, r) {
                var o = e("../internals/descriptors"), n = e("../internals/global"), s = e("../internals/is-forced"), i = e("../internals/inherit-if-required"), a = e("../internals/object-define-property").f, l = e("../internals/object-get-own-property-names").f, u = e("../internals/is-regexp"), c = e("../internals/regexp-flags"), d = e("../internals/regexp-sticky-helpers"), f = e("../internals/redefine"), h = e("../internals/fails"), p = e("../internals/internal-state").set, m = e("../internals/set-species"), y = e("../internals/well-known-symbol")("match"), g = n.RegExp, v = g.prototype, b = /a/g, j = /a/g, _ = new g(b) !== b, x = d.UNSUPPORTED_Y;
                if (o && s("RegExp", !_ || x || h(function() {
                    return j[y] = !1, g(b) != b || g(j) == j || "/a/i" != g(b, "i");
                }))) {
                    for(var w = function(e, t) {
                        var r, o = this instanceof w, n = u(e), s = void 0 === t;
                        if (!o && n && e.constructor === w && s) return e;
                        _ ? n && !s && (e = e.source) : e instanceof w && (s && (t = c.call(e)), e = e.source), x && (r = !!t && -1 < t.indexOf("y")) && (t = t.replace(/y/g, ""));
                        n = i(_ ? new g(e, t) : g(e, t), o ? this : v, w);
                        return x && r && p(n, {
                            sticky: r
                        }), n;
                    }, S = l(g), M = 0; S.length > M;)!function(t) {
                        t in w || a(w, t, {
                            configurable: !0,
                            get: function() {
                                return g[t];
                            },
                            set: function(e) {
                                g[t] = e;
                            }
                        });
                    }(S[M++]);
                    (v.constructor = w).prototype = v, f(n, "RegExp", w);
                }
                m("RegExp");
            },
            {
                "../internals/descriptors": 43,
                "../internals/fails": 51,
                "../internals/global": 59,
                "../internals/inherit-if-required": 67,
                "../internals/internal-state": 70,
                "../internals/is-forced": 73,
                "../internals/is-regexp": 76,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-names": 95,
                "../internals/redefine": 108,
                "../internals/regexp-flags": 111,
                "../internals/regexp-sticky-helpers": 112,
                "../internals/set-species": 116,
                "../internals/well-known-symbol": 146
            }
        ],
        181: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), e = e("../internals/regexp-exec");
                o({
                    target: "RegExp",
                    proto: !0,
                    forced: /./.exec !== e
                }, {
                    exec: e
                });
            },
            {
                "../internals/export": 50,
                "../internals/regexp-exec": 110
            }
        ],
        182: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/redefine"), n = e("../internals/an-object"), s = e("../internals/fails"), i = e("../internals/regexp-flags"), e = "toString", a = RegExp.prototype, l = a[e], s = s(function() {
                    return "/a/b" != l.call({
                        source: "a",
                        flags: "b"
                    });
                }), u = l.name != e;
                (s || u) && o(RegExp.prototype, e, function() {
                    var e = n(this), t = String(e.source), r = e.flags;
                    return "/" + t + "/" + String(void 0 === r && e instanceof RegExp && !("flags" in a) ? i.call(e) : r);
                }, {
                    unsafe: !0
                });
            },
            {
                "../internals/an-object": 10,
                "../internals/fails": 51,
                "../internals/redefine": 108,
                "../internals/regexp-flags": 111
            }
        ],
        183: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/collection"), e = e("../internals/collection-strong");
                t.exports = o("Set", function(e) {
                    return function() {
                        return e(this, arguments.length ? arguments[0] : void 0);
                    };
                }, e);
            },
            {
                "../internals/collection": 32,
                "../internals/collection-strong": 30
            }
        ],
        184: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/object-get-own-property-descriptor").f, s = e("../internals/to-length"), i = e("../internals/not-a-regexp"), a = e("../internals/require-object-coercible"), l = e("../internals/correct-is-regexp-logic"), e = e("../internals/is-pure"), u = "".endsWith, c = Math.min, l = l("endsWith");
                o({
                    target: "String",
                    proto: !0,
                    forced: !!(e || l || !(o = n(String.prototype, "endsWith")) || o.writable) && !l
                }, {
                    endsWith: function(e) {
                        var t = String(a(this)), r = (i(e), 1 < arguments.length ? arguments[1] : void 0), o = s(t.length), r = void 0 === r ? o : c(s(r), o), o = String(e);
                        return u ? u.call(t, o, r) : t.slice(r - o.length, r) === o;
                    }
                });
            },
            {
                "../internals/correct-is-regexp-logic": 34,
                "../internals/export": 50,
                "../internals/is-pure": 75,
                "../internals/not-a-regexp": 87,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/require-object-coercible": 113,
                "../internals/to-length": 134
            }
        ],
        185: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/not-a-regexp"), s = e("../internals/require-object-coercible");
                o({
                    target: "String",
                    proto: !0,
                    forced: !e("../internals/correct-is-regexp-logic")("includes")
                }, {
                    includes: function(e) {
                        return !!~String(s(this)).indexOf(n(e), 1 < arguments.length ? arguments[1] : void 0);
                    }
                });
            },
            {
                "../internals/correct-is-regexp-logic": 34,
                "../internals/export": 50,
                "../internals/not-a-regexp": 87,
                "../internals/require-object-coercible": 113
            }
        ],
        186: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/string-multibyte").charAt, n = e("../internals/internal-state"), e = e("../internals/define-iterator"), s = "String Iterator", i = n.set, a = n.getterFor(s);
                e(String, "String", function(e) {
                    i(this, {
                        type: s,
                        string: String(e),
                        index: 0
                    });
                }, function() {
                    var e = a(this), t = e.string, r = e.index;
                    return r >= t.length ? {
                        value: void 0,
                        done: !0
                    } : (t = o(t, r), e.index += t.length, {
                        value: t,
                        done: !1
                    });
                });
            },
            {
                "../internals/define-iterator": 41,
                "../internals/internal-state": 70,
                "../internals/string-multibyte": 123
            }
        ],
        187: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/fix-regexp-well-known-symbol-logic"), c = e("../internals/an-object"), d = e("../internals/to-length"), n = e("../internals/require-object-coercible"), f = e("../internals/advance-string-index"), h = e("../internals/regexp-exec-abstract");
                o("match", 1, function(o, l, u) {
                    return [
                        function(e) {
                            var t = n(this), r = null == e ? void 0 : e[o];
                            return void 0 !== r ? r.call(e, t) : new RegExp(e)[o](String(t));
                        },
                        function(e) {
                            var t = u(l, e, this);
                            if (t.done) return t.value;
                            var r = c(e), o = String(this);
                            if (!r.global) return h(r, o);
                            for(var n = r.unicode, s = [], i = r.lastIndex = 0; null !== (a = h(r, o));){
                                var a = String(a[0]);
                                "" === (s[i] = a) && (r.lastIndex = f(o, d(r.lastIndex), n)), i++;
                            }
                            return 0 === i ? null : s;
                        }
                    ];
                });
            },
            {
                "../internals/advance-string-index": 8,
                "../internals/an-object": 10,
                "../internals/fix-regexp-well-known-symbol-logic": 52,
                "../internals/regexp-exec-abstract": 109,
                "../internals/require-object-coercible": 113,
                "../internals/to-length": 134
            }
        ],
        188: [
            function(e, t, r) {
                e("../internals/export")({
                    target: "String",
                    proto: !0
                }, {
                    repeat: e("../internals/string-repeat")
                });
            },
            {
                "../internals/export": 50,
                "../internals/string-repeat": 125
            }
        ],
        189: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/fix-regexp-well-known-symbol-logic"), M = e("../internals/an-object"), E = e("../internals/to-object"), T = e("../internals/to-length"), C = e("../internals/to-integer"), s = e("../internals/require-object-coercible"), O = e("../internals/advance-string-index"), L = e("../internals/regexp-exec-abstract"), k = Math.max, A = Math.min, P = Math.floor, R = /\$([$&'`]|\d\d?|<[^>]*>)/g, D = /\$([$&'`]|\d\d?)/g;
                o("replace", 2, function(n, j, _, e) {
                    var x = e.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE, w = e.REPLACE_KEEPS_$0, S = x ? "$" : "$0";
                    return [
                        function(e, t) {
                            var r = s(this), o = null == e ? void 0 : e[n];
                            return void 0 !== o ? o.call(e, r, t) : j.call(String(r), e, t);
                        },
                        function(e, t) {
                            if (!x && w || "string" == typeof t && -1 === t.indexOf(S)) {
                                var r = _(j, e, this, t);
                                if (r.done) return r.value;
                            }
                            for(var o, n = M(e), s = String(this), i = "function" == typeof t, a = (i || (t = String(t)), n.global), l = (a && (o = n.unicode, n.lastIndex = 0), []); null !== (h = L(n, s)) && (l.push(h), a);)"" === String(h[0]) && (n.lastIndex = O(s, T(n.lastIndex), o));
                            for(var u, c = "", d = 0, f = 0; f < l.length; f++){
                                for(var h = l[f], p = String(h[0]), m = k(A(C(h.index), s.length), 0), y = [], g = 1; g < h.length; g++)y.push(void 0 === (u = h[g]) ? u : String(u));
                                var v = h.groups, b = i ? (b = [
                                    p
                                ].concat(y, m, s), void 0 !== v && b.push(v), String(t.apply(void 0, b))) : function(s, i, a, l, u, e) {
                                    var c = a + s.length, d = l.length, t = D;
                                    void 0 !== u && (u = E(u), t = R);
                                    return j.call(e, t, function(e, t) {
                                        var r;
                                        switch(t.charAt(0)){
                                            case "$":
                                                return "$";
                                            case "&":
                                                return s;
                                            case "`":
                                                return i.slice(0, a);
                                            case "'":
                                                return i.slice(c);
                                            case "<":
                                                r = u[t.slice(1, -1)];
                                                break;
                                            default:
                                                var o, n = +t;
                                                if (0 == n) return e;
                                                if (d < n) return 0 !== (o = P(n / 10)) && o <= d ? void 0 === l[o - 1] ? t.charAt(1) : l[o - 1] + t.charAt(1) : e;
                                                r = l[n - 1];
                                        }
                                        return void 0 === r ? "" : r;
                                    });
                                }(p, s, m, y, v, t);
                                d <= m && (c += s.slice(d, m) + b, d = m + p.length);
                            }
                            return c + s.slice(d);
                        }
                    ];
                });
            },
            {
                "../internals/advance-string-index": 8,
                "../internals/an-object": 10,
                "../internals/fix-regexp-well-known-symbol-logic": 52,
                "../internals/regexp-exec-abstract": 109,
                "../internals/require-object-coercible": 113,
                "../internals/to-integer": 133,
                "../internals/to-length": 134,
                "../internals/to-object": 135
            }
        ],
        190: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/fix-regexp-well-known-symbol-logic"), i = e("../internals/an-object"), a = e("../internals/require-object-coercible"), l = e("../internals/same-value"), u = e("../internals/regexp-exec-abstract");
                o("search", 1, function(o, n, s) {
                    return [
                        function(e) {
                            var t = a(this), r = null == e ? void 0 : e[o];
                            return void 0 !== r ? r.call(e, t) : new RegExp(e)[o](String(t));
                        },
                        function(e) {
                            var t, r = s(n, e, this);
                            return r.done ? r.value : (r = i(e), e = String(this), t = r.lastIndex, l(t, 0) || (r.lastIndex = 0), e = u(r, e), l(r.lastIndex, t) || (r.lastIndex = t), null === e ? -1 : e.index);
                        }
                    ];
                });
            },
            {
                "../internals/an-object": 10,
                "../internals/fix-regexp-well-known-symbol-logic": 52,
                "../internals/regexp-exec-abstract": 109,
                "../internals/require-object-coercible": 113,
                "../internals/same-value": 114
            }
        ],
        191: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/fix-regexp-well-known-symbol-logic"), c = e("../internals/is-regexp"), g = e("../internals/an-object"), d = e("../internals/require-object-coercible"), v = e("../internals/species-constructor"), b = e("../internals/advance-string-index"), j = e("../internals/to-length"), _ = e("../internals/regexp-exec-abstract"), f = e("../internals/regexp-exec"), e = e("../internals/fails"), h = [].push, x = Math.min, w = 4294967295, S = !e(function() {
                    return !RegExp(w, "y");
                });
                o("split", 2, function(n, p, m) {
                    var y = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || 1 < ".".split(/()()/).length || "".split(/.?/).length ? function(e, t) {
                        var r = String(d(this)), o = void 0 === t ? w : t >>> 0;
                        if (0 == o) return [];
                        if (void 0 === e) return [
                            r
                        ];
                        if (!c(e)) return p.call(r, e, o);
                        for(var n, s, i, a = [], t = (e.ignoreCase ? "i" : "") + (e.multiline ? "m" : "") + (e.unicode ? "u" : "") + (e.sticky ? "y" : ""), l = 0, u = new RegExp(e.source, t + "g"); (n = f.call(u, r)) && !(l < (s = u.lastIndex) && (a.push(r.slice(l, n.index)), 1 < n.length && n.index < r.length && h.apply(a, n.slice(1)), i = n[0].length, l = s, a.length >= o));)u.lastIndex === n.index && u.lastIndex++;
                        return l === r.length ? !i && u.test("") || a.push("") : a.push(r.slice(l)), a.length > o ? a.slice(0, o) : a;
                    } : "0".split(void 0, 0).length ? function(e, t) {
                        return void 0 === e && 0 === t ? [] : p.call(this, e, t);
                    } : p;
                    return [
                        function(e, t) {
                            var r = d(this), o = null == e ? void 0 : e[n];
                            return void 0 !== o ? o.call(e, r, t) : y.call(String(r), e, t);
                        },
                        function(e, t) {
                            var r = m(y, e, this, t, y !== p);
                            if (r.done) return r.value;
                            var r = g(e), o = String(this), e = v(r, RegExp), n = r.unicode, s = (r.ignoreCase ? "i" : "") + (r.multiline ? "m" : "") + (r.unicode ? "u" : "") + (S ? "y" : "g"), i = new e(S ? r : "^(?:" + r.source + ")", s), a = void 0 === t ? w : t >>> 0;
                            if (0 == a) return [];
                            if (0 === o.length) return null === _(i, o) ? [
                                o
                            ] : [];
                            for(var l = 0, u = 0, c = []; u < o.length;){
                                i.lastIndex = S ? u : 0;
                                var d, f = _(i, S ? o : o.slice(u));
                                if (null === f || (d = x(j(i.lastIndex + (S ? 0 : u)), o.length)) === l) u = b(o, u, n);
                                else {
                                    if (c.push(o.slice(l, u)), c.length === a) return c;
                                    for(var h = 1; h <= f.length - 1; h++)if (c.push(f[h]), c.length === a) return c;
                                    u = l = d;
                                }
                            }
                            return c.push(o.slice(l)), c;
                        }
                    ];
                }, !S);
            },
            {
                "../internals/advance-string-index": 8,
                "../internals/an-object": 10,
                "../internals/fails": 51,
                "../internals/fix-regexp-well-known-symbol-logic": 52,
                "../internals/is-regexp": 76,
                "../internals/regexp-exec": 110,
                "../internals/regexp-exec-abstract": 109,
                "../internals/require-object-coercible": 113,
                "../internals/species-constructor": 121,
                "../internals/to-length": 134
            }
        ],
        192: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/create-html");
                o({
                    target: "String",
                    proto: !0,
                    forced: e("../internals/string-html-forced")("sub")
                }, {
                    sub: function() {
                        return n(this, "sub", "", "");
                    }
                });
            },
            {
                "../internals/create-html": 36,
                "../internals/export": 50,
                "../internals/string-html-forced": 122
            }
        ],
        193: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/export"), n = e("../internals/string-trim").trim;
                o({
                    target: "String",
                    proto: !0,
                    forced: e("../internals/string-trim-forced")("trim")
                }, {
                    trim: function() {
                        return n(this);
                    }
                });
            },
            {
                "../internals/export": 50,
                "../internals/string-trim": 127,
                "../internals/string-trim-forced": 126
            }
        ],
        194: [
            function(e, t, r) {
                "use strict";
                var o, n, s, i, a, l = e("../internals/export"), u = e("../internals/descriptors"), c = e("../internals/global"), d = e("../internals/has"), f = e("../internals/is-object"), h = e("../internals/object-define-property").f, e = e("../internals/copy-constructor-properties"), p = c.Symbol;
                !u || "function" != typeof p || "description" in p.prototype && void 0 === p().description || (o = {}, e(n = function() {
                    var e = arguments.length < 1 || void 0 === arguments[0] ? void 0 : String(arguments[0]), t = this instanceof n ? new p(e) : void 0 === e ? p() : p(e);
                    return "" === e && (o[t] = !0), t;
                }, p), (c = n.prototype = p.prototype).constructor = n, s = c.toString, i = "Symbol(test)" == String(p("test")), a = /^Symbol\((.*)\)[^)]+$/, h(c, "description", {
                    configurable: !0,
                    get: function() {
                        var e = f(this) ? this.valueOf() : this, t = s.call(e);
                        return d(o, e) ? "" : "" === (e = i ? t.slice(7, -1) : t.replace(a, "$1")) ? void 0 : e;
                    }
                }), l({
                    global: !0,
                    forced: !0
                }, {
                    Symbol: n
                }));
            },
            {
                "../internals/copy-constructor-properties": 33,
                "../internals/descriptors": 43,
                "../internals/export": 50,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/is-object": 74,
                "../internals/object-define-property": 92
            }
        ],
        195: [
            function(e, t, r) {
                e("../internals/define-well-known-symbol")("iterator");
            },
            {
                "../internals/define-well-known-symbol": 42
            }
        ],
        196: [
            function(e, I, U) {
                "use strict";
                function o(e, t) {
                    var r = E[e] = h(w[_]);
                    return ie(r, {
                        type: j,
                        tag: e,
                        description: t
                    }), s || (r.description = t), r;
                }
                function r(t, e) {
                    u(t);
                    var r = c(e), e = q(r).concat(D(r));
                    return v(e, function(e) {
                        s && !R.call(r, e) || P(t, e, r[e]);
                    }), t;
                }
                function t(e, t) {
                    var r, e = c(e), t = d(t, !0);
                    if (e !== x || !l(E, t) || l(T, t)) return !(r = le(e, t)) || !l(E, t) || l(e, b) && e[b][t] || (r.enumerable = !0), r;
                }
                function N(e) {
                    var e = ue(c(e)), t = [];
                    return v(e, function(e) {
                        l(E, e) || l(ee, e) || t.push(e);
                    }), t;
                }
                var n = e("../internals/export"), F = e("../internals/global"), B = e("../internals/get-built-in"), G = e("../internals/is-pure"), s = e("../internals/descriptors"), i = e("../internals/native-symbol"), V = e("../internals/use-symbol-as-uid"), a = e("../internals/fails"), l = e("../internals/has"), z = e("../internals/is-array"), H = e("../internals/is-object"), u = e("../internals/an-object"), W = e("../internals/to-object"), c = e("../internals/to-indexed-object"), d = e("../internals/to-primitive"), f = e("../internals/create-property-descriptor"), h = e("../internals/object-create"), q = e("../internals/object-keys"), X = e("../internals/object-get-own-property-names"), Y = e("../internals/object-get-own-property-names-external"), p = e("../internals/object-get-own-property-symbols"), Z = e("../internals/object-get-own-property-descriptor"), Q = e("../internals/object-define-property"), K = e("../internals/object-property-is-enumerable"), J = e("../internals/create-non-enumerable-property"), m = e("../internals/redefine"), y = e("../internals/shared"), $ = e("../internals/shared-key"), ee = e("../internals/hidden-keys"), te = e("../internals/uid"), re = e("../internals/well-known-symbol"), oe = e("../internals/well-known-symbol-wrapped"), ne = e("../internals/define-well-known-symbol"), se = e("../internals/set-to-string-tag"), g = e("../internals/internal-state"), v = e("../internals/array-iteration").forEach, b = $("hidden"), j = "Symbol", _ = "prototype", e = re("toPrimitive"), ie = g.set, ae = g.getterFor(j), x = Object[_], w = F.Symbol, S = B("JSON", "stringify"), le = Z.f, M = Q.f, ue = Y.f, ce = K.f, E = y("symbols"), T = y("op-symbols"), C = y("string-to-symbol-registry"), O = y("symbol-to-string-registry"), $ = y("wks"), g = F.QObject, L = !g || !g[_] || !g[_].findChild, k = s && a(function() {
                    return 7 != h(M({}, "a", {
                        get: function() {
                            return M(this, "a", {
                                value: 7
                            }).a;
                        }
                    })).a;
                }) ? function(e, t, r) {
                    var o = le(x, t);
                    o && delete x[t], M(e, t, r), o && e !== x && M(x, t, o);
                } : M, A = V ? function(e) {
                    return "symbol" == typeof e;
                } : function(e) {
                    return Object(e) instanceof w;
                }, P = function(e, t, r) {
                    e === x && P(T, t, r), u(e);
                    t = d(t, !0);
                    return u(r), (l(E, t) ? (r.enumerable ? (l(e, b) && e[b][t] && (e[b][t] = !1), r = h(r, {
                        enumerable: f(0, !1)
                    })) : (l(e, b) || M(e, b, f(1, {})), e[b][t] = !0), k) : M)(e, t, r);
                }, R = function(e) {
                    var e = d(e, !0), t = ce.call(this, e);
                    return !(this === x && l(E, e) && !l(T, e)) && (!(t || !l(this, e) || !l(E, e) || l(this, b) && this[b][e]) || t);
                }, D = function(e) {
                    var t = e === x, e = ue(t ? T : c(e)), r = [];
                    return v(e, function(e) {
                        !l(E, e) || t && !l(x, e) || r.push(E[e]);
                    }), r;
                };
                i || (m((w = function() {
                    if (this instanceof w) throw TypeError("Symbol is not a constructor");
                    var e = arguments.length && void 0 !== arguments[0] ? String(arguments[0]) : void 0, t = te(e), r = function(e) {
                        this === x && r.call(T, e), l(this, b) && l(this[b], t) && (this[b][t] = !1), k(this, t, f(1, e));
                    };
                    return s && L && k(x, t, {
                        configurable: !0,
                        set: r
                    }), o(t, e);
                })[_], "toString", function() {
                    return ae(this).tag;
                }), m(w, "withoutSetter", function(e) {
                    return o(te(e), e);
                }), K.f = R, Q.f = P, Z.f = t, X.f = Y.f = N, p.f = D, oe.f = function(e) {
                    return o(re(e), e);
                }, s && (M(w[_], "description", {
                    configurable: !0,
                    get: function() {
                        return ae(this).description;
                    }
                }), G || m(x, "propertyIsEnumerable", R, {
                    unsafe: !0
                }))), n({
                    global: !0,
                    wrap: !0,
                    forced: !i,
                    sham: !i
                }, {
                    Symbol: w
                }), v(q($), function(e) {
                    ne(e);
                }), n({
                    target: j,
                    stat: !0,
                    forced: !i
                }, {
                    for: function(e) {
                        var t, e = String(e);
                        return l(C, e) ? C[e] : (t = w(e), C[e] = t, O[t] = e, t);
                    },
                    keyFor: function(e) {
                        if (!A(e)) throw TypeError(e + " is not a symbol");
                        if (l(O, e)) return O[e];
                    },
                    useSetter: function() {
                        L = !0;
                    },
                    useSimple: function() {
                        L = !1;
                    }
                }), n({
                    target: "Object",
                    stat: !0,
                    forced: !i,
                    sham: !s
                }, {
                    create: function(e, t) {
                        return void 0 === t ? h(e) : r(h(e), t);
                    },
                    defineProperty: P,
                    defineProperties: r,
                    getOwnPropertyDescriptor: t
                }), n({
                    target: "Object",
                    stat: !0,
                    forced: !i
                }, {
                    getOwnPropertyNames: N,
                    getOwnPropertySymbols: D
                }), n({
                    target: "Object",
                    stat: !0,
                    forced: a(function() {
                        p.f(1);
                    })
                }, {
                    getOwnPropertySymbols: function(e) {
                        return p.f(W(e));
                    }
                }), S && n({
                    target: "JSON",
                    stat: !0,
                    forced: !i || a(function() {
                        var e = w();
                        return "[null]" != S([
                            e
                        ]) || "{}" != S({
                            a: e
                        }) || "{}" != S(Object(e));
                    })
                }, {
                    stringify: function(e, t, r) {
                        for(var o, n = [
                            e
                        ], s = 1; s < arguments.length;)n.push(arguments[s++]);
                        if ((H(o = t) || void 0 !== e) && !A(e)) return z(t) || (t = function(e, t) {
                            if ("function" == typeof o && (t = o.call(this, e, t)), !A(t)) return t;
                        }), n[1] = t, S.apply(null, n);
                    }
                }), w[_][e] || J(w[_], e, w[_].valueOf), se(w, j), ee[b] = !0;
            },
            {
                "../internals/an-object": 10,
                "../internals/array-iteration": 19,
                "../internals/create-non-enumerable-property": 38,
                "../internals/create-property-descriptor": 39,
                "../internals/define-well-known-symbol": 42,
                "../internals/descriptors": 43,
                "../internals/export": 50,
                "../internals/fails": 51,
                "../internals/get-built-in": 56,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/hidden-keys": 61,
                "../internals/internal-state": 70,
                "../internals/is-array": 72,
                "../internals/is-object": 74,
                "../internals/is-pure": 75,
                "../internals/native-symbol": 83,
                "../internals/object-create": 90,
                "../internals/object-define-property": 92,
                "../internals/object-get-own-property-descriptor": 93,
                "../internals/object-get-own-property-names": 95,
                "../internals/object-get-own-property-names-external": 94,
                "../internals/object-get-own-property-symbols": 96,
                "../internals/object-keys": 99,
                "../internals/object-property-is-enumerable": 100,
                "../internals/redefine": 108,
                "../internals/set-to-string-tag": 117,
                "../internals/shared": 120,
                "../internals/shared-key": 118,
                "../internals/to-indexed-object": 132,
                "../internals/to-object": 135,
                "../internals/to-primitive": 138,
                "../internals/uid": 143,
                "../internals/use-symbol-as-uid": 144,
                "../internals/well-known-symbol": 146,
                "../internals/well-known-symbol-wrapped": 145
            }
        ],
        197: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-copy-within"), s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("copyWithin", function(e, t) {
                    return n.call(s(this), e, t, 2 < arguments.length ? arguments[2] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-copy-within": 14
            }
        ],
        198: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-iteration").every, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("every", function(e) {
                    return n(s(this), e, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19
            }
        ],
        199: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-fill"), s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("fill", function(e) {
                    return n.apply(s(this), arguments);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-fill": 15
            }
        ],
        200: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), s = e("../internals/array-iteration").filter, i = e("../internals/species-constructor"), a = o.aTypedArray, l = o.aTypedArrayConstructor;
                (0, o.exportTypedArrayMethod)("filter", function(e) {
                    for(var t = s(a(this), e, 1 < arguments.length ? arguments[1] : void 0), e = i(this, this.constructor), r = 0, o = t.length, n = new (l(e))(o); r < o;)n[r] = t[r++];
                    return n;
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19,
                "../internals/species-constructor": 121
            }
        ],
        201: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-iteration").findIndex, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("findIndex", function(e) {
                    return n(s(this), e, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19
            }
        ],
        202: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-iteration").find, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("find", function(e) {
                    return n(s(this), e, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19
            }
        ],
        203: [
            function(e, t, r) {
                e("../internals/typed-array-constructor")("Float32", function(o) {
                    return function(e, t, r) {
                        return o(this, e, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 140
            }
        ],
        204: [
            function(e, t, r) {
                e("../internals/typed-array-constructor")("Float64", function(o) {
                    return function(e, t, r) {
                        return o(this, e, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 140
            }
        ],
        205: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-iteration").forEach, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("forEach", function(e) {
                    n(s(this), e, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19
            }
        ],
        206: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-includes").includes, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("includes", function(e) {
                    return n(s(this), e, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-includes": 18
            }
        ],
        207: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-includes").indexOf, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("indexOf", function(e) {
                    return n(s(this), e, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-includes": 18
            }
        ],
        208: [
            function(e, t, r) {
                e("../internals/typed-array-constructor")("Int16", function(o) {
                    return function(e, t, r) {
                        return o(this, e, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 140
            }
        ],
        209: [
            function(e, t, r) {
                e("../internals/typed-array-constructor")("Int32", function(o) {
                    return function(e, t, r) {
                        return o(this, e, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 140
            }
        ],
        210: [
            function(e, t, r) {
                "use strict";
                function o() {
                    return a.call(c(this));
                }
                var n = e("../internals/global"), s = e("../internals/array-buffer-view-core"), i = e("../modules/es.array.iterator"), e = e("../internals/well-known-symbol")("iterator"), n = n.Uint8Array, a = i.values, l = i.keys, u = i.entries, c = s.aTypedArray, i = s.exportTypedArrayMethod, s = n && n.prototype[e], n = !!s && ("values" == s.name || null == s.name);
                i("entries", function() {
                    return u.call(c(this));
                }), i("keys", function() {
                    return l.call(c(this));
                }), i("values", o, !n), i(e, o, !n);
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/global": 59,
                "../internals/well-known-symbol": 146,
                "../modules/es.array.iterator": 158
            }
        ],
        211: [
            function(e, t, r) {
                "use strict";
                var e = e("../internals/array-buffer-view-core"), o = e.aTypedArray, e = e.exportTypedArrayMethod, n = [].join;
                e("join", function(e) {
                    return n.apply(o(this), arguments);
                });
            },
            {
                "../internals/array-buffer-view-core": 12
            }
        ],
        212: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-last-index-of"), s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("lastIndexOf", function(e) {
                    return n.apply(s(this), arguments);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-last-index-of": 20
            }
        ],
        213: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-iteration").map, s = e("../internals/species-constructor"), i = o.aTypedArray, a = o.aTypedArrayConstructor;
                (0, o.exportTypedArrayMethod)("map", function(e) {
                    return n(i(this), e, 1 < arguments.length ? arguments[1] : void 0, function(e, t) {
                        return new (a(s(e, e.constructor)))(t);
                    });
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19,
                "../internals/species-constructor": 121
            }
        ],
        214: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-reduce").right, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("reduceRight", function(e) {
                    return n(s(this), e, arguments.length, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-reduce": 24
            }
        ],
        215: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-reduce").left, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("reduce", function(e) {
                    return n(s(this), e, arguments.length, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-reduce": 24
            }
        ],
        216: [
            function(e, t, r) {
                "use strict";
                var e = e("../internals/array-buffer-view-core"), n = e.aTypedArray, e = e.exportTypedArrayMethod, s = Math.floor;
                e("reverse", function() {
                    for(var e, t = n(this).length, r = s(t / 2), o = 0; o < r;)e = this[o], this[o++] = this[--t], this[t] = e;
                    return this;
                });
            },
            {
                "../internals/array-buffer-view-core": 12
            }
        ],
        217: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), i = e("../internals/to-length"), a = e("../internals/to-offset"), l = e("../internals/to-object"), e = e("../internals/fails"), u = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("set", function(e) {
                    u(this);
                    var t = a(1 < arguments.length ? arguments[1] : void 0, 1), r = this.length, o = l(e), n = i(o.length), s = 0;
                    if (r < n + t) throw RangeError("Wrong length");
                    for(; s < n;)this[t + s] = o[s++];
                }, e(function() {
                    new Int8Array(1).set({});
                }));
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/fails": 51,
                "../internals/to-length": 134,
                "../internals/to-object": 135,
                "../internals/to-offset": 136
            }
        ],
        218: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), i = e("../internals/species-constructor"), e = e("../internals/fails"), a = o.aTypedArray, l = o.aTypedArrayConstructor, o = o.exportTypedArrayMethod, u = [].slice;
                o("slice", function(e, t) {
                    for(var r = u.call(a(this), e, t), e = i(this, this.constructor), o = 0, n = r.length, s = new (l(e))(n); o < n;)s[o] = r[o++];
                    return s;
                }, e(function() {
                    new Int8Array(1).slice();
                }));
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/fails": 51,
                "../internals/species-constructor": 121
            }
        ],
        219: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/array-iteration").some, s = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("some", function(e) {
                    return n(s(this), e, 1 < arguments.length ? arguments[1] : void 0);
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/array-iteration": 19
            }
        ],
        220: [
            function(e, t, r) {
                "use strict";
                var e = e("../internals/array-buffer-view-core"), o = e.aTypedArray, e = e.exportTypedArrayMethod, n = [].sort;
                e("sort", function(e) {
                    return n.call(o(this), e);
                });
            },
            {
                "../internals/array-buffer-view-core": 12
            }
        ],
        221: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core"), n = e("../internals/to-length"), s = e("../internals/to-absolute-index"), i = e("../internals/species-constructor"), a = o.aTypedArray;
                (0, o.exportTypedArrayMethod)("subarray", function(e, t) {
                    var r = a(this), o = r.length, e = s(e, o);
                    return new (i(r, r.constructor))(r.buffer, r.byteOffset + e * r.BYTES_PER_ELEMENT, n((void 0 === t ? o : s(t, o)) - e));
                });
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/species-constructor": 121,
                "../internals/to-absolute-index": 130,
                "../internals/to-length": 134
            }
        ],
        222: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/global"), n = e("../internals/array-buffer-view-core"), e = e("../internals/fails"), s = o.Int8Array, i = n.aTypedArray, o = n.exportTypedArrayMethod, a = [].toLocaleString, l = [].slice, u = !!s && e(function() {
                    a.call(new s(1));
                });
                o("toLocaleString", function() {
                    return a.apply(u ? l.call(i(this)) : i(this), arguments);
                }, e(function() {
                    return [
                        1,
                        2
                    ].toLocaleString() != new s([
                        1,
                        2
                    ]).toLocaleString();
                }) || !e(function() {
                    s.prototype.toLocaleString.call([
                        1,
                        2
                    ]);
                }));
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/fails": 51,
                "../internals/global": 59
            }
        ],
        223: [
            function(e, t, r) {
                "use strict";
                var o = e("../internals/array-buffer-view-core").exportTypedArrayMethod, n = e("../internals/fails"), e = e("../internals/global").Uint8Array, e = e && e.prototype || {}, s = [].toString, i = [].join, n = (n(function() {
                    s.call({});
                }) && (s = function() {
                    return i.call(this);
                }), e.toString != s);
                o("toString", s, n);
            },
            {
                "../internals/array-buffer-view-core": 12,
                "../internals/fails": 51,
                "../internals/global": 59
            }
        ],
        224: [
            function(e, t, r) {
                e("../internals/typed-array-constructor")("Uint16", function(o) {
                    return function(e, t, r) {
                        return o(this, e, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 140
            }
        ],
        225: [
            function(e, t, r) {
                e("../internals/typed-array-constructor")("Uint32", function(o) {
                    return function(e, t, r) {
                        return o(this, e, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 140
            }
        ],
        226: [
            function(e, t, r) {
                e("../internals/typed-array-constructor")("Uint8", function(o) {
                    return function(e, t, r) {
                        return o(this, e, t, r);
                    };
                });
            },
            {
                "../internals/typed-array-constructor": 140
            }
        ],
        227: [
            function(e, t, r) {
                e("../internals/typed-array-constructor")("Uint8", function(o) {
                    return function(e, t, r) {
                        return o(this, e, t, r);
                    };
                }, !0);
            },
            {
                "../internals/typed-array-constructor": 140
            }
        ],
        228: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return function() {
                        return e(this, arguments.length ? arguments[0] : void 0);
                    };
                }
                var n, s, i, a, l, u = e("../internals/global"), c = e("../internals/redefine-all"), d = e("../internals/internal-metadata"), f = e("../internals/collection"), h = e("../internals/collection-weak"), p = e("../internals/is-object"), m = e("../internals/internal-state").enforce, e = e("../internals/native-weak-map"), u = !u.ActiveXObject && "ActiveXObject" in u, y = Object.isExtensible, t = t.exports = f("WeakMap", o, h);
                e && u && (n = h.getConstructor(o, "WeakMap", !0), d.REQUIRED = !0, f = t.prototype, s = f.delete, i = f.has, a = f.get, l = f.set, c(f, {
                    delete: function(e) {
                        var t;
                        return p(e) && !y(e) ? ((t = m(this)).frozen || (t.frozen = new n), s.call(this, e) || t.frozen.delete(e)) : s.call(this, e);
                    },
                    has: function(e) {
                        var t;
                        return p(e) && !y(e) ? ((t = m(this)).frozen || (t.frozen = new n), i.call(this, e) || t.frozen.has(e)) : i.call(this, e);
                    },
                    get: function(e) {
                        var t;
                        return !p(e) || y(e) || ((t = m(this)).frozen || (t.frozen = new n), i.call(this, e)) ? a.call(this, e) : t.frozen.get(e);
                    },
                    set: function(e, t) {
                        var r;
                        return !p(e) || y(e) || ((r = m(this)).frozen || (r.frozen = new n), i.call(this, e)) ? l.call(this, e, t) : r.frozen.set(e, t), this;
                    }
                }));
            },
            {
                "../internals/collection": 32,
                "../internals/collection-weak": 31,
                "../internals/global": 59,
                "../internals/internal-metadata": 69,
                "../internals/internal-state": 70,
                "../internals/is-object": 74,
                "../internals/native-weak-map": 85,
                "../internals/redefine-all": 107
            }
        ],
        229: [
            function(e, t, r) {
                var o, n = e("../internals/global"), s = e("../internals/dom-iterables"), i = e("../internals/array-for-each"), a = e("../internals/create-non-enumerable-property");
                for(o in s){
                    var l = n[o], l = l && l.prototype;
                    if (l && l.forEach !== i) try {
                        a(l, "forEach", i);
                    } catch (e) {
                        l.forEach = i;
                    }
                }
            },
            {
                "../internals/array-for-each": 16,
                "../internals/create-non-enumerable-property": 38,
                "../internals/dom-iterables": 45,
                "../internals/global": 59
            }
        ],
        230: [
            function(e, t, r) {
                var o, n = e("../internals/global"), s = e("../internals/dom-iterables"), i = e("../modules/es.array.iterator"), a = e("../internals/create-non-enumerable-property"), e = e("../internals/well-known-symbol"), l = e("iterator"), u = e("toStringTag"), c = i.values;
                for(o in s){
                    var d = n[o], f = d && d.prototype;
                    if (f) {
                        if (f[l] !== c) try {
                            a(f, l, c);
                        } catch (e) {
                            f[l] = c;
                        }
                        if (f[u] || a(f, u, o), s[o]) {
                            for(var h in i)if (f[h] !== i[h]) try {
                                a(f, h, i[h]);
                            } catch (e) {
                                f[h] = i[h];
                            }
                        }
                    }
                }
            },
            {
                "../internals/create-non-enumerable-property": 38,
                "../internals/dom-iterables": 45,
                "../internals/global": 59,
                "../internals/well-known-symbol": 146,
                "../modules/es.array.iterator": 158
            }
        ],
        231: [
            function(e, t, I) {
                "use strict";
                e("../modules/es.array.iterator");
                function n(t) {
                    try {
                        return decodeURIComponent(t);
                    } catch (e) {
                        return t;
                    }
                }
                function r(e) {
                    return B[e];
                }
                function s(e) {
                    return encodeURIComponent(e).replace(F, r);
                }
                function c(e) {
                    this.entries.length = 0, R(this.entries, e);
                }
                function u(e, t) {
                    if (e < t) throw TypeError("Not enough arguments");
                }
                function d() {
                    y(this, d, C);
                    var e, t, r, o, n, s, i, a, l = 0 < arguments.length ? arguments[0] : void 0, u = [];
                    if (L(this, {
                        type: C,
                        entries: u,
                        updateURL: function() {},
                        updateSearchParams: c
                    }), void 0 !== l) {
                        if (_(l)) {
                            if ("function" == typeof (e = M(l))) for(r = (t = e.call(l)).next; !(o = r.call(t)).done;){
                                if ((s = (n = (o = S(j(o.value))).next).call(o)).done || (i = n.call(o)).done || !n.call(o).done) throw TypeError("Expected sequence with length 2");
                                u.push({
                                    key: s.value + "",
                                    value: i.value + ""
                                });
                            }
                            else for(a in l)g(l, a) && u.push({
                                key: a,
                                value: l[a] + ""
                            });
                        } else R(u, "string" == typeof l ? "?" === l.charAt(0) ? l.slice(1) : l : l + "");
                    }
                }
                var o = e("../internals/export"), i = e("../internals/get-built-in"), a = e("../internals/native-url"), l = e("../internals/redefine"), f = e("../internals/redefine-all"), h = e("../internals/set-to-string-tag"), p = e("../internals/create-iterator-constructor"), m = e("../internals/internal-state"), y = e("../internals/an-instance"), g = e("../internals/has"), v = e("../internals/function-bind-context"), b = e("../internals/classof"), j = e("../internals/an-object"), _ = e("../internals/is-object"), x = e("../internals/object-create"), w = e("../internals/create-property-descriptor"), S = e("../internals/get-iterator"), M = e("../internals/get-iterator-method"), e = e("../internals/well-known-symbol"), E = i("fetch"), T = i("Headers"), i = e("iterator"), C = "URLSearchParams", O = C + "Iterator", L = m.set, k = m.getterFor(C), U = m.getterFor(O), N = /\+/g, A = Array(4), P = function(e) {
                    var t, r = e.replace(N, " "), o = 4;
                    try {
                        return decodeURIComponent(r);
                    } catch (e) {
                        for(; o;)r = r.replace((t = o--, A[t - 1] || (A[t - 1] = RegExp("((?:%[\\da-f]{2}){" + t + "})", "gi"))), n);
                        return r;
                    }
                }, F = /[!'()~]|%20/g, B = {
                    "!": "%21",
                    "'": "%27",
                    "(": "%28",
                    ")": "%29",
                    "~": "%7E",
                    "%20": "+"
                }, R = function(e, t) {
                    if (t) for(var r, o = t.split("&"), n = 0; n < o.length;)(r = o[n++]).length && (r = r.split("="), e.push({
                        key: P(r.shift()),
                        value: P(r.join("="))
                    }));
                }, D = p(function(e, t) {
                    L(this, {
                        type: O,
                        iterator: S(k(e).entries),
                        kind: t
                    });
                }, "Iterator", function() {
                    var e = U(this), t = e.kind, e = e.iterator.next(), r = e.value;
                    return e.done || (e.value = "keys" === t ? r.key : "values" === t ? r.value : [
                        r.key,
                        r.value
                    ]), e;
                }), e = d.prototype;
                f(e, {
                    append: function(e, t) {
                        u(arguments.length, 2);
                        var r = k(this);
                        r.entries.push({
                            key: e + "",
                            value: t + ""
                        }), r.updateURL();
                    },
                    delete: function(e) {
                        u(arguments.length, 1);
                        for(var t = k(this), r = t.entries, o = e + "", n = 0; n < r.length;)r[n].key === o ? r.splice(n, 1) : n++;
                        t.updateURL();
                    },
                    get: function(e) {
                        u(arguments.length, 1);
                        for(var t = k(this).entries, r = e + "", o = 0; o < t.length; o++)if (t[o].key === r) return t[o].value;
                        return null;
                    },
                    getAll: function(e) {
                        u(arguments.length, 1);
                        for(var t = k(this).entries, r = e + "", o = [], n = 0; n < t.length; n++)t[n].key === r && o.push(t[n].value);
                        return o;
                    },
                    has: function(e) {
                        u(arguments.length, 1);
                        for(var t = k(this).entries, r = e + "", o = 0; o < t.length;)if (t[o++].key === r) return !0;
                        return !1;
                    },
                    set: function(e, t) {
                        u(arguments.length, 1);
                        for(var r, o = k(this), n = o.entries, s = !1, i = e + "", a = t + "", l = 0; l < n.length; l++)(r = n[l]).key === i && (s ? n.splice(l--, 1) : (s = !0, r.value = a));
                        s || n.push({
                            key: i,
                            value: a
                        }), o.updateURL();
                    },
                    sort: function() {
                        for(var e, t, r = k(this), o = r.entries, n = o.slice(), s = o.length = 0; s < n.length; s++){
                            for(e = n[s], t = 0; t < s; t++)if (o[t].key > e.key) {
                                o.splice(t, 0, e);
                                break;
                            }
                            t === s && o.push(e);
                        }
                        r.updateURL();
                    },
                    forEach: function(e) {
                        for(var t, r = k(this).entries, o = v(e, 1 < arguments.length ? arguments[1] : void 0, 3), n = 0; n < r.length;)o((t = r[n++]).value, t.key, this);
                    },
                    keys: function() {
                        return new D(this, "keys");
                    },
                    values: function() {
                        return new D(this, "values");
                    },
                    entries: function() {
                        return new D(this, "entries");
                    }
                }, {
                    enumerable: !0
                }), l(e, i, e.entries), l(e, "toString", function() {
                    for(var e, t = k(this).entries, r = [], o = 0; o < t.length;)e = t[o++], r.push(s(e.key) + "=" + s(e.value));
                    return r.join("&");
                }, {
                    enumerable: !0
                }), h(d, C), o({
                    global: !0,
                    forced: !a
                }, {
                    URLSearchParams: d
                }), a || "function" != typeof E || "function" != typeof T || o({
                    global: !0,
                    enumerable: !0,
                    forced: !0
                }, {
                    fetch: function(e) {
                        var t, r, o, e = [
                            e
                        ];
                        return 1 < arguments.length && (_(t = arguments[1]) && (r = t.body, b(r) === C && ((o = t.headers ? new T(t.headers) : new T).has("content-type") || o.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"), t = x(t, {
                            body: w(0, String(r)),
                            headers: w(0, o)
                        }))), e.push(t)), E.apply(this, e);
                    }
                }), t.exports = {
                    URLSearchParams: d,
                    getState: k
                };
            },
            {
                "../internals/an-instance": 9,
                "../internals/an-object": 10,
                "../internals/classof": 29,
                "../internals/create-iterator-constructor": 37,
                "../internals/create-property-descriptor": 39,
                "../internals/export": 50,
                "../internals/function-bind-context": 54,
                "../internals/get-built-in": 56,
                "../internals/get-iterator": 58,
                "../internals/get-iterator-method": 57,
                "../internals/has": 60,
                "../internals/internal-state": 70,
                "../internals/is-object": 74,
                "../internals/native-url": 84,
                "../internals/object-create": 90,
                "../internals/redefine": 108,
                "../internals/redefine-all": 107,
                "../internals/set-to-string-tag": 117,
                "../internals/well-known-symbol": 146,
                "../modules/es.array.iterator": 158
            }
        ],
        232: [
            function(e, y, U) {
                "use strict";
                e("../modules/es.string.iterator");
                function c(e) {
                    var t, r, o, n;
                    if ("number" == typeof e) {
                        for(t = [], r = 0; r < 4; r++)t.unshift(e % 256), e = Y(e / 256);
                        return t.join(".");
                    }
                    if ("object" != typeof e) return e;
                    for(t = "", o = le(e), r = 0; r < 8; r++)n && 0 === e[r] || (n = n && !1, o === r ? (t += r ? ":" : "::", n = !0) : (t += e[r].toString(16), r < 7 && (t += ":")));
                    return "[" + t + "]";
                }
                function n(e) {
                    return !e.host || e.cannotBeABaseURL || "file" == e.scheme;
                }
                function a(e, t, r, o) {
                    var n, s, i, a = r || me, l = 0, u = "", c = !1, d = !1, f = !1;
                    for(r || (e.scheme = "", e.username = "", e.password = "", e.host = null, e.port = null, e.path = [], e.query = null, e.fragment = null, e.cannotBeABaseURL = !1, t = t.replace(ie, "")), t = t.replace(ae, ""), n = b(t); l <= n.length;){
                        switch(s = n[l], a){
                            case me:
                                if (!s || !J.test(s)) {
                                    if (r) return j;
                                    a = ge;
                                    continue;
                                }
                                u += s.toLowerCase(), a = ye;
                                break;
                            case ye:
                                if (s && ($.test(s) || "+" == s || "-" == s || "." == s)) u += s.toLowerCase();
                                else {
                                    if (":" != s) {
                                        if (r) return j;
                                        u = "", a = ge, l = 0;
                                        continue;
                                    }
                                    if (r && (C(e) != v(T, u) || "file" == u && (O(e) || null !== e.port) || "file" == e.scheme && !e.host)) return;
                                    if (e.scheme = u, r) return void (C(e) && T[e.scheme] == e.port && (e.port = null));
                                    u = "", "file" == e.scheme ? a = Ee : C(e) && o && o.scheme == e.scheme ? a = ve : C(e) ? a = xe : "/" == n[l + 1] ? (a = be, l++) : (e.cannotBeABaseURL = !0, e.path.push(""), a = Oe);
                                }
                                break;
                            case ge:
                                if (!o || o.cannotBeABaseURL && "#" != s) return j;
                                if (o.cannotBeABaseURL && "#" == s) {
                                    e.scheme = o.scheme, e.path = o.path.slice(), e.query = o.query, e.fragment = "", e.cannotBeABaseURL = !0, a = I;
                                    break;
                                }
                                a = "file" == o.scheme ? Ee : je;
                                continue;
                            case ve:
                                if ("/" != s || "/" != n[l + 1]) {
                                    a = je;
                                    continue;
                                }
                                a = k, l++;
                                break;
                            case be:
                                if ("/" == s) {
                                    a = A;
                                    break;
                                }
                                a = R;
                                continue;
                            case je:
                                if (e.scheme = o.scheme, s == g) e.username = o.username, e.password = o.password, e.host = o.host, e.port = o.port, e.path = o.path.slice(), e.query = o.query;
                                else if ("/" == s || "\\" == s && C(e)) a = _e;
                                else if ("?" == s) e.username = o.username, e.password = o.password, e.host = o.host, e.port = o.port, e.path = o.path.slice(), e.query = "", a = D;
                                else {
                                    if ("#" != s) {
                                        e.username = o.username, e.password = o.password, e.host = o.host, e.port = o.port, e.path = o.path.slice(), e.path.pop(), a = R;
                                        continue;
                                    }
                                    e.username = o.username, e.password = o.password, e.host = o.host, e.port = o.port, e.path = o.path.slice(), e.query = o.query, e.fragment = "", a = I;
                                }
                                break;
                            case _e:
                                if (!C(e) || "/" != s && "\\" != s) {
                                    if ("/" != s) {
                                        e.username = o.username, e.password = o.password, e.host = o.host, e.port = o.port, a = R;
                                        continue;
                                    }
                                    a = A;
                                } else a = k;
                                break;
                            case xe:
                                if (a = k, "/" != s || "/" != u.charAt(l + 1)) continue;
                                l++;
                                break;
                            case k:
                                if ("/" == s || "\\" == s) break;
                                a = A;
                                continue;
                            case A:
                                if ("@" == s) {
                                    c && (u = "%40" + u);
                                    for(var c = !0, h = b(u), p = 0; p < h.length; p++){
                                        var m = h[p];
                                        ":" != m || f ? (m = E(m, M), f ? e.password += m : e.username += m) : f = !0;
                                    }
                                    u = "";
                                } else if (s == g || "/" == s || "?" == s || "#" == s || "\\" == s && C(e)) {
                                    if (c && "" == u) return Q;
                                    l -= b(u).length + 1, u = "", a = we;
                                } else u += s;
                                break;
                            case we:
                            case Se:
                                if (r && "file" == e.scheme) {
                                    a = Ce;
                                    continue;
                                }
                                if (":" != s || d) {
                                    if (s == g || "/" == s || "?" == s || "#" == s || "\\" == s && C(e)) {
                                        if (C(e) && "" == u) return _;
                                        if (r && "" == u && (O(e) || null !== e.port)) return;
                                        if (i = w(e, u)) return i;
                                        if (u = "", a = P, r) return;
                                        continue;
                                    }
                                    "[" == s ? d = !0 : "]" == s && (d = !1), u += s;
                                } else {
                                    if ("" == u) return _;
                                    if (i = w(e, u)) return i;
                                    if (u = "", a = Me, r == Se) return;
                                }
                                break;
                            case Me:
                                if (!x.test(s)) {
                                    if (s == g || "/" == s || "?" == s || "#" == s || "\\" == s && C(e) || r) {
                                        if ("" != u) {
                                            var y = parseInt(u, 10);
                                            if (65535 < y) return K;
                                            e.port = C(e) && y === T[e.scheme] ? null : y, u = "";
                                        }
                                        if (r) return;
                                        a = P;
                                        continue;
                                    }
                                    return K;
                                }
                                u += s;
                                break;
                            case Ee:
                                if (e.scheme = "file", "/" == s || "\\" == s) a = Te;
                                else {
                                    if (!o || "file" != o.scheme) {
                                        a = R;
                                        continue;
                                    }
                                    if (s == g) e.host = o.host, e.path = o.path.slice(), e.query = o.query;
                                    else if ("?" == s) e.host = o.host, e.path = o.path.slice(), e.query = "", a = D;
                                    else {
                                        if ("#" != s) {
                                            de(n.slice(l).join("")) || (e.host = o.host, e.path = o.path.slice(), fe(e)), a = R;
                                            continue;
                                        }
                                        e.host = o.host, e.path = o.path.slice(), e.query = o.query, e.fragment = "", a = I;
                                    }
                                }
                                break;
                            case Te:
                                if ("/" == s || "\\" == s) {
                                    a = Ce;
                                    break;
                                }
                                o && "file" == o.scheme && !de(n.slice(l).join("")) && (L(o.path[0], !0) ? e.path.push(o.path[0]) : e.host = o.host), a = R;
                                continue;
                            case Ce:
                                if (s == g || "/" == s || "\\" == s || "?" == s || "#" == s) {
                                    if (!r && L(u)) a = R;
                                    else {
                                        if ("" == u) {
                                            if (e.host = "", r) return;
                                        } else {
                                            if (i = w(e, u)) return i;
                                            if ("localhost" == e.host && (e.host = ""), r) return;
                                            u = "";
                                        }
                                        a = P;
                                    }
                                    continue;
                                }
                                u += s;
                                break;
                            case P:
                                if (C(e)) {
                                    if (a = R, "/" != s && "\\" != s) continue;
                                } else if (r || "?" != s) {
                                    if (r || "#" != s) {
                                        if (s != g && (a = R, "/" != s)) continue;
                                    } else e.fragment = "", a = I;
                                } else e.query = "", a = D;
                                break;
                            case R:
                                if (s == g || "/" == s || "\\" == s && C(e) || !r && ("?" == s || "#" == s)) {
                                    if (pe(u) ? (fe(e), "/" == s || "\\" == s && C(e) || e.path.push("")) : he(u) ? "/" == s || "\\" == s && C(e) || e.path.push("") : ("file" == e.scheme && !e.path.length && L(u) && (e.host && (e.host = ""), u = u.charAt(0) + ":"), e.path.push(u)), u = "", "file" == e.scheme && (s == g || "?" == s || "#" == s)) for(; 1 < e.path.length && "" === e.path[0];)e.path.shift();
                                    "?" == s ? (e.query = "", a = D) : "#" == s && (e.fragment = "", a = I);
                                } else u += E(s, ce);
                                break;
                            case Oe:
                                "?" == s ? (e.query = "", a = D) : "#" == s ? (e.fragment = "", a = I) : s != g && (e.path[0] += E(s, S));
                                break;
                            case D:
                                r || "#" != s ? s != g && ("'" == s && C(e) ? e.query += "%27" : e.query += "#" == s ? "%23" : E(s, S)) : (e.fragment = "", a = I);
                                break;
                            case I:
                                s != g && (e.fragment += E(s, ue));
                        }
                        l++;
                    }
                }
                function l(e) {
                    var t, r, o = G(this, l, "URL"), n = 1 < arguments.length ? arguments[1] : void 0, e = String(e), s = X(o, {
                        type: "URL"
                    });
                    if (void 0 !== n) {
                        if (n instanceof l) t = p(n);
                        else if (r = a(t = {}, String(n))) throw TypeError(r);
                    }
                    if (r = a(s, e, null, t)) throw TypeError(r);
                    var i = s.searchParams = new q;
                    (n = h(i)).updateSearchParams(s.query), n.updateURL = function() {
                        s.query = String(i) || null;
                    }, u || (o.href = m.call(o), o.origin = Le.call(o), o.protocol = ke.call(o), o.username = Ae.call(o), o.password = Pe.call(o), o.host = Re.call(o), o.hostname = De.call(o), o.port = Ie.call(o), o.pathname = Ue.call(o), o.search = Ne.call(o), o.searchParams = Fe.call(o), o.hash = Be.call(o));
                }
                function t(e, t) {
                    return {
                        get: e,
                        set: t,
                        configurable: !0,
                        enumerable: !0
                    };
                }
                var g, r, o, N = e("../internals/export"), u = e("../internals/descriptors"), F = e("../internals/native-url"), s = e("../internals/global"), B = e("../internals/object-define-properties"), i = e("../internals/redefine"), G = e("../internals/an-instance"), v = e("../internals/has"), d = e("../internals/object-assign"), b = e("../internals/array-from"), V = e("../internals/string-multibyte").codeAt, z = e("../internals/string-punycode-to-ascii"), H = e("../internals/set-to-string-tag"), W = e("../modules/web.url-search-params"), e = e("../internals/internal-state"), f = s.URL, q = W.URLSearchParams, h = W.getState, X = e.set, p = e.getterFor("URL"), Y = Math.floor, Z = Math.pow, Q = "Invalid authority", j = "Invalid scheme", _ = "Invalid host", K = "Invalid port", J = /[A-Za-z]/, $ = /[\d+-.A-Za-z]/, x = /\d/, ee = /^(0x|0X)/, te = /^[0-7]+$/, re = /^\d+$/, oe = /^[\dA-Fa-f]+$/, ne = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/, se = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/, ie = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g, ae = /[\u0009\u000A\u000D]/g, w = function(e, t) {
                    var r, o, n;
                    if ("[" == t.charAt(0)) return "]" == t.charAt(t.length - 1) && (r = function(e) {
                        var t = [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ], r = 0, o = null, n = 0, s, i, a, l, u, c, d, f = function() {
                            return e.charAt(n);
                        };
                        if (f() == ":") {
                            if (e.charAt(1) != ":") return;
                            n += 2;
                            r++;
                            o = r;
                        }
                        while(f()){
                            if (r == 8) return;
                            if (f() == ":") {
                                if (o !== null) return;
                                n++;
                                r++;
                                o = r;
                                continue;
                            }
                            s = i = 0;
                            while(i < 4 && oe.test(f())){
                                s = s * 16 + parseInt(f(), 16);
                                n++;
                                i++;
                            }
                            if (f() == ".") {
                                if (i == 0) return;
                                n -= i;
                                if (r > 6) return;
                                a = 0;
                                while(f()){
                                    l = null;
                                    if (a > 0) {
                                        if (f() == "." && a < 4) n++;
                                        else return;
                                    }
                                    if (!x.test(f())) return;
                                    while(x.test(f())){
                                        u = parseInt(f(), 10);
                                        if (l === null) l = u;
                                        else if (l == 0) return;
                                        else l = l * 10 + u;
                                        if (l > 255) return;
                                        n++;
                                    }
                                    t[r] = t[r] * 256 + l;
                                    a++;
                                    if (a == 2 || a == 4) r++;
                                }
                                if (a != 4) return;
                                break;
                            } else if (f() == ":") {
                                n++;
                                if (!f()) return;
                            } else if (f()) return;
                            t[r++] = s;
                        }
                        if (o !== null) {
                            c = r - o;
                            r = 7;
                            while(r != 0 && c > 0){
                                d = t[r];
                                t[r--] = t[o + c - 1];
                                t[o + --c] = d;
                            }
                        } else if (r != 8) return;
                        return t;
                    }(t.slice(1, -1))) ? void (e.host = r) : _;
                    if (C(e)) return t = z(t), ne.test(t) || null === (r = function(e) {
                        var t = e.split("."), r, o, n, s, i, a, l;
                        if (t.length && t[t.length - 1] == "") t.pop();
                        if ((r = t.length) > 4) return e;
                        for(o = [], n = 0; n < r; n++){
                            s = t[n];
                            if (s == "") return e;
                            i = 10;
                            if (s.length > 1 && s.charAt(0) == "0") {
                                i = ee.test(s) ? 16 : 8;
                                s = s.slice(i == 8 ? 1 : 2);
                            }
                            if (s === "") a = 0;
                            else {
                                if (!(i == 10 ? re : i == 8 ? te : oe).test(s)) return e;
                                a = parseInt(s, i);
                            }
                            o.push(a);
                        }
                        for(n = 0; n < r; n++){
                            a = o[n];
                            if (n == r - 1) {
                                if (a >= Z(256, 5 - r)) return null;
                            } else if (a > 255) return null;
                        }
                        for(l = o.pop(), n = 0; n < o.length; n++)l += o[n] * Z(256, 3 - n);
                        return l;
                    }(t)) ? _ : void (e.host = r);
                    if (se.test(t)) return _;
                    for(r = "", o = b(t), n = 0; n < o.length; n++)r += E(o[n], S);
                    e.host = r;
                }, le = function(e) {
                    for(var t = null, r = 1, o = null, n = 0, s = 0; s < 8; s++)0 !== e[s] ? (r < n && (t = o, r = n), o = null, n = 0) : (null === o && (o = s), ++n);
                    return r < n && (t = o, r = n), t;
                }, S = {}, ue = d({}, S, {
                    " ": 1,
                    '"': 1,
                    "<": 1,
                    ">": 1,
                    "`": 1
                }), ce = d({}, ue, {
                    "#": 1,
                    "?": 1,
                    "{": 1,
                    "}": 1
                }), M = d({}, ce, {
                    "/": 1,
                    ":": 1,
                    ";": 1,
                    "=": 1,
                    "@": 1,
                    "[": 1,
                    "\\": 1,
                    "]": 1,
                    "^": 1,
                    "|": 1
                }), E = function(e, t) {
                    var r = V(e, 0);
                    return 32 < r && r < 127 && !v(t, e) ? e : encodeURIComponent(e);
                }, T = {
                    ftp: 21,
                    file: null,
                    http: 80,
                    https: 443,
                    ws: 80,
                    wss: 443
                }, C = function(e) {
                    return v(T, e.scheme);
                }, O = function(e) {
                    return "" != e.username || "" != e.password;
                }, L = function(e, t) {
                    return 2 == e.length && J.test(e.charAt(0)) && (":" == (e = e.charAt(1)) || !t && "|" == e);
                }, de = function(e) {
                    return 1 < e.length && L(e.slice(0, 2)) && (2 == e.length || "/" === (e = e.charAt(2)) || "\\" === e || "?" === e || "#" === e);
                }, fe = function(e) {
                    var t = e.path, r = t.length;
                    !r || "file" == e.scheme && 1 == r && L(t[0], !0) || t.pop();
                }, he = function(e) {
                    return "." === e || "%2e" === e.toLowerCase();
                }, pe = function(e) {
                    return ".." === (e = e.toLowerCase()) || "%2e." === e || ".%2e" === e || "%2e%2e" === e;
                }, me = {}, ye = {}, ge = {}, ve = {}, be = {}, je = {}, _e = {}, xe = {}, k = {}, A = {}, we = {}, Se = {}, Me = {}, Ee = {}, Te = {}, Ce = {}, P = {}, R = {}, Oe = {}, D = {}, I = {}, s = l.prototype, m = function() {
                    var e = p(this), t = e.scheme, r = e.username, o = e.password, n = e.host, s = e.port, i = e.path, a = e.query, l = e.fragment, u = t + ":";
                    return null !== n ? (u += "//", O(e) && (u += r + (o ? ":" + o : "") + "@"), u += c(n), null !== s && (u += ":" + s)) : "file" == t && (u += "//"), u += e.cannotBeABaseURL ? i[0] : i.length ? "/" + i.join("/") : "", null !== a && (u += "?" + a), null !== l && (u += "#" + l), u;
                }, Le = function() {
                    var e = p(this), t = e.scheme, r = e.port;
                    if ("blob" == t) try {
                        return new URL(t.path[0]).origin;
                    } catch (e) {
                        return "null";
                    }
                    return "file" != t && C(e) ? t + "://" + c(e.host) + (null !== r ? ":" + r : "") : "null";
                }, ke = function() {
                    return p(this).scheme + ":";
                }, Ae = function() {
                    return p(this).username;
                }, Pe = function() {
                    return p(this).password;
                }, Re = function() {
                    var e = p(this), t = e.host, e = e.port;
                    return null === t ? "" : null === e ? c(t) : c(t) + ":" + e;
                }, De = function() {
                    var e = p(this).host;
                    return null === e ? "" : c(e);
                }, Ie = function() {
                    var e = p(this).port;
                    return null === e ? "" : String(e);
                }, Ue = function() {
                    var e = p(this), t = e.path;
                    return e.cannotBeABaseURL ? t[0] : t.length ? "/" + t.join("/") : "";
                }, Ne = function() {
                    var e = p(this).query;
                    return e ? "?" + e : "";
                }, Fe = function() {
                    return p(this).searchParams;
                }, Be = function() {
                    var e = p(this).fragment;
                    return e ? "#" + e : "";
                };
                u && B(s, {
                    href: t(m, function(e) {
                        var t = p(this), e = String(e), e = a(t, e);
                        if (e) throw TypeError(e);
                        h(t.searchParams).updateSearchParams(t.query);
                    }),
                    origin: t(Le),
                    protocol: t(ke, function(e) {
                        var t = p(this);
                        a(t, String(e) + ":", me);
                    }),
                    username: t(Ae, function(e) {
                        var t = p(this), r = b(String(e));
                        if (!n(t)) {
                            t.username = "";
                            for(var o = 0; o < r.length; o++)t.username += E(r[o], M);
                        }
                    }),
                    password: t(Pe, function(e) {
                        var t = p(this), r = b(String(e));
                        if (!n(t)) {
                            t.password = "";
                            for(var o = 0; o < r.length; o++)t.password += E(r[o], M);
                        }
                    }),
                    host: t(Re, function(e) {
                        var t = p(this);
                        t.cannotBeABaseURL || a(t, String(e), we);
                    }),
                    hostname: t(De, function(e) {
                        var t = p(this);
                        t.cannotBeABaseURL || a(t, String(e), Se);
                    }),
                    port: t(Ie, function(e) {
                        var t = p(this);
                        n(t) || ("" == (e = String(e)) ? t.port = null : a(t, e, Me));
                    }),
                    pathname: t(Ue, function(e) {
                        var t = p(this);
                        t.cannotBeABaseURL || (t.path = [], a(t, e + "", P));
                    }),
                    search: t(Ne, function(e) {
                        var t = p(this);
                        "" == (e = String(e)) ? t.query = null : ("?" == e.charAt(0) && (e = e.slice(1)), t.query = "", a(t, e, D)), h(t.searchParams).updateSearchParams(t.query);
                    }),
                    searchParams: t(Fe),
                    hash: t(Be, function(e) {
                        var t = p(this);
                        "" == (e = String(e)) ? t.fragment = null : ("#" == e.charAt(0) && (e = e.slice(1)), t.fragment = "", a(t, e, I));
                    })
                }), i(s, "toJSON", function() {
                    return m.call(this);
                }, {
                    enumerable: !0
                }), i(s, "toString", function() {
                    return m.call(this);
                }, {
                    enumerable: !0
                }), f && (r = f.createObjectURL, o = f.revokeObjectURL, r && i(l, "createObjectURL", function(e) {
                    return r.apply(f, arguments);
                }), o && i(l, "revokeObjectURL", function(e) {
                    return o.apply(f, arguments);
                })), H(l, "URL"), N({
                    global: !0,
                    forced: !F,
                    sham: !u
                }, {
                    URL: l
                });
            },
            {
                "../internals/an-instance": 9,
                "../internals/array-from": 17,
                "../internals/descriptors": 43,
                "../internals/export": 50,
                "../internals/global": 59,
                "../internals/has": 60,
                "../internals/internal-state": 70,
                "../internals/native-url": 84,
                "../internals/object-assign": 89,
                "../internals/object-define-properties": 91,
                "../internals/redefine": 108,
                "../internals/set-to-string-tag": 117,
                "../internals/string-multibyte": 123,
                "../internals/string-punycode-to-ascii": 124,
                "../modules/es.string.iterator": 186,
                "../modules/web.url-search-params": 231
            }
        ],
        233: [
            function(e, t, r) {
                "use strict";
                t.exports = e("./").polyfill();
            },
            {
                "./": 234
            }
        ],
        234: [
            function(V, r, o) {
                (function(B, G) {
                    var e, t;
                    e = this, t = function() {
                        "use strict";
                        function l(e) {
                            return "function" == typeof e;
                        }
                        var r = Array.isArray || function(e) {
                            return "[object Array]" === Object.prototype.toString.call(e);
                        }, o = 0, t = void 0, n = void 0, i = function(e, t) {
                            d[o] = e, d[o + 1] = t, 2 === (o += 2) && (n ? n(f) : I());
                        };
                        var e = "undefined" != typeof window ? window : void 0, s = e || {}, s = s.MutationObserver || s.WebKitMutationObserver, a = "undefined" == typeof self && void 0 !== B && "[object process]" === ({}).toString.call(B), u = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;
                        function c() {
                            var e = setTimeout;
                            return function() {
                                return e(f, 1);
                            };
                        }
                        var d = new Array(1e3);
                        function f() {
                            for(var e = 0; e < o; e += 2)(0, d[e])(d[e + 1]), d[e] = void 0, d[e + 1] = void 0;
                            o = 0;
                        }
                        function h() {
                            try {
                                var e = Function("return this")().require("vertx");
                                return void 0 !== (t = e.runOnLoop || e.runOnContext) ? function() {
                                    t(f);
                                } : c();
                            } catch (e) {
                                return c();
                            }
                        }
                        var p, m, y, I = void 0;
                        function g(e, t) {
                            var r, o = this, n = new this.constructor(j), s = (void 0 === n[b] && A(n), o._state);
                            return s ? (r = arguments[s - 1], i(function() {
                                return L(s, n, r, o._result);
                            })) : C(o, n, e, t), n;
                        }
                        function v(e) {
                            var t;
                            return e && "object" == typeof e && e.constructor === this ? e : (M(t = new this(j), e), t);
                        }
                        var I = a ? function() {
                            return B.nextTick(f);
                        } : s ? (m = 0, a = new s(f), y = document.createTextNode(""), a.observe(y, {
                            characterData: !0
                        }), function() {
                            y.data = m = ++m % 2;
                        }) : u ? ((p = new MessageChannel).port1.onmessage = f, function() {
                            return p.port2.postMessage(0);
                        }) : (void 0 === e && "function" == typeof V ? h : c)(), b = Math.random().toString(36).substring(2);
                        function j() {}
                        var _ = void 0, x = 1, w = 2;
                        function U(e, o, n) {
                            i(function(t) {
                                var r = !1, e = function(e, t, r, o) {
                                    try {
                                        e.call(t, r, o);
                                    } catch (e) {
                                        return e;
                                    }
                                }(n, o, function(e) {
                                    r || (r = !0, (o !== e ? M : E)(t, e));
                                }, function(e) {
                                    r || (r = !0, T(t, e));
                                }, t._label);
                                !r && e && (r = !0, T(t, e));
                            }, e);
                        }
                        function S(e, t, r) {
                            var o, n;
                            t.constructor === e.constructor && r === g && t.constructor.resolve === v ? (o = e, (n = t)._state === x ? E(o, n._result) : n._state === w ? T(o, n._result) : C(n, void 0, function(e) {
                                return M(o, e);
                            }, function(e) {
                                return T(o, e);
                            })) : void 0 !== r && l(r) ? U(e, t, r) : E(e, t);
                        }
                        function M(t, e) {
                            if (t === e) T(t, new TypeError("You cannot resolve a promise with itself"));
                            else if (r = typeof e, null === e || "object" != r && "function" != r) E(t, e);
                            else {
                                r = void 0;
                                try {
                                    r = e.then;
                                } catch (e) {
                                    return void T(t, e);
                                }
                                S(t, e, r);
                            }
                            var r;
                        }
                        function N(e) {
                            e._onerror && e._onerror(e._result), O(e);
                        }
                        function E(e, t) {
                            e._state === _ && (e._result = t, e._state = x, 0 !== e._subscribers.length && i(O, e));
                        }
                        function T(e, t) {
                            e._state === _ && (e._state = w, e._result = t, i(N, e));
                        }
                        function C(e, t, r, o) {
                            var n = e._subscribers, s = n.length;
                            e._onerror = null, n[s] = t, n[s + x] = r, n[s + w] = o, 0 === s && e._state && i(O, e);
                        }
                        function O(e) {
                            var t = e._subscribers, r = e._state;
                            if (0 !== t.length) {
                                for(var o, n = void 0, s = e._result, i = 0; i < t.length; i += 3)o = t[i], n = t[i + r], o ? L(r, o, n, s) : n(s);
                                e._subscribers.length = 0;
                            }
                        }
                        function L(e, t, r, o) {
                            var n = l(r), s = void 0, i = void 0, a = !0;
                            if (n) {
                                try {
                                    s = r(o);
                                } catch (e) {
                                    a = !1, i = e;
                                }
                                if (t === s) return void T(t, new TypeError("A promises callback cannot return that same promise."));
                            } else s = o;
                            t._state === _ && (n && a ? M(t, s) : !1 === a ? T(t, i) : e === x ? E(t, s) : e === w && T(t, s));
                        }
                        var k = 0;
                        function A(e) {
                            e[b] = k++, e._state = void 0, e._result = void 0, e._subscribers = [];
                        }
                        P.prototype._enumerate = function(e) {
                            for(var t = 0; this._state === _ && t < e.length; t++)this._eachEntry(e[t], t);
                        }, P.prototype._eachEntry = function(t, e) {
                            var r = this._instanceConstructor, o = r.resolve;
                            if (o === v) {
                                var n, s = void 0, i = void 0, a = !1;
                                try {
                                    s = t.then;
                                } catch (e) {
                                    a = !0, i = e;
                                }
                                s === g && t._state !== _ ? this._settledAt(t._state, e, t._result) : "function" != typeof s ? (this._remaining--, this._result[e] = t) : r === R ? (n = new r(j), a ? T(n, i) : S(n, t, s), this._willSettleAt(n, e)) : this._willSettleAt(new r(function(e) {
                                    return e(t);
                                }), e);
                            } else this._willSettleAt(o(t), e);
                        }, P.prototype._settledAt = function(e, t, r) {
                            var o = this.promise;
                            o._state === _ && (this._remaining--, e === w ? T(o, r) : this._result[t] = r), 0 === this._remaining && E(o, this._result);
                        }, P.prototype._willSettleAt = function(e, t) {
                            var r = this;
                            C(e, void 0, function(e) {
                                return r._settledAt(x, t, e);
                            }, function(e) {
                                return r._settledAt(w, t, e);
                            });
                        };
                        var F = P;
                        function P(e, t) {
                            this._instanceConstructor = e, this.promise = new e(j), this.promise[b] || A(this.promise), r(t) ? (this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 0 !== this.length && (this.length = this.length || 0, this._enumerate(t), 0 !== this._remaining) || E(this.promise, this._result)) : T(this.promise, new Error("Array Methods must be provided an Array"));
                        }
                        D.prototype.catch = function(e) {
                            return this.then(null, e);
                        }, D.prototype.finally = function(t) {
                            var r = this.constructor;
                            return l(t) ? this.then(function(e) {
                                return r.resolve(t()).then(function() {
                                    return e;
                                });
                            }, function(e) {
                                return r.resolve(t()).then(function() {
                                    throw e;
                                });
                            }) : this.then(t, t);
                        };
                        var R = D;
                        function D(e) {
                            if (this[b] = k++, this._result = this._state = void 0, this._subscribers = [], j !== e) {
                                if ("function" != typeof e) throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
                                if (!(this instanceof D)) throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                                var t = this;
                                try {
                                    e(function(e) {
                                        M(t, e);
                                    }, function(e) {
                                        T(t, e);
                                    });
                                } catch (e) {
                                    T(t, e);
                                }
                            }
                        }
                        return R.prototype.then = g, R.all = function(e) {
                            return new F(this, e).promise;
                        }, R.race = function(n) {
                            var s = this;
                            return r(n) ? new s(function(e, t) {
                                for(var r = n.length, o = 0; o < r; o++)s.resolve(n[o]).then(e, t);
                            }) : new s(function(e, t) {
                                return t(new TypeError("You must pass an array to race."));
                            });
                        }, R.resolve = v, R.reject = function(e) {
                            var t = new this(j);
                            return T(t, e), t;
                        }, R._setScheduler = function(e) {
                            n = e;
                        }, R._setAsap = function(e) {
                            i = e;
                        }, R._asap = i, R.polyfill = function() {
                            var e = void 0;
                            if (void 0 !== G) e = G;
                            else if ("undefined" != typeof self) e = self;
                            else try {
                                e = Function("return this")();
                            } catch (e) {
                                throw new Error("polyfill failed because global object is unavailable in this environment");
                            }
                            var t = e.Promise;
                            if (t) {
                                var r = null;
                                try {
                                    r = Object.prototype.toString.call(t.resolve());
                                } catch (e) {}
                                if ("[object Promise]" === r && !t.cast) return;
                            }
                            e.Promise = R;
                        }, R.Promise = R;
                    }, "object" == typeof o && void 0 !== r ? r.exports = t() : "function" == typeof s && s.amd ? s(t) : e.ES6Promise = t();
                }).call(this, V("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
            },
            {
                _process: 243
            }
        ],
        235: [
            function(e, t, r) {
                var o, n;
                o = this, n = function(e, t) {
                    "use strict";
                    var r = 5e3, o = "callback";
                    function d(t) {
                        try {
                            delete window[t];
                        } catch (e) {
                            window[t] = void 0;
                        }
                    }
                    function f(e) {
                        e = document.getElementById(e);
                        e && document.getElementsByTagName("head")[0].removeChild(e);
                    }
                    t.exports = function(s) {
                        var i = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1], a = s, l = i.timeout || r, u = i.jsonpCallback || o, c = void 0;
                        return new Promise(function(t, e) {
                            var r = i.jsonpCallbackFunction || "jsonp_" + Date.now() + "_" + Math.ceil(1e5 * Math.random()), o = u + "_" + r, n = (window[r] = function(e) {
                                t({
                                    ok: !0,
                                    json: function() {
                                        return Promise.resolve(e);
                                    }
                                }), c && clearTimeout(c), f(o), d(r);
                            }, a += -1 === a.indexOf("?") ? "?" : "&", document.createElement("script"));
                            n.setAttribute("src", "" + a + u + "=" + r), i.charset && n.setAttribute("charset", i.charset), n.id = o, document.getElementsByTagName("head")[0].appendChild(n), c = setTimeout(function() {
                                e(new Error("JSONP request to " + s + " timed out")), d(r), f(o), window[r] = function() {
                                    d(r);
                                };
                            }, l), n.onerror = function() {
                                e(new Error("JSONP request to " + s + " failed")), d(r), f(o), c && clearTimeout(c);
                            };
                        });
                    };
                }, "function" == typeof s && s.amd ? s([
                    "exports",
                    "module"
                ], n) : void 0 !== r && void 0 !== t ? n(0, t) : (n(n = {
                    exports: {}
                }, n), o.fetchJsonp = n.exports);
            },
            {}
        ],
        236: [
            function(e, t, r) {
                var o = function(a) {
                    "use strict";
                    var l, u, c, d, f, h, t, p, m, o, e;
                    if (!(void 0 === a || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) return e = a.document, l = function() {
                        return a.URL || a.webkitURL || a;
                    }, u = e.createElementNS("http://www.w3.org/1999/xhtml", "a"), c = "download" in u, d = /constructor/i.test(a.HTMLElement) || a.safari, f = /CriOS\/[\d]+/.test(navigator.userAgent), h = function(e) {
                        (a.setImmediate || a.setTimeout)(function() {
                            throw e;
                        }, 0);
                    }, t = 4e4, p = function(e) {
                        setTimeout(function() {
                            "string" == typeof e ? l().revokeObjectURL(e) : e.remove();
                        }, t);
                    }, m = function(e) {
                        return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type) ? new Blob([
                            String.fromCharCode(65279),
                            e
                        ], {
                            type: e.type
                        }) : e;
                    }, e = (o = function(e, r, t) {
                        t || (e = m(e));
                        var o, n, s = this, t = "application/octet-stream" === e.type, i = function() {
                            for(var e = s, t = "writestart progress write writeend".split(" "), r = void 0, o = (t = [].concat(t)).length; o--;){
                                var n = e["on" + t[o]];
                                if ("function" == typeof n) try {
                                    n.call(e, r || e);
                                } catch (e) {
                                    h(e);
                                }
                            }
                        };
                        s.readyState = s.INIT, c ? (o = l().createObjectURL(e), setTimeout(function() {
                            var e, t;
                            u.href = o, u.download = r, e = u, t = new MouseEvent("click"), e.dispatchEvent(t), i(), p(o), s.readyState = s.DONE;
                        })) : (f || t && d) && a.FileReader ? ((n = new FileReader).onloadend = function() {
                            var e = f ? n.result : n.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                            a.open(e, "_blank") || (a.location.href = e), e = void 0, s.readyState = s.DONE, i();
                        }, n.readAsDataURL(e), s.readyState = s.INIT) : (o = o || l().createObjectURL(e), !t && a.open(o, "_blank") || (a.location.href = o), s.readyState = s.DONE, i(), p(o));
                    }).prototype, "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function(e, t, r) {
                        return t = t || e.name || "download", r || (e = m(e)), navigator.msSaveOrOpenBlob(e, t);
                    } : (e.abort = function() {}, e.readyState = e.INIT = 0, e.WRITING = 1, e.DONE = 2, e.error = e.onwritestart = e.onprogress = e.onwrite = e.onabort = e.onerror = e.onwriteend = null, function(e, t, r) {
                        return new o(e, t || e.name || "download", r);
                    });
                }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content);
                void 0 !== t && t.exports ? t.exports.saveAs = o : null != s && null !== s.amd && s("FileSaver.js", function() {
                    return o;
                });
            },
            {}
        ],
        237: [
            function(e, t, r) {
                var o, n = Object.defineProperty, s = (n(r, "__esModule", {
                    value: !0
                }), r), i = {
                    GIFEncoder: ()=>f,
                    applyPalette: ()=>function(e, t, r = "rgb565") {
                            if (!e || !e.buffer) throw new Error("quantize() expected RGBA Uint8Array data");
                            if (!(e instanceof Uint8Array || e instanceof Uint8ClampedArray)) throw new Error("quantize() expected RGBA Uint8Array data");
                            if (256 < t.length) throw new Error("applyPalette() only works with 256 colors or less");
                            const o = new Uint32Array(e.buffer), n = o.length, s = "rgb444" === r ? 4096 : 65536, i = new Uint8Array(n), a = new Array(s);
                            if ("rgba4444" === r) for(let e = 0; e < n; e++){
                                var l = o[e], u = l >> 24 & 255, c = l >> 16 & 255, d = l >> 8 & 255, l = 255 & l, f = k(l, d, c, u), f = f in a ? a[f] : a[f] = function(t, r, o, n, s) {
                                    let i = 0, a = 1e100;
                                    for(let e = 0; e < s.length; e++){
                                        var l, u = s[e], c = v(u[3] - n);
                                        c > a || (l = u[0], (c += v(l - t)) > a || (l = u[1], (c += v(l - r)) > a || (l = u[2], (c += v(l - o)) > a || (a = c, i = e))));
                                    }
                                    return i;
                                }(l, d, c, u, t);
                                i[e] = f;
                            }
                            else {
                                const g = "rgb444" === r ? A : L;
                                for(let e = 0; e < n; e++){
                                    var h = o[e], p = h >> 16 & 255, m = h >> 8 & 255, h = 255 & h, y = g(h, m, p), y = y in a ? a[y] : a[y] = function(t, r, o, n) {
                                        let s = 0, i = 1e100;
                                        for(let e = 0; e < n.length; e++){
                                            var a, l = n[e], u = v(l[0] - t);
                                            u > i || (a = l[1], (u += v(a - r)) > i || (a = l[2], (u += v(a - o)) > i || (i = u, s = e)));
                                        }
                                        return s;
                                    }(h, m, p, t);
                                    i[e] = y;
                                }
                            }
                            return i;
                        },
                    default: ()=>h,
                    nearestColor: ()=>function(e, t, r = u) {
                            return e[l(e, t, r)];
                        },
                    nearestColorIndex: ()=>l,
                    nearestColorIndexWithDistance: ()=>d,
                    prequantize: ()=>function(e, { roundRGB: r = 5, roundAlpha: o = 10, oneBitAlpha: n = null } = {}) {
                            const s = new Uint32Array(e.buffer);
                            for(let t = 0; t < s.length; t++){
                                var i = s[t];
                                let e = i >> 24 & 255;
                                var a, l = i >> 16 & 255, u = i >> 8 & 255, i = 255 & i;
                                e = c(e, o), n && (a = "number" == typeof n ? n : 127, e = e <= a ? 0 : 255), i = c(i, r), u = c(u, r), l = c(l, r), s[t] = e << 24 | l << 16 | u << 8 | i << 0;
                            }
                        },
                    quantize: ()=>function(e, t, r = {}) {
                            var { format: o = "rgb565", clearAlpha: n = !0, clearAlphaColor: s = 0, clearAlphaThreshold: i = 0, oneBitAlpha: a = !1 } = r;
                            if (!e || !e.buffer) throw new Error("quantize() expected RGBA Uint8Array data");
                            if (!(e instanceof Uint8Array || e instanceof Uint8ClampedArray)) throw new Error("quantize() expected RGBA Uint8Array data");
                            e = new Uint32Array(e.buffer);
                            let l = !1 !== r.useSqrt;
                            const u = "rgba4444" === o, c = function(r, e) {
                                const t = "rgb444" === e ? 4096 : 65536, o = new Array(t), n = r.length;
                                if ("rgba4444" === e) for(let t = 0; t < n; ++t){
                                    var s = r[t], i = s >> 24 & 255, a = s >> 16 & 255, l = s >> 8 & 255, s = 255 & s, u = k(s, l, a, i);
                                    let e = u in o ? o[u] : o[u] = I();
                                    e.rc += s, e.gc += l, e.bc += a, e.ac += i, e.cnt++;
                                }
                                else if ("rgb444" === e) for(let t = 0; t < n; ++t){
                                    var c = r[t], d = c >> 16 & 255, f = c >> 8 & 255, c = 255 & c, h = A(c, f, d);
                                    let e = h in o ? o[h] : o[h] = I();
                                    e.rc += c, e.gc += f, e.bc += d, e.cnt++;
                                }
                                else for(let t = 0; t < n; ++t){
                                    var p = r[t], m = p >> 16 & 255, y = p >> 8 & 255, p = 255 & p, g = L(p, y, m);
                                    let e = g in o ? o[g] : o[g] = I();
                                    e.rc += p, e.gc += y, e.bc += m, e.cnt++;
                                }
                                return o;
                            }(e, o), d = c.length, f = d - 1, h = new Uint32Array(d + 1);
                            for(var p = 0, m = 0; m < d; ++m){
                                const O = c[m];
                                null != O && (E = 1 / O.cnt, u && (O.ac *= E), O.rc *= E, O.gc *= E, O.bc *= E, c[p++] = O);
                            }
                            R(t) / p < .022 && (l = !1);
                            for(var y, g, v, m = 0; m < p - 1; ++m)c[m].fw = m + 1, c[m + 1].bk = m, l && (c[m].cnt = Math.sqrt(c[m].cnt));
                            l && (c[m].cnt = Math.sqrt(c[m].cnt));
                            for(m = 0; m < p; ++m){
                                D(c, m, !1);
                                var b = c[m].err;
                                for(g = ++h[0]; 1 < g && (v = g >> 1, !(c[y = h[v]].err <= b)); g = v)h[g] = y;
                                h[g] = m;
                            }
                            var j, _ = p - t;
                            for(m = 0; m < _;){
                                for(;;){
                                    var x = h[1];
                                    if ((j = c[x]).tm >= j.mtm && c[j.nn].mtm <= j.tm) break;
                                    j.mtm == f ? x = h[1] = h[h[0]--] : (D(c, x, !1), j.tm = m);
                                    b = c[x].err;
                                    for(g = 1; (v = g + g) <= h[0] && (v < h[0] && c[h[v]].err > c[h[v + 1]].err && v++, !(b <= c[y = h[v]].err)); g = v)h[g] = y;
                                    h[g] = x;
                                }
                                var w = c[j.nn], S = j.cnt, M = w.cnt, E = 1 / (S + M);
                                u && (j.ac = E * (S * j.ac + M * w.ac)), j.rc = E * (S * j.rc + M * w.rc), j.gc = E * (S * j.gc + M * w.gc), j.bc = E * (S * j.bc + M * w.bc), j.cnt += w.cnt, j.mtm = ++m, c[w.bk].fw = w.fw, c[w.fw].bk = w.bk, w.mtm = f;
                            }
                            let T = [];
                            for(m = 0;;){
                                let e = P(Math.round(c[m].rc), 0, 255), t = P(Math.round(c[m].gc), 0, 255), r = P(Math.round(c[m].bc), 0, 255), o = 255;
                                u && (o = P(Math.round(c[m].ac), 0, 255), a && (C = "number" == typeof a ? a : 127, o = o <= C ? 0 : 255), n && o <= i && (e = t = r = s, o = 0));
                                var C = u ? [
                                    e,
                                    t,
                                    r,
                                    o
                                ] : [
                                    e,
                                    t,
                                    r
                                ];
                                if (function(t, r) {
                                    for(let e = 0; e < t.length; e++){
                                        var o = t[e], n = o[0] === r[0] && o[1] === r[1] && o[2] === r[2], o = !(4 <= o.length && 4 <= r.length) || o[3] === r[3];
                                        if (n && o) return !0;
                                    }
                                    return !1;
                                }(T, C) || T.push(C), 0 == (m = c[m].fw)) break;
                            }
                            return T;
                        },
                    snapColorsToPalette: ()=>function(r, o, e = 5) {
                            if (r.length && o.length) {
                                var n = r.map((e)=>e.slice(0, 3)), s = e * e, i = r[0].length;
                                for(let t = 0; t < o.length; t++){
                                    let e = o[t];
                                    e = e.length < i ? [
                                        e[0],
                                        e[1],
                                        e[2],
                                        255
                                    ] : e.length > i ? e.slice(0, 3) : e.slice();
                                    var a = d(n, e.slice(0, 3), u), l = a[0], a = a[1];
                                    0 < a && a <= s && (r[l] = e);
                                }
                            }
                        }
                };
                for(o in i)n(s, o, {
                    get: i[o],
                    enumerable: !0
                });
                var a = {
                    signature: "GIF",
                    version: "89a",
                    trailer: 59,
                    extensionIntroducer: 33,
                    applicationExtensionLabel: 255,
                    graphicControlExtensionLabel: 249,
                    imageSeparator: 44,
                    signatureSize: 3,
                    versionSize: 3,
                    globalColorTableFlagMask: 128,
                    colorResolutionMask: 112,
                    sortFlagMask: 8,
                    globalColorTableSizeMask: 7,
                    applicationIdentifierSize: 8,
                    applicationAuthCodeSize: 3,
                    disposalMethodMask: 28,
                    userInputFlagMask: 2,
                    transparentColorFlagMask: 1,
                    localColorTableFlagMask: 128,
                    interlaceFlagMask: 64,
                    idSortFlagMask: 32,
                    localColorTableSizeMask: 7
                };
                function T(e = 256) {
                    let n = 0, s = new Uint8Array(e);
                    return {
                        get buffer () {
                            return s.buffer;
                        },
                        reset () {
                            n = 0;
                        },
                        bytesView () {
                            return s.subarray(0, n);
                        },
                        bytes () {
                            return s.slice(0, n);
                        },
                        writeByte (e) {
                            i(n + 1), s[n] = e, n++;
                        },
                        writeBytes (t, r = 0, o = t.length) {
                            i(n + o);
                            for(let e = 0; e < o; e++)s[n++] = t[e + r];
                        },
                        writeBytesView (e, t = 0, r = e.byteLength) {
                            i(n + r), s.set(e.subarray(t, t + r), n), n += r;
                        }
                    };
                    function i(e) {
                        var t = s.length;
                        if (!(e <= t)) {
                            e = Math.max(e, t * (t < 1048576 ? 2 : 1.125) >>> 0), 0 != t && (e = Math.max(e, 256));
                            const r = s;
                            s = new Uint8Array(e), 0 < n && s.set(r.subarray(0, n), 0);
                        }
                    }
                }
                var C = [
                    0,
                    1,
                    3,
                    7,
                    15,
                    31,
                    63,
                    127,
                    255,
                    511,
                    1023,
                    2047,
                    4095,
                    8191,
                    16383,
                    32767,
                    65535
                ];
                var S = function(e, t, r, o, n = T(512), s = new Uint8Array(256), i = new Int32Array(5003), a = new Int32Array(5003)) {
                    var l = i.length, o = Math.max(2, o);
                    s.fill(0), a.fill(0), i.fill(-1);
                    let u = 0, c = 0;
                    var d = o + 1;
                    const f = d;
                    let h = !1, p = f, m = (1 << p) - 1;
                    var y = 1 << d - 1;
                    const g = 1 + y;
                    let v = 2 + y, b = 0, j = r[0], _ = 0;
                    for(let e = l; e < 65536; e *= 2)++_;
                    _ = 8 - _, n.writeByte(o), E(y);
                    var x = r.length;
                    for(let t = 1; t < x; t++)e: {
                        var w = r[t], S = (w << 12) + j;
                        let e = w << _ ^ j;
                        if (i[e] === S) j = a[e];
                        else {
                            for(var M = 0 === e ? 1 : l - e; 0 <= i[e];)if ((e -= M) < 0 && (e += l), i[e] === S) {
                                j = a[e];
                                break e;
                            }
                            E(j), j = w, v < 4096 ? (a[e] = v++, i[e] = S) : (i.fill(-1), v = 2 + y, h = !0, E(y));
                        }
                    }
                    return E(j), E(g), n.writeByte(0), n.bytesView();
                    function E(e) {
                        for(u &= C[c], 0 < c ? u |= e << c : u = e, c += p; 8 <= c;)s[b++] = 255 & u, 254 <= b && (n.writeByte(b), n.writeBytesView(s, 0, b), b = 0), u >>= 8, c -= 8;
                        if ((v > m || h) && (h ? (p = f, m = (1 << p) - 1, h = !1) : (++p, m = 12 === p ? 1 << p : (1 << p) - 1)), e == g) {
                            for(; 0 < c;)s[b++] = 255 & u, 254 <= b && (n.writeByte(b), n.writeBytesView(s, 0, b), b = 0), u >>= 8, c -= 8;
                            0 < b && (n.writeByte(b), n.writeBytesView(s, 0, b), b = 0);
                        }
                    }
                };
                function L(e, t, r) {
                    return e << 8 & 63488 | t << 2 & 992 | r >> 3;
                }
                function k(e, t, r, o) {
                    return e >> 4 | 240 & t | (240 & r) << 4 | (240 & o) << 8;
                }
                function A(e, t, r) {
                    return e >> 4 << 8 | 240 & t | r >> 4;
                }
                function P(e, t, r) {
                    return e < t ? t : r < e ? r : e;
                }
                function R(e) {
                    return e * e;
                }
                function D(e, t, r) {
                    var o = 0, n = 1e100;
                    const s = e[t];
                    for(var i = s.cnt, a = s.ac, l = s.rc, u = s.gc, c = s.bc, d = s.fw; 0 != d; d = e[d].fw){
                        var f, h = e[d], p = h.cnt, p = i * p / (i + p);
                        n <= p || (f = 0, r && n <= (f += p * R(h.ac - a)) || n <= (f += p * R(h.rc - l)) || n <= (f += p * R(h.gc - u)) || n <= (f += p * R(h.bc - c)) || (n = f, o = d));
                    }
                    s.err = n, s.nn = o;
                }
                function I() {
                    return {
                        ac: 0,
                        rc: 0,
                        gc: 0,
                        bc: 0,
                        cnt: 0,
                        nn: 0,
                        fw: 0,
                        bk: 0,
                        tm: 0,
                        mtm: 0,
                        err: 0
                    };
                }
                function u(e, t) {
                    for(var r = 0, o = 0; o < e.length; o++){
                        var n = e[o] - t[o];
                        r += n * n;
                    }
                    return r;
                }
                function c(e, t) {
                    return 1 < t ? Math.round(e / t) * t : e;
                }
                function v(e) {
                    return e * e;
                }
                function l(t, r, o = u) {
                    let n = 1 / 0, s = -1;
                    for(let e = 0; e < t.length; e++){
                        var i = o(r, t[e]);
                        i < n && (n = i, s = e);
                    }
                    return s;
                }
                function d(t, r, o = u) {
                    let n = 1 / 0, s = -1;
                    for(let e = 0; e < t.length; e++){
                        var i = o(r, t[e]);
                        i < n && (n = i, s = e);
                    }
                    return [
                        s,
                        n
                    ];
                }
                function f(e = {}) {
                    const { initialCapacity: t = 4096, auto: g = !0 } = e, v = T(t);
                    const b = new Uint8Array(256), j = new Int32Array(5003), _ = new Int32Array(5003);
                    let x = !1;
                    return {
                        reset () {
                            v.reset(), x = !1;
                        },
                        finish () {
                            v.writeByte(a.trailer);
                        },
                        bytes () {
                            return v.bytes();
                        },
                        bytesView () {
                            return v.bytesView();
                        },
                        get buffer () {
                            return v.buffer;
                        },
                        get stream () {
                            return v;
                        },
                        writeHeader: w,
                        writeFrame (e, t, r, o = {}) {
                            var { transparent: n = !1, transparentIndex: s = 0, delay: i = 0, palette: a = null, repeat: l = 0, colorDepth: u = 8, dispose: c = -1 } = o;
                            let d = !1;
                            if (g ? x || (d = !0, w(), x = !0) : d = Boolean(o.first), t = Math.max(0, Math.floor(t)), r = Math.max(0, Math.floor(r)), d) {
                                if (!a) throw new Error("First frame must include a { palette } option");
                                var [o, f, h, p, m = 8] = [
                                    v,
                                    t,
                                    r,
                                    a,
                                    u
                                ];
                                p = U(p.length) - 1, m = 128 | m - 1 << 4 | p, E(o, f), E(o, h), o.writeBytes([
                                    m,
                                    0,
                                    0
                                ]), M(v, a), 0 <= l && (p = v, f = l, p.writeByte(33), p.writeByte(255), p.writeByte(11), O(p, "NETSCAPE2.0"), p.writeByte(3), p.writeByte(1), E(p, f), p.writeByte(0));
                            }
                            var y, h = Math.round(i / 10), o = v, m = c, l = h, f = n, p = s, i = (o.writeByte(33), o.writeByte(249), o.writeByte(4), p < 0 && (p = 0, f = !1), f = f ? (y = 1, 2) : y = 0, 0 <= m && (f = 7 & m), f <<= 2, o.writeByte(0 | f | y), E(o, l), o.writeByte(p || 0), o.writeByte(0), Boolean(a) && !d);
                            c = v, n = t, s = r, y = i ? a : null, c.writeByte(44), E(c, 0), E(c, 0), E(c, n), E(c, s), y ? (n = U(y.length) - 1, c.writeByte(128 | n)) : c.writeByte(0), i && M(v, a), [l, o, s, n, c = 8, i, a, e] = [
                                v,
                                e,
                                t,
                                r,
                                u,
                                b,
                                j,
                                _
                            ], S(s, n, o, c, l, i, a, e);
                        }
                    };
                    function w() {
                        O(v, "GIF89a");
                    }
                }
                function M(r, o) {
                    var e = 1 << U(o.length);
                    for(let t = 0; t < e; t++){
                        let e = [
                            0,
                            0,
                            0
                        ];
                        t < o.length && (e = o[t]), r.writeByte(e[0]), r.writeByte(e[1]), r.writeByte(e[2]);
                    }
                }
                function E(e, t) {
                    e.writeByte(255 & t), e.writeByte(t >> 8 & 255);
                }
                function O(e, t) {
                    for(var r = 0; r < t.length; r++)e.writeByte(t.charCodeAt(r));
                }
                function U(e) {
                    return Math.max(Math.ceil(Math.log2(e)), 1);
                }
                var h = f;
            },
            {}
        ],
        238: [
            function(e, t, r) {
                r.read = function(e, t, r, o, n) {
                    var s, i, a = 8 * n - o - 1, l = (1 << a) - 1, u = l >> 1, c = -7, d = r ? n - 1 : 0, f = r ? -1 : 1, n = e[t + d];
                    for(d += f, s = n & (1 << -c) - 1, n >>= -c, c += a; 0 < c; s = 256 * s + e[t + d], d += f, c -= 8);
                    for(i = s & (1 << -c) - 1, s >>= -c, c += o; 0 < c; i = 256 * i + e[t + d], d += f, c -= 8);
                    if (0 === s) s = 1 - u;
                    else {
                        if (s === l) return i ? NaN : 1 / 0 * (n ? -1 : 1);
                        i += Math.pow(2, o), s -= u;
                    }
                    return (n ? -1 : 1) * i * Math.pow(2, s - o);
                }, r.write = function(e, t, r, o, n, s) {
                    var i, a, l = 8 * s - n - 1, u = (1 << l) - 1, c = u >> 1, d = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, f = o ? 0 : s - 1, h = o ? 1 : -1, s = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                    for(t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0, i = u) : (i = Math.floor(Math.log(t) / Math.LN2), t * (o = Math.pow(2, -i)) < 1 && (i--, o *= 2), 2 <= (t += 1 <= i + c ? d / o : d * Math.pow(2, 1 - c)) * o && (i++, o /= 2), u <= i + c ? (a = 0, i = u) : 1 <= i + c ? (a = (t * o - 1) * Math.pow(2, n), i += c) : (a = t * Math.pow(2, c - 1) * Math.pow(2, n), i = 0)); 8 <= n; e[r + f] = 255 & a, f += h, a /= 256, n -= 8);
                    for(i = i << n | a, l += n; 0 < l; e[r + f] = 255 & i, f += h, i /= 256, l -= 8);
                    e[r + f - h] |= 128 * s;
                };
            },
            {}
        ],
        239: [
            function(o, e, c) {
                "use strict";
                var t;
                function y(e, t) {
                    return e.b === t.b && e.a === t.a;
                }
                function g(e, t) {
                    return e.b < t.b || e.b === t.b && e.a <= t.a;
                }
                function v(e, t, r) {
                    var o = t.b - e.b, n = r.b - t.b;
                    return 0 < o + n ? o < n ? t.a - e.a + o / (o + n) * (e.a - r.a) : t.a - r.a + n / (o + n) * (r.a - e.a) : 0;
                }
                function b(e, t, r) {
                    var o = t.b - e.b, n = r.b - t.b;
                    return 0 < o + n ? (t.a - r.a) * o + (t.a - e.a) * n : 0;
                }
                function j(e, t) {
                    return e.a < t.a || e.a === t.a && e.b <= t.b;
                }
                function V(e, t, r) {
                    var o = t.a - e.a, n = r.a - t.a;
                    return 0 < o + n ? o < n ? t.b - e.b + o / (o + n) * (e.b - r.b) : t.b - r.b + n / (o + n) * (r.b - e.b) : 0;
                }
                function z(e, t, r) {
                    var o = t.a - e.a, n = r.a - t.a;
                    return 0 < o + n ? (t.b - r.b) * o + (t.b - e.b) * n : 0;
                }
                function _(e, t, r, o) {
                    return (e = e < 0 ? 0 : e) <= (r = r < 0 ? 0 : r) ? 0 === r ? (t + o) / 2 : t + e / (e + r) * (o - t) : o + r / (e + r) * (t - o);
                }
                function d(e) {
                    var t = s(e.b);
                    return n(t, e.c), n(t.b, e.c), i(t, e.a), t;
                }
                function x(e, t) {
                    var r = !1, o = !1;
                    e !== t && (t.a !== e.a && (o = !0, E(t.a, e.a)), t.d !== e.d && (r = !0, a(t.d, e.d)), M(t, e), o || (n(t, e.a), e.a.c = e), r || (i(t, e.d), e.d.a = e));
                }
                function m(e) {
                    var t = e.b, r = !1;
                    e.d !== e.b.d && (r = !0, a(e.d, e.b.d)), e.c === e ? E(e.a, null) : (e.b.d.a = e.b.e, e.a.c = e.c, M(e, e.b.e), r || i(e, e.d)), t.c === t ? (E(t.a, null), a(t.d, null)) : (e.d.a = t.b.e, t.a.c = t.c, M(t, t.b.e)), H(e);
                }
                function w(e) {
                    var t = s(e), r = t.b;
                    return M(t, e.e), t.a = e.b.a, n(r, t.a), t.d = r.d = e.d, t = t.b, M(e.b, e.b.b.e), M(e.b, t), e.b.a = t.a, t.b.a.c = t.b, t.b.d = e.b.d, t.f = e.f, t.b.f = e.b.f, t;
                }
                function S(e, t) {
                    var r = !1, o = s(e), n = o.b;
                    return t.d !== e.d && (r = !0, a(t.d, e.d)), M(o, e.e), M(n, t), o.a = e.b.a, n.a = t.a, o.d = n.d = e.d, e.d.a = n, r || i(o, e.d), o;
                }
                function s(e) {
                    var t = new u, r = new u, o = e.b.h;
                    return (((r.h = o).b.h = t).h = e).b.h = r, t.b = r, ((t.c = t).e = r).b = t, (r.c = r).e = t;
                }
                function M(e, t) {
                    var r = e.c, o = t.c;
                    r.b.e = t, (o.b.e = e).c = o, t.c = r;
                }
                function n(e, t) {
                    var r = t.f, o = new I(t, r);
                    for(r.e = o, r = (t.f = o).c = e; r.a = o, (r = r.c) !== e;);
                }
                function i(e, t) {
                    var r = t.d, o = new te(t, r);
                    for(r.b = o, (t.d = o).a = e, o.c = t.c, r = e; r.d = o, (r = r.e) !== e;);
                }
                function H(e) {
                    var t = e.h;
                    e = e.b.h, (t.b.h = e).b.h = t;
                }
                function E(e, t) {
                    for(var r = e.c, o = r; o.a = t, (o = o.c) !== r;);
                    r = e.f, ((o = e.e).f = r).e = o;
                }
                function a(e, t) {
                    for(var r = e.a, o = r; o.d = t, (o = o.e) !== r;);
                    r = e.d, ((o = e.b).d = r).b = o;
                }
                function W(e) {
                    var t = 0;
                    return Math.abs(e[1]) > Math.abs(e[0]) && (t = 1), t = Math.abs(e[2]) > Math.abs(e[t]) ? 2 : t;
                }
                function T(e, t) {
                    e.f += t.f, e.b.f += t.b.f;
                }
                function f(e, t, r) {
                    return e = e.a, t = t.a, r = r.a, t.b.a === e ? r.b.a === e ? g(t.a, r.a) ? b(r.b.a, t.a, r.a) <= 0 : 0 <= b(t.b.a, r.a, t.a) : b(r.b.a, e, r.a) <= 0 : r.b.a === e ? 0 <= b(t.b.a, e, t.a) : (t = v(t.b.a, e, t.a), (e = v(r.b.a, e, r.a)) <= t);
                }
                function C(e) {
                    e.a.i = null;
                    var t = e.e;
                    t.a.c = t.c, t.c.a = t.a, e.e = null;
                }
                function O(e, t) {
                    m(e.a), e.c = !1, (e.a = t).i = e;
                }
                function L(e) {
                    for(var t = e.a.a; (e = G(e)).a.a === t;);
                    return e.c && (O(e, t = S(B(e).a.b, e.a.e)), e = G(e)), e;
                }
                function q(e, t, r) {
                    var o = new F;
                    return o.a = r, o.e = p(e.f, t.e, o), r.i = o;
                }
                function X(e, t) {
                    switch(e.s){
                        case 100130:
                            return 0 != (1 & t);
                        case 100131:
                            return 0 !== t;
                        case 100132:
                            return 0 < t;
                        case 100133:
                            return t < 0;
                        case 100134:
                            return 2 <= t || t <= -2;
                    }
                    return !1;
                }
                function h(e) {
                    var t = e.a, r = t.d;
                    r.c = e.d, r.a = t, C(e);
                }
                function k(e, t, r) {
                    for(t = (e = t).a; e !== r;){
                        e.c = !1;
                        var o = B(e), n = o.a;
                        if (n.a !== t.a) {
                            if (!o.c) {
                                h(e);
                                break;
                            }
                            O(o, n = S(t.c.b, n.b));
                        }
                        t.c !== n && (x(n.b.e, n), x(t, n)), h(e), t = o.a, e = o;
                    }
                    return t;
                }
                function A(e, t, r, o, n, s) {
                    for(var i = !0; q(e, t, r.b), (r = r.c) !== o;);
                    for(null === n && (n = B(t).a.b.c); (r = (o = B(t)).a.b).a === n.a;)r.c !== n && (x(r.b.e, r), x(n.b.e, r)), o.f = t.f - r.f, o.d = X(e, o.f), t.b = !0, !i && R(e, t) && (T(r, n), C(t), m(n)), i = !1, t = o, n = r;
                    t.b = !0, s && K(e, t);
                }
                function Y(e, t, r, o, n) {
                    var s = [
                        t.g[0],
                        t.g[1],
                        t.g[2]
                    ];
                    t.d = null, t.d = e.o && e.o(s, r, o, e.c) || null, null === t.d && (n ? e.n || (l(e, 100156), e.n = !0) : t.d = r[0]);
                }
                function P(e, t, r) {
                    var o = [
                        null,
                        null,
                        null,
                        null
                    ];
                    o[0] = t.a.d, o[1] = r.a.d, Y(e, t.a, o, [
                        .5,
                        .5,
                        0,
                        0
                    ], !1), x(t, r);
                }
                function Z(e, t, r, o, n) {
                    var s = Math.abs(t.b - e.b) + Math.abs(t.a - e.a), i = Math.abs(r.b - e.b) + Math.abs(r.a - e.a), a = n + 1;
                    o[n] = .5 * i / (s + i), o[a] = .5 * s / (s + i), e.g[0] += o[n] * t.g[0] + o[a] * r.g[0], e.g[1] += o[n] * t.g[1] + o[a] * r.g[1], e.g[2] += o[n] * t.g[2] + o[a] * r.g[2];
                }
                function R(e, t) {
                    var r = B(t), o = t.a, n = r.a;
                    if (g(o.a, n.a)) {
                        if (0 < b(n.b.a, o.a, n.a)) return;
                        if (y(o.a, n.a)) {
                            if (o.a !== n.a) {
                                var r = e.e, s = o.a.h;
                                if (0 <= s) {
                                    var i = (r = r.b).d, a = r.e, l = r.c, u = l[s];
                                    i[u] = i[r.a], (l[i[u]] = u) <= --r.a && (u <= 1 || g(a[i[u >> 1]], a[i[u]]) ? N : ue)(r, u), a[s] = null, l[s] = r.b, r.b = s;
                                } else for(r.c[-(s + 1)] = null; 0 < r.a && null === r.c[r.d[r.a - 1]];)--r.a;
                                P(e, n.b.e, o);
                            }
                        } else w(n.b), x(o, n.b.e), t.b = r.b = !0;
                    } else {
                        if (b(o.b.a, n.a, o.a) < 0) return;
                        G(t).b = t.b = !0, w(o.b), x(n.b.e, o);
                    }
                    return 1;
                }
                function Q(e, t) {
                    var r = B(t), o = t.a, n = r.a, s = o.a, i = n.a, a = o.b.a, l = n.b.a, u = new I;
                    if (b(a, e.a, s), b(l, e.a, i), !(s === i || Math.min(s.a, a.a) > Math.max(i.a, l.a))) {
                        if (g(s, i)) {
                            if (0 < b(l, s, i)) return;
                        } else if (b(a, i, s) < 0) return;
                        var c, d, f = a, h = s, p = l, m = i;
                        if (g(f, h) || (c = f, f = h, h = c), g(p, m) || (c = p, p = m, m = c), g(f, p) || (c = f, f = p, p = c, c = h, h = m, m = c), g(p, h) ? g(h, m) ? ((c = v(f, p, h)) + (d = v(p, h, m)) < 0 && (c = -c, d = -d), u.b = _(c, p.b, d, h.b)) : ((c = b(f, p, h)) + (d = -b(f, m, h)) < 0 && (c = -c, d = -d), u.b = _(c, p.b, d, m.b)) : u.b = (p.b + h.b) / 2, j(f, h) || (c = f, f = h, h = c), j(p, m) || (c = p, p = m, m = c), j(f, p) || (c = f, f = p, p = c, c = h, h = m, m = c), j(p, h) ? j(h, m) ? ((c = V(f, p, h)) + (d = V(p, h, m)) < 0 && (c = -c, d = -d), u.a = _(c, p.a, d, h.a)) : ((c = z(f, p, h)) + (d = -z(f, m, h)) < 0 && (c = -c, d = -d), u.a = _(c, p.a, d, m.a)) : u.a = (p.a + h.a) / 2, g(u, e.a) && (u.b = e.a.b, u.a = e.a.a), f = g(s, i) ? s : i, g(f, u) && (u.b = f.b, u.a = f.a), y(u, s) || y(u, i)) return R(e, t), 0;
                        if (!y(a, e.a) && 0 <= b(a, e.a, u) || !y(l, e.a) && b(l, e.a, u) <= 0) {
                            if (l === e.a) w(o.b), x(n.b, o), o = B(t = L(t)).a, k(e, B(t), r), A(e, t, o.b.e, o, o, !0);
                            else {
                                if (a !== e.a) return 0 <= b(a, e.a, u) && (G(t).b = t.b = !0, w(o.b), o.a.b = e.a.b, o.a.a = e.a.a), void (b(l, e.a, u) <= 0 && (t.b = r.b = !0, w(n.b), n.a.b = e.a.b, n.a.a = e.a.a));
                                for(w(n.b), x(o.e, n.b.e), i = (s = r = t).a.b.a; (s = G(s)).a.b.a === i;);
                                s = B(t = s).a.b.c, r.a = n.b.e, A(e, t, (n = k(e, r, null)).c, o.b.c, s, !0);
                            }
                            return 1;
                        }
                        w(o.b), w(n.b), x(n.b.e, o), o.a.b = u.b, o.a.a = u.a, o.a.h = ne(e.e, o.a), o = o.a, n = [
                            0,
                            0,
                            0,
                            0
                        ], u = [
                            s.d,
                            a.d,
                            i.d,
                            l.d
                        ], o.g[0] = o.g[1] = o.g[2] = 0, Z(o, s, a, n, 0), Z(o, i, l, n, 2), Y(e, o, u, n, !0), G(t).b = t.b = r.b = !0;
                    }
                }
                function K(e, t) {
                    for(var r = B(t);;){
                        for(; r.b;)r = B(t = r);
                        if (!t.b && (null === (t = G(r = t)) || !t.b)) break;
                        t.b = !1;
                        var o = t.a, n = r.a;
                        if (s = o.b.a !== n.b.a) e: {
                            var s, i = B(s = t), a = s.a, l = i.a, u = void 0;
                            if (g(a.b.a, l.b.a)) {
                                if (b(a.b.a, l.b.a, a.a) < 0) {
                                    s = !1;
                                    break e;
                                }
                                G(s).b = s.b = !0, u = w(a), x(l.b, u), u.d.c = s.d;
                            } else {
                                if (0 < b(l.b.a, a.b.a, l.a)) {
                                    s = !1;
                                    break e;
                                }
                                s.b = i.b = !0, u = w(l), x(a.e, l.b), u.b.d.c = s.d;
                            }
                            s = !0;
                        }
                        if (s && (r.c ? (C(r), m(n), n = (r = B(t)).a) : t.c && (C(t), m(o), o = (t = G(r)).a)), o.a !== n.a) {
                            if (o.b.a === n.b.a || t.c || r.c || o.b.a !== e.a && n.b.a !== e.a) R(e, t);
                            else if (Q(e, t)) break;
                        }
                        o.a === n.a && o.b.a === n.b.a && (T(n, o), C(t), m(o), t = G(r));
                    }
                }
                function J(e, t) {
                    var r = new F, o = d(e.b);
                    o.a.b = 4e150, o.a.a = t, o.b.a.b = -4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, o.b.a.a = t, e.a = o.b.a, r.a = o, r.f = 0, r.d = !1, r.c = !1, r.h = !0, r.b = !1, o = p(o = e.f, o.a, r), r.e = o;
                }
                function $(e) {
                    this.a = new ee, this.b = e, this.c = f;
                }
                function p(e, t, r) {
                    for(; null !== (t = t.c).b && !e.c(e.b, t.b, r););
                    return e = new ee(r, t.a, t), t.a.c = e, t.a = e;
                }
                function ee(e, t, r) {
                    this.b = e || null, this.a = t || this, this.c = r || this;
                }
                function r() {
                    this.d = 0, this.p = this.b = this.q = null, this.j = [
                        0,
                        0,
                        0
                    ], this.s = 100130, this.n = !1, this.o = this.a = this.e = this.f = null, this.m = !1, this.c = this.r = this.i = this.k = this.l = this.h = null;
                }
                function D(e, t) {
                    if (e.d !== t) for(; e.d !== t;)if (e.d < t) switch(e.d){
                        case 0:
                            l(e, 100151), e.u(null);
                            break;
                        case 1:
                            l(e, 100152), e.t();
                    }
                    else switch(e.d){
                        case 2:
                            l(e, 100154), e.v();
                            break;
                        case 1:
                            l(e, 100153), e.w();
                    }
                }
                function l(e, t) {
                    e.p && e.p(t, e.c);
                }
                function te(e, t) {
                    this.b = e || this, this.d = t || this, this.a = null, this.c = !1;
                }
                function u() {
                    (this.h = this).i = this.d = this.a = this.e = this.c = this.b = null, this.f = 0;
                }
                function re() {
                    this.c = new I, this.a = new te, this.b = new u, this.d = new u, this.b.b = this.d, this.d.b = this.b;
                }
                function I(e, t) {
                    this.e = e || this, this.f = t || this, this.d = this.c = null, this.g = [
                        0,
                        0,
                        0
                    ], this.h = this.a = this.b = 0;
                }
                function oe() {
                    this.c = [], this.d = null, this.a = 0, this.e = !1, this.b = new ie;
                }
                function ne(e, t) {
                    var r, o, n;
                    return e.e ? (2 * (o = ++(r = e.b).a) > r.f && (r.f *= 2, r.c = ae(r.c, r.f + 1)), 0 === r.b ? n = o : (n = r.b, r.b = r.c[r.b]), r.e[n] = t, r.c[n] = o, r.d[o] = n, r.h && ue(r, o), n) : (r = e.a++, e.c[r] = t, -(r + 1));
                }
                function se(e) {
                    if (0 === e.a) return le(e.b);
                    var t = e.c[e.d[e.a - 1]];
                    if (0 !== e.b.a && g(U(e.b), t)) return le(e.b);
                    for(; --e.a, 0 < e.a && null === e.c[e.d[e.a - 1]];);
                    return t;
                }
                function ie() {
                    this.d = ae([
                        0
                    ], 33), this.e = [
                        null,
                        null
                    ], this.c = [
                        0,
                        0
                    ], this.a = 0, this.f = 32, this.b = 0, this.h = !1, this.d[1] = 1;
                }
                function ae(e, t) {
                    for(var r = Array(t), o = 0; o < e.length; o++)r[o] = e[o];
                    for(; o < t; o++)r[o] = 0;
                    return r;
                }
                function U(e) {
                    return e.e[e.d[1]];
                }
                function le(e) {
                    var t = e.d, r = e.e, o = e.c, n = t[1], s = r[n];
                    return 0 < e.a && (t[1] = t[e.a], o[t[1]] = 1, r[n] = null, o[n] = e.b, e.b = n, 0 < --e.a && N(e, 1)), s;
                }
                function N(e, t) {
                    for(var r = e.d, o = e.e, n = e.c, s = t, i = r[s];;){
                        var a = s << 1, l = (a < e.a && g(o[r[a + 1]], o[r[a]]) && (a += 1), r[a]);
                        if (a > e.a || g(o[i], o[l])) {
                            n[r[s] = i] = s;
                            break;
                        }
                        n[r[s] = l] = s, s = a;
                    }
                }
                function ue(e, t) {
                    for(var r = e.d, o = e.e, n = e.c, s = t, i = r[s];;){
                        var a = s >> 1, l = r[a];
                        if (0 == a || g(o[l], o[i])) {
                            n[r[s] = i] = s;
                            break;
                        }
                        n[r[s] = l] = s, s = a;
                    }
                }
                function F() {
                    this.e = this.a = null, this.f = 0, this.c = this.b = this.h = this.d = !1;
                }
                function B(e) {
                    return e.e.c.b;
                }
                function G(e) {
                    return e.e.a.b;
                }
                (t = r.prototype).x = function() {
                    D(this, 0);
                }, t.B = function(e, t) {
                    switch(e){
                        case 100142:
                            return;
                        case 100140:
                            switch(t){
                                case 100130:
                                case 100131:
                                case 100132:
                                case 100133:
                                case 100134:
                                    return void (this.s = t);
                            }
                            break;
                        case 100141:
                            return void (this.m = !!t);
                        default:
                            return void l(this, 100900);
                    }
                    l(this, 100901);
                }, t.y = function(e) {
                    switch(e){
                        case 100142:
                            return 0;
                        case 100140:
                            return this.s;
                        case 100141:
                            return this.m;
                        default:
                            l(this, 100900);
                    }
                    return !1;
                }, t.A = function(e, t, r) {
                    this.j[0] = e, this.j[1] = t, this.j[2] = r;
                }, t.z = function(e, t) {
                    var r = t || null;
                    switch(e){
                        case 100100:
                        case 100106:
                            this.h = r;
                            break;
                        case 100104:
                        case 100110:
                            this.l = r;
                            break;
                        case 100101:
                        case 100107:
                            this.k = r;
                            break;
                        case 100102:
                        case 100108:
                            this.i = r;
                            break;
                        case 100103:
                        case 100109:
                            this.p = r;
                            break;
                        case 100105:
                        case 100111:
                            this.o = r;
                            break;
                        case 100112:
                            this.r = r;
                            break;
                        default:
                            l(this, 100900);
                    }
                }, t.C = function(e, t) {
                    var r = !1, o = [
                        0,
                        0,
                        0
                    ];
                    D(this, 2);
                    for(var n = 0; n < 3; ++n){
                        var s = e[n];
                        s < -1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 && (s = -1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, r = !0), 1e150 < s && (s = 1e150, r = !0), o[n] = s;
                    }
                    r && l(this, 100155), null === (r = this.q) ? x(r = d(this.b), r.b) : (w(r), r = r.e), r.a.d = t, r.a.g[0] = o[0], r.a.g[1] = o[1], r.a.g[2] = o[2], r.f = 1, r.b.f = -1, this.q = r;
                }, t.u = function(e) {
                    D(this, 0), this.d = 1, this.b = new re, this.c = e;
                }, t.t = function() {
                    D(this, 1), this.d = 2, this.q = null;
                }, t.v = function() {
                    D(this, 2), this.d = 1;
                }, t.w = function() {
                    D(this, 1), this.d = 0;
                    var e, t, r = this.j[0], o = this.j[1], n = this.j[2], s = !1, i = [
                        r,
                        o,
                        n
                    ];
                    if (0 === r && 0 === o && 0 === n) {
                        for(var o = [
                            -2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
                            -2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
                            -2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                        ], a = [
                            2e150,
                            2e150,
                            2e150
                        ], n = [], l = [], r = (s = this.b.c).e; r !== s; r = r.e)for(var u = 0; u < 3; ++u){
                            var c = r.g[u];
                            c < a[u] && (a[u] = c, l[u] = r), c > o[u] && (o[u] = c, n[u] = r);
                        }
                        if (o[1] - a[1] > o[r = 0] - a[0] && (r = 1), a[r = o[2] - a[2] > o[r] - a[r] ? 2 : r] >= o[r]) i[0] = 0, i[1] = 0, i[2] = 1;
                        else {
                            for(a = l[r], n = n[r], l = [
                                o = 0,
                                0,
                                0
                            ], a = [
                                a.g[0] - n.g[0],
                                a.g[1] - n.g[1],
                                a.g[2] - n.g[2]
                            ], u = [
                                0,
                                0,
                                0
                            ], r = s.e; r !== s; r = r.e)u[0] = r.g[0] - n.g[0], u[1] = r.g[1] - n.g[1], u[2] = r.g[2] - n.g[2], l[0] = a[1] * u[2] - a[2] * u[1], l[1] = a[2] * u[0] - a[0] * u[2], l[2] = a[0] * u[1] - a[1] * u[0], o < (c = l[0] * l[0] + l[1] * l[1] + l[2] * l[2]) && (o = c, i[0] = l[0], i[1] = l[1], i[2] = l[2]);
                            o <= 0 && (i[0] = i[1] = i[2] = 0, i[W(a)] = 1);
                        }
                        s = !0;
                    }
                    for(l = W(i), r = this.b.c, o = (l + 1) % 3, n = (l + 2) % 3, l = 0 < i[l] ? 1 : -1, i = r.e; i !== r; i = i.e)i.b = i.g[o], i.a = l * i.g[n];
                    if (s) {
                        for(i = 0, r = (s = this.b.a).b; r !== s; r = r.b)if (!((o = r.a).f <= 0)) for(; i += (o.a.b - o.b.a.b) * (o.a.a + o.b.a.a), (o = o.e) !== r.a;);
                        if (i < 0) for(s = (i = this.b.c).e; s !== i; s = s.e)s.a = -s.a;
                    }
                    for(this.n = !1, i = this.b.b, r = i.h; r !== i; r = s)s = r.h, o = r.e, y(r.a, r.b.a) && r.e.e !== r && (P(this, o, r), m(r), o = (r = o).e), o.e === r && (o !== r && (o !== s && o !== s.b || (s = s.h), m(o)), r !== s && r !== s.b || (s = s.h), m(r));
                    for(this.e = i = new oe, s = this.b.c, r = s.e; r !== s; r = r.e)r.h = ne(i, r);
                    var d = i;
                    d.d = [];
                    for(var f = 0; f < d.a; f++)d.d[f] = f;
                    d.d.sort(function(r) {
                        return function(e, t) {
                            return g(r[e], r[t]) ? 1 : -1;
                        };
                    }(d.c)), d.e = !0;
                    for(var h = d.b, p = h.a; 1 <= p; --p)N(h, p);
                    for(h.h = !0, this.f = new $(this), J(this, -4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), J(this, 4e150); null !== (i = se(this.e));){
                        for(;;){
                            e: if (0 === (r = this.e).a) s = U(r.b);
                            else if (s = r.c[r.d[r.a - 1]], 0 !== r.b.a && g(r = U(r.b), s)) {
                                s = r;
                                break e;
                            }
                            if (null === s || !y(s, i)) break;
                            s = se(this.e), P(this, i.c, s.c);
                        }
                        !function e(t, r) {
                            for(var o, n = (t.a = r).c; null === n.i;)if ((n = n.c) === r.c) {
                                var n = t, s = r;
                                (c = new F).a = s.c.b;
                                for(var i = (a = n.f).a; null !== (i = i.a).b && !a.c(a.b, c, i.b););
                                var a, l, u = B(a = i.b), c = a.a, i = u.a;
                                return void (0 === b(c.b.a, s, c.a) ? y((c = a.a).a, s) || y(c.b.a, s) || (w(c.b), a.c && (m(c.c), a.c = !1), x(s.c, c), e(n, s)) : (l = g(i.b.a, c.b.a) ? a : u, u = void 0, a.d || l.c ? (u = l === a ? S(s.c.b, c.e) : S(i.b.c.b, s.c).b, l.c ? O(l, u) : ((a = q(c = n, a, u)).f = G(a).f + a.a.f, a.d = X(c, a.f)), e(n, s)) : A(n, a, s.c, s.c, null, !0)));
                            }
                            a = (c = B(n = L(n.i))).a, (c = k(t, c, null)).c === a ? (c = (a = c).c, i = B(n), u = n.a, l = i.a, o = !1, u.b.a !== l.b.a && Q(t, n), y(u.a, t.a) && (x(c.b.e, u), c = B(n = L(n)).a, k(t, B(n), i), o = !0), y(l.a, t.a) && (x(a, l.b.e), a = k(t, i, null), o = !0), o ? A(t, n, a.c, c, c, !0) : (s = g(l.a, u.a) ? l.b.e : u, A(t, n, s = S(a.c.b, s), s.c, s.c, !1), s.b.i.c = !0, K(t, n))) : A(t, n, c.c, a, a, !0);
                        }(this, i);
                    }
                    for(this.a = this.f.a.a.b.a.a, i = 0; null !== (s = this.f.a.a.b);)s.h || ++i, C(s);
                    for(this.f = null, (i = this.e).b = null, i.d = null, this.e = i.c = null, i = this.b, r = i.a.b; r !== i.a; r = s)s = r.b, (r = r.a).e.e === r && (T(r.c, r), m(r));
                    if (!this.n) {
                        if (i = this.b, this.m) for(r = i.b.h; r !== i.b; r = s)s = r.h, r.b.d.c !== r.d.c ? r.f = r.d.c ? 1 : -1 : m(r);
                        else for(r = i.a.b; r !== i.a; r = s)if (s = r.b, r.c) {
                            for(r = r.a; g(r.b.a, r.a); r = r.c.b);
                            for(; g(r.a, r.b.a); r = r.e);
                            for(o = r.c.b, n = void 0; r.e !== o;)if (g(r.b.a, o.a)) {
                                for(; o.e !== r && (g((t = o.e).b.a, t.a) || b(o.a, o.b.a, o.e.b.a) <= 0);)o = (n = S(o.e, o)).b;
                                o = o.c.b;
                            } else {
                                for(; o.e !== r && (g((e = r.c.b).a, e.b.a) || 0 <= b(r.b.a, r.a, r.c.b.a));)r = (n = S(r, r.c.b)).b;
                                r = r.e;
                            }
                            for(; o.e.e !== r;)n = S(o.e, o), o = n.b;
                        }
                        if (this.h || this.i || this.k || this.l) {
                            if (this.m) {
                                for(s = (i = this.b).a.b; s !== i.a; s = s.b)if (s.c) {
                                    for(this.h && this.h(2, this.c), r = s.a; this.k && this.k(r.a.d, this.c), (r = r.e) !== s.a;);
                                    this.i && this.i(this.c);
                                }
                            } else {
                                for(i = this.b, s = !!this.l, r = !1, o = -1, n = i.a.d; n !== i.a; n = n.d)if (n.c) for(r || (this.h && this.h(4, this.c), r = !0), l = n.a; s && (a = l.b.d.c ? 0 : 1, o !== a && (o = a, this.l && this.l(!!o, this.c))), this.k && this.k(l.a.d, this.c), (l = l.e) !== n.a;);
                                r && this.i && this.i(this.c);
                            }
                        }
                        if (this.r) {
                            for(i = this.b, r = i.a.b; r !== i.a; r = s)if (s = r.b, !r.c) {
                                for(n = (o = r.a).e, l = void 0; n = (l = n).e, (l.d = null) === l.b.d && (l.c === l ? E(l.a, null) : (l.a.c = l.c, M(l, l.b.e)), (a = l.b).c === a ? E(a.a, null) : (a.a.c = a.c, M(a, a.b.e)), H(l)), l !== o;);
                                o = r.d, ((r = r.b).d = o).b = r;
                            }
                            return this.r(this.b), void (this.c = this.b = null);
                        }
                    }
                    this.b = this.c = null;
                }, this.libtess = {
                    GluTesselator: r,
                    windingRule: {
                        GLU_TESS_WINDING_ODD: 100130,
                        GLU_TESS_WINDING_NONZERO: 100131,
                        GLU_TESS_WINDING_POSITIVE: 100132,
                        GLU_TESS_WINDING_NEGATIVE: 100133,
                        GLU_TESS_WINDING_ABS_GEQ_TWO: 100134
                    },
                    primitiveType: {
                        GL_LINE_LOOP: 2,
                        GL_TRIANGLES: 4,
                        GL_TRIANGLE_STRIP: 5,
                        GL_TRIANGLE_FAN: 6
                    },
                    errorType: {
                        GLU_TESS_MISSING_BEGIN_POLYGON: 100151,
                        GLU_TESS_MISSING_END_POLYGON: 100153,
                        GLU_TESS_MISSING_BEGIN_CONTOUR: 100152,
                        GLU_TESS_MISSING_END_CONTOUR: 100154,
                        GLU_TESS_COORD_TOO_LARGE: 100155,
                        GLU_TESS_NEED_COMBINE_CALLBACK: 100156
                    },
                    gluEnum: {
                        GLU_TESS_MESH: 100112,
                        GLU_TESS_TOLERANCE: 100142,
                        GLU_TESS_WINDING_RULE: 100140,
                        GLU_TESS_BOUNDARY_ONLY: 100141,
                        GLU_INVALID_ENUM: 100900,
                        GLU_INVALID_VALUE: 100901,
                        GLU_TESS_BEGIN: 100100,
                        GLU_TESS_VERTEX: 100101,
                        GLU_TESS_END: 100102,
                        GLU_TESS_ERROR: 100103,
                        GLU_TESS_EDGE_FLAG: 100104,
                        GLU_TESS_COMBINE: 100105,
                        GLU_TESS_BEGIN_DATA: 100106,
                        GLU_TESS_VERTEX_DATA: 100107,
                        GLU_TESS_END_DATA: 100108,
                        GLU_TESS_ERROR_DATA: 100109,
                        GLU_TESS_EDGE_FLAG_DATA: 100110,
                        GLU_TESS_COMBINE_DATA: 100111
                    }
                }, r.prototype.gluDeleteTess = r.prototype.x, r.prototype.gluTessProperty = r.prototype.B, r.prototype.gluGetTessProperty = r.prototype.y, r.prototype.gluTessNormal = r.prototype.A, r.prototype.gluTessCallback = r.prototype.z, r.prototype.gluTessVertex = r.prototype.C, r.prototype.gluTessBeginPolygon = r.prototype.u, r.prototype.gluTessBeginContour = r.prototype.t, r.prototype.gluTessEndContour = r.prototype.v, r.prototype.gluTessEndPolygon = r.prototype.w, void 0 !== e && (e.exports = this.libtess);
            },
            {}
        ],
        240: [
            function(e, t, r) {
                "use strict";
                function o(g, e, t, r) {
                    var v = 0, o = void 0 === (r = void 0 === r ? {} : r).loop ? null : r.loop, b = void 0 === r.palette ? null : r.palette;
                    if (e <= 0 || t <= 0 || 65535 < e || 65535 < t) throw new Error("Width/Height invalid.");
                    function j(e) {
                        e = e.length;
                        if (e < 2 || 256 < e || e & e - 1) throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");
                        return e;
                    }
                    g[v++] = 71, g[v++] = 73, g[v++] = 70, g[v++] = 56, g[v++] = 57, g[v++] = 97;
                    var n = 0, s = 0;
                    if (null !== b) {
                        for(var i = j(b); i >>= 1;)++n;
                        if (i = 1 << n, --n, void 0 !== r.background) {
                            if (i <= (s = r.background)) throw new Error("Background index out of range.");
                            if (0 === s) throw new Error("Background index explicitly passed as 0.");
                        }
                    }
                    if (g[v++] = 255 & e, g[v++] = e >> 8 & 255, g[v++] = 255 & t, g[v++] = t >> 8 & 255, g[v++] = (null !== b ? 128 : 0) | n, g[v++] = s, g[v++] = 0, null !== b) for(var a = 0, l = b.length; a < l; ++a){
                        var u = b[a];
                        g[v++] = u >> 16 & 255, g[v++] = u >> 8 & 255, g[v++] = 255 & u;
                    }
                    if (null !== o) {
                        if (o < 0 || 65535 < o) throw new Error("Loop count invalid.");
                        g[v++] = 33, g[v++] = 255, g[v++] = 11, g[v++] = 78, g[v++] = 69, g[v++] = 84, g[v++] = 83, g[v++] = 67, g[v++] = 65, g[v++] = 80, g[v++] = 69, g[v++] = 50, g[v++] = 46, g[v++] = 48, g[v++] = 3, g[v++] = 1, g[v++] = 255 & o, g[v++] = o >> 8 & 255, g[v++] = 0;
                    }
                    var _ = !1;
                    this.addFrame = function(e, t, r, o, n, s) {
                        if (!0 === _ && (--v, _ = !1), s = void 0 === s ? {} : s, e < 0 || t < 0 || 65535 < e || 65535 < t) throw new Error("x/y invalid.");
                        if (r <= 0 || o <= 0 || 65535 < r || 65535 < o) throw new Error("Width/Height invalid.");
                        if (n.length < r * o) throw new Error("Not enough pixels for the frame size.");
                        var i = !0, a = s.palette;
                        if (null == a && (i = !1, a = b), null == a) throw new Error("Must supply either a local or global palette.");
                        for(var l = j(a), u = 0; l >>= 1;)++u;
                        var l = 1 << u, c = void 0 === s.delay ? 0 : s.delay, d = void 0 === s.disposal ? 0 : s.disposal;
                        if (d < 0 || 3 < d) throw new Error("Disposal out of range.");
                        var f = !1, h = 0;
                        if (void 0 !== s.transparent && null !== s.transparent && (f = !0, (h = s.transparent) < 0 || l <= h)) throw new Error("Transparent color index.");
                        if (0 === d && !f && 0 === c || (g[v++] = 33, g[v++] = 249, g[v++] = 4, g[v++] = d << 2 | (!0 === f ? 1 : 0), g[v++] = 255 & c, g[v++] = c >> 8 & 255, g[v++] = h, g[v++] = 0), g[v++] = 44, g[v++] = 255 & e, g[v++] = e >> 8 & 255, g[v++] = 255 & t, g[v++] = t >> 8 & 255, g[v++] = 255 & r, g[v++] = r >> 8 & 255, g[v++] = 255 & o, g[v++] = o >> 8 & 255, g[v++] = !0 === i ? 128 | u - 1 : 0, !0 === i) for(var p = 0, m = a.length; p < m; ++p){
                            var y = a[p];
                            g[v++] = y >> 16 & 255, g[v++] = y >> 8 & 255, g[v++] = 255 & y;
                        }
                        return v = function(t, r, e, o) {
                            t[r++] = e;
                            var n = r++, s = 1 << e, i = s - 1, a = 1 + s, l = 1 + a, u = e + 1, c = 0, d = 0;
                            function f(e) {
                                for(; e <= c;)t[r++] = 255 & d, d >>= 8, c -= 8, r === n + 256 && (t[n] = 255, n = r++);
                            }
                            function h(e) {
                                d |= e << c, c += u, f(8);
                            }
                            var p = o[0] & i, m = {};
                            h(s);
                            for(var y = 1, g = o.length; y < g; ++y){
                                var v = o[y] & i, b = p << 8 | v, j = m[b];
                                if (void 0 === j) {
                                    for(d |= p << c, c += u; 8 <= c;)t[r++] = 255 & d, d >>= 8, c -= 8, r === n + 256 && (t[n] = 255, n = r++);
                                    4096 === l ? (h(s), l = 1 + a, u = e + 1, m = {}) : (1 << u <= l && ++u, m[b] = l++), p = v;
                                } else p = j;
                            }
                            h(p), h(a), f(1), n + 1 === r ? t[n] = 0 : (t[n] = r - n - 1, t[r++] = 0);
                            return r;
                        }(g, v, u < 2 ? 2 : u, n);
                    }, this.end = function() {
                        return !1 === _ && (g[v++] = 59, _ = !0), v;
                    }, this.getOutputBuffer = function() {
                        return g;
                    }, this.setOutputBuffer = function(e) {
                        g = e;
                    }, this.getOutputBufferPosition = function() {
                        return v;
                    }, this.setOutputBufferPosition = function(e) {
                        v = e;
                    };
                }
                function E(e, t, r, o) {
                    for(var n = e[t++], s = 1 << n, i = 1 + s, a = 1 + i, l = n + 1, u = (1 << l) - 1, c = 0, d = 0, f = 0, h = e[t++], p = new Int32Array(4096), m = null;;){
                        for(; c < 16 && 0 !== h;)d |= e[t++] << c, c += 8, 1 === h ? h = e[t++] : --h;
                        if (c < l) break;
                        var y = d & u;
                        if (d >>= l, c -= l, y == s) a = 1 + i, u = (1 << (l = n + 1)) - 1, m = null;
                        else {
                            if (y == i) break;
                            for(var g = y < a ? y : m, v = 0, b = g; s < b;)b = p[b] >> 8, ++v;
                            var j = b;
                            if (o < f + v + (g !== y ? 1 : 0)) return void console.log("Warning, gif stream longer than expected.");
                            r[f++] = j;
                            var _ = f += v;
                            for(g !== y && (r[f++] = j), b = g; v--;)b = p[b], r[--_] = 255 & b, b >>= 8;
                            null !== m && a < 4096 && (p[a++] = m << 8 | j, u + 1 <= a && l < 12 && (++l, u = u << 1 | 1)), m = y;
                        }
                    }
                    f !== o && console.log("Warning, gif stream shorter than expected.");
                }
                try {
                    r.GifWriter = o, r.GifReader = function(b) {
                        var e = 0;
                        if (71 !== b[e++] || 73 !== b[e++] || 70 !== b[e++] || 56 !== b[e++] || 56 != (b[e++] + 1 & 253) || 97 !== b[e++]) throw new Error("Invalid GIF 87a/89a header.");
                        var j = b[e++] | b[e++] << 8, t = b[e++] | b[e++] << 8, r = b[e++], o = 1 << 1 + (7 & r), n = (b[e++], b[e++], null), s = null, i = (r >> 7 && (n = e, e += 3 * (s = o)), !0), a = [], l = 0, u = null, c = 0, d = null;
                        for(this.width = j, this.height = t; i && e < b.length;)switch(b[e++]){
                            case 33:
                                switch(b[e++]){
                                    case 255:
                                        if (11 !== b[e] || 78 == b[e + 1] && 69 == b[e + 2] && 84 == b[e + 3] && 83 == b[e + 4] && 67 == b[e + 5] && 65 == b[e + 6] && 80 == b[e + 7] && 69 == b[e + 8] && 50 == b[e + 9] && 46 == b[e + 10] && 48 == b[e + 11] && 3 == b[e + 12] && 1 == b[e + 13] && 0 == b[e + 16]) e += 14, d = b[e++] | b[e++] << 8, e++;
                                        else for(e += 12;;){
                                            if (!(0 <= (h = b[e++]))) throw Error("Invalid block size");
                                            if (0 === h) break;
                                            e += h;
                                        }
                                        break;
                                    case 249:
                                        if (4 !== b[e++] || 0 !== b[e + 4]) throw new Error("Invalid graphics extension block.");
                                        var f = b[e++], l = b[e++] | b[e++] << 8, u = b[e++];
                                        0 == (1 & f) && (u = null), c = f >> 2 & 7, e++;
                                        break;
                                    case 254:
                                        for(;;){
                                            if (!(0 <= (h = b[e++]))) throw Error("Invalid block size");
                                            if (0 === h) break;
                                            e += h;
                                        }
                                        break;
                                    default:
                                        throw new Error("Unknown graphic control label: 0x" + b[e - 1].toString(16));
                                }
                                break;
                            case 44:
                                var h, p = b[e++] | b[e++] << 8, m = b[e++] | b[e++] << 8, y = b[e++] | b[e++] << 8, g = b[e++] | b[e++] << 8, v = b[e++], _ = v >> 6 & 1, x = 1 << 1 + (7 & v), w = n, S = s, M = !1, v = (v >> 7 && (M = !0, w = e, e += 3 * (S = x)), e);
                                for(e++;;){
                                    if (!(0 <= (h = b[e++]))) throw Error("Invalid block size");
                                    if (0 === h) break;
                                    e += h;
                                }
                                a.push({
                                    x: p,
                                    y: m,
                                    width: y,
                                    height: g,
                                    has_local_palette: M,
                                    palette_offset: w,
                                    palette_size: S,
                                    data_offset: v,
                                    data_length: e - v,
                                    transparent_index: u,
                                    interlaced: !!_,
                                    delay: l,
                                    disposal: c
                                });
                                break;
                            case 59:
                                i = !1;
                                break;
                            default:
                                throw new Error("Unknown gif block: 0x" + b[e - 1].toString(16));
                        }
                        this.numFrames = function() {
                            return a.length;
                        }, this.loopCount = function() {
                            return d;
                        }, this.frameInfo = function(e) {
                            if (e < 0 || e >= a.length) throw new Error("Frame index out of range.");
                            return a[e];
                        }, this.decodeAndBlitFrameBGRA = function(e, t) {
                            for(var e = this.frameInfo(e), r = e.width * e.height, o = new Uint8Array(r), n = (E(b, e.data_offset, o, r), e.palette_offset), s = e.transparent_index, i = (null === s && (s = 256), e.width), a = j - i, l = i, u = 4 * (e.y * j + e.x), c = 4 * ((e.y + e.height) * j + e.x), d = u, f = 4 * a, h = (!0 === e.interlaced && (f += 4 * j * 7), 8), p = 0, m = o.length; p < m; ++p){
                                var y, g, v = o[p];
                                0 === l && (l = i, c <= (d += f) && (f = 4 * a + 4 * j * (h - 1), d = u + (i + a) * (h << 1), h >>= 1)), v === s ? d += 4 : (y = b[n + 3 * v], g = b[n + 3 * v + 1], v = b[n + 3 * v + 2], t[d++] = v, t[d++] = g, t[d++] = y, t[d++] = 255), --l;
                            }
                        }, this.decodeAndBlitFrameRGBA = function(e, t) {
                            for(var e = this.frameInfo(e), r = e.width * e.height, o = new Uint8Array(r), n = (E(b, e.data_offset, o, r), e.palette_offset), s = e.transparent_index, i = (null === s && (s = 256), e.width), a = j - i, l = i, u = 4 * (e.y * j + e.x), c = 4 * ((e.y + e.height) * j + e.x), d = u, f = 4 * a, h = (!0 === e.interlaced && (f += 4 * j * 7), 8), p = 0, m = o.length; p < m; ++p){
                                var y, g, v = o[p];
                                0 === l && (l = i, c <= (d += f) && (f = 4 * a + 4 * j * (h - 1), d = u + (i + a) * (h << 1), h >>= 1)), v === s ? d += 4 : (y = b[n + 3 * v], g = b[n + 3 * v + 1], v = b[n + 3 * v + 2], t[d++] = y, t[d++] = g, t[d++] = v, t[d++] = 255), --l;
                            }
                        };
                    };
                } catch (e) {}
            },
            {}
        ],
        241: [
            function(Ar, r, o) {
                (function(kr) {
                    var e, t;
                    e = this, t = function(j) {
                        "use strict";
                        function I(e) {
                            if (null == this) throw TypeError();
                            var t, r = String(this), o = r.length, e = e ? Number(e) : 0;
                            if (!((e = e != e ? 0 : e) < 0 || o <= e)) return 55296 <= (t = r.charCodeAt(e)) && t <= 56319 && e + 1 < o && 56320 <= (o = r.charCodeAt(e + 1)) && o <= 57343 ? 1024 * (t - 55296) + o - 56320 + 65536 : t;
                        }
                        String.prototype.codePointAt || ((U = function() {
                            try {
                                var e = {}, t = Object.defineProperty, r = t(e, e, e) && t;
                            } catch (e) {}
                            return r;
                        }()) ? U(String.prototype, "codePointAt", {
                            value: I,
                            configurable: !0,
                            writable: !0
                        }) : String.prototype.codePointAt = I);
                        var U, N = 0, F = -3;
                        function B() {
                            this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
                        }
                        function G(e, t) {
                            this.source = e, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = t, this.destLen = 0, this.ltree = new B, this.dtree = new B;
                        }
                        var V = new B, z = new B, H = new Uint8Array(30), W = new Uint16Array(30), q = new Uint8Array(30), X = new Uint16Array(30), Y = new Uint8Array([
                            16,
                            17,
                            18,
                            0,
                            8,
                            7,
                            9,
                            6,
                            10,
                            5,
                            11,
                            4,
                            12,
                            3,
                            13,
                            2,
                            14,
                            1,
                            15
                        ]), Z = new B, v = new Uint8Array(320);
                        function Q(e, t, r, o) {
                            for(var n, s = 0; s < r; ++s)e[s] = 0;
                            for(s = 0; s < 30 - r; ++s)e[s + r] = s / r | 0;
                            for(n = o, s = 0; s < 30; ++s)t[s] = n, n += 1 << e[s];
                        }
                        var K = new Uint16Array(16);
                        function J(e, t, r, o) {
                            for(var n, s = 0; s < 16; ++s)e.table[s] = 0;
                            for(s = 0; s < o; ++s)e.table[t[r + s]]++;
                            for(s = n = e.table[0] = 0; s < 16; ++s)K[s] = n, n += e.table[s];
                            for(s = 0; s < o; ++s)t[r + s] && (e.trans[K[t[r + s]]++] = s);
                        }
                        function b(e, t, r) {
                            if (!t) return r;
                            for(; e.bitcount < 24;)e.tag |= e.source[e.sourceIndex++] << e.bitcount, e.bitcount += 8;
                            var o = e.tag & 65535 >>> 16 - t;
                            return e.tag >>>= t, e.bitcount -= t, o + r;
                        }
                        function $(e, t) {
                            for(; e.bitcount < 24;)e.tag |= e.source[e.sourceIndex++] << e.bitcount, e.bitcount += 8;
                            for(var r = 0, o = 0, n = 0, s = e.tag; o = 2 * o + (1 & s), s >>>= 1, r += t.table[++n], 0 <= (o -= t.table[n]););
                            return e.tag = s, e.bitcount -= n, t.trans[r + o];
                        }
                        function ee(e, t, r) {
                            for(;;){
                                var o = $(e, t);
                                if (256 === o) return N;
                                if (o < 256) e.dest[e.destLen++] = o;
                                else for(var n, s = b(e, H[o -= 257], W[o]), o = $(e, r), i = n = e.destLen - b(e, q[o], X[o]); i < n + s; ++i)e.dest[e.destLen++] = e.dest[i];
                            }
                        }
                        for(var e = V, te = z, t = 0; t < 7; ++t)e.table[t] = 0;
                        for(e.table[7] = 24, e.table[8] = 152, e.table[9] = 112, t = 0; t < 24; ++t)e.trans[t] = 256 + t;
                        for(t = 0; t < 144; ++t)e.trans[24 + t] = t;
                        for(t = 0; t < 8; ++t)e.trans[168 + t] = 280 + t;
                        for(t = 0; t < 112; ++t)e.trans[176 + t] = 144 + t;
                        for(t = 0; t < 5; ++t)te.table[t] = 0;
                        for(te.table[5] = 32, t = 0; t < 32; ++t)te.trans[t] = t;
                        Q(H, W, 4, 3), Q(q, X, 2, 1), H[28] = 0, W[28] = 258;
                        var re = function(e, t) {
                            var r, o, n, s = new G(e, t);
                            do {
                                switch(n = void 0, (o = s).bitcount-- || (o.tag = o.source[o.sourceIndex++], o.bitcount = 7), n = 1 & o.tag, o.tag >>>= 1, o = n, b(s, 2, 0)){
                                    case 0:
                                        r = function(e) {
                                            for(var t, r; 8 < e.bitcount;)e.sourceIndex--, e.bitcount -= 8;
                                            if ((t = 256 * e.source[e.sourceIndex + 1] + e.source[e.sourceIndex]) !== (65535 & ~(256 * e.source[e.sourceIndex + 3] + e.source[e.sourceIndex + 2]))) return F;
                                            for(e.sourceIndex += 4, r = t; r; --r)e.dest[e.destLen++] = e.source[e.sourceIndex++];
                                            return e.bitcount = 0, N;
                                        }(s);
                                        break;
                                    case 1:
                                        r = ee(s, V, z);
                                        break;
                                    case 2:
                                        y = m = p = g = i = h = f = d = c = u = l = a = void 0;
                                        for(var i, a = s, l = s.ltree, u = s.dtree, c = b(a, 5, 257), d = b(a, 5, 1), f = b(a, 4, 4), h = 0; h < 19; ++h)v[h] = 0;
                                        for(h = 0; h < f; ++h){
                                            var p = b(a, 3, 0);
                                            v[Y[h]] = p;
                                        }
                                        for(J(Z, v, 0, 19), i = 0; i < c + d;){
                                            var m = $(a, Z);
                                            switch(m){
                                                case 16:
                                                    for(var y = v[i - 1], g = b(a, 2, 3); g; --g)v[i++] = y;
                                                    break;
                                                case 17:
                                                    for(g = b(a, 3, 3); g; --g)v[i++] = 0;
                                                    break;
                                                case 18:
                                                    for(g = b(a, 7, 11); g; --g)v[i++] = 0;
                                                    break;
                                                default:
                                                    v[i++] = m;
                                            }
                                        }
                                        J(l, v, 0, c), J(u, v, c, d), r = ee(s, s.ltree, s.dtree);
                                        break;
                                    default:
                                        r = F;
                                }
                                if (r !== N) throw new Error("Data error");
                            }while (!o);
                            return s.destLen < s.dest.length ? "function" == typeof s.dest.slice ? s.dest.slice(0, s.destLen) : s.dest.subarray(0, s.destLen) : s.dest;
                        };
                        function g(e, t, r, o, n) {
                            return Math.pow(1 - n, 3) * e + 3 * Math.pow(1 - n, 2) * n * t + 3 * (1 - n) * Math.pow(n, 2) * r + Math.pow(n, 3) * o;
                        }
                        function a() {
                            this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN;
                        }
                        function f() {
                            this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1;
                        }
                        function oe(e) {
                            throw new Error(e);
                        }
                        function ne(e, t) {
                            e || oe(t);
                        }
                        a.prototype.isEmpty = function() {
                            return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);
                        }, a.prototype.addPoint = function(e, t) {
                            "number" == typeof e && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = e, this.x2 = e), e < this.x1 && (this.x1 = e), e > this.x2 && (this.x2 = e)), "number" == typeof t && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = t, this.y2 = t), t < this.y1 && (this.y1 = t), t > this.y2 && (this.y2 = t));
                        }, a.prototype.addX = function(e) {
                            this.addPoint(e, null);
                        }, a.prototype.addY = function(e) {
                            this.addPoint(null, e);
                        }, a.prototype.addBezier = function(e, t, r, o, n, s, i, a) {
                            var l = [
                                e,
                                t
                            ], u = [
                                r,
                                o
                            ], c = [
                                n,
                                s
                            ], d = [
                                i,
                                a
                            ];
                            this.addPoint(e, t), this.addPoint(i, a);
                            for(var f = 0; f <= 1; f++){
                                var h, p = 6 * l[f] - 12 * u[f] + 6 * c[f], m = -3 * l[f] + 9 * u[f] - 9 * c[f] + 3 * d[f], y = 3 * u[f] - 3 * l[f];
                                0 == m ? 0 == p || 0 < (h = -y / p) && h < 1 && (0 === f && this.addX(g(l[f], u[f], c[f], d[f], h)), 1 === f && this.addY(g(l[f], u[f], c[f], d[f], h))) : (h = Math.pow(p, 2) - 4 * y * m) < 0 || (0 < (y = (-p + Math.sqrt(h)) / (2 * m)) && y < 1 && (0 === f && this.addX(g(l[f], u[f], c[f], d[f], y)), 1 === f && this.addY(g(l[f], u[f], c[f], d[f], y))), 0 < (y = (-p - Math.sqrt(h)) / (2 * m)) && y < 1 && (0 === f && this.addX(g(l[f], u[f], c[f], d[f], y)), 1 === f && this.addY(g(l[f], u[f], c[f], d[f], y))));
                            }
                        }, a.prototype.addQuad = function(e, t, r, o, n, s) {
                            r = e + 2 / 3 * (r - e), o = t + 2 / 3 * (o - t);
                            this.addBezier(e, t, r, o, r + 1 / 3 * (n - e), o + 1 / 3 * (s - t), n, s);
                        }, f.prototype.moveTo = function(e, t) {
                            this.commands.push({
                                type: "M",
                                x: e,
                                y: t
                            });
                        }, f.prototype.lineTo = function(e, t) {
                            this.commands.push({
                                type: "L",
                                x: e,
                                y: t
                            });
                        }, f.prototype.curveTo = f.prototype.bezierCurveTo = function(e, t, r, o, n, s) {
                            this.commands.push({
                                type: "C",
                                x1: e,
                                y1: t,
                                x2: r,
                                y2: o,
                                x: n,
                                y: s
                            });
                        }, f.prototype.quadTo = f.prototype.quadraticCurveTo = function(e, t, r, o) {
                            this.commands.push({
                                type: "Q",
                                x1: e,
                                y1: t,
                                x: r,
                                y: o
                            });
                        }, f.prototype.close = f.prototype.closePath = function() {
                            this.commands.push({
                                type: "Z"
                            });
                        }, f.prototype.extend = function(e) {
                            var t;
                            if (e.commands) e = e.commands;
                            else if (e instanceof a) return t = e, this.moveTo(t.x1, t.y1), this.lineTo(t.x2, t.y1), this.lineTo(t.x2, t.y2), this.lineTo(t.x1, t.y2), void this.close();
                            Array.prototype.push.apply(this.commands, e);
                        }, f.prototype.getBoundingBox = function() {
                            for(var e = new a, t = 0, r = 0, o = 0, n = 0, s = 0; s < this.commands.length; s++){
                                var i = this.commands[s];
                                switch(i.type){
                                    case "M":
                                        e.addPoint(i.x, i.y), t = o = i.x, r = n = i.y;
                                        break;
                                    case "L":
                                        e.addPoint(i.x, i.y), o = i.x, n = i.y;
                                        break;
                                    case "Q":
                                        e.addQuad(o, n, i.x1, i.y1, i.x, i.y), o = i.x, n = i.y;
                                        break;
                                    case "C":
                                        e.addBezier(o, n, i.x1, i.y1, i.x2, i.y2, i.x, i.y), o = i.x, n = i.y;
                                        break;
                                    case "Z":
                                        o = t, n = r;
                                        break;
                                    default:
                                        throw new Error("Unexpected path command " + i.type);
                                }
                            }
                            return e.isEmpty() && e.addPoint(0, 0), e;
                        }, f.prototype.draw = function(e) {
                            e.beginPath();
                            for(var t = 0; t < this.commands.length; t += 1){
                                var r = this.commands[t];
                                "M" === r.type ? e.moveTo(r.x, r.y) : "L" === r.type ? e.lineTo(r.x, r.y) : "C" === r.type ? e.bezierCurveTo(r.x1, r.y1, r.x2, r.y2, r.x, r.y) : "Q" === r.type ? e.quadraticCurveTo(r.x1, r.y1, r.x, r.y) : "Z" === r.type && e.closePath();
                            }
                            this.fill && (e.fillStyle = this.fill, e.fill()), this.stroke && (e.strokeStyle = this.stroke, e.lineWidth = this.strokeWidth, e.stroke());
                        }, f.prototype.toPathData = function(n) {
                            function e() {
                                for(var e = arguments, t = "", r = 0; r < arguments.length; r += 1){
                                    var o = e[r];
                                    0 <= o && 0 < r && (t += " "), t += (o, Math.round(o) === o ? "" + Math.round(o) : o.toFixed(n));
                                }
                                return t;
                            }
                            n = void 0 !== n ? n : 2;
                            for(var t = "", r = 0; r < this.commands.length; r += 1){
                                var o = this.commands[r];
                                "M" === o.type ? t += "M" + e(o.x, o.y) : "L" === o.type ? t += "L" + e(o.x, o.y) : "C" === o.type ? t += "C" + e(o.x1, o.y1, o.x2, o.y2, o.x, o.y) : "Q" === o.type ? t += "Q" + e(o.x1, o.y1, o.x, o.y) : "Z" === o.type && (t += "Z");
                            }
                            return t;
                        }, f.prototype.toSVG = function(e) {
                            var t = (t = '<path d="') + this.toPathData(e) + '"';
                            return this.fill && "black" !== this.fill && (null === this.fill ? t += ' fill="none"' : t += ' fill="' + this.fill + '"'), this.stroke && (t += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), t += "/>";
                        }, f.prototype.toDOMElement = function(e) {
                            var e = this.toPathData(e), t = document.createElementNS("http://www.w3.org/2000/svg", "path");
                            return t.setAttribute("d", e), t;
                        };
                        var P = {
                            fail: oe,
                            argument: ne,
                            assert: ne
                        }, m = {}, w = {}, l = {};
                        function r(e) {
                            return function() {
                                return e;
                            };
                        }
                        w.BYTE = function(e) {
                            return P.argument(0 <= e && e <= 255, "Byte value should be between 0 and 255."), [
                                e
                            ];
                        }, l.BYTE = r(1), w.CHAR = function(e) {
                            return [
                                e.charCodeAt(0)
                            ];
                        }, l.CHAR = r(1), w.CHARARRAY = function(e) {
                            for(var t = [], r = 0; r < e.length; r += 1)t[r] = e.charCodeAt(r);
                            return t;
                        }, l.CHARARRAY = function(e) {
                            return e.length;
                        }, w.USHORT = function(e) {
                            return [
                                e >> 8 & 255,
                                255 & e
                            ];
                        }, l.USHORT = r(2), w.SHORT = function(e) {
                            return [
                                (e = 32768 <= e ? -(65536 - e) : e) >> 8 & 255,
                                255 & e
                            ];
                        }, l.SHORT = r(2), w.UINT24 = function(e) {
                            return [
                                e >> 16 & 255,
                                e >> 8 & 255,
                                255 & e
                            ];
                        }, l.UINT24 = r(3), w.ULONG = function(e) {
                            return [
                                e >> 24 & 255,
                                e >> 16 & 255,
                                e >> 8 & 255,
                                255 & e
                            ];
                        }, l.ULONG = r(4), w.LONG = function(e) {
                            return [
                                (e = 2147483648 <= e ? -(4294967296 - e) : e) >> 24 & 255,
                                e >> 16 & 255,
                                e >> 8 & 255,
                                255 & e
                            ];
                        }, l.LONG = r(4), w.FIXED = w.ULONG, l.FIXED = l.ULONG, w.FWORD = w.SHORT, l.FWORD = l.SHORT, w.UFWORD = w.USHORT, l.UFWORD = l.USHORT, w.LONGDATETIME = function(e) {
                            return [
                                0,
                                0,
                                0,
                                0,
                                e >> 24 & 255,
                                e >> 16 & 255,
                                e >> 8 & 255,
                                255 & e
                            ];
                        }, l.LONGDATETIME = r(8), w.TAG = function(e) {
                            return P.argument(4 === e.length, "Tag should be exactly 4 ASCII characters."), [
                                e.charCodeAt(0),
                                e.charCodeAt(1),
                                e.charCodeAt(2),
                                e.charCodeAt(3)
                            ];
                        }, l.TAG = r(4), w.Card8 = w.BYTE, l.Card8 = l.BYTE, w.Card16 = w.USHORT, l.Card16 = l.USHORT, w.OffSize = w.BYTE, l.OffSize = l.BYTE, w.SID = w.USHORT, l.SID = l.USHORT, w.NUMBER = function(e) {
                            return -107 <= e && e <= 107 ? [
                                e + 139
                            ] : 108 <= e && e <= 1131 ? [
                                247 + ((e -= 108) >> 8),
                                255 & e
                            ] : -1131 <= e && e <= -108 ? [
                                251 + ((e = -e - 108) >> 8),
                                255 & e
                            ] : -32768 <= e && e <= 32767 ? w.NUMBER16(e) : w.NUMBER32(e);
                        }, l.NUMBER = function(e) {
                            return w.NUMBER(e).length;
                        }, w.NUMBER16 = function(e) {
                            return [
                                28,
                                e >> 8 & 255,
                                255 & e
                            ];
                        }, l.NUMBER16 = r(3), w.NUMBER32 = function(e) {
                            return [
                                29,
                                e >> 24 & 255,
                                e >> 16 & 255,
                                e >> 8 & 255,
                                255 & e
                            ];
                        }, l.NUMBER32 = r(5), w.REAL = function(e) {
                            for(var t = e.toString(), r = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t), o = (r && (r = parseFloat("1e" + ((r[2] ? +r[2] : 0) + r[1].length)), t = (Math.round(e * r) / r).toString()), ""), n = 0, s = t.length; n < s; n += 1){
                                var i = t[n];
                                o += "e" === i ? "-" === t[++n] ? "c" : "b" : "." === i ? "a" : "-" === i ? "e" : i;
                            }
                            for(var a = [
                                30
                            ], l = 0, u = (o += 1 & o.length ? "f" : "ff").length; l < u; l += 2)a.push(parseInt(o.substr(l, 2), 16));
                            return a;
                        }, l.REAL = function(e) {
                            return w.REAL(e).length;
                        }, w.NAME = w.CHARARRAY, l.NAME = l.CHARARRAY, w.STRING = w.CHARARRAY, l.STRING = l.CHARARRAY, m.UTF8 = function(e, t, r) {
                            for(var o = [], n = r, s = 0; s < n; s++, t += 1)o[s] = e.getUint8(t);
                            return String.fromCharCode.apply(null, o);
                        }, m.UTF16 = function(e, t, r) {
                            for(var o = [], n = r / 2, s = 0; s < n; s++, t += 2)o[s] = e.getUint16(t);
                            return String.fromCharCode.apply(null, o);
                        }, w.UTF16 = function(e) {
                            for(var t = [], r = 0; r < e.length; r += 1){
                                var o = e.charCodeAt(r);
                                t[t.length] = o >> 8 & 255, t[t.length] = 255 & o;
                            }
                            return t;
                        }, l.UTF16 = function(e) {
                            return 2 * e.length;
                        };
                        var se, ie = {
                            "x-mac-croatian": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\u0160\u2122\xb4\xa8\u2260\u017D\xd8\u221E\xb1\u2264\u2265\u2206\xb5\u2202\u2211\u220F\u0161\u222B\xaa\xba\u03A9\u017E\xf8\xbf\xa1\xac\u221A\u0192\u2248\u0106\xab\u010C\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\uF8FF\xa9\u2044\u20AC\u2039\u203A\xc6\xbb\u2013\xb7\u201A\u201E\u2030\xc2\u0107\xc1\u010D\xc8\xcd\xce\xcf\xcc\xd3\xd4\u0111\xd2\xda\xdb\xd9\u0131\u02C6\u02DC\xaf\u03C0\xcb\u02DA\xb8\xca\xe6\u02C7",
                            "x-mac-cyrillic": "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xb0\u0490\xa3\xa7\u2022\xb6\u0406\xae\xa9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xb1\u2264\u2265\u0456\xb5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xac\u221A\u0192\u2248\u2206\xab\xbb\u2026\xa0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E",
                            "x-mac-gaelic": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u1E02\xb1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xe6\xf8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xff\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xb7\u1EF2\u1EF3\u204A\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\u2663\xd2\xda\xdb\xd9\u0131\xdd\xfd\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83",
                            "x-mac-greek": "\xc4\xb9\xb2\xc9\xb3\xd6\xdc\u0385\xe0\xe2\xe4\u0384\xa8\xe7\xe9\xe8\xea\xeb\xa3\u2122\xee\xef\u2022\xbd\u2030\xf4\xf6\xa6\u20AC\xf9\xfb\xfc\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xdf\xae\xa9\u03A3\u03AA\xa7\u2260\xb0\xb7\u0391\xb1\u2264\u2265\xa5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xac\u039F\u03A1\u2248\u03A4\xab\xbb\u2026\xa0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xf7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xad",
                            "x-mac-icelandic": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\xdd\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221E\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220F\u03C0\u222B\xaa\xba\u03A9\xe6\xf8\xbf\xa1\xac\u221A\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\xff\u0178\u2044\u20AC\xd0\xf0\xde\xfe\xfd\xb7\u201A\u201E\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uF8FF\xd2\xda\xdb\xd9\u0131\u02C6\u02DC\xaf\u02D8\u02D9\u02DA\xb8\u02DD\u02DB\u02C7",
                            "x-mac-inuit": "\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xb0\u14A1\u14A5\u14A6\u2022\xb6\u14A7\xae\xa9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026\xa0\u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142",
                            "x-mac-ce": "\xc4\u0100\u0101\xc9\u0104\xd6\xdc\xe1\u0105\u010C\xe4\u010D\u0106\u0107\xe9\u0179\u017A\u010E\xed\u010F\u0112\u0113\u0116\xf3\u0117\xf4\xf6\xf5\xfa\u011A\u011B\xfc\u2020\xb0\u0118\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\u0119\xa8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xac\u221A\u0144\u0147\u2206\xab\xbb\u2026\xa0\u0148\u0150\xd5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xc1\u0164\u0165\xcd\u017D\u017E\u016A\xd3\xd4\u016B\u016E\xda\u016F\u0170\u0171\u0172\u0173\xdd\xfd\u0137\u017B\u0141\u017C\u0122\u02C7",
                            macintosh: "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221E\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220F\u03C0\u222B\xaa\xba\u03A9\xe6\xf8\xbf\xa1\xac\u221A\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\xff\u0178\u2044\u20AC\u2039\u203A\uFB01\uFB02\u2021\xb7\u201A\u201E\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uF8FF\xd2\xda\xdb\xd9\u0131\u02C6\u02DC\xaf\u02D8\u02D9\u02DA\xb8\u02DD\u02DB\u02C7",
                            "x-mac-romanian": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\u0102\u0218\u221E\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220F\u03C0\u222B\xaa\xba\u03A9\u0103\u0219\xbf\xa1\xac\u221A\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\xff\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xb7\u201A\u201E\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uF8FF\xd2\xda\xdb\xd9\u0131\u02C6\u02DC\xaf\u02D8\u02D9\u02DA\xb8\u02DD\u02DB\u02C7",
                            "x-mac-turkish": "\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221E\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220F\u03C0\u222B\xaa\xba\u03A9\xe6\xf8\xbf\xa1\xac\u221A\u0192\u2248\u2206\xab\xbb\u2026\xa0\xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xf7\u25CA\xff\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xb7\u201A\u201E\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uF8FF\xd2\xda\xdb\xd9\uF8A0\u02C6\u02DC\xaf\u02D8\u02D9\u02DA\xb8\u02DD\u02DB\u02C7"
                        }, ae = (m.MACSTRING = function(e, t, r, o) {
                            var n = ie[o];
                            if (void 0 !== n) {
                                for(var s = "", i = 0; i < r; i++){
                                    var a = e.getUint8(t + i);
                                    s += a <= 127 ? String.fromCharCode(a) : n[127 & a];
                                }
                                return s;
                            }
                        }, "function" == typeof WeakMap && new WeakMap);
                        function le(e) {
                            return -128 <= e && e <= 127;
                        }
                        w.MACSTRING = function(e, t) {
                            var r = function(e) {
                                if (!se) for(var t in se = {}, ie)se[t] = new String(t);
                                var r = se[e];
                                if (void 0 !== r) {
                                    if (ae) {
                                        var o = ae.get(r);
                                        if (void 0 !== o) return o;
                                    }
                                    var n = ie[e];
                                    if (void 0 !== n) {
                                        for(var s = {}, i = 0; i < n.length; i++)s[n.charCodeAt(i)] = i + 128;
                                        return ae && ae.set(r, s), s;
                                    }
                                }
                            }(t);
                            if (void 0 !== r) {
                                for(var o = [], n = 0; n < e.length; n++){
                                    var s = e.charCodeAt(n);
                                    if (128 <= s && void 0 === (s = r[s])) return;
                                    o[n] = s;
                                }
                                return o;
                            }
                        }, l.MACSTRING = function(e, t) {
                            e = w.MACSTRING(e, t);
                            return void 0 !== e ? e.length : 0;
                        }, w.VARDELTAS = function(e) {
                            for(var t = 0, r = []; t < e.length;)var o = e[t], t = (0 === o ? function(e, t, r) {
                                for(var o = 0, n = e.length; t < n && o < 64 && 0 === e[t];)++t, ++o;
                                return r.push(128 | o - 1), t;
                            } : -128 <= o && o <= 127 ? function(e, t, r) {
                                for(var o = 0, n = e.length, s = t; s < n && o < 64;){
                                    var i = e[s];
                                    if (!le(i)) break;
                                    if (0 === i && s + 1 < n && 0 === e[s + 1]) break;
                                    ++s, ++o;
                                }
                                r.push(o - 1);
                                for(var a = t; a < s; ++a)r.push(e[a] + 256 & 255);
                                return s;
                            } : function(e, t, r) {
                                for(var o = 0, n = e.length, s = t; s < n && o < 64;){
                                    var i = e[s];
                                    if (0 === i) break;
                                    if (le(i) && s + 1 < n && le(e[s + 1])) break;
                                    ++s, ++o;
                                }
                                r.push(64 | o - 1);
                                for(var a = t; a < s; ++a){
                                    var l = e[a];
                                    r.push(l + 65536 >> 8 & 255, l + 256 & 255);
                                }
                                return s;
                            })(e, t, r);
                            return r;
                        }, w.INDEX = function(e) {
                            for(var t = 1, r = [
                                t
                            ], o = [], n = 0; n < e.length; n += 1){
                                var s = w.OBJECT(e[n]);
                                Array.prototype.push.apply(o, s), t += s.length, r.push(t);
                            }
                            if (0 === o.length) return [
                                0,
                                0
                            ];
                            for(var i = [], a = 1 + Math.floor(Math.log(t) / Math.log(2)) / 8 | 0, l = [
                                void 0,
                                w.BYTE,
                                w.USHORT,
                                w.UINT24,
                                w.ULONG
                            ][a], u = 0; u < r.length; u += 1){
                                var c = l(r[u]);
                                Array.prototype.push.apply(i, c);
                            }
                            return Array.prototype.concat(w.Card16(e.length), w.OffSize(a), i, o);
                        }, l.INDEX = function(e) {
                            return w.INDEX(e).length;
                        }, w.DICT = function(e) {
                            for(var t = [], r = Object.keys(e), o = r.length, n = 0; n < o; n += 1){
                                var s = parseInt(r[n], 0), i = e[s];
                                t = (t = t.concat(w.OPERAND(i.value, i.type))).concat(w.OPERATOR(s));
                            }
                            return t;
                        }, l.DICT = function(e) {
                            return w.DICT(e).length;
                        }, w.OPERATOR = function(e) {
                            return e < 1200 ? [
                                e
                            ] : [
                                12,
                                e - 1200
                            ];
                        }, w.OPERAND = function(e, t) {
                            var r = [];
                            if (Array.isArray(t)) for(var o = 0; o < t.length; o += 1)P.argument(e.length === t.length, "Not enough arguments given for type" + t), r = r.concat(w.OPERAND(e[o], t[o]));
                            else if ("SID" === t) r = r.concat(w.NUMBER(e));
                            else if ("offset" === t) r = r.concat(w.NUMBER32(e));
                            else if ("number" === t) r = r.concat(w.NUMBER(e));
                            else {
                                if ("real" !== t) throw new Error("Unknown operand type " + t);
                                r = r.concat(w.REAL(e));
                            }
                            return r;
                        }, w.OP = w.BYTE, l.OP = l.BYTE;
                        var ue = "function" == typeof WeakMap && new WeakMap;
                        function n(e, t, r) {
                            for(var o = 0; o < t.length; o += 1){
                                var n = t[o];
                                this[n.name] = n.value;
                            }
                            if (this.tableName = e, this.fields = t, r) for(var s = Object.keys(r), i = 0; i < s.length; i += 1){
                                var a = s[i], l = r[a];
                                void 0 !== this[a] && (this[a] = l);
                            }
                        }
                        function ce(e, t, r) {
                            void 0 === r && (r = t.length);
                            var o = new Array(t.length + 1);
                            o[0] = {
                                name: e + "Count",
                                type: "USHORT",
                                value: r
                            };
                            for(var n = 0; n < t.length; n++)o[n + 1] = {
                                name: e + n,
                                type: "USHORT",
                                value: t[n]
                            };
                            return o;
                        }
                        function de(e, t, r) {
                            var o = t.length, n = new Array(o + 1);
                            n[0] = {
                                name: e + "Count",
                                type: "USHORT",
                                value: o
                            };
                            for(var s = 0; s < o; s++)n[s + 1] = {
                                name: e + s,
                                type: "TABLE",
                                value: r(t[s], s)
                            };
                            return n;
                        }
                        function fe(e, t, r) {
                            var o = t.length, n = [];
                            n[0] = {
                                name: e + "Count",
                                type: "USHORT",
                                value: o
                            };
                            for(var s = 0; s < o; s++)n = n.concat(r(t[s], s));
                            return n;
                        }
                        function he(e) {
                            1 === e.format ? n.call(this, "coverageTable", [
                                {
                                    name: "coverageFormat",
                                    type: "USHORT",
                                    value: 1
                                }
                            ].concat(ce("glyph", e.glyphs))) : P.assert(!1, "Can't create coverage table format 2 yet.");
                        }
                        function pe(e) {
                            n.call(this, "scriptListTable", fe("scriptRecord", e, function(e, t) {
                                var r = e.script, o = r.defaultLangSys;
                                return P.assert(!!o, "Unable to write GSUB: script " + e.tag + " has no default language system."), [
                                    {
                                        name: "scriptTag" + t,
                                        type: "TAG",
                                        value: e.tag
                                    },
                                    {
                                        name: "script" + t,
                                        type: "TABLE",
                                        value: new n("scriptTable", [
                                            {
                                                name: "defaultLangSys",
                                                type: "TABLE",
                                                value: new n("defaultLangSys", [
                                                    {
                                                        name: "lookupOrder",
                                                        type: "USHORT",
                                                        value: 0
                                                    },
                                                    {
                                                        name: "reqFeatureIndex",
                                                        type: "USHORT",
                                                        value: o.reqFeatureIndex
                                                    }
                                                ].concat(ce("featureIndex", o.featureIndexes)))
                                            }
                                        ].concat(fe("langSys", r.langSysRecords, function(e, t) {
                                            var r = e.langSys;
                                            return [
                                                {
                                                    name: "langSysTag" + t,
                                                    type: "TAG",
                                                    value: e.tag
                                                },
                                                {
                                                    name: "langSys" + t,
                                                    type: "TABLE",
                                                    value: new n("langSys", [
                                                        {
                                                            name: "lookupOrder",
                                                            type: "USHORT",
                                                            value: 0
                                                        },
                                                        {
                                                            name: "reqFeatureIndex",
                                                            type: "USHORT",
                                                            value: r.reqFeatureIndex
                                                        }
                                                    ].concat(ce("featureIndex", r.featureIndexes)))
                                                }
                                            ];
                                        })))
                                    }
                                ];
                            }));
                        }
                        function me(e) {
                            n.call(this, "featureListTable", fe("featureRecord", e, function(e, t) {
                                var r = e.feature;
                                return [
                                    {
                                        name: "featureTag" + t,
                                        type: "TAG",
                                        value: e.tag
                                    },
                                    {
                                        name: "feature" + t,
                                        type: "TABLE",
                                        value: new n("featureTable", [
                                            {
                                                name: "featureParams",
                                                type: "USHORT",
                                                value: r.featureParams
                                            }
                                        ].concat(ce("lookupListIndex", r.lookupListIndexes)))
                                    }
                                ];
                            }));
                        }
                        function ye(e, r) {
                            n.call(this, "lookupListTable", de("lookup", e, function(e) {
                                var t = r[e.lookupType];
                                return P.assert(!!t, "Unable to write GSUB lookup type " + e.lookupType + " tables."), new n("lookupTable", [
                                    {
                                        name: "lookupType",
                                        type: "USHORT",
                                        value: e.lookupType
                                    },
                                    {
                                        name: "lookupFlag",
                                        type: "USHORT",
                                        value: e.lookupFlag
                                    }
                                ].concat(de("subtable", e.subtables, t)));
                            }));
                        }
                        w.CHARSTRING = function(e) {
                            if (ue) {
                                var t = ue.get(e);
                                if (void 0 !== t) return t;
                            }
                            for(var r = [], o = e.length, n = 0; n < o; n += 1)var s = e[n], r = r.concat(w[s.type](s.value));
                            return ue && ue.set(e, r), r;
                        }, l.CHARSTRING = function(e) {
                            return w.CHARSTRING(e).length;
                        }, w.OBJECT = function(e) {
                            var t = w[e.type];
                            return P.argument(void 0 !== t, "No encoding function for type " + e.type), t(e.value);
                        }, l.OBJECT = function(e) {
                            var t = l[e.type];
                            return P.argument(void 0 !== t, "No sizeOf function for type " + e.type), t(e.value);
                        }, w.TABLE = function(e) {
                            for(var t = [], r = e.fields.length, o = [], n = [], s = 0; s < r; s += 1){
                                var i = e.fields[s], a = w[i.type], l = (P.argument(void 0 !== a, "No encoding function for field type " + i.type + " (" + i.name + ")"), e[i.name]), a = a(l = void 0 === l ? i.value : l);
                                "TABLE" === i.type ? (n.push(t.length), t = t.concat([
                                    0,
                                    0
                                ]), o.push(a)) : t = t.concat(a);
                            }
                            for(var u = 0; u < o.length; u += 1){
                                var c = n[u], d = t.length;
                                P.argument(d < 65536, "Table " + e.tableName + " too big."), t[c] = d >> 8, t[c + 1] = 255 & d, t = t.concat(o[u]);
                            }
                            return t;
                        }, l.TABLE = function(e) {
                            for(var t = 0, r = e.fields.length, o = 0; o < r; o += 1){
                                var n = e.fields[o], s = l[n.type], i = (P.argument(void 0 !== s, "No sizeOf function for field type " + n.type + " (" + n.name + ")"), e[n.name]);
                                t += s(i = void 0 === i ? n.value : i), "TABLE" === n.type && (t += 2);
                            }
                            return t;
                        }, w.RECORD = w.TABLE, l.RECORD = l.TABLE, w.LITERAL = function(e) {
                            return e;
                        }, l.LITERAL = function(e) {
                            return e.length;
                        }, n.prototype.encode = function() {
                            return w.TABLE(this);
                        }, n.prototype.sizeOf = function() {
                            return l.TABLE(this);
                        };
                        var S = {
                            Table: n,
                            Record: n,
                            Coverage: (he.prototype = Object.create(n.prototype)).constructor = he,
                            ScriptList: (pe.prototype = Object.create(n.prototype)).constructor = pe,
                            FeatureList: (me.prototype = Object.create(n.prototype)).constructor = me,
                            LookupList: (ye.prototype = Object.create(n.prototype)).constructor = ye,
                            ushortList: ce,
                            tableList: de,
                            recordList: fe
                        };
                        function ge(e, t) {
                            return e.getUint8(t);
                        }
                        function ve(e, t) {
                            return e.getUint16(t, !1);
                        }
                        function be(e, t) {
                            return e.getUint32(t, !1);
                        }
                        function je(e, t) {
                            return e.getInt16(t, !1) + e.getUint16(t + 2, !1) / 65535;
                        }
                        var _e = {
                            byte: 1,
                            uShort: 2,
                            short: 2,
                            uLong: 4,
                            fixed: 4,
                            longDateTime: 8,
                            tag: 4
                        };
                        function u(e, t) {
                            this.data = e, this.offset = t, this.relativeOffset = 0;
                        }
                        u.prototype.parseByte = function() {
                            var e = this.data.getUint8(this.offset + this.relativeOffset);
                            return this.relativeOffset += 1, e;
                        }, u.prototype.parseChar = function() {
                            var e = this.data.getInt8(this.offset + this.relativeOffset);
                            return this.relativeOffset += 1, e;
                        }, u.prototype.parseCard8 = u.prototype.parseByte, u.prototype.parseCard16 = u.prototype.parseUShort = function() {
                            var e = this.data.getUint16(this.offset + this.relativeOffset);
                            return this.relativeOffset += 2, e;
                        }, u.prototype.parseSID = u.prototype.parseUShort, u.prototype.parseOffset16 = u.prototype.parseUShort, u.prototype.parseShort = function() {
                            var e = this.data.getInt16(this.offset + this.relativeOffset);
                            return this.relativeOffset += 2, e;
                        }, u.prototype.parseF2Dot14 = function() {
                            var e = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
                            return this.relativeOffset += 2, e;
                        }, u.prototype.parseOffset32 = u.prototype.parseULong = function() {
                            var e = be(this.data, this.offset + this.relativeOffset);
                            return this.relativeOffset += 4, e;
                        }, u.prototype.parseFixed = function() {
                            var e = je(this.data, this.offset + this.relativeOffset);
                            return this.relativeOffset += 4, e;
                        }, u.prototype.parseString = function(e) {
                            var t = this.data, r = this.offset + this.relativeOffset, o = "";
                            this.relativeOffset += e;
                            for(var n = 0; n < e; n++)o += String.fromCharCode(t.getUint8(r + n));
                            return o;
                        }, u.prototype.parseTag = function() {
                            return this.parseString(4);
                        }, u.prototype.parseLongDateTime = function() {
                            var e = be(this.data, this.offset + this.relativeOffset + 4);
                            return e -= 2082844800, this.relativeOffset += 8, e;
                        }, u.prototype.parseVersion = function(e) {
                            var t = ve(this.data, this.offset + this.relativeOffset), r = ve(this.data, this.offset + this.relativeOffset + 2);
                            return this.relativeOffset += 4, t + r / (e = void 0 === e ? 4096 : e) / 10;
                        }, u.prototype.skip = function(e, t) {
                            this.relativeOffset += _e[e] * (t = void 0 === t ? 1 : t);
                        }, u.prototype.parseULongList = function(e) {
                            void 0 === e && (e = this.parseULong());
                            for(var t = new Array(e), r = this.data, o = this.offset + this.relativeOffset, n = 0; n < e; n++)t[n] = r.getUint32(o), o += 4;
                            return this.relativeOffset += 4 * e, t;
                        }, u.prototype.parseOffset16List = u.prototype.parseUShortList = function(e) {
                            void 0 === e && (e = this.parseUShort());
                            for(var t = new Array(e), r = this.data, o = this.offset + this.relativeOffset, n = 0; n < e; n++)t[n] = r.getUint16(o), o += 2;
                            return this.relativeOffset += 2 * e, t;
                        }, u.prototype.parseShortList = function(e) {
                            for(var t = new Array(e), r = this.data, o = this.offset + this.relativeOffset, n = 0; n < e; n++)t[n] = r.getInt16(o), o += 2;
                            return this.relativeOffset += 2 * e, t;
                        }, u.prototype.parseByteList = function(e) {
                            for(var t = new Array(e), r = this.data, o = this.offset + this.relativeOffset, n = 0; n < e; n++)t[n] = r.getUint8(o++);
                            return this.relativeOffset += e, t;
                        }, u.prototype.parseList = function(e, t) {
                            t || (t = e, e = this.parseUShort());
                            for(var r = new Array(e), o = 0; o < e; o++)r[o] = t.call(this);
                            return r;
                        }, u.prototype.parseList32 = function(e, t) {
                            t || (t = e, e = this.parseULong());
                            for(var r = new Array(e), o = 0; o < e; o++)r[o] = t.call(this);
                            return r;
                        }, u.prototype.parseRecordList = function(e, t) {
                            t || (t = e, e = this.parseUShort());
                            for(var r = new Array(e), o = Object.keys(t), n = 0; n < e; n++){
                                for(var s = {}, i = 0; i < o.length; i++){
                                    var a = o[i], l = t[a];
                                    s[a] = l.call(this);
                                }
                                r[n] = s;
                            }
                            return r;
                        }, u.prototype.parseRecordList32 = function(e, t) {
                            t || (t = e, e = this.parseULong());
                            for(var r = new Array(e), o = Object.keys(t), n = 0; n < e; n++){
                                for(var s = {}, i = 0; i < o.length; i++){
                                    var a = o[i], l = t[a];
                                    s[a] = l.call(this);
                                }
                                r[n] = s;
                            }
                            return r;
                        }, u.prototype.parseStruct = function(e) {
                            if ("function" == typeof e) return e.call(this);
                            for(var t = Object.keys(e), r = {}, o = 0; o < t.length; o++){
                                var n = t[o], s = e[n];
                                r[n] = s.call(this);
                            }
                            return r;
                        }, u.prototype.parseValueRecord = function(e) {
                            var t;
                            if (0 !== (e = void 0 === e ? this.parseUShort() : e)) return t = {}, 1 & e && (t.xPlacement = this.parseShort()), 2 & e && (t.yPlacement = this.parseShort()), 4 & e && (t.xAdvance = this.parseShort()), 8 & e && (t.yAdvance = this.parseShort()), 16 & e && (t.xPlaDevice = void 0, this.parseShort()), 32 & e && (t.yPlaDevice = void 0, this.parseShort()), 64 & e && (t.xAdvDevice = void 0, this.parseShort()), 128 & e && (t.yAdvDevice = void 0, this.parseShort()), t;
                        }, u.prototype.parseValueRecordList = function() {
                            for(var e = this.parseUShort(), t = this.parseUShort(), r = new Array(t), o = 0; o < t; o++)r[o] = this.parseValueRecord(e);
                            return r;
                        }, u.prototype.parsePointer = function(e) {
                            var t = this.parseOffset16();
                            if (0 < t) return new u(this.data, this.offset + t).parseStruct(e);
                        }, u.prototype.parsePointer32 = function(e) {
                            var t = this.parseOffset32();
                            if (0 < t) return new u(this.data, this.offset + t).parseStruct(e);
                        }, u.prototype.parseListOfLists = function(e) {
                            for(var t = this.parseOffset16List(), r = t.length, o = this.relativeOffset, n = new Array(r), s = 0; s < r; s++){
                                var i = t[s];
                                if (0 === i) n[s] = void 0;
                                else if (this.relativeOffset = i, e) {
                                    for(var a = this.parseOffset16List(), l = new Array(a.length), u = 0; u < a.length; u++)this.relativeOffset = i + a[u], l[u] = e.call(this);
                                    n[s] = l;
                                } else n[s] = this.parseUShortList();
                            }
                            return this.relativeOffset = o, n;
                        }, u.prototype.parseCoverage = function() {
                            var e = this.offset + this.relativeOffset, t = this.parseUShort(), r = this.parseUShort();
                            if (1 === t) return {
                                format: 1,
                                glyphs: this.parseUShortList(r)
                            };
                            if (2 !== t) throw new Error("0x" + e.toString(16) + ": Coverage format must be 1 or 2.");
                            for(var o = new Array(r), n = 0; n < r; n++)o[n] = {
                                start: this.parseUShort(),
                                end: this.parseUShort(),
                                index: this.parseUShort()
                            };
                            return {
                                format: 2,
                                ranges: o
                            };
                        }, u.prototype.parseClassDef = function() {
                            var e = this.offset + this.relativeOffset, t = this.parseUShort();
                            if (1 === t) return {
                                format: 1,
                                startGlyph: this.parseUShort(),
                                classes: this.parseUShortList()
                            };
                            if (2 === t) return {
                                format: 2,
                                ranges: this.parseRecordList({
                                    start: u.uShort,
                                    end: u.uShort,
                                    classId: u.uShort
                                })
                            };
                            throw new Error("0x" + e.toString(16) + ": ClassDef format must be 1 or 2.");
                        }, u.list = function(e, t) {
                            return function() {
                                return this.parseList(e, t);
                            };
                        }, u.list32 = function(e, t) {
                            return function() {
                                return this.parseList32(e, t);
                            };
                        }, u.recordList = function(e, t) {
                            return function() {
                                return this.parseRecordList(e, t);
                            };
                        }, u.recordList32 = function(e, t) {
                            return function() {
                                return this.parseRecordList32(e, t);
                            };
                        }, u.pointer = function(e) {
                            return function() {
                                return this.parsePointer(e);
                            };
                        }, u.pointer32 = function(e) {
                            return function() {
                                return this.parsePointer32(e);
                            };
                        }, u.tag = u.prototype.parseTag, u.byte = u.prototype.parseByte, u.uShort = u.offset16 = u.prototype.parseUShort, u.uShortList = u.prototype.parseUShortList, u.uLong = u.offset32 = u.prototype.parseULong, u.uLongList = u.prototype.parseULongList, u.struct = u.prototype.parseStruct, u.coverage = u.prototype.parseCoverage, u.classDef = u.prototype.parseClassDef;
                        var xe = {
                            reserved: u.uShort,
                            reqFeatureIndex: u.uShort,
                            featureIndexes: u.uShortList
                        }, R = (u.prototype.parseScriptList = function() {
                            return this.parsePointer(u.recordList({
                                tag: u.tag,
                                script: u.pointer({
                                    defaultLangSys: u.pointer(xe),
                                    langSysRecords: u.recordList({
                                        tag: u.tag,
                                        langSys: u.pointer(xe)
                                    })
                                })
                            })) || [];
                        }, u.prototype.parseFeatureList = function() {
                            return this.parsePointer(u.recordList({
                                tag: u.tag,
                                feature: u.pointer({
                                    featureParams: u.offset16,
                                    lookupListIndexes: u.uShortList
                                })
                            })) || [];
                        }, u.prototype.parseLookupList = function(o) {
                            return this.parsePointer(u.list(u.pointer(function() {
                                var e = this.parseUShort(), t = (P.argument(1 <= e && e <= 9, "GPOS/GSUB lookup type " + e + " unknown."), this.parseUShort()), r = 16 & t;
                                return {
                                    lookupType: e,
                                    lookupFlag: t,
                                    subtables: this.parseList(u.pointer(o[e])),
                                    markFilteringSet: r ? this.parseUShort() : void 0
                                };
                            }))) || [];
                        }, u.prototype.parseFeatureVariationsList = function() {
                            return this.parsePointer32(function() {
                                var e = this.parseUShort(), t = this.parseUShort();
                                return P.argument(1 === e && t < 1, "GPOS/GSUB feature variations table unknown."), this.parseRecordList32({
                                    conditionSetOffset: u.offset32,
                                    featureTableSubstitutionOffset: u.offset32
                                });
                            }) || [];
                        }, {
                            getByte: ge,
                            getCard8: ge,
                            getUShort: ve,
                            getCard16: ve,
                            getShort: function(e, t) {
                                return e.getInt16(t, !1);
                            },
                            getULong: be,
                            getFixed: je,
                            getTag: function(e, t) {
                                for(var r = "", o = t; o < t + 4; o += 1)r += String.fromCharCode(e.getInt8(o));
                                return r;
                            },
                            getOffset: function(e, t, r) {
                                for(var o = 0, n = 0; n < r; n += 1)o = (o <<= 8) + e.getUint8(t + n);
                                return o;
                            },
                            getBytes: function(e, t, r) {
                                for(var o = [], n = t; n < r; n += 1)o.push(e.getUint8(n));
                                return o;
                            },
                            bytesToString: function(e) {
                                for(var t = "", r = 0; r < e.length; r += 1)t += String.fromCharCode(e[r]);
                                return t;
                            },
                            Parser: u
                        });
                        var we = {
                            parse: function(e, t) {
                                for(var r = {}, o = (r.version = R.getUShort(e, t), P.argument(0 === r.version, "cmap table version should be 0."), r.numTables = R.getUShort(e, t + 2), -1), n = r.numTables - 1; 0 <= n; --n){
                                    var s = R.getUShort(e, t + 4 + 8 * n), i = R.getUShort(e, t + 4 + 8 * n + 2);
                                    if (3 === s && (0 === i || 1 === i || 10 === i) || 0 === s && (0 === i || 1 === i || 2 === i || 3 === i || 4 === i)) {
                                        o = R.getULong(e, t + 4 + 8 * n + 4);
                                        break;
                                    }
                                }
                                if (-1 === o) throw new Error("No valid cmap sub-tables found.");
                                var a = new R.Parser(e, t + o);
                                if (r.format = a.parseUShort(), 12 === r.format) {
                                    var l, u = r, c = a;
                                    c.parseUShort(), u.length = c.parseULong(), u.language = c.parseULong(), u.groupCount = l = c.parseULong(), u.glyphIndexMap = {};
                                    for(var d = 0; d < l; d += 1)for(var f = c.parseULong(), h = c.parseULong(), p = c.parseULong(), m = f; m <= h; m += 1)u.glyphIndexMap[m] = p, p++;
                                } else {
                                    if (4 !== r.format) throw new Error("Only format 4 and 12 cmap tables are supported (found format " + r.format + ").");
                                    var y = r, g = e, v = t, b = o;
                                    y.length = a.parseUShort(), y.language = a.parseUShort(), y.segCount = j = a.parseUShort() >> 1, a.skip("uShort", 3), y.glyphIndexMap = {};
                                    for(var j, _ = new R.Parser(g, v + b + 14), x = new R.Parser(g, v + b + 16 + 2 * j), w = new R.Parser(g, v + b + 16 + 4 * j), S = new R.Parser(g, v + b + 16 + 6 * j), M = v + b + 16 + 8 * j, E = 0; E < j - 1; E += 1)for(var T = void 0, C = _.parseUShort(), O = x.parseUShort(), L = w.parseShort(), k = S.parseUShort(), A = O; A <= C; A += 1)0 !== k ? (M = (M = S.offset + S.relativeOffset - 2) + k + 2 * (A - O), 0 !== (T = R.getUShort(g, M)) && (T = T + L & 65535)) : T = A + L & 65535, y.glyphIndexMap[A] = T;
                                }
                                return r;
                            },
                            make: function(e) {
                                for(var t = !0, r = e.length - 1; 0 < r; --r)if (65535 < e.get(r).unicode) {
                                    console.log("Adding CMAP format 12 (needed!)"), t = !1;
                                    break;
                                }
                                var o, n, s = [
                                    {
                                        name: "version",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "numTables",
                                        type: "USHORT",
                                        value: t ? 1 : 2
                                    },
                                    {
                                        name: "platformID",
                                        type: "USHORT",
                                        value: 3
                                    },
                                    {
                                        name: "encodingID",
                                        type: "USHORT",
                                        value: 1
                                    },
                                    {
                                        name: "offset",
                                        type: "ULONG",
                                        value: t ? 12 : 20
                                    }
                                ], i = (s = (s = t ? s : s.concat([
                                    {
                                        name: "cmap12PlatformID",
                                        type: "USHORT",
                                        value: 3
                                    },
                                    {
                                        name: "cmap12EncodingID",
                                        type: "USHORT",
                                        value: 10
                                    },
                                    {
                                        name: "cmap12Offset",
                                        type: "ULONG",
                                        value: 0
                                    }
                                ])).concat([
                                    {
                                        name: "format",
                                        type: "USHORT",
                                        value: 4
                                    },
                                    {
                                        name: "cmap4Length",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "language",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "segCountX2",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "searchRange",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "entrySelector",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "rangeShift",
                                        type: "USHORT",
                                        value: 0
                                    }
                                ]), new S.Table("cmap", s));
                                for(i.segments = [], r = 0; r < e.length; r += 1){
                                    for(var a = e.get(r), l = 0; l < a.unicodes.length; l += 1)o = a.unicodes[l], n = r, i.segments.push({
                                        end: o,
                                        start: o,
                                        delta: -(o - n),
                                        offset: 0,
                                        glyphIndex: n
                                    });
                                    i.segments = i.segments.sort(function(e, t) {
                                        return e.start - t.start;
                                    });
                                }
                                i.segments.push({
                                    end: 65535,
                                    start: 65535,
                                    delta: 1,
                                    offset: 0
                                });
                                var u = i.segments.length, c = 0, d = [], f = [], h = [], p = [], m = [], y = [];
                                for(r = 0; r < u; r += 1){
                                    var g = i.segments[r];
                                    g.end <= 65535 && g.start <= 65535 ? (d = d.concat({
                                        name: "end_" + r,
                                        type: "USHORT",
                                        value: g.end
                                    }), f = f.concat({
                                        name: "start_" + r,
                                        type: "USHORT",
                                        value: g.start
                                    }), h = h.concat({
                                        name: "idDelta_" + r,
                                        type: "SHORT",
                                        value: g.delta
                                    }), p = p.concat({
                                        name: "idRangeOffset_" + r,
                                        type: "USHORT",
                                        value: g.offset
                                    }), void 0 !== g.glyphId && (m = m.concat({
                                        name: "glyph_" + r,
                                        type: "USHORT",
                                        value: g.glyphId
                                    }))) : c += 1, t || void 0 === g.glyphIndex || (y = (y = (y = y.concat({
                                        name: "cmap12Start_" + r,
                                        type: "ULONG",
                                        value: g.start
                                    })).concat({
                                        name: "cmap12End_" + r,
                                        type: "ULONG",
                                        value: g.end
                                    })).concat({
                                        name: "cmap12Glyph_" + r,
                                        type: "ULONG",
                                        value: g.glyphIndex
                                    }));
                                }
                                return i.segCountX2 = 2 * (u - c), i.searchRange = 2 * Math.pow(2, Math.floor(Math.log(u - c) / Math.log(2))), i.entrySelector = Math.log(i.searchRange / 2) / Math.log(2), i.rangeShift = i.segCountX2 - i.searchRange, i.fields = i.fields.concat(d), i.fields.push({
                                    name: "reservedPad",
                                    type: "USHORT",
                                    value: 0
                                }), i.fields = i.fields.concat(f), i.fields = i.fields.concat(h), i.fields = i.fields.concat(p), i.fields = i.fields.concat(m), i.cmap4Length = 14 + 2 * d.length + 2 + 2 * f.length + 2 * h.length + 2 * p.length + 2 * m.length, t || (s = 16 + 4 * y.length, i.cmap12Offset = 20 + i.cmap4Length, i.fields = i.fields.concat([
                                    {
                                        name: "cmap12Format",
                                        type: "USHORT",
                                        value: 12
                                    },
                                    {
                                        name: "cmap12Reserved",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "cmap12Length",
                                        type: "ULONG",
                                        value: s
                                    },
                                    {
                                        name: "cmap12Language",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "cmap12nGroups",
                                        type: "ULONG",
                                        value: y.length / 3
                                    }
                                ]), i.fields = i.fields.concat(y)), i;
                            }
                        }, Se = [
                            ".notdef",
                            "space",
                            "exclam",
                            "quotedbl",
                            "numbersign",
                            "dollar",
                            "percent",
                            "ampersand",
                            "quoteright",
                            "parenleft",
                            "parenright",
                            "asterisk",
                            "plus",
                            "comma",
                            "hyphen",
                            "period",
                            "slash",
                            "zero",
                            "one",
                            "two",
                            "three",
                            "four",
                            "five",
                            "six",
                            "seven",
                            "eight",
                            "nine",
                            "colon",
                            "semicolon",
                            "less",
                            "equal",
                            "greater",
                            "question",
                            "at",
                            "A",
                            "B",
                            "C",
                            "D",
                            "E",
                            "F",
                            "G",
                            "H",
                            "I",
                            "J",
                            "K",
                            "L",
                            "M",
                            "N",
                            "O",
                            "P",
                            "Q",
                            "R",
                            "S",
                            "T",
                            "U",
                            "V",
                            "W",
                            "X",
                            "Y",
                            "Z",
                            "bracketleft",
                            "backslash",
                            "bracketright",
                            "asciicircum",
                            "underscore",
                            "quoteleft",
                            "a",
                            "b",
                            "c",
                            "d",
                            "e",
                            "f",
                            "g",
                            "h",
                            "i",
                            "j",
                            "k",
                            "l",
                            "m",
                            "n",
                            "o",
                            "p",
                            "q",
                            "r",
                            "s",
                            "t",
                            "u",
                            "v",
                            "w",
                            "x",
                            "y",
                            "z",
                            "braceleft",
                            "bar",
                            "braceright",
                            "asciitilde",
                            "exclamdown",
                            "cent",
                            "sterling",
                            "fraction",
                            "yen",
                            "florin",
                            "section",
                            "currency",
                            "quotesingle",
                            "quotedblleft",
                            "guillemotleft",
                            "guilsinglleft",
                            "guilsinglright",
                            "fi",
                            "fl",
                            "endash",
                            "dagger",
                            "daggerdbl",
                            "periodcentered",
                            "paragraph",
                            "bullet",
                            "quotesinglbase",
                            "quotedblbase",
                            "quotedblright",
                            "guillemotright",
                            "ellipsis",
                            "perthousand",
                            "questiondown",
                            "grave",
                            "acute",
                            "circumflex",
                            "tilde",
                            "macron",
                            "breve",
                            "dotaccent",
                            "dieresis",
                            "ring",
                            "cedilla",
                            "hungarumlaut",
                            "ogonek",
                            "caron",
                            "emdash",
                            "AE",
                            "ordfeminine",
                            "Lslash",
                            "Oslash",
                            "OE",
                            "ordmasculine",
                            "ae",
                            "dotlessi",
                            "lslash",
                            "oslash",
                            "oe",
                            "germandbls",
                            "onesuperior",
                            "logicalnot",
                            "mu",
                            "trademark",
                            "Eth",
                            "onehalf",
                            "plusminus",
                            "Thorn",
                            "onequarter",
                            "divide",
                            "brokenbar",
                            "degree",
                            "thorn",
                            "threequarters",
                            "twosuperior",
                            "registered",
                            "minus",
                            "eth",
                            "multiply",
                            "threesuperior",
                            "copyright",
                            "Aacute",
                            "Acircumflex",
                            "Adieresis",
                            "Agrave",
                            "Aring",
                            "Atilde",
                            "Ccedilla",
                            "Eacute",
                            "Ecircumflex",
                            "Edieresis",
                            "Egrave",
                            "Iacute",
                            "Icircumflex",
                            "Idieresis",
                            "Igrave",
                            "Ntilde",
                            "Oacute",
                            "Ocircumflex",
                            "Odieresis",
                            "Ograve",
                            "Otilde",
                            "Scaron",
                            "Uacute",
                            "Ucircumflex",
                            "Udieresis",
                            "Ugrave",
                            "Yacute",
                            "Ydieresis",
                            "Zcaron",
                            "aacute",
                            "acircumflex",
                            "adieresis",
                            "agrave",
                            "aring",
                            "atilde",
                            "ccedilla",
                            "eacute",
                            "ecircumflex",
                            "edieresis",
                            "egrave",
                            "iacute",
                            "icircumflex",
                            "idieresis",
                            "igrave",
                            "ntilde",
                            "oacute",
                            "ocircumflex",
                            "odieresis",
                            "ograve",
                            "otilde",
                            "scaron",
                            "uacute",
                            "ucircumflex",
                            "udieresis",
                            "ugrave",
                            "yacute",
                            "ydieresis",
                            "zcaron",
                            "exclamsmall",
                            "Hungarumlautsmall",
                            "dollaroldstyle",
                            "dollarsuperior",
                            "ampersandsmall",
                            "Acutesmall",
                            "parenleftsuperior",
                            "parenrightsuperior",
                            "266 ff",
                            "onedotenleader",
                            "zerooldstyle",
                            "oneoldstyle",
                            "twooldstyle",
                            "threeoldstyle",
                            "fouroldstyle",
                            "fiveoldstyle",
                            "sixoldstyle",
                            "sevenoldstyle",
                            "eightoldstyle",
                            "nineoldstyle",
                            "commasuperior",
                            "threequartersemdash",
                            "periodsuperior",
                            "questionsmall",
                            "asuperior",
                            "bsuperior",
                            "centsuperior",
                            "dsuperior",
                            "esuperior",
                            "isuperior",
                            "lsuperior",
                            "msuperior",
                            "nsuperior",
                            "osuperior",
                            "rsuperior",
                            "ssuperior",
                            "tsuperior",
                            "ff",
                            "ffi",
                            "ffl",
                            "parenleftinferior",
                            "parenrightinferior",
                            "Circumflexsmall",
                            "hyphensuperior",
                            "Gravesmall",
                            "Asmall",
                            "Bsmall",
                            "Csmall",
                            "Dsmall",
                            "Esmall",
                            "Fsmall",
                            "Gsmall",
                            "Hsmall",
                            "Ismall",
                            "Jsmall",
                            "Ksmall",
                            "Lsmall",
                            "Msmall",
                            "Nsmall",
                            "Osmall",
                            "Psmall",
                            "Qsmall",
                            "Rsmall",
                            "Ssmall",
                            "Tsmall",
                            "Usmall",
                            "Vsmall",
                            "Wsmall",
                            "Xsmall",
                            "Ysmall",
                            "Zsmall",
                            "colonmonetary",
                            "onefitted",
                            "rupiah",
                            "Tildesmall",
                            "exclamdownsmall",
                            "centoldstyle",
                            "Lslashsmall",
                            "Scaronsmall",
                            "Zcaronsmall",
                            "Dieresissmall",
                            "Brevesmall",
                            "Caronsmall",
                            "Dotaccentsmall",
                            "Macronsmall",
                            "figuredash",
                            "hypheninferior",
                            "Ogoneksmall",
                            "Ringsmall",
                            "Cedillasmall",
                            "questiondownsmall",
                            "oneeighth",
                            "threeeighths",
                            "fiveeighths",
                            "seveneighths",
                            "onethird",
                            "twothirds",
                            "zerosuperior",
                            "foursuperior",
                            "fivesuperior",
                            "sixsuperior",
                            "sevensuperior",
                            "eightsuperior",
                            "ninesuperior",
                            "zeroinferior",
                            "oneinferior",
                            "twoinferior",
                            "threeinferior",
                            "fourinferior",
                            "fiveinferior",
                            "sixinferior",
                            "seveninferior",
                            "eightinferior",
                            "nineinferior",
                            "centinferior",
                            "dollarinferior",
                            "periodinferior",
                            "commainferior",
                            "Agravesmall",
                            "Aacutesmall",
                            "Acircumflexsmall",
                            "Atildesmall",
                            "Adieresissmall",
                            "Aringsmall",
                            "AEsmall",
                            "Ccedillasmall",
                            "Egravesmall",
                            "Eacutesmall",
                            "Ecircumflexsmall",
                            "Edieresissmall",
                            "Igravesmall",
                            "Iacutesmall",
                            "Icircumflexsmall",
                            "Idieresissmall",
                            "Ethsmall",
                            "Ntildesmall",
                            "Ogravesmall",
                            "Oacutesmall",
                            "Ocircumflexsmall",
                            "Otildesmall",
                            "Odieresissmall",
                            "OEsmall",
                            "Oslashsmall",
                            "Ugravesmall",
                            "Uacutesmall",
                            "Ucircumflexsmall",
                            "Udieresissmall",
                            "Yacutesmall",
                            "Thornsmall",
                            "Ydieresissmall",
                            "001.000",
                            "001.001",
                            "001.002",
                            "001.003",
                            "Black",
                            "Bold",
                            "Book",
                            "Light",
                            "Medium",
                            "Regular",
                            "Roman",
                            "Semibold"
                        ], Me = [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "space",
                            "exclam",
                            "quotedbl",
                            "numbersign",
                            "dollar",
                            "percent",
                            "ampersand",
                            "quoteright",
                            "parenleft",
                            "parenright",
                            "asterisk",
                            "plus",
                            "comma",
                            "hyphen",
                            "period",
                            "slash",
                            "zero",
                            "one",
                            "two",
                            "three",
                            "four",
                            "five",
                            "six",
                            "seven",
                            "eight",
                            "nine",
                            "colon",
                            "semicolon",
                            "less",
                            "equal",
                            "greater",
                            "question",
                            "at",
                            "A",
                            "B",
                            "C",
                            "D",
                            "E",
                            "F",
                            "G",
                            "H",
                            "I",
                            "J",
                            "K",
                            "L",
                            "M",
                            "N",
                            "O",
                            "P",
                            "Q",
                            "R",
                            "S",
                            "T",
                            "U",
                            "V",
                            "W",
                            "X",
                            "Y",
                            "Z",
                            "bracketleft",
                            "backslash",
                            "bracketright",
                            "asciicircum",
                            "underscore",
                            "quoteleft",
                            "a",
                            "b",
                            "c",
                            "d",
                            "e",
                            "f",
                            "g",
                            "h",
                            "i",
                            "j",
                            "k",
                            "l",
                            "m",
                            "n",
                            "o",
                            "p",
                            "q",
                            "r",
                            "s",
                            "t",
                            "u",
                            "v",
                            "w",
                            "x",
                            "y",
                            "z",
                            "braceleft",
                            "bar",
                            "braceright",
                            "asciitilde",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "exclamdown",
                            "cent",
                            "sterling",
                            "fraction",
                            "yen",
                            "florin",
                            "section",
                            "currency",
                            "quotesingle",
                            "quotedblleft",
                            "guillemotleft",
                            "guilsinglleft",
                            "guilsinglright",
                            "fi",
                            "fl",
                            "",
                            "endash",
                            "dagger",
                            "daggerdbl",
                            "periodcentered",
                            "",
                            "paragraph",
                            "bullet",
                            "quotesinglbase",
                            "quotedblbase",
                            "quotedblright",
                            "guillemotright",
                            "ellipsis",
                            "perthousand",
                            "",
                            "questiondown",
                            "",
                            "grave",
                            "acute",
                            "circumflex",
                            "tilde",
                            "macron",
                            "breve",
                            "dotaccent",
                            "dieresis",
                            "",
                            "ring",
                            "cedilla",
                            "",
                            "hungarumlaut",
                            "ogonek",
                            "caron",
                            "emdash",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "AE",
                            "",
                            "ordfeminine",
                            "",
                            "",
                            "",
                            "",
                            "Lslash",
                            "Oslash",
                            "OE",
                            "ordmasculine",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "ae",
                            "",
                            "",
                            "",
                            "dotlessi",
                            "",
                            "",
                            "lslash",
                            "oslash",
                            "oe",
                            "germandbls"
                        ], Ee = [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "space",
                            "exclamsmall",
                            "Hungarumlautsmall",
                            "",
                            "dollaroldstyle",
                            "dollarsuperior",
                            "ampersandsmall",
                            "Acutesmall",
                            "parenleftsuperior",
                            "parenrightsuperior",
                            "twodotenleader",
                            "onedotenleader",
                            "comma",
                            "hyphen",
                            "period",
                            "fraction",
                            "zerooldstyle",
                            "oneoldstyle",
                            "twooldstyle",
                            "threeoldstyle",
                            "fouroldstyle",
                            "fiveoldstyle",
                            "sixoldstyle",
                            "sevenoldstyle",
                            "eightoldstyle",
                            "nineoldstyle",
                            "colon",
                            "semicolon",
                            "commasuperior",
                            "threequartersemdash",
                            "periodsuperior",
                            "questionsmall",
                            "",
                            "asuperior",
                            "bsuperior",
                            "centsuperior",
                            "dsuperior",
                            "esuperior",
                            "",
                            "",
                            "isuperior",
                            "",
                            "",
                            "lsuperior",
                            "msuperior",
                            "nsuperior",
                            "osuperior",
                            "",
                            "",
                            "rsuperior",
                            "ssuperior",
                            "tsuperior",
                            "",
                            "ff",
                            "fi",
                            "fl",
                            "ffi",
                            "ffl",
                            "parenleftinferior",
                            "",
                            "parenrightinferior",
                            "Circumflexsmall",
                            "hyphensuperior",
                            "Gravesmall",
                            "Asmall",
                            "Bsmall",
                            "Csmall",
                            "Dsmall",
                            "Esmall",
                            "Fsmall",
                            "Gsmall",
                            "Hsmall",
                            "Ismall",
                            "Jsmall",
                            "Ksmall",
                            "Lsmall",
                            "Msmall",
                            "Nsmall",
                            "Osmall",
                            "Psmall",
                            "Qsmall",
                            "Rsmall",
                            "Ssmall",
                            "Tsmall",
                            "Usmall",
                            "Vsmall",
                            "Wsmall",
                            "Xsmall",
                            "Ysmall",
                            "Zsmall",
                            "colonmonetary",
                            "onefitted",
                            "rupiah",
                            "Tildesmall",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "exclamdownsmall",
                            "centoldstyle",
                            "Lslashsmall",
                            "",
                            "",
                            "Scaronsmall",
                            "Zcaronsmall",
                            "Dieresissmall",
                            "Brevesmall",
                            "Caronsmall",
                            "",
                            "Dotaccentsmall",
                            "",
                            "",
                            "Macronsmall",
                            "",
                            "",
                            "figuredash",
                            "hypheninferior",
                            "",
                            "",
                            "Ogoneksmall",
                            "Ringsmall",
                            "Cedillasmall",
                            "",
                            "",
                            "",
                            "onequarter",
                            "onehalf",
                            "threequarters",
                            "questiondownsmall",
                            "oneeighth",
                            "threeeighths",
                            "fiveeighths",
                            "seveneighths",
                            "onethird",
                            "twothirds",
                            "",
                            "",
                            "zerosuperior",
                            "onesuperior",
                            "twosuperior",
                            "threesuperior",
                            "foursuperior",
                            "fivesuperior",
                            "sixsuperior",
                            "sevensuperior",
                            "eightsuperior",
                            "ninesuperior",
                            "zeroinferior",
                            "oneinferior",
                            "twoinferior",
                            "threeinferior",
                            "fourinferior",
                            "fiveinferior",
                            "sixinferior",
                            "seveninferior",
                            "eightinferior",
                            "nineinferior",
                            "centinferior",
                            "dollarinferior",
                            "periodinferior",
                            "commainferior",
                            "Agravesmall",
                            "Aacutesmall",
                            "Acircumflexsmall",
                            "Atildesmall",
                            "Adieresissmall",
                            "Aringsmall",
                            "AEsmall",
                            "Ccedillasmall",
                            "Egravesmall",
                            "Eacutesmall",
                            "Ecircumflexsmall",
                            "Edieresissmall",
                            "Igravesmall",
                            "Iacutesmall",
                            "Icircumflexsmall",
                            "Idieresissmall",
                            "Ethsmall",
                            "Ntildesmall",
                            "Ogravesmall",
                            "Oacutesmall",
                            "Ocircumflexsmall",
                            "Otildesmall",
                            "Odieresissmall",
                            "OEsmall",
                            "Oslashsmall",
                            "Ugravesmall",
                            "Uacutesmall",
                            "Ucircumflexsmall",
                            "Udieresissmall",
                            "Yacutesmall",
                            "Thornsmall",
                            "Ydieresissmall"
                        ], c = [
                            ".notdef",
                            ".null",
                            "nonmarkingreturn",
                            "space",
                            "exclam",
                            "quotedbl",
                            "numbersign",
                            "dollar",
                            "percent",
                            "ampersand",
                            "quotesingle",
                            "parenleft",
                            "parenright",
                            "asterisk",
                            "plus",
                            "comma",
                            "hyphen",
                            "period",
                            "slash",
                            "zero",
                            "one",
                            "two",
                            "three",
                            "four",
                            "five",
                            "six",
                            "seven",
                            "eight",
                            "nine",
                            "colon",
                            "semicolon",
                            "less",
                            "equal",
                            "greater",
                            "question",
                            "at",
                            "A",
                            "B",
                            "C",
                            "D",
                            "E",
                            "F",
                            "G",
                            "H",
                            "I",
                            "J",
                            "K",
                            "L",
                            "M",
                            "N",
                            "O",
                            "P",
                            "Q",
                            "R",
                            "S",
                            "T",
                            "U",
                            "V",
                            "W",
                            "X",
                            "Y",
                            "Z",
                            "bracketleft",
                            "backslash",
                            "bracketright",
                            "asciicircum",
                            "underscore",
                            "grave",
                            "a",
                            "b",
                            "c",
                            "d",
                            "e",
                            "f",
                            "g",
                            "h",
                            "i",
                            "j",
                            "k",
                            "l",
                            "m",
                            "n",
                            "o",
                            "p",
                            "q",
                            "r",
                            "s",
                            "t",
                            "u",
                            "v",
                            "w",
                            "x",
                            "y",
                            "z",
                            "braceleft",
                            "bar",
                            "braceright",
                            "asciitilde",
                            "Adieresis",
                            "Aring",
                            "Ccedilla",
                            "Eacute",
                            "Ntilde",
                            "Odieresis",
                            "Udieresis",
                            "aacute",
                            "agrave",
                            "acircumflex",
                            "adieresis",
                            "atilde",
                            "aring",
                            "ccedilla",
                            "eacute",
                            "egrave",
                            "ecircumflex",
                            "edieresis",
                            "iacute",
                            "igrave",
                            "icircumflex",
                            "idieresis",
                            "ntilde",
                            "oacute",
                            "ograve",
                            "ocircumflex",
                            "odieresis",
                            "otilde",
                            "uacute",
                            "ugrave",
                            "ucircumflex",
                            "udieresis",
                            "dagger",
                            "degree",
                            "cent",
                            "sterling",
                            "section",
                            "bullet",
                            "paragraph",
                            "germandbls",
                            "registered",
                            "copyright",
                            "trademark",
                            "acute",
                            "dieresis",
                            "notequal",
                            "AE",
                            "Oslash",
                            "infinity",
                            "plusminus",
                            "lessequal",
                            "greaterequal",
                            "yen",
                            "mu",
                            "partialdiff",
                            "summation",
                            "product",
                            "pi",
                            "integral",
                            "ordfeminine",
                            "ordmasculine",
                            "Omega",
                            "ae",
                            "oslash",
                            "questiondown",
                            "exclamdown",
                            "logicalnot",
                            "radical",
                            "florin",
                            "approxequal",
                            "Delta",
                            "guillemotleft",
                            "guillemotright",
                            "ellipsis",
                            "nonbreakingspace",
                            "Agrave",
                            "Atilde",
                            "Otilde",
                            "OE",
                            "oe",
                            "endash",
                            "emdash",
                            "quotedblleft",
                            "quotedblright",
                            "quoteleft",
                            "quoteright",
                            "divide",
                            "lozenge",
                            "ydieresis",
                            "Ydieresis",
                            "fraction",
                            "currency",
                            "guilsinglleft",
                            "guilsinglright",
                            "fi",
                            "fl",
                            "daggerdbl",
                            "periodcentered",
                            "quotesinglbase",
                            "quotedblbase",
                            "perthousand",
                            "Acircumflex",
                            "Ecircumflex",
                            "Aacute",
                            "Edieresis",
                            "Egrave",
                            "Iacute",
                            "Icircumflex",
                            "Idieresis",
                            "Igrave",
                            "Oacute",
                            "Ocircumflex",
                            "apple",
                            "Ograve",
                            "Uacute",
                            "Ucircumflex",
                            "Ugrave",
                            "dotlessi",
                            "circumflex",
                            "tilde",
                            "macron",
                            "breve",
                            "dotaccent",
                            "ring",
                            "cedilla",
                            "hungarumlaut",
                            "ogonek",
                            "caron",
                            "Lslash",
                            "lslash",
                            "Scaron",
                            "scaron",
                            "Zcaron",
                            "zcaron",
                            "brokenbar",
                            "Eth",
                            "eth",
                            "Yacute",
                            "yacute",
                            "Thorn",
                            "thorn",
                            "minus",
                            "multiply",
                            "onesuperior",
                            "twosuperior",
                            "threesuperior",
                            "onehalf",
                            "onequarter",
                            "threequarters",
                            "franc",
                            "Gbreve",
                            "gbreve",
                            "Idotaccent",
                            "Scedilla",
                            "scedilla",
                            "Cacute",
                            "cacute",
                            "Ccaron",
                            "ccaron",
                            "dcroat"
                        ];
                        function Te(e) {
                            this.font = e;
                        }
                        function Ce(e) {
                            this.cmap = e;
                        }
                        function Oe(e, t) {
                            this.encoding = e, this.charset = t;
                        }
                        function Le(e) {
                            switch(e.version){
                                case 1:
                                    this.names = c.slice();
                                    break;
                                case 2:
                                    this.names = new Array(e.numberOfGlyphs);
                                    for(var t = 0; t < e.numberOfGlyphs; t++)e.glyphNameIndex[t] < c.length ? this.names[t] = c[e.glyphNameIndex[t]] : this.names[t] = e.names[e.glyphNameIndex[t] - c.length];
                                    break;
                                case 2.5:
                                    this.names = new Array(e.numberOfGlyphs);
                                    for(var r = 0; r < e.numberOfGlyphs; r++)this.names[r] = c[r + e.glyphNameIndex[r]];
                                    break;
                                default:
                                    this.names = [];
                            }
                        }
                        Te.prototype.charToGlyphIndex = function(e) {
                            var t = e.codePointAt(0), r = this.font.glyphs;
                            if (r) {
                                for(var o = 0; o < r.length; o += 1)for(var n = r.get(o), s = 0; s < n.unicodes.length; s += 1)if (n.unicodes[s] === t) return o;
                            }
                            return null;
                        }, Ce.prototype.charToGlyphIndex = function(e) {
                            return this.cmap.glyphIndexMap[e.codePointAt(0)] || 0;
                        }, Oe.prototype.charToGlyphIndex = function(e) {
                            e = e.codePointAt(0), e = this.encoding[e];
                            return this.charset.indexOf(e);
                        }, Le.prototype.nameToGlyphIndex = function(e) {
                            return this.names.indexOf(e);
                        }, Le.prototype.glyphIndexToName = function(e) {
                            return this.names[e];
                        };
                        var d = {
                            line: function(e, t, r, o, n) {
                                e.beginPath(), e.moveTo(t, r), e.lineTo(o, n), e.stroke();
                            }
                        };
                        function h(e) {
                            this.bindConstructorValues(e);
                        }
                        function ke(t, e, r) {
                            Object.defineProperty(t, e, {
                                get: function() {
                                    return t.path, t[r];
                                },
                                set: function(e) {
                                    t[r] = e;
                                },
                                enumerable: !0,
                                configurable: !0
                            });
                        }
                        function Ae(e, t) {
                            if (this.font = e, this.glyphs = {}, Array.isArray(t)) for(var r = 0; r < t.length; r++)this.glyphs[r] = t[r];
                            this.length = t && t.length || 0;
                        }
                        h.prototype.bindConstructorValues = function(e) {
                            var t;
                            this.index = e.index || 0, this.name = e.name || null, this.unicode = e.unicode || void 0, this.unicodes = e.unicodes || void 0 !== e.unicode ? [
                                e.unicode
                            ] : [], e.xMin && (this.xMin = e.xMin), e.yMin && (this.yMin = e.yMin), e.xMax && (this.xMax = e.xMax), e.yMax && (this.yMax = e.yMax), e.advanceWidth && (this.advanceWidth = e.advanceWidth), Object.defineProperty(this, "path", (e = e.path, t = e || new f, {
                                configurable: !0,
                                get: function() {
                                    return t = "function" == typeof t ? t() : t;
                                },
                                set: function(e) {
                                    t = e;
                                }
                            }));
                        }, h.prototype.addUnicode = function(e) {
                            0 === this.unicodes.length && (this.unicode = e), this.unicodes.push(e);
                        }, h.prototype.getBoundingBox = function() {
                            return this.path.getBoundingBox();
                        }, h.prototype.getPath = function(e, t, r, o, n) {
                            e = void 0 !== e ? e : 0, t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 72;
                            for(var s, i, a = (o = o || {}).xScale, l = o.yScale, u = ((s = o.hinting && n && n.hinting ? this.path && n.hinting.exec(this, r) : s) ? (i = n.hinting.getCommands(s), e = Math.round(e), t = Math.round(t), a = l = 1) : (i = this.path.commands, o = 1 / this.path.unitsPerEm * r, void 0 === a && (a = o), void 0 === l && (l = o)), new f), c = 0; c < i.length; c += 1){
                                var d = i[c];
                                "M" === d.type ? u.moveTo(e + d.x * a, t + -d.y * l) : "L" === d.type ? u.lineTo(e + d.x * a, t + -d.y * l) : "Q" === d.type ? u.quadraticCurveTo(e + d.x1 * a, t + -d.y1 * l, e + d.x * a, t + -d.y * l) : "C" === d.type ? u.curveTo(e + d.x1 * a, t + -d.y1 * l, e + d.x2 * a, t + -d.y2 * l, e + d.x * a, t + -d.y * l) : "Z" === d.type && u.closePath();
                            }
                            return u;
                        }, h.prototype.getContours = function() {
                            if (void 0 === this.points) return [];
                            for(var e = [], t = [], r = 0; r < this.points.length; r += 1){
                                var o = this.points[r];
                                t.push(o), o.lastPointOfContour && (e.push(t), t = []);
                            }
                            return P.argument(0 === t.length, "There are still points left in the current contour."), e;
                        }, h.prototype.getMetrics = function() {
                            for(var e = this.path.commands, t = [], r = [], o = 0; o < e.length; o += 1){
                                var n = e[o];
                                "Z" !== n.type && (t.push(n.x), r.push(n.y)), "Q" !== n.type && "C" !== n.type || (t.push(n.x1), r.push(n.y1)), "C" === n.type && (t.push(n.x2), r.push(n.y2));
                            }
                            var s = {
                                xMin: Math.min.apply(null, t),
                                yMin: Math.min.apply(null, r),
                                xMax: Math.max.apply(null, t),
                                yMax: Math.max.apply(null, r),
                                leftSideBearing: this.leftSideBearing
                            };
                            return isFinite(s.xMin) || (s.xMin = 0), isFinite(s.xMax) || (s.xMax = this.advanceWidth), isFinite(s.yMin) || (s.yMin = 0), isFinite(s.yMax) || (s.yMax = 0), s.rightSideBearing = this.advanceWidth - s.leftSideBearing - (s.xMax - s.xMin), s;
                        }, h.prototype.draw = function(e, t, r, o, n) {
                            this.getPath(t, r, o, n).draw(e);
                        }, h.prototype.drawPoints = function(i, e, t, r) {
                            function o(e, t, r, o) {
                                var n = 2 * Math.PI;
                                i.beginPath();
                                for(var s = 0; s < e.length; s += 1)i.moveTo(t + e[s].x * o, r + e[s].y * o), i.arc(t + e[s].x * o, r + e[s].y * o, 2, 0, n, !1);
                                i.closePath(), i.fill();
                            }
                            e = void 0 !== e ? e : 0, t = void 0 !== t ? t : 0;
                            for(var r = 1 / this.path.unitsPerEm * (r = void 0 !== r ? r : 24), n = [], s = [], a = this.path, l = 0; l < a.commands.length; l += 1){
                                var u = a.commands[l];
                                void 0 !== u.x && n.push({
                                    x: u.x,
                                    y: -u.y
                                }), void 0 !== u.x1 && s.push({
                                    x: u.x1,
                                    y: -u.y1
                                }), void 0 !== u.x2 && s.push({
                                    x: u.x2,
                                    y: -u.y2
                                });
                            }
                            i.fillStyle = "blue", o(n, e, t, r), i.fillStyle = "red", o(s, e, t, r);
                        }, h.prototype.drawMetrics = function(e, t, r, o) {
                            t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0, o = 1 / this.path.unitsPerEm * (o = void 0 !== o ? o : 24), e.lineWidth = 1, e.strokeStyle = "black", d.line(e, t, -10000, t, 1e4), d.line(e, -10000, r, 1e4, r);
                            var n = this.xMin || 0, s = this.yMin || 0, i = this.xMax || 0, a = this.yMax || 0, l = this.advanceWidth || 0;
                            e.strokeStyle = "blue", d.line(e, t + n * o, -10000, t + n * o, 1e4), d.line(e, t + i * o, -10000, t + i * o, 1e4), d.line(e, -10000, r + -s * o, 1e4, r + -s * o), d.line(e, -10000, r + -a * o, 1e4, r + -a * o), e.strokeStyle = "green", d.line(e, t + l * o, -10000, t + l * o, 1e4);
                        }, Ae.prototype.get = function(e) {
                            return "function" == typeof this.glyphs[e] && (this.glyphs[e] = this.glyphs[e]()), this.glyphs[e];
                        }, Ae.prototype.push = function(e, t) {
                            this.glyphs[e] = t, this.length++;
                        };
                        var p = {
                            GlyphSet: Ae,
                            glyphLoader: function(e, t) {
                                return new h({
                                    index: t,
                                    font: e
                                });
                            },
                            ttfGlyphLoader: function(r, e, o, n, s, i) {
                                return function() {
                                    var t = new h({
                                        index: e,
                                        font: r
                                    });
                                    return t.path = function() {
                                        o(t, n, s);
                                        var e = i(r.glyphs, t);
                                        return e.unitsPerEm = r.unitsPerEm, e;
                                    }, ke(t, "xMin", "_xMin"), ke(t, "xMax", "_xMax"), ke(t, "yMin", "_yMin"), ke(t, "yMax", "_yMax"), t;
                                };
                            },
                            cffGlyphLoader: function(r, e, o, n) {
                                return function() {
                                    var t = new h({
                                        index: e,
                                        font: r
                                    });
                                    return t.path = function() {
                                        var e = o(r, t, n);
                                        return e.unitsPerEm = r.unitsPerEm, e;
                                    }, t;
                                };
                            }
                        };
                        function Pe(e) {
                            e = e.length < 1240 ? 107 : e.length < 33900 ? 1131 : 32768;
                            return e;
                        }
                        function y(e, t, r) {
                            var o, n = [], s = [], i = R.getCard16(e, t);
                            if (0 !== i) {
                                for(var a = R.getByte(e, t + 2), l = t + (i + 1) * a + 2, u = t + 3, c = 0; c < i + 1; c += 1)n.push(R.getOffset(e, u, a)), u += a;
                                o = l + n[i];
                            } else o = t + 2;
                            for(var d = 0; d < n.length - 1; d += 1){
                                var f = R.getBytes(e, l + n[d], l + n[d + 1]);
                                r && (f = r(f)), s.push(f);
                            }
                            return {
                                objects: s,
                                startOffset: t,
                                endOffset: o
                            };
                        }
                        function Re(e, t) {
                            if (28 === t) return e.parseByte() << 8 | e.parseByte();
                            if (29 === t) return e.parseByte() << 24 | e.parseByte() << 16 | e.parseByte() << 8 | e.parseByte();
                            if (30 === t) {
                                for(var r = e, o = "", n = [
                                    "0",
                                    "1",
                                    "2",
                                    "3",
                                    "4",
                                    "5",
                                    "6",
                                    "7",
                                    "8",
                                    "9",
                                    ".",
                                    "E",
                                    "E-",
                                    null,
                                    "-"
                                ];;){
                                    var s = r.parseByte(), i = s >> 4, s = 15 & s;
                                    if (15 == i) break;
                                    if (o += n[i], 15 == s) break;
                                    o += n[s];
                                }
                                return parseFloat(o);
                            }
                            if (32 <= t && t <= 246) return t - 139;
                            if (247 <= t && t <= 250) return 256 * (t - 247) + e.parseByte() + 108;
                            if (251 <= t && t <= 254) return 256 * -(t - 251) - e.parseByte() - 108;
                            throw new Error("Invalid b0 " + t);
                        }
                        function De(e, t, r) {
                            var o = new R.Parser(e, t = void 0 !== t ? t : 0), n = [], s = [];
                            for(r = void 0 !== r ? r : e.length; o.relativeOffset < r;){
                                var i = o.parseByte();
                                i <= 21 ? (12 === i && (i = 1200 + o.parseByte()), n.push([
                                    i,
                                    s
                                ]), s = []) : s.push(Re(o, i));
                            }
                            for(var a = n, l = {}, u = 0; u < a.length; u += 1){
                                var c = a[u][0], d = a[u][1], f = void 0, f = 1 === d.length ? d[0] : d;
                                if (l.hasOwnProperty(c) && !isNaN(l[c])) throw new Error("Object " + l + " already has key " + c);
                                l[c] = f;
                            }
                            return l;
                        }
                        function Ie(e, t) {
                            return t = t <= 390 ? Se[t] : e[t - 391];
                        }
                        function Ue(e, t, r) {
                            for(var o, n = {}, s = 0; s < t.length; s += 1){
                                var i = t[s];
                                if (Array.isArray(i.type)) {
                                    var a = [];
                                    a.length = i.type.length;
                                    for(var l = 0; l < i.type.length; l++)void 0 === (o = void 0 !== e[i.op] ? e[i.op][l] : void 0) && (o = void 0 !== i.value && void 0 !== i.value[l] ? i.value[l] : null), "SID" === i.type[l] && (o = Ie(r, o)), a[l] = o;
                                    n[i.name] = a;
                                } else void 0 === (o = e[i.op]) && (o = void 0 !== i.value ? i.value : null), "SID" === i.type && (o = Ie(r, o)), n[i.name] = o;
                            }
                            return n;
                        }
                        var Ne = [
                            {
                                name: "version",
                                op: 0,
                                type: "SID"
                            },
                            {
                                name: "notice",
                                op: 1,
                                type: "SID"
                            },
                            {
                                name: "copyright",
                                op: 1200,
                                type: "SID"
                            },
                            {
                                name: "fullName",
                                op: 2,
                                type: "SID"
                            },
                            {
                                name: "familyName",
                                op: 3,
                                type: "SID"
                            },
                            {
                                name: "weight",
                                op: 4,
                                type: "SID"
                            },
                            {
                                name: "isFixedPitch",
                                op: 1201,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "italicAngle",
                                op: 1202,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "underlinePosition",
                                op: 1203,
                                type: "number",
                                value: -100
                            },
                            {
                                name: "underlineThickness",
                                op: 1204,
                                type: "number",
                                value: 50
                            },
                            {
                                name: "paintType",
                                op: 1205,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "charstringType",
                                op: 1206,
                                type: "number",
                                value: 2
                            },
                            {
                                name: "fontMatrix",
                                op: 1207,
                                type: [
                                    "real",
                                    "real",
                                    "real",
                                    "real",
                                    "real",
                                    "real"
                                ],
                                value: [
                                    .001,
                                    0,
                                    0,
                                    .001,
                                    0,
                                    0
                                ]
                            },
                            {
                                name: "uniqueId",
                                op: 13,
                                type: "number"
                            },
                            {
                                name: "fontBBox",
                                op: 5,
                                type: [
                                    "number",
                                    "number",
                                    "number",
                                    "number"
                                ],
                                value: [
                                    0,
                                    0,
                                    0,
                                    0
                                ]
                            },
                            {
                                name: "strokeWidth",
                                op: 1208,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "xuid",
                                op: 14,
                                type: [],
                                value: null
                            },
                            {
                                name: "charset",
                                op: 15,
                                type: "offset",
                                value: 0
                            },
                            {
                                name: "encoding",
                                op: 16,
                                type: "offset",
                                value: 0
                            },
                            {
                                name: "charStrings",
                                op: 17,
                                type: "offset",
                                value: 0
                            },
                            {
                                name: "private",
                                op: 18,
                                type: [
                                    "number",
                                    "offset"
                                ],
                                value: [
                                    0,
                                    0
                                ]
                            },
                            {
                                name: "ros",
                                op: 1230,
                                type: [
                                    "SID",
                                    "SID",
                                    "number"
                                ]
                            },
                            {
                                name: "cidFontVersion",
                                op: 1231,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "cidFontRevision",
                                op: 1232,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "cidFontType",
                                op: 1233,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "cidCount",
                                op: 1234,
                                type: "number",
                                value: 8720
                            },
                            {
                                name: "uidBase",
                                op: 1235,
                                type: "number"
                            },
                            {
                                name: "fdArray",
                                op: 1236,
                                type: "offset"
                            },
                            {
                                name: "fdSelect",
                                op: 1237,
                                type: "offset"
                            },
                            {
                                name: "fontName",
                                op: 1238,
                                type: "SID"
                            }
                        ], Fe = [
                            {
                                name: "subrs",
                                op: 19,
                                type: "offset",
                                value: 0
                            },
                            {
                                name: "defaultWidthX",
                                op: 20,
                                type: "number",
                                value: 0
                            },
                            {
                                name: "nominalWidthX",
                                op: 21,
                                type: "number",
                                value: 0
                            }
                        ];
                        function Be(e, t, r, o) {
                            return Ue(De(e, t, r), Fe, o);
                        }
                        function Ge(e, t, r, o) {
                            for(var n = [], s = 0; s < r.length; s += 1){
                                var i = new DataView(new Uint8Array(r[s]).buffer), i = (a = o, Ue(De(i, 0, i.byteLength), Ne, a)), a = (i._subrs = [], i._subrsBias = 0, i.private[0]), l = i.private[1];
                                0 !== a && 0 !== l && (a = Be(e, l + t, a, o), i._defaultWidthX = a.defaultWidthX, i._nominalWidthX = a.nominalWidthX, 0 !== a.subrs && (l = y(e, l + a.subrs + t), i._subrs = l.objects, i._subrsBias = Pe(i._subrs)), i._privateDict = a), n.push(i);
                            }
                            return n;
                        }
                        function Ve(y, g, e) {
                            var v, b, j, _, t, x, w, r, S, M = new f, E = [], T = 0, C = !1, O = !1, L = 0, k = 0, A = (S = (y.isCIDFont ? (t = y.tables.cff.topDict._fdSelect[g.index], t = y.tables.cff.topDict._fdArray[t], x = t._subrs, w = t._subrsBias, r = t._defaultWidthX, t) : (x = y.tables.cff.topDict._subrs, w = y.tables.cff.topDict._subrsBias, r = y.tables.cff.topDict._defaultWidthX, y.tables.cff.topDict))._nominalWidthX, r);
                            function P(e, t) {
                                O && M.closePath(), M.moveTo(e, t), O = !0;
                            }
                            function R() {
                                E.length % 2 == 0 || C || (A = E.shift() + S), T += E.length >> 1, E.length = 0, C = !0;
                            }
                            return function e(t) {
                                for(var r, o, n, s, i, a, l, u, c, d, f, h, p = 0; p < t.length;){
                                    var m = t[p];
                                    switch(p += 1, m){
                                        case 1:
                                        case 3:
                                            R();
                                            break;
                                        case 4:
                                            1 < E.length && !C && (A = E.shift() + S, C = !0), k += E.pop(), P(L, k);
                                            break;
                                        case 5:
                                            for(; 0 < E.length;)L += E.shift(), k += E.shift(), M.lineTo(L, k);
                                            break;
                                        case 6:
                                            for(; 0 < E.length && (L += E.shift(), M.lineTo(L, k), 0 !== E.length);)k += E.shift(), M.lineTo(L, k);
                                            break;
                                        case 7:
                                            for(; 0 < E.length && (k += E.shift(), M.lineTo(L, k), 0 !== E.length);)L += E.shift(), M.lineTo(L, k);
                                            break;
                                        case 8:
                                            for(; 0 < E.length;)v = L + E.shift(), b = k + E.shift(), j = v + E.shift(), _ = b + E.shift(), L = j + E.shift(), k = _ + E.shift(), M.curveTo(v, b, j, _, L, k);
                                            break;
                                        case 10:
                                            i = E.pop() + w, (a = x[i]) && e(a);
                                            break;
                                        case 11:
                                            return;
                                        case 12:
                                            switch(m = t[p], p += 1, m){
                                                case 35:
                                                    v = L + E.shift(), b = k + E.shift(), j = v + E.shift(), _ = b + E.shift(), l = j + E.shift(), u = _ + E.shift(), c = l + E.shift(), d = u + E.shift(), f = c + E.shift(), h = d + E.shift(), L = f + E.shift(), k = h + E.shift(), E.shift(), M.curveTo(v, b, j, _, l, u), M.curveTo(c, d, f, h, L, k);
                                                    break;
                                                case 34:
                                                    v = L + E.shift(), b = k, j = v + E.shift(), _ = b + E.shift(), l = j + E.shift(), u = _, c = l + E.shift(), d = _, f = c + E.shift(), h = k, L = f + E.shift(), M.curveTo(v, b, j, _, l, u), M.curveTo(c, d, f, h, L, k);
                                                    break;
                                                case 36:
                                                    v = L + E.shift(), b = k + E.shift(), j = v + E.shift(), _ = b + E.shift(), l = j + E.shift(), u = _, c = l + E.shift(), d = _, f = c + E.shift(), h = d + E.shift(), L = f + E.shift(), M.curveTo(v, b, j, _, l, u), M.curveTo(c, d, f, h, L, k);
                                                    break;
                                                case 37:
                                                    v = L + E.shift(), b = k + E.shift(), j = v + E.shift(), _ = b + E.shift(), l = j + E.shift(), u = _ + E.shift(), c = l + E.shift(), d = u + E.shift(), f = c + E.shift(), h = d + E.shift(), Math.abs(f - L) > Math.abs(h - k) ? L = f + E.shift() : k = h + E.shift(), M.curveTo(v, b, j, _, l, u), M.curveTo(c, d, f, h, L, k);
                                                    break;
                                                default:
                                                    console.log("Glyph " + g.index + ": unknown operator 1200" + m), E.length = 0;
                                            }
                                            break;
                                        case 14:
                                            0 < E.length && !C && (A = E.shift() + S, C = !0), O && (M.closePath(), O = !1);
                                            break;
                                        case 18:
                                            R();
                                            break;
                                        case 19:
                                        case 20:
                                            R(), p += T + 7 >> 3;
                                            break;
                                        case 21:
                                            2 < E.length && !C && (A = E.shift() + S, C = !0), k += E.pop(), P(L += E.pop(), k);
                                            break;
                                        case 22:
                                            1 < E.length && !C && (A = E.shift() + S, C = !0), P(L += E.pop(), k);
                                            break;
                                        case 23:
                                            R();
                                            break;
                                        case 24:
                                            for(; 2 < E.length;)v = L + E.shift(), b = k + E.shift(), j = v + E.shift(), _ = b + E.shift(), L = j + E.shift(), k = _ + E.shift(), M.curveTo(v, b, j, _, L, k);
                                            L += E.shift(), k += E.shift(), M.lineTo(L, k);
                                            break;
                                        case 25:
                                            for(; 6 < E.length;)L += E.shift(), k += E.shift(), M.lineTo(L, k);
                                            v = L + E.shift(), b = k + E.shift(), j = v + E.shift(), _ = b + E.shift(), L = j + E.shift(), k = _ + E.shift(), M.curveTo(v, b, j, _, L, k);
                                            break;
                                        case 26:
                                            for(E.length % 2 && (L += E.shift()); 0 < E.length;)v = L, b = k + E.shift(), j = v + E.shift(), _ = b + E.shift(), L = j, k = _ + E.shift(), M.curveTo(v, b, j, _, L, k);
                                            break;
                                        case 27:
                                            for(E.length % 2 && (k += E.shift()); 0 < E.length;)v = L + E.shift(), b = k, j = v + E.shift(), _ = b + E.shift(), L = j + E.shift(), k = _, M.curveTo(v, b, j, _, L, k);
                                            break;
                                        case 28:
                                            r = t[p], o = t[p + 1], E.push((r << 24 | o << 16) >> 16), p += 2;
                                            break;
                                        case 29:
                                            i = E.pop() + y.gsubrsBias, (a = y.gsubrs[i]) && e(a);
                                            break;
                                        case 30:
                                            for(; 0 < E.length && (v = L, b = k + E.shift(), j = v + E.shift(), _ = b + E.shift(), L = j + E.shift(), k = _ + (1 === E.length ? E.shift() : 0), M.curveTo(v, b, j, _, L, k), 0 !== E.length);)v = L + E.shift(), b = k, j = v + E.shift(), _ = b + E.shift(), k = _ + E.shift(), L = j + (1 === E.length ? E.shift() : 0), M.curveTo(v, b, j, _, L, k);
                                            break;
                                        case 31:
                                            for(; 0 < E.length && (v = L + E.shift(), b = k, j = v + E.shift(), _ = b + E.shift(), k = _ + E.shift(), L = j + (1 === E.length ? E.shift() : 0), M.curveTo(v, b, j, _, L, k), 0 !== E.length);)v = L, b = k + E.shift(), j = v + E.shift(), _ = b + E.shift(), L = j + E.shift(), k = _ + (1 === E.length ? E.shift() : 0), M.curveTo(v, b, j, _, L, k);
                                            break;
                                        default:
                                            m < 32 ? console.log("Glyph " + g.index + ": unknown operator " + m) : m < 247 ? E.push(m - 139) : m < 251 ? (r = t[p], p += 1, E.push(256 * (m - 247) + r + 108)) : m < 255 ? (r = t[p], p += 1, E.push(256 * -(m - 251) - r - 108)) : (r = t[p], o = t[p + 1], n = t[p + 2], s = t[p + 3], p += 4, E.push((r << 24 | o << 16 | n << 8 | s) / 65536));
                                    }
                                }
                            }(e), g.advanceWidth = A, M;
                        }
                        function ze(e, t) {
                            var r, o = Se.indexOf(e);
                            return 0 <= o && (r = o), 0 <= (o = t.indexOf(e)) ? r = o + Se.length : (r = Se.length + t.length, t.push(e)), r;
                        }
                        function He(e, t, r) {
                            for(var o = {}, n = 0; n < e.length; n += 1){
                                var s = e[n], i = t[s.name];
                                void 0 === i || function e(t, r) {
                                    if (t === r) return 1;
                                    if (Array.isArray(t) && Array.isArray(r) && t.length === r.length) {
                                        for(var o = 0; o < t.length; o += 1)if (!e(t[o], r[o])) return;
                                        return 1;
                                    }
                                }(i, s.value) || ("SID" === s.type && (i = ze(i, r)), o[s.op] = {
                                    name: s.name,
                                    type: s.type,
                                    value: i
                                });
                            }
                            return o;
                        }
                        function We(e, t) {
                            var r = new S.Record("Top DICT", [
                                {
                                    name: "dict",
                                    type: "DICT",
                                    value: {}
                                }
                            ]);
                            return r.dict = He(Ne, e, t), r;
                        }
                        function qe(e) {
                            var t = new S.Record("Top DICT INDEX", [
                                {
                                    name: "topDicts",
                                    type: "INDEX",
                                    value: []
                                }
                            ]);
                            return t.topDicts = [
                                {
                                    name: "topDict_0",
                                    type: "TABLE",
                                    value: e
                                }
                            ], t;
                        }
                        function Xe(e) {
                            for(var t = new S.Record("CharStrings INDEX", [
                                {
                                    name: "charStrings",
                                    type: "INDEX",
                                    value: []
                                }
                            ]), r = 0; r < e.length; r += 1){
                                var o = e.get(r), n = function(e) {
                                    for(var t = [], r = e.path, o = (t.push({
                                        name: "width",
                                        type: "NUMBER",
                                        value: e.advanceWidth
                                    }), 0), n = 0, s = 0; s < r.commands.length; s += 1){
                                        var i, a, l, u, c = void 0, d = void 0, f = r.commands[s];
                                        "M" === (f = "Q" === f.type ? {
                                            type: "C",
                                            x: f.x,
                                            y: f.y,
                                            x1: 1 / 3 * o + 2 / 3 * f.x1,
                                            y1: 1 / 3 * n + 2 / 3 * f.y1,
                                            x2: 1 / 3 * f.x + 2 / 3 * f.x1,
                                            y2: 1 / 3 * f.y + 2 / 3 * f.y1
                                        } : f).type ? (c = Math.round(f.x - o), d = Math.round(f.y - n), t.push({
                                            name: "dx",
                                            type: "NUMBER",
                                            value: c
                                        }), t.push({
                                            name: "dy",
                                            type: "NUMBER",
                                            value: d
                                        }), t.push({
                                            name: "rmoveto",
                                            type: "OP",
                                            value: 21
                                        }), o = Math.round(f.x), n = Math.round(f.y)) : "L" === f.type ? (c = Math.round(f.x - o), d = Math.round(f.y - n), t.push({
                                            name: "dx",
                                            type: "NUMBER",
                                            value: c
                                        }), t.push({
                                            name: "dy",
                                            type: "NUMBER",
                                            value: d
                                        }), t.push({
                                            name: "rlineto",
                                            type: "OP",
                                            value: 5
                                        }), o = Math.round(f.x), n = Math.round(f.y)) : "C" === f.type && (i = Math.round(f.x1 - o), a = Math.round(f.y1 - n), l = Math.round(f.x2 - f.x1), u = Math.round(f.y2 - f.y1), c = Math.round(f.x - f.x2), d = Math.round(f.y - f.y2), t.push({
                                            name: "dx1",
                                            type: "NUMBER",
                                            value: i
                                        }), t.push({
                                            name: "dy1",
                                            type: "NUMBER",
                                            value: a
                                        }), t.push({
                                            name: "dx2",
                                            type: "NUMBER",
                                            value: l
                                        }), t.push({
                                            name: "dy2",
                                            type: "NUMBER",
                                            value: u
                                        }), t.push({
                                            name: "dx",
                                            type: "NUMBER",
                                            value: c
                                        }), t.push({
                                            name: "dy",
                                            type: "NUMBER",
                                            value: d
                                        }), t.push({
                                            name: "rrcurveto",
                                            type: "OP",
                                            value: 8
                                        }), o = Math.round(f.x), n = Math.round(f.y));
                                    }
                                    return t.push({
                                        name: "endchar",
                                        type: "OP",
                                        value: 14
                                    }), t;
                                }(o);
                                t.charStrings.push({
                                    name: o.name,
                                    type: "CHARSTRING",
                                    value: n
                                });
                            }
                            return t;
                        }
                        var Ye = {
                            parse: function(e, t, r) {
                                r.tables.cff = {}, o = e, n = t, (s = {}).formatMajor = R.getCard8(o, n), s.formatMinor = R.getCard8(o, n + 1), s.size = R.getCard8(o, n + 2), s.offsetSize = R.getCard8(o, n + 3), s.startOffset = n, s.endOffset = n + 4;
                                var o = y(e, s.endOffset, R.bytesToString), n = y(e, o.endOffset), s = y(e, n.endOffset, R.bytesToString), o = y(e, s.endOffset);
                                if (r.gsubrs = o.objects, r.gsubrsBias = Pe(r.gsubrs), 1 !== (o = Ge(e, t, n.objects, s.objects)).length) throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + o.length);
                                if (n = o[0], (r.tables.cff.topDict = n)._privateDict && (r.defaultWidthX = n._privateDict.defaultWidthX, r.nominalWidthX = n._privateDict.nominalWidthX), void 0 !== n.ros[0] && void 0 !== n.ros[1] && (r.isCIDFont = !0), r.isCIDFont) {
                                    var o = n.fdArray, i = n.fdSelect;
                                    if (0 === o || 0 === i) throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
                                    o = Ge(e, t, y(e, o += t).objects, s.objects);
                                    n._fdArray = o, n._fdSelect = function(e, t, r, o) {
                                        var n, s = [], i = new R.Parser(e, t);
                                        if (0 === (e = i.parseCard8())) for(var a = 0; a < r; a++){
                                            if (o <= (n = i.parseCard8())) throw new Error("CFF table CID Font FDSelect has bad FD index value " + n + " (FD count " + o + ")");
                                            s.push(n);
                                        }
                                        else {
                                            if (3 !== e) throw new Error("CFF Table CID Font FDSelect table has unsupported format " + e);
                                            var l, u = i.parseCard16(), c = i.parseCard16();
                                            if (0 !== c) throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + c);
                                            for(var d = 0; d < u; d++){
                                                if (n = i.parseCard8(), l = i.parseCard16(), o <= n) throw new Error("CFF table CID Font FDSelect has bad FD index value " + n + " (FD count " + o + ")");
                                                if (r < l) throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + l);
                                                for(; c < l; c++)s.push(n);
                                                c = l;
                                            }
                                            if (l !== r) throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + l);
                                        }
                                        return s;
                                    }(e, i += t, r.numGlyphs, o.length);
                                }
                                var i = t + n.private[1], o = Be(e, i, n.private[0], s.objects), a = (r.defaultWidthX = o.defaultWidthX, r.nominalWidthX = o.nominalWidthX, 0 !== o.subrs ? (i = y(e, i + o.subrs), r.subrs = i.objects, r.subrsBias = Pe(r.subrs)) : (r.subrs = [], r.subrsBias = 0), y(e, t + n.charStrings)), o = (r.nGlyphs = a.objects.length, function(e, t, r, o) {
                                    var n = new R.Parser(e, t), s = (--r, [
                                        ".notdef"
                                    ]);
                                    if (0 === (e = n.parseCard8())) for(var i = 0; i < r; i += 1)a = n.parseSID(), s.push(Ie(o, a));
                                    else if (1 === e) for(; s.length <= r;)for(var a = n.parseSID(), l = n.parseCard8(), u = 0; u <= l; u += 1)s.push(Ie(o, a)), a += 1;
                                    else {
                                        if (2 !== e) throw new Error("Unknown charset format " + e);
                                        for(; s.length <= r;){
                                            a = n.parseSID(), l = n.parseCard16();
                                            for(var c = 0; c <= l; c += 1)s.push(Ie(o, a)), a += 1;
                                        }
                                    }
                                    return s;
                                }(e, t + n.charset, r.nGlyphs, s.objects));
                                0 === n.encoding ? r.cffEncoding = new Oe(Me, o) : 1 === n.encoding ? r.cffEncoding = new Oe(Ee, o) : r.cffEncoding = function(e, t, r) {
                                    var o = {}, n = new R.Parser(e, t);
                                    if (0 === (e = n.parseCard8())) for(var s = n.parseCard8(), i = 0; i < s; i += 1)o[l = n.parseCard8()] = i;
                                    else {
                                        if (1 !== e) throw new Error("Unknown encoding format " + e);
                                        for(var a = n.parseCard8(), l = 1, u = 0; u < a; u += 1)for(var c = n.parseCard8(), d = n.parseCard8(), f = c; f <= c + d; f += 1)o[f] = l, l += 1;
                                    }
                                    return new Oe(o, r);
                                }(e, t + n.encoding, o), r.encoding = r.encoding || r.cffEncoding, r.glyphs = new p.GlyphSet(r);
                                for(var l = 0; l < r.nGlyphs; l += 1){
                                    var u = a.objects[l];
                                    r.glyphs.push(l, p.cffGlyphLoader(r, l, Ve, u));
                                }
                            },
                            make: function(e, t) {
                                for(var r, o = new S.Table("CFF ", [
                                    {
                                        name: "header",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "nameIndex",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "topDictIndex",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "stringIndex",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "globalSubrIndex",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "charsets",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "charStringsIndex",
                                        type: "RECORD"
                                    },
                                    {
                                        name: "privateDict",
                                        type: "RECORD"
                                    }
                                ]), n = 1 / t.unitsPerEm, n = {
                                    version: t.version,
                                    fullName: t.fullName,
                                    familyName: t.familyName,
                                    weight: t.weightName,
                                    fontBBox: t.fontBBox || [
                                        0,
                                        0,
                                        0,
                                        0
                                    ],
                                    fontMatrix: [
                                        n,
                                        0,
                                        0,
                                        n,
                                        0,
                                        0
                                    ],
                                    charset: 999,
                                    encoding: 0,
                                    charStrings: 999,
                                    private: [
                                        0,
                                        999
                                    ]
                                }, s = [], i = 1; i < e.length; i += 1)r = e.get(i), s.push(r.name);
                                var a, l, u = [], t = (o.header = new S.Record("Header", [
                                    {
                                        name: "major",
                                        type: "Card8",
                                        value: 1
                                    },
                                    {
                                        name: "minor",
                                        type: "Card8",
                                        value: 0
                                    },
                                    {
                                        name: "hdrSize",
                                        type: "Card8",
                                        value: 4
                                    },
                                    {
                                        name: "major",
                                        type: "Card8",
                                        value: 1
                                    }
                                ]), o.nameIndex = function(e) {
                                    var t = new S.Record("Name INDEX", [
                                        {
                                            name: "names",
                                            type: "INDEX",
                                            value: []
                                        }
                                    ]);
                                    t.names = [];
                                    for(var r = 0; r < e.length; r += 1)t.names.push({
                                        name: "name_" + r,
                                        type: "NAME",
                                        value: e[r]
                                    });
                                    return t;
                                }([
                                    t.postScriptName
                                ]), We(n, u)), c = (o.topDictIndex = qe(t), o.globalSubrIndex = new S.Record("Global Subr INDEX", [
                                    {
                                        name: "subrs",
                                        type: "INDEX",
                                        value: []
                                    }
                                ]), o.charsets = function(e, t) {
                                    for(var r = new S.Record("Charsets", [
                                        {
                                            name: "format",
                                            type: "Card8",
                                            value: 0
                                        }
                                    ]), o = 0; o < e.length; o += 1){
                                        var n = ze(e[o], t);
                                        r.fields.push({
                                            name: "glyph_" + o,
                                            type: "SID",
                                            value: n
                                        });
                                    }
                                    return r;
                                }(s, u), o.charStringsIndex = Xe(e), o.privateDict = (c = {}, a = u, (l = new S.Record("Private DICT", [
                                    {
                                        name: "dict",
                                        type: "DICT",
                                        value: {}
                                    }
                                ])).dict = He(Fe, c, a), l), o.stringIndex = function(e) {
                                    var t = new S.Record("String INDEX", [
                                        {
                                            name: "strings",
                                            type: "INDEX",
                                            value: []
                                        }
                                    ]);
                                    t.strings = [];
                                    for(var r = 0; r < e.length; r += 1)t.strings.push({
                                        name: "string_" + r,
                                        type: "STRING",
                                        value: e[r]
                                    });
                                    return t;
                                }(u), o.header.sizeOf() + o.nameIndex.sizeOf() + o.topDictIndex.sizeOf() + o.stringIndex.sizeOf() + o.globalSubrIndex.sizeOf());
                                return n.charset = c, n.encoding = 0, n.charStrings = n.charset + o.charsets.sizeOf(), n.private[1] = n.charStrings + o.charStringsIndex.sizeOf(), t = We(n, u), o.topDictIndex = qe(t), o;
                            }
                        };
                        var Ze = {
                            parse: function(e, t) {
                                var r = {}, e = new R.Parser(e, t);
                                return r.version = e.parseVersion(), r.fontRevision = Math.round(1e3 * e.parseFixed()) / 1e3, r.checkSumAdjustment = e.parseULong(), r.magicNumber = e.parseULong(), P.argument(1594834165 === r.magicNumber, "Font header has wrong magic number."), r.flags = e.parseUShort(), r.unitsPerEm = e.parseUShort(), r.created = e.parseLongDateTime(), r.modified = e.parseLongDateTime(), r.xMin = e.parseShort(), r.yMin = e.parseShort(), r.xMax = e.parseShort(), r.yMax = e.parseShort(), r.macStyle = e.parseUShort(), r.lowestRecPPEM = e.parseUShort(), r.fontDirectionHint = e.parseShort(), r.indexToLocFormat = e.parseShort(), r.glyphDataFormat = e.parseShort(), r;
                            },
                            make: function(e) {
                                var t = Math.round((new Date).getTime() / 1e3) + 2082844800, r = t;
                                return e.createdTimestamp && (r = e.createdTimestamp + 2082844800), new S.Table("head", [
                                    {
                                        name: "version",
                                        type: "FIXED",
                                        value: 65536
                                    },
                                    {
                                        name: "fontRevision",
                                        type: "FIXED",
                                        value: 65536
                                    },
                                    {
                                        name: "checkSumAdjustment",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "magicNumber",
                                        type: "ULONG",
                                        value: 1594834165
                                    },
                                    {
                                        name: "flags",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "unitsPerEm",
                                        type: "USHORT",
                                        value: 1e3
                                    },
                                    {
                                        name: "created",
                                        type: "LONGDATETIME",
                                        value: r
                                    },
                                    {
                                        name: "modified",
                                        type: "LONGDATETIME",
                                        value: t
                                    },
                                    {
                                        name: "xMin",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "yMin",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "xMax",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "yMax",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "macStyle",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "lowestRecPPEM",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "fontDirectionHint",
                                        type: "SHORT",
                                        value: 2
                                    },
                                    {
                                        name: "indexToLocFormat",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "glyphDataFormat",
                                        type: "SHORT",
                                        value: 0
                                    }
                                ], e);
                            }
                        };
                        var Qe = {
                            parse: function(e, t) {
                                var r = {}, e = new R.Parser(e, t);
                                return r.version = e.parseVersion(), r.ascender = e.parseShort(), r.descender = e.parseShort(), r.lineGap = e.parseShort(), r.advanceWidthMax = e.parseUShort(), r.minLeftSideBearing = e.parseShort(), r.minRightSideBearing = e.parseShort(), r.xMaxExtent = e.parseShort(), r.caretSlopeRise = e.parseShort(), r.caretSlopeRun = e.parseShort(), r.caretOffset = e.parseShort(), e.relativeOffset += 8, r.metricDataFormat = e.parseShort(), r.numberOfHMetrics = e.parseUShort(), r;
                            },
                            make: function(e) {
                                return new S.Table("hhea", [
                                    {
                                        name: "version",
                                        type: "FIXED",
                                        value: 65536
                                    },
                                    {
                                        name: "ascender",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "descender",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "lineGap",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "advanceWidthMax",
                                        type: "UFWORD",
                                        value: 0
                                    },
                                    {
                                        name: "minLeftSideBearing",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "minRightSideBearing",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "xMaxExtent",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "caretSlopeRise",
                                        type: "SHORT",
                                        value: 1
                                    },
                                    {
                                        name: "caretSlopeRun",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "caretOffset",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "reserved1",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "reserved2",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "reserved3",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "reserved4",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "metricDataFormat",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "numberOfHMetrics",
                                        type: "USHORT",
                                        value: 0
                                    }
                                ], e);
                            }
                        };
                        var Ke = {
                            parse: function(e, t, r, o, n) {
                                for(var s, i, a = new R.Parser(e, t), l = 0; l < o; l += 1){
                                    l < r && (s = a.parseUShort(), i = a.parseShort());
                                    var u = n.get(l);
                                    u.advanceWidth = s, u.leftSideBearing = i;
                                }
                            },
                            make: function(e) {
                                for(var t = new S.Table("hmtx", []), r = 0; r < e.length; r += 1){
                                    var o = e.get(r), n = o.advanceWidth || 0, o = o.leftSideBearing || 0;
                                    t.fields.push({
                                        name: "advanceWidth_" + r,
                                        type: "USHORT",
                                        value: n
                                    }), t.fields.push({
                                        name: "leftSideBearing_" + r,
                                        type: "SHORT",
                                        value: o
                                    });
                                }
                                return t;
                            }
                        };
                        var Je = {
                            make: function(e) {
                                for(var t = new S.Table("ltag", [
                                    {
                                        name: "version",
                                        type: "ULONG",
                                        value: 1
                                    },
                                    {
                                        name: "flags",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "numTags",
                                        type: "ULONG",
                                        value: e.length
                                    }
                                ]), r = "", o = 12 + 4 * e.length, n = 0; n < e.length; ++n){
                                    var s = r.indexOf(e[n]);
                                    s < 0 && (s = r.length, r += e[n]), t.fields.push({
                                        name: "offset " + n,
                                        type: "USHORT",
                                        value: o + s
                                    }), t.fields.push({
                                        name: "length " + n,
                                        type: "USHORT",
                                        value: e[n].length
                                    });
                                }
                                return t.fields.push({
                                    name: "stringPool",
                                    type: "CHARARRAY",
                                    value: r
                                }), t;
                            },
                            parse: function(e, t) {
                                for(var r = new R.Parser(e, t), o = r.parseULong(), n = (P.argument(1 === o, "Unsupported ltag table version."), r.skip("uLong", 1), r.parseULong()), s = [], i = 0; i < n; i++){
                                    for(var a = "", l = t + r.parseUShort(), u = r.parseUShort(), c = l; c < l + u; ++c)a += String.fromCharCode(e.getInt8(c));
                                    s.push(a);
                                }
                                return s;
                            }
                        };
                        var $e = {
                            parse: function(e, t) {
                                var r = {}, e = new R.Parser(e, t);
                                return r.version = e.parseVersion(), r.numGlyphs = e.parseUShort(), 1 === r.version && (r.maxPoints = e.parseUShort(), r.maxContours = e.parseUShort(), r.maxCompositePoints = e.parseUShort(), r.maxCompositeContours = e.parseUShort(), r.maxZones = e.parseUShort(), r.maxTwilightPoints = e.parseUShort(), r.maxStorage = e.parseUShort(), r.maxFunctionDefs = e.parseUShort(), r.maxInstructionDefs = e.parseUShort(), r.maxStackElements = e.parseUShort(), r.maxSizeOfInstructions = e.parseUShort(), r.maxComponentElements = e.parseUShort(), r.maxComponentDepth = e.parseUShort()), r;
                            },
                            make: function(e) {
                                return new S.Table("maxp", [
                                    {
                                        name: "version",
                                        type: "FIXED",
                                        value: 20480
                                    },
                                    {
                                        name: "numGlyphs",
                                        type: "USHORT",
                                        value: e
                                    }
                                ]);
                            }
                        }, et = [
                            "copyright",
                            "fontFamily",
                            "fontSubfamily",
                            "uniqueID",
                            "fullName",
                            "version",
                            "postScriptName",
                            "trademark",
                            "manufacturer",
                            "designer",
                            "description",
                            "manufacturerURL",
                            "designerURL",
                            "license",
                            "licenseURL",
                            "reserved",
                            "preferredFamily",
                            "preferredSubfamily",
                            "compatibleFullName",
                            "sampleText",
                            "postScriptFindFontName",
                            "wwsFamily",
                            "wwsSubfamily"
                        ], tt = {
                            0: "en",
                            1: "fr",
                            2: "de",
                            3: "it",
                            4: "nl",
                            5: "sv",
                            6: "es",
                            7: "da",
                            8: "pt",
                            9: "no",
                            10: "he",
                            11: "ja",
                            12: "ar",
                            13: "fi",
                            14: "el",
                            15: "is",
                            16: "mt",
                            17: "tr",
                            18: "hr",
                            19: "zh-Hant",
                            20: "ur",
                            21: "hi",
                            22: "th",
                            23: "ko",
                            24: "lt",
                            25: "pl",
                            26: "hu",
                            27: "es",
                            28: "lv",
                            29: "se",
                            30: "fo",
                            31: "fa",
                            32: "ru",
                            33: "zh",
                            34: "nl-BE",
                            35: "ga",
                            36: "sq",
                            37: "ro",
                            38: "cz",
                            39: "sk",
                            40: "si",
                            41: "yi",
                            42: "sr",
                            43: "mk",
                            44: "bg",
                            45: "uk",
                            46: "be",
                            47: "uz",
                            48: "kk",
                            49: "az-Cyrl",
                            50: "az-Arab",
                            51: "hy",
                            52: "ka",
                            53: "mo",
                            54: "ky",
                            55: "tg",
                            56: "tk",
                            57: "mn-CN",
                            58: "mn",
                            59: "ps",
                            60: "ks",
                            61: "ku",
                            62: "sd",
                            63: "bo",
                            64: "ne",
                            65: "sa",
                            66: "mr",
                            67: "bn",
                            68: "as",
                            69: "gu",
                            70: "pa",
                            71: "or",
                            72: "ml",
                            73: "kn",
                            74: "ta",
                            75: "te",
                            76: "si",
                            77: "my",
                            78: "km",
                            79: "lo",
                            80: "vi",
                            81: "id",
                            82: "tl",
                            83: "ms",
                            84: "ms-Arab",
                            85: "am",
                            86: "ti",
                            87: "om",
                            88: "so",
                            89: "sw",
                            90: "rw",
                            91: "rn",
                            92: "ny",
                            93: "mg",
                            94: "eo",
                            128: "cy",
                            129: "eu",
                            130: "ca",
                            131: "la",
                            132: "qu",
                            133: "gn",
                            134: "ay",
                            135: "tt",
                            136: "ug",
                            137: "dz",
                            138: "jv",
                            139: "su",
                            140: "gl",
                            141: "af",
                            142: "br",
                            143: "iu",
                            144: "gd",
                            145: "gv",
                            146: "ga",
                            147: "to",
                            148: "el-polyton",
                            149: "kl",
                            150: "az",
                            151: "nn"
                        }, rt = {
                            0: 0,
                            1: 0,
                            2: 0,
                            3: 0,
                            4: 0,
                            5: 0,
                            6: 0,
                            7: 0,
                            8: 0,
                            9: 0,
                            10: 5,
                            11: 1,
                            12: 4,
                            13: 0,
                            14: 6,
                            15: 0,
                            16: 0,
                            17: 0,
                            18: 0,
                            19: 2,
                            20: 4,
                            21: 9,
                            22: 21,
                            23: 3,
                            24: 29,
                            25: 29,
                            26: 29,
                            27: 29,
                            28: 29,
                            29: 0,
                            30: 0,
                            31: 4,
                            32: 7,
                            33: 25,
                            34: 0,
                            35: 0,
                            36: 0,
                            37: 0,
                            38: 29,
                            39: 29,
                            40: 0,
                            41: 5,
                            42: 7,
                            43: 7,
                            44: 7,
                            45: 7,
                            46: 7,
                            47: 7,
                            48: 7,
                            49: 7,
                            50: 4,
                            51: 24,
                            52: 23,
                            53: 7,
                            54: 7,
                            55: 7,
                            56: 7,
                            57: 27,
                            58: 7,
                            59: 4,
                            60: 4,
                            61: 4,
                            62: 4,
                            63: 26,
                            64: 9,
                            65: 9,
                            66: 9,
                            67: 13,
                            68: 13,
                            69: 11,
                            70: 10,
                            71: 12,
                            72: 17,
                            73: 16,
                            74: 14,
                            75: 15,
                            76: 18,
                            77: 19,
                            78: 20,
                            79: 22,
                            80: 30,
                            81: 0,
                            82: 0,
                            83: 0,
                            84: 4,
                            85: 28,
                            86: 28,
                            87: 28,
                            88: 0,
                            89: 0,
                            90: 0,
                            91: 0,
                            92: 0,
                            93: 0,
                            94: 0,
                            128: 0,
                            129: 0,
                            130: 0,
                            131: 0,
                            132: 0,
                            133: 0,
                            134: 0,
                            135: 7,
                            136: 4,
                            137: 26,
                            138: 0,
                            139: 0,
                            140: 0,
                            141: 0,
                            142: 0,
                            143: 28,
                            144: 0,
                            145: 0,
                            146: 0,
                            147: 0,
                            148: 6,
                            149: 0,
                            150: 0,
                            151: 0
                        }, ot = {
                            1078: "af",
                            1052: "sq",
                            1156: "gsw",
                            1118: "am",
                            5121: "ar-DZ",
                            15361: "ar-BH",
                            3073: "ar",
                            2049: "ar-IQ",
                            11265: "ar-JO",
                            13313: "ar-KW",
                            12289: "ar-LB",
                            4097: "ar-LY",
                            6145: "ary",
                            8193: "ar-OM",
                            16385: "ar-QA",
                            1025: "ar-SA",
                            10241: "ar-SY",
                            7169: "aeb",
                            14337: "ar-AE",
                            9217: "ar-YE",
                            1067: "hy",
                            1101: "as",
                            2092: "az-Cyrl",
                            1068: "az",
                            1133: "ba",
                            1069: "eu",
                            1059: "be",
                            2117: "bn",
                            1093: "bn-IN",
                            8218: "bs-Cyrl",
                            5146: "bs",
                            1150: "br",
                            1026: "bg",
                            1027: "ca",
                            3076: "zh-HK",
                            5124: "zh-MO",
                            2052: "zh",
                            4100: "zh-SG",
                            1028: "zh-TW",
                            1155: "co",
                            1050: "hr",
                            4122: "hr-BA",
                            1029: "cs",
                            1030: "da",
                            1164: "prs",
                            1125: "dv",
                            2067: "nl-BE",
                            1043: "nl",
                            3081: "en-AU",
                            10249: "en-BZ",
                            4105: "en-CA",
                            9225: "en-029",
                            16393: "en-IN",
                            6153: "en-IE",
                            8201: "en-JM",
                            17417: "en-MY",
                            5129: "en-NZ",
                            13321: "en-PH",
                            18441: "en-SG",
                            7177: "en-ZA",
                            11273: "en-TT",
                            2057: "en-GB",
                            1033: "en",
                            12297: "en-ZW",
                            1061: "et",
                            1080: "fo",
                            1124: "fil",
                            1035: "fi",
                            2060: "fr-BE",
                            3084: "fr-CA",
                            1036: "fr",
                            5132: "fr-LU",
                            6156: "fr-MC",
                            4108: "fr-CH",
                            1122: "fy",
                            1110: "gl",
                            1079: "ka",
                            3079: "de-AT",
                            1031: "de",
                            5127: "de-LI",
                            4103: "de-LU",
                            2055: "de-CH",
                            1032: "el",
                            1135: "kl",
                            1095: "gu",
                            1128: "ha",
                            1037: "he",
                            1081: "hi",
                            1038: "hu",
                            1039: "is",
                            1136: "ig",
                            1057: "id",
                            1117: "iu",
                            2141: "iu-Latn",
                            2108: "ga",
                            1076: "xh",
                            1077: "zu",
                            1040: "it",
                            2064: "it-CH",
                            1041: "ja",
                            1099: "kn",
                            1087: "kk",
                            1107: "km",
                            1158: "quc",
                            1159: "rw",
                            1089: "sw",
                            1111: "kok",
                            1042: "ko",
                            1088: "ky",
                            1108: "lo",
                            1062: "lv",
                            1063: "lt",
                            2094: "dsb",
                            1134: "lb",
                            1071: "mk",
                            2110: "ms-BN",
                            1086: "ms",
                            1100: "ml",
                            1082: "mt",
                            1153: "mi",
                            1146: "arn",
                            1102: "mr",
                            1148: "moh",
                            1104: "mn",
                            2128: "mn-CN",
                            1121: "ne",
                            1044: "nb",
                            2068: "nn",
                            1154: "oc",
                            1096: "or",
                            1123: "ps",
                            1045: "pl",
                            1046: "pt",
                            2070: "pt-PT",
                            1094: "pa",
                            1131: "qu-BO",
                            2155: "qu-EC",
                            3179: "qu",
                            1048: "ro",
                            1047: "rm",
                            1049: "ru",
                            9275: "smn",
                            4155: "smj-NO",
                            5179: "smj",
                            3131: "se-FI",
                            1083: "se",
                            2107: "se-SE",
                            8251: "sms",
                            6203: "sma-NO",
                            7227: "sms",
                            1103: "sa",
                            7194: "sr-Cyrl-BA",
                            3098: "sr",
                            6170: "sr-Latn-BA",
                            2074: "sr-Latn",
                            1132: "nso",
                            1074: "tn",
                            1115: "si",
                            1051: "sk",
                            1060: "sl",
                            11274: "es-AR",
                            16394: "es-BO",
                            13322: "es-CL",
                            9226: "es-CO",
                            5130: "es-CR",
                            7178: "es-DO",
                            12298: "es-EC",
                            17418: "es-SV",
                            4106: "es-GT",
                            18442: "es-HN",
                            2058: "es-MX",
                            19466: "es-NI",
                            6154: "es-PA",
                            15370: "es-PY",
                            10250: "es-PE",
                            20490: "es-PR",
                            3082: "es",
                            1034: "es",
                            21514: "es-US",
                            14346: "es-UY",
                            8202: "es-VE",
                            2077: "sv-FI",
                            1053: "sv",
                            1114: "syr",
                            1064: "tg",
                            2143: "tzm",
                            1097: "ta",
                            1092: "tt",
                            1098: "te",
                            1054: "th",
                            1105: "bo",
                            1055: "tr",
                            1090: "tk",
                            1152: "ug",
                            1058: "uk",
                            1070: "hsb",
                            1056: "ur",
                            2115: "uz-Cyrl",
                            1091: "uz",
                            1066: "vi",
                            1106: "cy",
                            1160: "wo",
                            1157: "sah",
                            1144: "ii",
                            1130: "yo"
                        };
                        var nt = "utf-16", st = {
                            0: "macintosh",
                            1: "x-mac-japanese",
                            2: "x-mac-chinesetrad",
                            3: "x-mac-korean",
                            6: "x-mac-greek",
                            7: "x-mac-cyrillic",
                            9: "x-mac-devanagai",
                            10: "x-mac-gurmukhi",
                            11: "x-mac-gujarati",
                            12: "x-mac-oriya",
                            13: "x-mac-bengali",
                            14: "x-mac-tamil",
                            15: "x-mac-telugu",
                            16: "x-mac-kannada",
                            17: "x-mac-malayalam",
                            18: "x-mac-sinhalese",
                            19: "x-mac-burmese",
                            20: "x-mac-khmer",
                            21: "x-mac-thai",
                            22: "x-mac-lao",
                            23: "x-mac-georgian",
                            24: "x-mac-armenian",
                            25: "x-mac-chinesesimp",
                            26: "x-mac-tibetan",
                            27: "x-mac-mongolian",
                            28: "x-mac-ethiopic",
                            29: "x-mac-ce",
                            30: "x-mac-vietnamese",
                            31: "x-mac-extarabic"
                        }, it = {
                            15: "x-mac-icelandic",
                            17: "x-mac-turkish",
                            18: "x-mac-croatian",
                            24: "x-mac-ce",
                            25: "x-mac-ce",
                            26: "x-mac-ce",
                            27: "x-mac-ce",
                            28: "x-mac-ce",
                            30: "x-mac-icelandic",
                            37: "x-mac-romanian",
                            38: "x-mac-ce",
                            39: "x-mac-ce",
                            40: "x-mac-ce",
                            143: "x-mac-inuit",
                            146: "x-mac-gaelic"
                        };
                        function at(e, t, r) {
                            switch(e){
                                case 0:
                                    return nt;
                                case 1:
                                    return it[r] || st[t];
                                case 3:
                                    if (1 === t || 10 === t) return nt;
                            }
                        }
                        function lt(e) {
                            var t, r = {};
                            for(t in e)r[e[t]] = parseInt(t);
                            return r;
                        }
                        function ut(e, t, r, o, n, s) {
                            return new S.Record("NameRecord", [
                                {
                                    name: "platformID",
                                    type: "USHORT",
                                    value: e
                                },
                                {
                                    name: "encodingID",
                                    type: "USHORT",
                                    value: t
                                },
                                {
                                    name: "languageID",
                                    type: "USHORT",
                                    value: r
                                },
                                {
                                    name: "nameID",
                                    type: "USHORT",
                                    value: o
                                },
                                {
                                    name: "length",
                                    type: "USHORT",
                                    value: n
                                },
                                {
                                    name: "offset",
                                    type: "USHORT",
                                    value: s
                                }
                            ]);
                        }
                        function ct(e, t) {
                            if ((r = function(e, t) {
                                var r = e.length, o = t.length - r + 1;
                                e: for(var n = 0; n < o; n++)for(; n < o; n++){
                                    for(var s = 0; s < r; s++)if (t[n + s] !== e[s]) continue e;
                                    return n;
                                }
                                return -1;
                            }(e, t)) < 0) for(var r = t.length, o = 0, n = e.length; o < n; ++o)t.push(e[o]);
                            return r;
                        }
                        var dt = {
                            parse: function(e, t, r) {
                                for(var o = {}, n = new R.Parser(e, t), t = n.parseUShort(), s = n.parseUShort(), i = n.offset + n.parseUShort(), a = 0; a < s; a++){
                                    var l = n.parseUShort(), u = n.parseUShort(), c = n.parseUShort(), d = n.parseUShort(), d = et[d] || d, f = n.parseUShort(), h = n.parseUShort(), p = function(e, t, r) {
                                        switch(e){
                                            case 0:
                                                if (65535 === t) return "und";
                                                if (r) return r[t];
                                                break;
                                            case 1:
                                                return tt[t];
                                            case 3:
                                                return ot[t];
                                        }
                                    }(l, c, r), l = at(l, u, c);
                                    void 0 !== l && void 0 !== p && (u = void 0, (u = l === nt ? m.UTF16(e, i + h, f) : m.MACSTRING(e, i + h, f, l)) && ((c = void 0 === (c = o[d]) ? o[d] = {} : c)[p] = u));
                                }
                                return 1 === t && n.parseUShort(), o;
                            },
                            make: function(e, t) {
                                var r, o = [], n = {}, s = lt(et);
                                for(r in e){
                                    var i = s[r];
                                    if (void 0 === i && (i = r), f = parseInt(i), isNaN(f)) throw new Error('Name table entry "' + r + '" does not exist, see nameTableNames for complete list.');
                                    n[f] = e[r], o.push(f);
                                }
                                for(var a = lt(tt), l = lt(ot), u = [], c = [], d = 0; d < o.length; d++){
                                    var f, h, p = n[f = o[d]];
                                    for(h in p){
                                        var m = p[h], y = 1, g = a[h], v = rt[g], b = at(y, v, g), b = w.MACSTRING(m, b), j = (void 0 === b && (y = 0, (g = t.indexOf(h)) < 0 && (g = t.length, t.push(h)), v = 4, b = w.UTF16(m)), ct(b, c)), y = (u.push(ut(y, v, g, f, b.length, j)), l[h]);
                                        void 0 !== y && (g = ct(v = w.UTF16(m), c), u.push(ut(3, 1, y, f, v.length, g)));
                                    }
                                }
                                u.sort(function(e, t) {
                                    return e.platformID - t.platformID || e.encodingID - t.encodingID || e.languageID - t.languageID || e.nameID - t.nameID;
                                });
                                for(var _ = new S.Table("name", [
                                    {
                                        name: "format",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "count",
                                        type: "USHORT",
                                        value: u.length
                                    },
                                    {
                                        name: "stringOffset",
                                        type: "USHORT",
                                        value: 6 + 12 * u.length
                                    }
                                ]), x = 0; x < u.length; x++)_.fields.push({
                                    name: "record_" + x,
                                    type: "RECORD",
                                    value: u[x]
                                });
                                return _.fields.push({
                                    name: "strings",
                                    type: "LITERAL",
                                    value: c
                                }), _;
                            }
                        }, ft = [
                            {
                                begin: 0,
                                end: 127
                            },
                            {
                                begin: 128,
                                end: 255
                            },
                            {
                                begin: 256,
                                end: 383
                            },
                            {
                                begin: 384,
                                end: 591
                            },
                            {
                                begin: 592,
                                end: 687
                            },
                            {
                                begin: 688,
                                end: 767
                            },
                            {
                                begin: 768,
                                end: 879
                            },
                            {
                                begin: 880,
                                end: 1023
                            },
                            {
                                begin: 11392,
                                end: 11519
                            },
                            {
                                begin: 1024,
                                end: 1279
                            },
                            {
                                begin: 1328,
                                end: 1423
                            },
                            {
                                begin: 1424,
                                end: 1535
                            },
                            {
                                begin: 42240,
                                end: 42559
                            },
                            {
                                begin: 1536,
                                end: 1791
                            },
                            {
                                begin: 1984,
                                end: 2047
                            },
                            {
                                begin: 2304,
                                end: 2431
                            },
                            {
                                begin: 2432,
                                end: 2559
                            },
                            {
                                begin: 2560,
                                end: 2687
                            },
                            {
                                begin: 2688,
                                end: 2815
                            },
                            {
                                begin: 2816,
                                end: 2943
                            },
                            {
                                begin: 2944,
                                end: 3071
                            },
                            {
                                begin: 3072,
                                end: 3199
                            },
                            {
                                begin: 3200,
                                end: 3327
                            },
                            {
                                begin: 3328,
                                end: 3455
                            },
                            {
                                begin: 3584,
                                end: 3711
                            },
                            {
                                begin: 3712,
                                end: 3839
                            },
                            {
                                begin: 4256,
                                end: 4351
                            },
                            {
                                begin: 6912,
                                end: 7039
                            },
                            {
                                begin: 4352,
                                end: 4607
                            },
                            {
                                begin: 7680,
                                end: 7935
                            },
                            {
                                begin: 7936,
                                end: 8191
                            },
                            {
                                begin: 8192,
                                end: 8303
                            },
                            {
                                begin: 8304,
                                end: 8351
                            },
                            {
                                begin: 8352,
                                end: 8399
                            },
                            {
                                begin: 8400,
                                end: 8447
                            },
                            {
                                begin: 8448,
                                end: 8527
                            },
                            {
                                begin: 8528,
                                end: 8591
                            },
                            {
                                begin: 8592,
                                end: 8703
                            },
                            {
                                begin: 8704,
                                end: 8959
                            },
                            {
                                begin: 8960,
                                end: 9215
                            },
                            {
                                begin: 9216,
                                end: 9279
                            },
                            {
                                begin: 9280,
                                end: 9311
                            },
                            {
                                begin: 9312,
                                end: 9471
                            },
                            {
                                begin: 9472,
                                end: 9599
                            },
                            {
                                begin: 9600,
                                end: 9631
                            },
                            {
                                begin: 9632,
                                end: 9727
                            },
                            {
                                begin: 9728,
                                end: 9983
                            },
                            {
                                begin: 9984,
                                end: 10175
                            },
                            {
                                begin: 12288,
                                end: 12351
                            },
                            {
                                begin: 12352,
                                end: 12447
                            },
                            {
                                begin: 12448,
                                end: 12543
                            },
                            {
                                begin: 12544,
                                end: 12591
                            },
                            {
                                begin: 12592,
                                end: 12687
                            },
                            {
                                begin: 43072,
                                end: 43135
                            },
                            {
                                begin: 12800,
                                end: 13055
                            },
                            {
                                begin: 13056,
                                end: 13311
                            },
                            {
                                begin: 44032,
                                end: 55215
                            },
                            {
                                begin: 55296,
                                end: 57343
                            },
                            {
                                begin: 67840,
                                end: 67871
                            },
                            {
                                begin: 19968,
                                end: 40959
                            },
                            {
                                begin: 57344,
                                end: 63743
                            },
                            {
                                begin: 12736,
                                end: 12783
                            },
                            {
                                begin: 64256,
                                end: 64335
                            },
                            {
                                begin: 64336,
                                end: 65023
                            },
                            {
                                begin: 65056,
                                end: 65071
                            },
                            {
                                begin: 65040,
                                end: 65055
                            },
                            {
                                begin: 65104,
                                end: 65135
                            },
                            {
                                begin: 65136,
                                end: 65279
                            },
                            {
                                begin: 65280,
                                end: 65519
                            },
                            {
                                begin: 65520,
                                end: 65535
                            },
                            {
                                begin: 3840,
                                end: 4095
                            },
                            {
                                begin: 1792,
                                end: 1871
                            },
                            {
                                begin: 1920,
                                end: 1983
                            },
                            {
                                begin: 3456,
                                end: 3583
                            },
                            {
                                begin: 4096,
                                end: 4255
                            },
                            {
                                begin: 4608,
                                end: 4991
                            },
                            {
                                begin: 5024,
                                end: 5119
                            },
                            {
                                begin: 5120,
                                end: 5759
                            },
                            {
                                begin: 5760,
                                end: 5791
                            },
                            {
                                begin: 5792,
                                end: 5887
                            },
                            {
                                begin: 6016,
                                end: 6143
                            },
                            {
                                begin: 6144,
                                end: 6319
                            },
                            {
                                begin: 10240,
                                end: 10495
                            },
                            {
                                begin: 40960,
                                end: 42127
                            },
                            {
                                begin: 5888,
                                end: 5919
                            },
                            {
                                begin: 66304,
                                end: 66351
                            },
                            {
                                begin: 66352,
                                end: 66383
                            },
                            {
                                begin: 66560,
                                end: 66639
                            },
                            {
                                begin: 118784,
                                end: 119039
                            },
                            {
                                begin: 119808,
                                end: 120831
                            },
                            {
                                begin: 1044480,
                                end: 1048573
                            },
                            {
                                begin: 65024,
                                end: 65039
                            },
                            {
                                begin: 917504,
                                end: 917631
                            },
                            {
                                begin: 6400,
                                end: 6479
                            },
                            {
                                begin: 6480,
                                end: 6527
                            },
                            {
                                begin: 6528,
                                end: 6623
                            },
                            {
                                begin: 6656,
                                end: 6687
                            },
                            {
                                begin: 11264,
                                end: 11359
                            },
                            {
                                begin: 11568,
                                end: 11647
                            },
                            {
                                begin: 19904,
                                end: 19967
                            },
                            {
                                begin: 43008,
                                end: 43055
                            },
                            {
                                begin: 65536,
                                end: 65663
                            },
                            {
                                begin: 65856,
                                end: 65935
                            },
                            {
                                begin: 66432,
                                end: 66463
                            },
                            {
                                begin: 66464,
                                end: 66527
                            },
                            {
                                begin: 66640,
                                end: 66687
                            },
                            {
                                begin: 66688,
                                end: 66735
                            },
                            {
                                begin: 67584,
                                end: 67647
                            },
                            {
                                begin: 68096,
                                end: 68191
                            },
                            {
                                begin: 119552,
                                end: 119647
                            },
                            {
                                begin: 73728,
                                end: 74751
                            },
                            {
                                begin: 119648,
                                end: 119679
                            },
                            {
                                begin: 7040,
                                end: 7103
                            },
                            {
                                begin: 7168,
                                end: 7247
                            },
                            {
                                begin: 7248,
                                end: 7295
                            },
                            {
                                begin: 43136,
                                end: 43231
                            },
                            {
                                begin: 43264,
                                end: 43311
                            },
                            {
                                begin: 43312,
                                end: 43359
                            },
                            {
                                begin: 43520,
                                end: 43615
                            },
                            {
                                begin: 65936,
                                end: 65999
                            },
                            {
                                begin: 66e3,
                                end: 66047
                            },
                            {
                                begin: 66208,
                                end: 66271
                            },
                            {
                                begin: 127024,
                                end: 127135
                            }
                        ];
                        var ht = {
                            parse: function(e, t) {
                                var r = {}, o = new R.Parser(e, t);
                                r.version = o.parseUShort(), r.xAvgCharWidth = o.parseShort(), r.usWeightClass = o.parseUShort(), r.usWidthClass = o.parseUShort(), r.fsType = o.parseUShort(), r.ySubscriptXSize = o.parseShort(), r.ySubscriptYSize = o.parseShort(), r.ySubscriptXOffset = o.parseShort(), r.ySubscriptYOffset = o.parseShort(), r.ySuperscriptXSize = o.parseShort(), r.ySuperscriptYSize = o.parseShort(), r.ySuperscriptXOffset = o.parseShort(), r.ySuperscriptYOffset = o.parseShort(), r.yStrikeoutSize = o.parseShort(), r.yStrikeoutPosition = o.parseShort(), r.sFamilyClass = o.parseShort(), r.panose = [];
                                for(var n = 0; n < 10; n++)r.panose[n] = o.parseByte();
                                return r.ulUnicodeRange1 = o.parseULong(), r.ulUnicodeRange2 = o.parseULong(), r.ulUnicodeRange3 = o.parseULong(), r.ulUnicodeRange4 = o.parseULong(), r.achVendID = String.fromCharCode(o.parseByte(), o.parseByte(), o.parseByte(), o.parseByte()), r.fsSelection = o.parseUShort(), r.usFirstCharIndex = o.parseUShort(), r.usLastCharIndex = o.parseUShort(), r.sTypoAscender = o.parseShort(), r.sTypoDescender = o.parseShort(), r.sTypoLineGap = o.parseShort(), r.usWinAscent = o.parseUShort(), r.usWinDescent = o.parseUShort(), 1 <= r.version && (r.ulCodePageRange1 = o.parseULong(), r.ulCodePageRange2 = o.parseULong()), 2 <= r.version && (r.sxHeight = o.parseShort(), r.sCapHeight = o.parseShort(), r.usDefaultChar = o.parseUShort(), r.usBreakChar = o.parseUShort(), r.usMaxContent = o.parseUShort()), r;
                            },
                            make: function(e) {
                                return new S.Table("OS/2", [
                                    {
                                        name: "version",
                                        type: "USHORT",
                                        value: 3
                                    },
                                    {
                                        name: "xAvgCharWidth",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usWeightClass",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usWidthClass",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "fsType",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "ySubscriptXSize",
                                        type: "SHORT",
                                        value: 650
                                    },
                                    {
                                        name: "ySubscriptYSize",
                                        type: "SHORT",
                                        value: 699
                                    },
                                    {
                                        name: "ySubscriptXOffset",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "ySubscriptYOffset",
                                        type: "SHORT",
                                        value: 140
                                    },
                                    {
                                        name: "ySuperscriptXSize",
                                        type: "SHORT",
                                        value: 650
                                    },
                                    {
                                        name: "ySuperscriptYSize",
                                        type: "SHORT",
                                        value: 699
                                    },
                                    {
                                        name: "ySuperscriptXOffset",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "ySuperscriptYOffset",
                                        type: "SHORT",
                                        value: 479
                                    },
                                    {
                                        name: "yStrikeoutSize",
                                        type: "SHORT",
                                        value: 49
                                    },
                                    {
                                        name: "yStrikeoutPosition",
                                        type: "SHORT",
                                        value: 258
                                    },
                                    {
                                        name: "sFamilyClass",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "bFamilyType",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bSerifStyle",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bWeight",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bProportion",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bContrast",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bStrokeVariation",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bArmStyle",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bLetterform",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bMidline",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "bXHeight",
                                        type: "BYTE",
                                        value: 0
                                    },
                                    {
                                        name: "ulUnicodeRange1",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "ulUnicodeRange2",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "ulUnicodeRange3",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "ulUnicodeRange4",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "achVendID",
                                        type: "CHARARRAY",
                                        value: "XXXX"
                                    },
                                    {
                                        name: "fsSelection",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usFirstCharIndex",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usLastCharIndex",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "sTypoAscender",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "sTypoDescender",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "sTypoLineGap",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usWinAscent",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usWinDescent",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "ulCodePageRange1",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "ulCodePageRange2",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "sxHeight",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "sCapHeight",
                                        type: "SHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usDefaultChar",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usBreakChar",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "usMaxContext",
                                        type: "USHORT",
                                        value: 0
                                    }
                                ], e);
                            },
                            unicodeRanges: ft,
                            getUnicodeRange: function(e) {
                                for(var t = 0; t < ft.length; t += 1){
                                    var r = ft[t];
                                    if (e >= r.begin && e < r.end) return t;
                                }
                                return -1;
                            }
                        };
                        var pt = {
                            parse: function(e, t) {
                                var r = {}, o = new R.Parser(e, t);
                                switch(r.version = o.parseVersion(), r.italicAngle = o.parseFixed(), r.underlinePosition = o.parseShort(), r.underlineThickness = o.parseShort(), r.isFixedPitch = o.parseULong(), r.minMemType42 = o.parseULong(), r.maxMemType42 = o.parseULong(), r.minMemType1 = o.parseULong(), r.maxMemType1 = o.parseULong(), r.version){
                                    case 1:
                                        r.names = c.slice();
                                        break;
                                    case 2:
                                        r.numberOfGlyphs = o.parseUShort(), r.glyphNameIndex = new Array(r.numberOfGlyphs);
                                        for(var n = 0; n < r.numberOfGlyphs; n++)r.glyphNameIndex[n] = o.parseUShort();
                                        r.names = [];
                                        for(var s, i = 0; i < r.numberOfGlyphs; i++)r.glyphNameIndex[i] >= c.length && (s = o.parseChar(), r.names.push(o.parseString(s)));
                                        break;
                                    case 2.5:
                                        r.numberOfGlyphs = o.parseUShort(), r.offset = new Array(r.numberOfGlyphs);
                                        for(var a = 0; a < r.numberOfGlyphs; a++)r.offset[a] = o.parseChar();
                                }
                                return r;
                            },
                            make: function() {
                                return new S.Table("post", [
                                    {
                                        name: "version",
                                        type: "FIXED",
                                        value: 196608
                                    },
                                    {
                                        name: "italicAngle",
                                        type: "FIXED",
                                        value: 0
                                    },
                                    {
                                        name: "underlinePosition",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "underlineThickness",
                                        type: "FWORD",
                                        value: 0
                                    },
                                    {
                                        name: "isFixedPitch",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "minMemType42",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "maxMemType42",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "minMemType1",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "maxMemType1",
                                        type: "ULONG",
                                        value: 0
                                    }
                                ]);
                            }
                        }, o = new Array(9), s = (o[1] = function() {
                            var e = this.offset + this.relativeOffset, t = this.parseUShort();
                            return 1 === t ? {
                                substFormat: 1,
                                coverage: this.parsePointer(u.coverage),
                                deltaGlyphId: this.parseUShort()
                            } : 2 === t ? {
                                substFormat: 2,
                                coverage: this.parsePointer(u.coverage),
                                substitute: this.parseOffset16List()
                            } : void P.assert(!1, "0x" + e.toString(16) + ": lookup type 1 format must be 1 or 2.");
                        }, o[2] = function() {
                            var e = this.parseUShort();
                            return P.argument(1 === e, "GSUB Multiple Substitution Subtable identifier-format must be 1"), {
                                substFormat: e,
                                coverage: this.parsePointer(u.coverage),
                                sequences: this.parseListOfLists()
                            };
                        }, o[3] = function() {
                            var e = this.parseUShort();
                            return P.argument(1 === e, "GSUB Alternate Substitution Subtable identifier-format must be 1"), {
                                substFormat: e,
                                coverage: this.parsePointer(u.coverage),
                                alternateSets: this.parseListOfLists()
                            };
                        }, o[4] = function() {
                            var e = this.parseUShort();
                            return P.argument(1 === e, "GSUB ligature table identifier-format must be 1"), {
                                substFormat: e,
                                coverage: this.parsePointer(u.coverage),
                                ligatureSets: this.parseListOfLists(function() {
                                    return {
                                        ligGlyph: this.parseUShort(),
                                        components: this.parseUShortList(this.parseUShort() - 1)
                                    };
                                })
                            };
                        }, {
                            sequenceIndex: u.uShort,
                            lookupListIndex: u.uShort
                        });
                        o[5] = function() {
                            var e, t, r = this.offset + this.relativeOffset, o = this.parseUShort();
                            return 1 === o ? {
                                substFormat: o,
                                coverage: this.parsePointer(u.coverage),
                                ruleSets: this.parseListOfLists(function() {
                                    var e = this.parseUShort(), t = this.parseUShort();
                                    return {
                                        input: this.parseUShortList(e - 1),
                                        lookupRecords: this.parseRecordList(t, s)
                                    };
                                })
                            } : 2 === o ? {
                                substFormat: o,
                                coverage: this.parsePointer(u.coverage),
                                classDef: this.parsePointer(u.classDef),
                                classSets: this.parseListOfLists(function() {
                                    var e = this.parseUShort(), t = this.parseUShort();
                                    return {
                                        classes: this.parseUShortList(e - 1),
                                        lookupRecords: this.parseRecordList(t, s)
                                    };
                                })
                            } : 3 === o ? (e = this.parseUShort(), t = this.parseUShort(), {
                                substFormat: o,
                                coverages: this.parseList(e, u.pointer(u.coverage)),
                                lookupRecords: this.parseRecordList(t, s)
                            }) : void P.assert(!1, "0x" + r.toString(16) + ": lookup type 5 format must be 1, 2 or 3.");
                        }, o[6] = function() {
                            var e = this.offset + this.relativeOffset, t = this.parseUShort();
                            return 1 === t ? {
                                substFormat: 1,
                                coverage: this.parsePointer(u.coverage),
                                chainRuleSets: this.parseListOfLists(function() {
                                    return {
                                        backtrack: this.parseUShortList(),
                                        input: this.parseUShortList(this.parseShort() - 1),
                                        lookahead: this.parseUShortList(),
                                        lookupRecords: this.parseRecordList(s)
                                    };
                                })
                            } : 2 === t ? {
                                substFormat: 2,
                                coverage: this.parsePointer(u.coverage),
                                backtrackClassDef: this.parsePointer(u.classDef),
                                inputClassDef: this.parsePointer(u.classDef),
                                lookaheadClassDef: this.parsePointer(u.classDef),
                                chainClassSet: this.parseListOfLists(function() {
                                    return {
                                        backtrack: this.parseUShortList(),
                                        input: this.parseUShortList(this.parseShort() - 1),
                                        lookahead: this.parseUShortList(),
                                        lookupRecords: this.parseRecordList(s)
                                    };
                                })
                            } : 3 === t ? {
                                substFormat: 3,
                                backtrackCoverage: this.parseList(u.pointer(u.coverage)),
                                inputCoverage: this.parseList(u.pointer(u.coverage)),
                                lookaheadCoverage: this.parseList(u.pointer(u.coverage)),
                                lookupRecords: this.parseRecordList(s)
                            } : void P.assert(!1, "0x" + e.toString(16) + ": lookup type 6 format must be 1, 2 or 3.");
                        }, o[7] = function() {
                            var e = this.parseUShort(), e = (P.argument(1 === e, "GSUB Extension Substitution subtable identifier-format must be 1"), this.parseUShort()), t = new u(this.data, this.offset + this.parseULong());
                            return {
                                substFormat: 1,
                                lookupType: e,
                                extension: o[e].call(t)
                            };
                        }, o[8] = function() {
                            var e = this.parseUShort();
                            return P.argument(1 === e, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), {
                                substFormat: e,
                                coverage: this.parsePointer(u.coverage),
                                backtrackCoverage: this.parseList(u.pointer(u.coverage)),
                                lookaheadCoverage: this.parseList(u.pointer(u.coverage)),
                                substitutes: this.parseUShortList()
                            };
                        };
                        var mt = new Array(9);
                        mt[1] = function(e) {
                            return 1 === e.substFormat ? new S.Table("substitutionTable", [
                                {
                                    name: "substFormat",
                                    type: "USHORT",
                                    value: 1
                                },
                                {
                                    name: "coverage",
                                    type: "TABLE",
                                    value: new S.Coverage(e.coverage)
                                },
                                {
                                    name: "deltaGlyphID",
                                    type: "USHORT",
                                    value: e.deltaGlyphId
                                }
                            ]) : new S.Table("substitutionTable", [
                                {
                                    name: "substFormat",
                                    type: "USHORT",
                                    value: 2
                                },
                                {
                                    name: "coverage",
                                    type: "TABLE",
                                    value: new S.Coverage(e.coverage)
                                }
                            ].concat(S.ushortList("substitute", e.substitute)));
                        }, mt[3] = function(e) {
                            return P.assert(1 === e.substFormat, "Lookup type 3 substFormat must be 1."), new S.Table("substitutionTable", [
                                {
                                    name: "substFormat",
                                    type: "USHORT",
                                    value: 1
                                },
                                {
                                    name: "coverage",
                                    type: "TABLE",
                                    value: new S.Coverage(e.coverage)
                                }
                            ].concat(S.tableList("altSet", e.alternateSets, function(e) {
                                return new S.Table("alternateSetTable", S.ushortList("alternate", e));
                            })));
                        }, mt[4] = function(e) {
                            return P.assert(1 === e.substFormat, "Lookup type 4 substFormat must be 1."), new S.Table("substitutionTable", [
                                {
                                    name: "substFormat",
                                    type: "USHORT",
                                    value: 1
                                },
                                {
                                    name: "coverage",
                                    type: "TABLE",
                                    value: new S.Coverage(e.coverage)
                                }
                            ].concat(S.tableList("ligSet", e.ligatureSets, function(e) {
                                return new S.Table("ligatureSetTable", S.tableList("ligature", e, function(e) {
                                    return new S.Table("ligatureTable", [
                                        {
                                            name: "ligGlyph",
                                            type: "USHORT",
                                            value: e.ligGlyph
                                        }
                                    ].concat(S.ushortList("component", e.components, e.components.length + 1)));
                                }));
                            })));
                        };
                        var yt = {
                            parse: function(e, t) {
                                return t = (e = new u(e, t = t || 0)).parseVersion(1), P.argument(1 === t || 1.1 === t, "Unsupported GSUB table version."), 1 === t ? {
                                    version: t,
                                    scripts: e.parseScriptList(),
                                    features: e.parseFeatureList(),
                                    lookups: e.parseLookupList(o)
                                } : {
                                    version: t,
                                    scripts: e.parseScriptList(),
                                    features: e.parseFeatureList(),
                                    lookups: e.parseLookupList(o),
                                    variations: e.parseFeatureVariationsList()
                                };
                            },
                            make: function(e) {
                                return new S.Table("GSUB", [
                                    {
                                        name: "version",
                                        type: "ULONG",
                                        value: 65536
                                    },
                                    {
                                        name: "scripts",
                                        type: "TABLE",
                                        value: new S.ScriptList(e.scripts)
                                    },
                                    {
                                        name: "features",
                                        type: "TABLE",
                                        value: new S.FeatureList(e.features)
                                    },
                                    {
                                        name: "lookups",
                                        type: "TABLE",
                                        value: new S.LookupList(e.lookups, mt)
                                    }
                                ]);
                            }
                        };
                        var gt = {
                            parse: function(e, t) {
                                for(var r = new R.Parser(e, t), o = r.parseULong(), n = (P.argument(1 === o, "Unsupported META table version."), r.parseULong(), r.parseULong(), r.parseULong()), s = {}, i = 0; i < n; i++){
                                    var a = r.parseTag(), l = r.parseULong(), u = r.parseULong(), l = m.UTF8(e, t + l, u);
                                    s[a] = l;
                                }
                                return s;
                            },
                            make: function(e) {
                                var t, r = Object.keys(e).length, o = "", n = 16 + 12 * r, s = new S.Table("meta", [
                                    {
                                        name: "version",
                                        type: "ULONG",
                                        value: 1
                                    },
                                    {
                                        name: "flags",
                                        type: "ULONG",
                                        value: 0
                                    },
                                    {
                                        name: "offset",
                                        type: "ULONG",
                                        value: n
                                    },
                                    {
                                        name: "numTags",
                                        type: "ULONG",
                                        value: r
                                    }
                                ]);
                                for(t in e){
                                    var i = o.length;
                                    o += e[t], s.fields.push({
                                        name: "tag " + t,
                                        type: "TAG",
                                        value: t
                                    }), s.fields.push({
                                        name: "offset " + t,
                                        type: "ULONG",
                                        value: n + i
                                    }), s.fields.push({
                                        name: "length " + t,
                                        type: "ULONG",
                                        value: e[t].length
                                    });
                                }
                                return s.fields.push({
                                    name: "stringPool",
                                    type: "CHARARRAY",
                                    value: o
                                }), s;
                            }
                        };
                        function vt(e) {
                            return Math.log(e) / Math.log(2) | 0;
                        }
                        function bt(e) {
                            for(; e.length % 4 != 0;)e.push(0);
                            for(var t = 0, r = 0; r < e.length; r += 4)t += (e[r] << 24) + (e[r + 1] << 16) + (e[r + 2] << 8) + e[r + 3];
                            return t %= Math.pow(2, 32);
                        }
                        function jt(e, t, r, o) {
                            return new S.Record("Table Record", [
                                {
                                    name: "tag",
                                    type: "TAG",
                                    value: void 0 !== e ? e : ""
                                },
                                {
                                    name: "checkSum",
                                    type: "ULONG",
                                    value: void 0 !== t ? t : 0
                                },
                                {
                                    name: "offset",
                                    type: "ULONG",
                                    value: void 0 !== r ? r : 0
                                },
                                {
                                    name: "length",
                                    type: "ULONG",
                                    value: void 0 !== o ? o : 0
                                }
                            ]);
                        }
                        function _t(e) {
                            for(var t = new S.Table("sfnt", [
                                {
                                    name: "version",
                                    type: "TAG",
                                    value: "OTTO"
                                },
                                {
                                    name: "numTables",
                                    type: "USHORT",
                                    value: 0
                                },
                                {
                                    name: "searchRange",
                                    type: "USHORT",
                                    value: 0
                                },
                                {
                                    name: "entrySelector",
                                    type: "USHORT",
                                    value: 0
                                },
                                {
                                    name: "rangeShift",
                                    type: "USHORT",
                                    value: 0
                                }
                            ]), r = (t.tables = e, t.numTables = e.length, Math.pow(2, vt(t.numTables))), o = (t.searchRange = 16 * r, t.entrySelector = vt(r), t.rangeShift = 16 * t.numTables - t.searchRange, []), n = [], s = t.sizeOf() + jt().sizeOf() * t.numTables; s % 4 != 0;)s += 1, n.push({
                                name: "padding",
                                type: "BYTE",
                                value: 0
                            });
                            for(var i = 0; i < e.length; i += 1){
                                var a = e[i], l = (P.argument(4 === a.tableName.length, "Table name" + a.tableName + " is invalid."), a.sizeOf()), u = jt(a.tableName, bt(a.encode()), s, l);
                                for(o.push({
                                    name: u.tag + " Table Record",
                                    type: "RECORD",
                                    value: u
                                }), n.push({
                                    name: a.tableName + " table",
                                    type: "RECORD",
                                    value: a
                                }), s += l, P.argument(!isNaN(s), "Something went wrong calculating the offset."); s % 4 != 0;)s += 1, n.push({
                                    name: "padding",
                                    type: "BYTE",
                                    value: 0
                                });
                            }
                            return o.sort(function(e, t) {
                                return e.value.tag > t.value.tag ? 1 : -1;
                            }), t.fields = t.fields.concat(o), t.fields = t.fields.concat(n), t;
                        }
                        function xt(e, t, r) {
                            for(var o = 0; o < t.length; o += 1){
                                var n = e.charToGlyphIndex(t[o]);
                                if (0 < n) return e.glyphs.get(n).getMetrics();
                            }
                            return r;
                        }
                        var wt = {
                            make: _t,
                            fontToTable: function(e) {
                                for(var t, r = [], o = [], n = [], s = [], i = [], a = [], l = [], u = 0, c = 0, d = 0, f = 0, h = 0, p = 0; p < e.glyphs.length; p += 1){
                                    var m = e.glyphs.get(p), y = 0 | m.unicode;
                                    if (isNaN(m.advanceWidth)) throw new Error("Glyph " + m.name + " (" + p + "): advanceWidth is not a number.");
                                    (y < t || void 0 === t) && 0 < y && (t = y), u < y && (u = y);
                                    var y = ht.getUnicodeRange(y);
                                    if (y < 32) c |= 1 << y;
                                    else if (y < 64) d |= 1 << y - 32;
                                    else if (y < 96) f |= 1 << y - 64;
                                    else {
                                        if (!(y < 123)) throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
                                        h |= 1 << y - 96;
                                    }
                                    ".notdef" !== m.name && (y = m.getMetrics(), r.push(y.xMin), o.push(y.yMin), n.push(y.xMax), s.push(y.yMax), a.push(y.leftSideBearing), l.push(y.rightSideBearing), i.push(m.advanceWidth));
                                }
                                var g, v = {
                                    xMin: Math.min.apply(null, r),
                                    yMin: Math.min.apply(null, o),
                                    xMax: Math.max.apply(null, n),
                                    yMax: Math.max.apply(null, s),
                                    advanceWidthMax: Math.max.apply(null, i),
                                    advanceWidthAvg: function(e) {
                                        for(var t = 0, r = 0; r < e.length; r += 1)t += e[r];
                                        return t / e.length;
                                    }(i),
                                    minLeftSideBearing: Math.min.apply(null, a),
                                    maxLeftSideBearing: Math.max.apply(null, a),
                                    minRightSideBearing: Math.min.apply(null, l)
                                }, b = (v.ascender = e.ascender, v.descender = e.descender, Ze.make({
                                    flags: 3,
                                    unitsPerEm: e.unitsPerEm,
                                    xMin: v.xMin,
                                    yMin: v.yMin,
                                    xMax: v.xMax,
                                    yMax: v.yMax,
                                    lowestRecPPEM: 3,
                                    createdTimestamp: e.createdTimestamp
                                })), j = Qe.make({
                                    ascender: v.ascender,
                                    descender: v.descender,
                                    advanceWidthMax: v.advanceWidthMax,
                                    minLeftSideBearing: v.minLeftSideBearing,
                                    minRightSideBearing: v.minRightSideBearing,
                                    xMaxExtent: v.maxLeftSideBearing + (v.xMax - v.xMin),
                                    numberOfHMetrics: e.glyphs.length
                                }), _ = $e.make(e.glyphs.length), x = ht.make({
                                    xAvgCharWidth: Math.round(v.advanceWidthAvg),
                                    usWeightClass: e.tables.os2.usWeightClass,
                                    usWidthClass: e.tables.os2.usWidthClass,
                                    usFirstCharIndex: t,
                                    usLastCharIndex: u,
                                    ulUnicodeRange1: c,
                                    ulUnicodeRange2: d,
                                    ulUnicodeRange3: f,
                                    ulUnicodeRange4: h,
                                    fsSelection: e.tables.os2.fsSelection,
                                    sTypoAscender: v.ascender,
                                    sTypoDescender: v.descender,
                                    sTypoLineGap: 0,
                                    usWinAscent: v.yMax,
                                    usWinDescent: Math.abs(v.yMin),
                                    ulCodePageRange1: 1,
                                    sxHeight: xt(e, "xyvw", {
                                        yMax: Math.round(v.ascender / 2)
                                    }).yMax,
                                    sCapHeight: xt(e, "HIKLEFJMNTZBDPRAGOQSUVWXY", v).yMax,
                                    usDefaultChar: e.hasChar(" ") ? 32 : 0,
                                    usBreakChar: e.hasChar(" ") ? 32 : 0
                                }), w = Ke.make(e.glyphs), S = we.make(e.glyphs), M = e.getEnglishName("fontFamily"), E = e.getEnglishName("fontSubfamily"), T = M + " " + E, C = (C = e.getEnglishName("postScriptName")) || M.replace(/\s/g, "") + "-" + E, O = {};
                                for(g in e.names)O[g] = e.names[g];
                                O.uniqueID || (O.uniqueID = {
                                    en: e.getEnglishName("manufacturer") + ":" + T
                                }), O.postScriptName || (O.postScriptName = {
                                    en: C
                                }), O.preferredFamily || (O.preferredFamily = e.names.fontFamily), O.preferredSubfamily || (O.preferredSubfamily = e.names.fontSubfamily);
                                var L = [], k = dt.make(O, L), L = 0 < L.length ? Je.make(L) : void 0, A = pt.make(), T = Ye.make(e.glyphs, {
                                    version: e.getEnglishName("version"),
                                    fullName: T,
                                    familyName: M,
                                    weightName: E,
                                    postScriptName: C,
                                    unitsPerEm: e.unitsPerEm,
                                    fontBBox: [
                                        0,
                                        v.yMin,
                                        v.ascender,
                                        v.advanceWidthMax
                                    ]
                                }), M = e.metas && 0 < Object.keys(e.metas).length ? gt.make(e.metas) : void 0, E = [
                                    b,
                                    j,
                                    _,
                                    x,
                                    k,
                                    S,
                                    A,
                                    T,
                                    w
                                ];
                                L && E.push(L), e.tables.gsub && E.push(yt.make(e.tables.gsub)), M && E.push(M);
                                for(var I = bt((C = _t(E)).encode()), P = C.fields, R = !1, D = 0; D < P.length; D += 1)if ("head table" === P[D].name) {
                                    P[D].value.checkSumAdjustment = 2981146554 - I, R = !0;
                                    break;
                                }
                                if (R) return C;
                                throw new Error("Could not find head table with checkSum to adjust.");
                            },
                            computeCheckSum: bt
                        };
                        function St(e, t) {
                            for(var r = 0, o = e.length - 1; r <= o;){
                                var n = r + o >>> 1, s = e[n].tag;
                                if (s === t) return n;
                                s < t ? r = 1 + n : o = n - 1;
                            }
                            return -r - 1;
                        }
                        function Mt(e, t) {
                            for(var r = 0, o = e.length - 1; r <= o;){
                                var n = r + o >>> 1, s = e[n];
                                if (s === t) return n;
                                s < t ? r = 1 + n : o = n - 1;
                            }
                            return -r - 1;
                        }
                        function Et(e, t) {
                            for(var r = 0, o = e.length - 1; r <= o;){
                                var n, s = r + o >>> 1, i = (n = e[s]).start;
                                if (i === t) return n;
                                i < t ? r = 1 + s : o = s - 1;
                            }
                            if (0 < r) return t > (n = e[r - 1]).end ? 0 : n;
                        }
                        function Tt(e, t) {
                            this.font = e, this.tableName = t;
                        }
                        function Ct(e) {
                            Tt.call(this, e, "gpos");
                        }
                        function i(e) {
                            Tt.call(this, e, "gsub");
                        }
                        function Ot(e, t, r) {
                            for(var o = e.subtables, n = 0; n < o.length; n++){
                                var s = o[n];
                                if (s.substFormat === t) return s;
                            }
                            if (r) return o.push(r), r;
                        }
                        function Lt(e) {
                            for(var t = new ArrayBuffer(e.length), r = new Uint8Array(t), o = 0; o < e.length; ++o)r[o] = e[o];
                            return t;
                        }
                        function _(e, t) {
                            if (!e) throw t;
                        }
                        function kt(e, t, r, o, n) {
                            var s = 0 < (t & o) ? (s = e.parseByte(), r + (s = 0 == (t & n) ? -s : s)) : 0 < (t & n) ? r : r + e.parseShort();
                            return s;
                        }
                        function At(e, t, r) {
                            var o, n = new R.Parser(t, r);
                            if (e.numberOfContours = n.parseShort(), e._xMin = n.parseShort(), e._yMin = n.parseShort(), e._xMax = n.parseShort(), e._yMax = n.parseShort(), 0 < e.numberOfContours) {
                                for(var s = e.endPointIndices = [], i = 0; i < e.numberOfContours; i += 1)s.push(n.parseUShort());
                                e.instructionLength = n.parseUShort(), e.instructions = [];
                                for(var a = 0; a < e.instructionLength; a += 1)e.instructions.push(n.parseByte());
                                for(var l = s[s.length - 1] + 1, u = [], c = 0; c < l; c += 1)if (o = n.parseByte(), u.push(o), 0 < (8 & o)) for(var d = n.parseByte(), f = 0; f < d; f += 1)u.push(o), c += 1;
                                if (P.argument(u.length === l, "Bad flags."), 0 < s.length) {
                                    var h, p = [];
                                    if (0 < l) {
                                        for(var m = 0; m < l; m += 1)o = u[m], (h = {}).onCurve = !!(1 & o), h.lastPointOfContour = 0 <= s.indexOf(m), p.push(h);
                                        for(var y = 0, g = 0; g < l; g += 1)o = u[g], (h = p[g]).x = kt(n, o, y, 2, 16), y = h.x;
                                        for(var v = 0, b = 0; b < l; b += 1)o = u[b], (h = p[b]).y = kt(n, o, v, 4, 32), v = h.y;
                                    }
                                    e.points = p;
                                } else e.points = [];
                            } else if (0 === e.numberOfContours) e.points = [];
                            else {
                                e.isComposite = !0, e.points = [], e.components = [];
                                for(var j = !0; j;){
                                    u = n.parseUShort();
                                    var _ = {
                                        glyphIndex: n.parseUShort(),
                                        xScale: 1,
                                        scale01: 0,
                                        scale10: 0,
                                        yScale: 1,
                                        dx: 0,
                                        dy: 0
                                    };
                                    0 < (1 & u) ? 0 < (2 & u) ? (_.dx = n.parseShort(), _.dy = n.parseShort()) : _.matchedPoints = [
                                        n.parseUShort(),
                                        n.parseUShort()
                                    ] : 0 < (2 & u) ? (_.dx = n.parseChar(), _.dy = n.parseChar()) : _.matchedPoints = [
                                        n.parseByte(),
                                        n.parseByte()
                                    ], 0 < (8 & u) ? _.xScale = _.yScale = n.parseF2Dot14() : 0 < (64 & u) ? (_.xScale = n.parseF2Dot14(), _.yScale = n.parseF2Dot14()) : 0 < (128 & u) && (_.xScale = n.parseF2Dot14(), _.scale01 = n.parseF2Dot14(), _.scale10 = n.parseF2Dot14(), _.yScale = n.parseF2Dot14()), e.components.push(_), j = !!(32 & u);
                                }
                                if (256 & u) {
                                    e.instructionLength = n.parseUShort(), e.instructions = [];
                                    for(var x = 0; x < e.instructionLength; x += 1)e.instructions.push(n.parseByte());
                                }
                            }
                        }
                        function Pt(e, t) {
                            for(var r = [], o = 0; o < e.length; o += 1){
                                var n = e[o], n = {
                                    x: t.xScale * n.x + t.scale01 * n.y + t.dx,
                                    y: t.scale10 * n.x + t.yScale * n.y + t.dy,
                                    onCurve: n.onCurve,
                                    lastPointOfContour: n.lastPointOfContour
                                };
                                r.push(n);
                            }
                            return r;
                        }
                        function Rt(e) {
                            var t = new f;
                            if (e) for(var r = function(e) {
                                for(var t = [], r = [], o = 0; o < e.length; o += 1){
                                    var n = e[o];
                                    r.push(n), n.lastPointOfContour && (t.push(r), r = []);
                                }
                                return P.argument(0 === r.length, "There are still points left in the current contour."), t;
                            }(e), o = 0; o < r.length; ++o){
                                var n, s = r[o], i = s[s.length - 1], a = s[0];
                                i.onCurve ? t.moveTo(i.x, i.y) : a.onCurve ? t.moveTo(a.x, a.y) : (n = {
                                    x: .5 * (i.x + a.x),
                                    y: .5 * (i.y + a.y)
                                }, t.moveTo(n.x, n.y));
                                for(var l = 0; l < s.length; ++l){
                                    var u, c = i, i = a, a = s[(l + 1) % s.length];
                                    i.onCurve ? t.lineTo(i.x, i.y) : (u = a, c.onCurve || (i.x, c.x, i.y, c.y), a.onCurve || (u = {
                                        x: .5 * (i.x + a.x),
                                        y: .5 * (i.y + a.y)
                                    }), t.quadraticCurveTo(i.x, i.y, u.x, u.y));
                                }
                                t.closePath();
                            }
                            return t;
                        }
                        function Dt(e, t) {
                            if (t.isComposite) for(var r = 0; r < t.components.length; r += 1){
                                var o = t.components[r], n = e.get(o.glyphIndex);
                                if (n.getPath(), n.points) {
                                    var s = void 0;
                                    if (void 0 === o.matchedPoints) s = Pt(n.points, o);
                                    else {
                                        if (o.matchedPoints[0] > t.points.length - 1 || o.matchedPoints[1] > n.points.length - 1) throw Error("Matched points out of range in " + t.name);
                                        var i = t.points[o.matchedPoints[0]], a = n.points[o.matchedPoints[1]], o = {
                                            xScale: o.xScale,
                                            scale01: o.scale01,
                                            scale10: o.scale10,
                                            yScale: o.yScale,
                                            dx: 0,
                                            dy: 0
                                        }, a = Pt([
                                            a
                                        ], o)[0];
                                        o.dx = i.x - a.x, o.dy = i.y - a.y, s = Pt(n.points, o);
                                    }
                                    t.points = t.points.concat(s);
                                }
                            }
                            return Rt(t.points);
                        }
                        (Ct.prototype = Tt.prototype = {
                            searchTag: St,
                            binSearch: Mt,
                            getTable: function(e) {
                                var t = this.font.tables[this.tableName];
                                return t = !t && e ? this.font.tables[this.tableName] = this.createDefaultTable() : t;
                            },
                            getScriptNames: function() {
                                var e = this.getTable();
                                return e ? e.scripts.map(function(e) {
                                    return e.tag;
                                }) : [];
                            },
                            getDefaultScriptName: function() {
                                var e = this.getTable();
                                if (e) {
                                    for(var t = !1, r = 0; r < e.scripts.length; r++){
                                        var o = e.scripts[r].tag;
                                        if ("DFLT" === o) return o;
                                        "latn" === o && (t = !0);
                                    }
                                    return t ? "latn" : void 0;
                                }
                            },
                            getScriptTable: function(e, t) {
                                var r, o = this.getTable(t);
                                if (o) return r = o.scripts, 0 <= (o = St(o.scripts, e = e || "DFLT")) ? r[o].script : t ? (r.splice(-1 - o, 0, t = {
                                    tag: e,
                                    script: {
                                        defaultLangSys: {
                                            reserved: 0,
                                            reqFeatureIndex: 65535,
                                            featureIndexes: []
                                        },
                                        langSysRecords: []
                                    }
                                }), t.script) : void 0;
                            },
                            getLangSysTable: function(e, t, r) {
                                var o, e = this.getScriptTable(e, r);
                                if (e) return t && "dflt" !== t && "DFLT" !== t ? 0 <= (o = St(e.langSysRecords, t)) ? e.langSysRecords[o].langSys : r ? (e.langSysRecords.splice(-1 - o, 0, r = {
                                    tag: t,
                                    langSys: {
                                        reserved: 0,
                                        reqFeatureIndex: 65535,
                                        featureIndexes: []
                                    }
                                }), r.langSys) : void 0 : e.defaultLangSys;
                            },
                            getFeatureTable: function(e, t, r, o) {
                                e = this.getLangSysTable(e, t, o);
                                if (e) {
                                    for(var n, s = e.featureIndexes, i = this.font.tables[this.tableName].features, a = 0; a < s.length; a++)if ((n = i[s[a]]).tag === r) return n.feature;
                                    if (o) return t = i.length, P.assert(0 === t || r >= i[t - 1].tag, "Features must be added in alphabetical order."), i.push(n = {
                                        tag: r,
                                        feature: {
                                            params: 0,
                                            lookupListIndexes: []
                                        }
                                    }), s.push(t), n.feature;
                                }
                            },
                            getLookupTables: function(e, t, r, o, n) {
                                var e = this.getFeatureTable(e, t, r, n), s = [];
                                if (e) {
                                    for(var i, a = e.lookupListIndexes, l = this.font.tables[this.tableName].lookups, u = 0; u < a.length; u++)(i = l[a[u]]).lookupType === o && s.push(i);
                                    if (0 === s.length && n) return t = l.length, l.push(i = {
                                        lookupType: o,
                                        lookupFlag: 0,
                                        subtables: [],
                                        markFilteringSet: void 0
                                    }), a.push(t), [
                                        i
                                    ];
                                }
                                return s;
                            },
                            getGlyphClass: function(e, t) {
                                switch(e.format){
                                    case 1:
                                        return e.startGlyph <= t && t < e.startGlyph + e.classes.length ? e.classes[t - e.startGlyph] : 0;
                                    case 2:
                                        var r = Et(e.ranges, t);
                                        return r ? r.classId : 0;
                                }
                            },
                            getCoverageIndex: function(e, t) {
                                switch(e.format){
                                    case 1:
                                        var r = Mt(e.glyphs, t);
                                        return 0 <= r ? r : -1;
                                    case 2:
                                        r = Et(e.ranges, t);
                                        return r ? r.index + t - r.start : -1;
                                }
                            },
                            expandCoverage: function(e) {
                                if (1 === e.format) return e.glyphs;
                                for(var t = [], r = e.ranges, o = 0; o < r.length; o++)for(var n = r[o], s = n.start, i = n.end, a = s; a <= i; a++)t.push(a);
                                return t;
                            }
                        }).init = function() {
                            var e = this.getDefaultScriptName();
                            this.defaultKerningTables = this.getKerningTables(e);
                        }, Ct.prototype.getKerningValue = function(e, t, r) {
                            for(var o = 0; o < e.length; o++)for(var n = e[o].subtables, s = 0; s < n.length; s++){
                                var i = n[s], a = this.getCoverageIndex(i.coverage, t);
                                if (!(a < 0)) switch(i.posFormat){
                                    case 1:
                                        for(var l = i.pairSets[a], u = 0; u < l.length; u++){
                                            var c = l[u];
                                            if (c.secondGlyph === r) return c.value1 && c.value1.xAdvance || 0;
                                        }
                                        break;
                                    case 2:
                                        var d = this.getGlyphClass(i.classDef1, t), f = this.getGlyphClass(i.classDef2, r), d = i.classRecords[d][f];
                                        return d.value1 && d.value1.xAdvance || 0;
                                }
                            }
                            return 0;
                        }, Ct.prototype.getKerningTables = function(e, t) {
                            if (this.font.tables.gpos) return this.getLookupTables(e, t, "kern", 2);
                        }, (i.prototype = Tt.prototype).createDefaultTable = function() {
                            return {
                                version: 1,
                                scripts: [
                                    {
                                        tag: "DFLT",
                                        script: {
                                            defaultLangSys: {
                                                reserved: 0,
                                                reqFeatureIndex: 65535,
                                                featureIndexes: []
                                            },
                                            langSysRecords: []
                                        }
                                    }
                                ],
                                features: [],
                                lookups: []
                            };
                        }, i.prototype.getSingle = function(e, t, r) {
                            for(var o = [], n = this.getLookupTables(t, r, e, 1), s = 0; s < n.length; s++)for(var i = n[s].subtables, a = 0; a < i.length; a++){
                                var l = i[a], u = this.expandCoverage(l.coverage), c = void 0;
                                if (1 === l.substFormat) for(var d = l.deltaGlyphId, c = 0; c < u.length; c++){
                                    var f = u[c];
                                    o.push({
                                        sub: f,
                                        by: f + d
                                    });
                                }
                                else {
                                    var h = l.substitute;
                                    for(c = 0; c < u.length; c++)o.push({
                                        sub: u[c],
                                        by: h[c]
                                    });
                                }
                            }
                            return o;
                        }, i.prototype.getAlternates = function(e, t, r) {
                            for(var o = [], n = this.getLookupTables(t, r, e, 3), s = 0; s < n.length; s++)for(var i = n[s].subtables, a = 0; a < i.length; a++)for(var l = i[a], u = this.expandCoverage(l.coverage), c = l.alternateSets, d = 0; d < u.length; d++)o.push({
                                sub: u[d],
                                by: c[d]
                            });
                            return o;
                        }, i.prototype.getLigatures = function(e, t, r) {
                            for(var o = [], n = this.getLookupTables(t, r, e, 4), s = 0; s < n.length; s++)for(var i = n[s].subtables, a = 0; a < i.length; a++)for(var l = i[a], u = this.expandCoverage(l.coverage), c = l.ligatureSets, d = 0; d < u.length; d++)for(var f = u[d], h = c[d], p = 0; p < h.length; p++){
                                var m = h[p];
                                o.push({
                                    sub: [
                                        f
                                    ].concat(m.components),
                                    by: m.ligGlyph
                                });
                            }
                            return o;
                        }, i.prototype.addSingle = function(e, t, r, o) {
                            r = Ot(this.getLookupTables(r, o, e, 1, !0)[0], 2, {
                                substFormat: 2,
                                coverage: {
                                    format: 1,
                                    glyphs: []
                                },
                                substitute: []
                            }), P.assert(1 === r.coverage.format, "Ligature: unable to modify coverage table format " + r.coverage.format), o = t.sub, e = this.binSearch(r.coverage.glyphs, o);
                            e < 0 && (r.coverage.glyphs.splice(e = -1 - e, 0, o), r.substitute.splice(e, 0, 0)), r.substitute[e] = t.by;
                        }, i.prototype.addAlternate = function(e, t, r, o) {
                            r = Ot(this.getLookupTables(r, o, e, 3, !0)[0], 1, {
                                substFormat: 1,
                                coverage: {
                                    format: 1,
                                    glyphs: []
                                },
                                alternateSets: []
                            }), P.assert(1 === r.coverage.format, "Ligature: unable to modify coverage table format " + r.coverage.format), o = t.sub, e = this.binSearch(r.coverage.glyphs, o);
                            e < 0 && (r.coverage.glyphs.splice(e = -1 - e, 0, o), r.alternateSets.splice(e, 0, 0)), r.alternateSets[e] = t.by;
                        }, i.prototype.addLigature = function(e, t, r, o) {
                            var r = this.getLookupTables(r, o, e, 4, !0)[0], o = r.subtables[0], e = (o || (r.subtables[0] = o = {
                                substFormat: 1,
                                coverage: {
                                    format: 1,
                                    glyphs: []
                                },
                                ligatureSets: []
                            }), P.assert(1 === o.coverage.format, "Ligature: unable to modify coverage table format " + o.coverage.format), t.sub[0]), n = t.sub.slice(1), r = {
                                ligGlyph: t.by,
                                components: n
                            }, t = this.binSearch(o.coverage.glyphs, e);
                            if (0 <= t) {
                                for(var s = o.ligatureSets[t], i = 0; i < s.length; i++)if (function(e, t) {
                                    var r = e.length;
                                    if (r === t.length) {
                                        for(var o = 0; o < r; o++)if (e[o] !== t[o]) return;
                                        return 1;
                                    }
                                }(s[i].components, n)) return;
                                s.push(r);
                            } else o.coverage.glyphs.splice(t = -1 - t, 0, e), o.ligatureSets.splice(t, 0, [
                                r
                            ]);
                        }, i.prototype.getFeature = function(e, t, r) {
                            if (/ss\d\d/.test(e)) return this.getSingle(e, t, r);
                            switch(e){
                                case "aalt":
                                case "salt":
                                    return this.getSingle(e, t, r).concat(this.getAlternates(e, t, r));
                                case "dlig":
                                case "liga":
                                case "rlig":
                                    return this.getLigatures(e, t, r);
                            }
                        }, i.prototype.add = function(e, t, r, o) {
                            if (/ss\d\d/.test(e)) return this.addSingle(e, t, r, o);
                            switch(e){
                                case "aalt":
                                case "salt":
                                    return "number" == typeof t.by ? this.addSingle(e, t, r, o) : this.addAlternate(e, t, r, o);
                                case "dlig":
                                case "liga":
                                case "rlig":
                                    return this.addLigature(e, t, r, o);
                            }
                        };
                        var It = {
                            getPath: Rt,
                            parse: function(e, t, r, o) {
                                for(var n = new p.GlyphSet(o), s = 0; s < r.length - 1; s += 1){
                                    var i = r[s];
                                    i !== r[s + 1] ? n.push(s, p.ttfGlyphLoader(o, s, At, e, t + i, Dt)) : n.push(s, p.glyphLoader(o, s));
                                }
                                return n;
                            }
                        };
                        function Ut(e) {
                            this.font = e, this.getCommands = function(e) {
                                return It.getPath(e).commands;
                            }, this._fpgmState = this._prepState = void 0, this._errorState = 0;
                        }
                        function Nt(e) {
                            return e;
                        }
                        function Ft(e) {
                            return Math.sign(e) * Math.round(Math.abs(e));
                        }
                        function Bt(e) {
                            return Math.sign(e) * Math.round(Math.abs(2 * e)) / 2;
                        }
                        function Gt(e) {
                            return Math.sign(e) * (Math.round(Math.abs(e) + .5) - .5);
                        }
                        function Vt(e) {
                            return Math.sign(e) * Math.ceil(Math.abs(e));
                        }
                        function zt(e) {
                            return Math.sign(e) * Math.floor(Math.abs(e));
                        }
                        function Ht(e) {
                            var t = this.srPeriod, r = this.srPhase, o = 1;
                            return e < 0 && (e = -e, o = -1), e += this.srThreshold - r, e = Math.trunc(e / t) * t, (e += r) < 0 ? r * o : e * o;
                        }
                        var x = {
                            x: 1,
                            y: 0,
                            axis: "x",
                            distance: function(e, t, r, o) {
                                return (r ? e.xo : e.x) - (o ? t.xo : t.x);
                            },
                            interpolate: function(e, t, r, o) {
                                var n, s, i, a, l, u, c;
                                if (!o || o === this) return n = e.xo - t.xo, s = e.xo - r.xo, l = t.x - t.xo, u = r.x - r.xo, 0 === (c = (i = Math.abs(n)) + (a = Math.abs(s))) ? void (e.x = e.xo + (l + u) / 2) : void (e.x = e.xo + (l * a + u * i) / c);
                                n = o.distance(e, t, !0, !0), s = o.distance(e, r, !0, !0), l = o.distance(t, t, !1, !0), u = o.distance(r, r, !1, !0), 0 === (c = (i = Math.abs(n)) + (a = Math.abs(s))) ? x.setRelative(e, e, (l + u) / 2, o, !0) : x.setRelative(e, e, (l * a + u * i) / c, o, !0);
                            },
                            normalSlope: Number.NEGATIVE_INFINITY,
                            setRelative: function(e, t, r, o, n) {
                                var s, i;
                                o && o !== this ? (s = n ? t.xo : t.x, i = n ? t.yo : t.y, s += r * o.x, i += r * o.y, e.x = s + (e.y - i) / o.normalSlope) : e.x = (n ? t.xo : t.x) + r;
                            },
                            slope: 0,
                            touch: function(e) {
                                e.xTouched = !0;
                            },
                            touched: function(e) {
                                return e.xTouched;
                            },
                            untouch: function(e) {
                                e.xTouched = !1;
                            }
                        }, M = {
                            x: 0,
                            y: 1,
                            axis: "y",
                            distance: function(e, t, r, o) {
                                return (r ? e.yo : e.y) - (o ? t.yo : t.y);
                            },
                            interpolate: function(e, t, r, o) {
                                var n, s, i, a, l, u, c;
                                if (!o || o === this) return n = e.yo - t.yo, s = e.yo - r.yo, l = t.y - t.yo, u = r.y - r.yo, 0 === (c = (i = Math.abs(n)) + (a = Math.abs(s))) ? void (e.y = e.yo + (l + u) / 2) : void (e.y = e.yo + (l * a + u * i) / c);
                                n = o.distance(e, t, !0, !0), s = o.distance(e, r, !0, !0), l = o.distance(t, t, !1, !0), u = o.distance(r, r, !1, !0), 0 === (c = (i = Math.abs(n)) + (a = Math.abs(s))) ? M.setRelative(e, e, (l + u) / 2, o, !0) : M.setRelative(e, e, (l * a + u * i) / c, o, !0);
                            },
                            normalSlope: 0,
                            setRelative: function(e, t, r, o, n) {
                                var s, i;
                                o && o !== this ? (s = n ? t.xo : t.x, i = n ? t.yo : t.y, s += r * o.x, i += r * o.y, e.y = i + o.normalSlope * (e.x - s)) : e.y = (n ? t.yo : t.y) + r;
                            },
                            slope: Number.POSITIVE_INFINITY,
                            touch: function(e) {
                                e.yTouched = !0;
                            },
                            touched: function(e) {
                                return e.yTouched;
                            },
                            untouch: function(e) {
                                e.yTouched = !1;
                            }
                        };
                        function Wt(e, t) {
                            this.x = e, this.y = t, this.axis = void 0, this.slope = t / e, this.normalSlope = -e / t, Object.freeze(this);
                        }
                        function qt(e, t) {
                            var r = Math.sqrt(e * e + t * t);
                            return t /= r, 1 === (e /= r) && 0 === t ? x : 0 === e && 1 === t ? M : new Wt(e, t);
                        }
                        function E(e, t, r, o) {
                            this.x = this.xo = Math.round(64 * e) / 64, this.y = this.yo = Math.round(64 * t) / 64, this.lastPointOfContour = r, this.onCurve = o, this.prevPointOnContour = void 0, this.nextPointOnContour = void 0, this.xTouched = !1, this.yTouched = !1, Object.preventExtensions(this);
                        }
                        Object.freeze(x), Object.freeze(M), Wt.prototype.distance = function(e, t, r, o) {
                            return this.x * x.distance(e, t, r, o) + this.y * M.distance(e, t, r, o);
                        }, Wt.prototype.interpolate = function(e, t, r, o) {
                            var n = o.distance(e, t, !0, !0), s = o.distance(e, r, !0, !0), t = o.distance(t, t, !1, !0), r = o.distance(r, r, !1, !0), n = Math.abs(n), s = Math.abs(s), i = n + s;
                            0 === i ? this.setRelative(e, e, (t + r) / 2, o, !0) : this.setRelative(e, e, (t * s + r * n) / i, o, !0);
                        }, Wt.prototype.setRelative = function(e, t, r, o, n) {
                            var s = n ? t.xo : t.x, n = n ? t.yo : t.y, t = s + r * (o = o || this).x, s = n + r * o.y, n = o.normalSlope, r = this.slope, o = e.x, i = e.y;
                            e.x = (r * o - n * t + s - i) / (r - n), e.y = r * (e.x - o) + i;
                        }, Wt.prototype.touch = function(e) {
                            e.xTouched = !0, e.yTouched = !0;
                        }, E.prototype.nextTouched = function(e) {
                            for(var t = this.nextPointOnContour; !e.touched(t) && t !== this;)t = t.nextPointOnContour;
                            return t;
                        }, E.prototype.prevTouched = function(e) {
                            for(var t = this.prevPointOnContour; !e.touched(t) && t !== this;)t = t.prevPointOnContour;
                            return t;
                        };
                        var Xt = Object.freeze(new E(0, 0)), Yt = {
                            cvCutIn: 17 / 16,
                            deltaBase: 9,
                            deltaShift: .125,
                            loop: 1,
                            minDis: 1,
                            autoFlip: !0
                        };
                        function T(e, t) {
                            switch(this.env = e, this.stack = [], this.prog = t, e){
                                case "glyf":
                                    this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;
                                case "prep":
                                    this.fv = this.pv = this.dpv = x, this.round = Ft;
                            }
                        }
                        function Zt(e) {
                            for(var t = e.tZone = new Array(e.gZone.length), r = 0; r < t.length; r++)t[r] = new E(0, 0);
                        }
                        function Qt(e, t) {
                            var r, o = e.prog, n = e.ip, s = 1;
                            do {
                                if (88 === (r = o[++n])) s++;
                                else if (89 === r) s--;
                                else if (64 === r) n += o[n + 1] + 1;
                                else if (65 === r) n += 2 * o[n + 1] + 1;
                                else if (176 <= r && r <= 183) n += r - 176 + 1;
                                else if (184 <= r && r <= 191) n += 2 * (r - 184 + 1);
                                else if (t && 1 === s && 27 === r) break;
                            }while (0 < s);
                            e.ip = n;
                        }
                        function Kt(e, t) {
                            j.DEBUG && console.log(t.step, "SVTCA[" + e.axis + "]"), t.fv = t.pv = t.dpv = e;
                        }
                        function Jt(e, t) {
                            j.DEBUG && console.log(t.step, "SPVTCA[" + e.axis + "]"), t.pv = t.dpv = e;
                        }
                        function $t(e, t) {
                            j.DEBUG && console.log(t.step, "SFVTCA[" + e.axis + "]"), t.fv = e;
                        }
                        function er(e, t) {
                            var r, o = t.stack, n = o.pop(), o = o.pop(), s = t.z2[n], i = t.z1[o];
                            j.DEBUG && console.log("SPVTL[" + e + "]", n, o), n = e ? (r = s.y - i.y, i.x - s.x) : (r = i.x - s.x, i.y - s.y), t.pv = t.dpv = qt(r, n);
                        }
                        function tr(e, t) {
                            var r, o = t.stack, n = o.pop(), o = o.pop(), s = t.z2[n], i = t.z1[o];
                            j.DEBUG && console.log("SFVTL[" + e + "]", n, o), n = e ? (r = s.y - i.y, i.x - s.x) : (r = i.x - s.x, i.y - s.y), t.fv = qt(r, n);
                        }
                        function rr(e) {
                            j.DEBUG && console.log(e.step, "POP[]"), e.stack.pop();
                        }
                        function or(e, t) {
                            var r = t.stack.pop(), o = t.z0[r], n = t.fv, s = t.pv, i = (j.DEBUG && console.log(t.step, "MDAP[" + e + "]", r), s.distance(o, Xt));
                            e && (i = t.round(i)), n.setRelative(o, Xt, i, s), n.touch(o), t.rp0 = t.rp1 = r;
                        }
                        function nr(e, t) {
                            var r, o, n, s = t.z2, i = s.length - 2;
                            j.DEBUG && console.log(t.step, "IUP[" + e.axis + "]");
                            for(var a = 0; a < i; a++)r = s[a], e.touched(r) || (o = r.prevTouched(e)) !== r && (o === (n = r.nextTouched(e)) && e.setRelative(r, r, e.distance(o, o, !1, !0), e, !0), e.interpolate(r, o, n, e));
                        }
                        function sr(e, t) {
                            for(var r = t.stack, o = e ? t.rp1 : t.rp2, n = (e ? t.z0 : t.z1)[o], s = t.fv, i = t.pv, a = t.loop, l = t.z2; a--;){
                                var u = r.pop(), c = l[u], d = i.distance(n, n, !1, !0);
                                s.setRelative(c, c, d, i), s.touch(c), j.DEBUG && console.log(t.step, (1 < t.loop ? "loop " + (t.loop - a) + ": " : "") + "SHP[" + (e ? "rp1" : "rp2") + "]", u);
                            }
                            t.loop = 1;
                        }
                        function ir(e, t) {
                            for(var r = t.stack, o = e ? t.rp1 : t.rp2, n = (e ? t.z0 : t.z1)[o], s = t.fv, i = t.pv, o = r.pop(), a = t.z2[t.contours[o]], l = a, u = (j.DEBUG && console.log(t.step, "SHC[" + e + "]", o), i.distance(n, n, !1, !0)); l !== n && s.setRelative(l, l, u, i), (l = l.nextPointOnContour) !== a;);
                        }
                        function ar(e, t) {
                            var r, o, n = t.stack, s = e ? t.rp1 : t.rp2, s = (e ? t.z0 : t.z1)[s], i = t.fv, a = t.pv, n = n.pop();
                            switch(j.DEBUG && console.log(t.step, "SHZ[" + e + "]", n), n){
                                case 0:
                                    r = t.tZone;
                                    break;
                                case 1:
                                    r = t.gZone;
                                    break;
                                default:
                                    throw new Error("Invalid zone");
                            }
                            for(var l = a.distance(s, s, !1, !0), u = r.length - 2, c = 0; c < u; c++)o = r[c], i.setRelative(o, o, l, a);
                        }
                        function lr(e, t) {
                            var r = t.stack, o = r.pop() / 64, r = r.pop(), n = t.z1[r], s = t.z0[t.rp0], i = t.fv, a = t.pv;
                            i.setRelative(n, s, o, a), i.touch(n), j.DEBUG && console.log(t.step, "MSIRP[" + e + "]", o, r), t.rp1 = t.rp0, t.rp2 = r, e && (t.rp0 = r);
                        }
                        function ur(e, t) {
                            var r = t.stack, o = r.pop(), r = r.pop(), n = t.z0[r], s = t.fv, i = t.pv, a = t.cvt[o], o = (j.DEBUG && console.log(t.step, "MIAP[" + e + "]", o, "(", a, ")", r), i.distance(n, Xt));
                            e && (Math.abs(o - a) < t.cvCutIn && (o = a), o = t.round(o)), s.setRelative(n, Xt, o, i), 0 === t.zp0 && (n.xo = n.x, n.yo = n.y), s.touch(n), t.rp0 = t.rp1 = r;
                        }
                        function cr(e, t) {
                            var r = t.stack, o = r.pop(), n = t.z2[o];
                            j.DEBUG && console.log(t.step, "GC[" + e + "]", o), r.push(64 * t.dpv.distance(n, Xt, e, !1));
                        }
                        function dr(e, t) {
                            var r = t.stack, o = r.pop(), r = r.pop(), n = t.z1[o], s = t.z0[r], s = t.dpv.distance(s, n, e, e);
                            j.DEBUG && console.log(t.step, "MD[" + e + "]", o, r, "->", s), t.stack.push(Math.round(64 * s));
                        }
                        function fr(e, t) {
                            var r = t.stack, o = r.pop(), n = t.fv, s = t.pv, i = t.ppem, a = t.deltaBase + 16 * (e - 1), l = t.deltaShift, u = t.z0;
                            j.DEBUG && console.log(t.step, "DELTAP[" + e + "]", o, r);
                            for(var c = 0; c < o; c++){
                                var d = r.pop(), f = r.pop();
                                a + ((240 & f) >> 4) === i && (0 <= (f = (15 & f) - 8) && f++, j.DEBUG && console.log(t.step, "DELTAPFIX", d, "by", f * l), d = u[d], n.setRelative(d, d, f * l, s));
                            }
                        }
                        function hr(e, t) {
                            var r = t.stack, o = r.pop();
                            j.DEBUG && console.log(t.step, "ROUND[]"), r.push(64 * t.round(o / 64));
                        }
                        function pr(e, t) {
                            var r = t.stack, o = r.pop(), n = t.ppem, s = t.deltaBase + 16 * (e - 1), i = t.deltaShift;
                            j.DEBUG && console.log(t.step, "DELTAC[" + e + "]", o, r);
                            for(var a = 0; a < o; a++){
                                var l = r.pop(), u = r.pop();
                                s + ((240 & u) >> 4) === n && (0 <= (u = (15 & u) - 8) && u++, u = u * i, j.DEBUG && console.log(t.step, "DELTACFIX", l, "by", u), t.cvt[l] += u);
                            }
                        }
                        function mr(e, t) {
                            var r, o = t.stack, n = o.pop(), o = o.pop(), s = t.z2[n], i = t.z1[o];
                            j.DEBUG && console.log(t.step, "SDPVTL[" + e + "]", n, o), n = e ? (r = s.y - i.y, i.x - s.x) : (r = i.x - s.x, i.y - s.y), t.dpv = qt(r, n);
                        }
                        function C(e, t) {
                            var r = t.stack, o = t.prog, n = t.ip;
                            j.DEBUG && console.log(t.step, "PUSHB[" + e + "]");
                            for(var s = 0; s < e; s++)r.push(o[++n]);
                            t.ip = n;
                        }
                        function O(e, t) {
                            var r = t.ip, o = t.prog, n = t.stack;
                            j.DEBUG && console.log(t.ip, "PUSHW[" + e + "]");
                            for(var s = 0; s < e; s++){
                                var i = o[++r] << 8 | o[++r];
                                32768 & i && (i = -(1 + (65535 ^ i))), n.push(i);
                            }
                            t.ip = r;
                        }
                        function L(e, t, r, o, n, s) {
                            var i, a, l = s.stack, u = e && l.pop(), l = l.pop(), c = s.rp0, c = s.z0[c], d = s.z1[l], f = s.minDis, h = s.fv, p = s.dpv, m = i = p.distance(d, c, !0, !0), y = 0 <= m ? 1 : -1;
                            m = Math.abs(m), e && (a = s.cvt[u], o && Math.abs(m - a) < s.cvCutIn && (m = a)), r && m < f && (m = f), o && (m = s.round(m)), h.setRelative(d, c, y * m, p), h.touch(d), j.DEBUG && console.log(s.step, (e ? "MIRP[" : "MDRP[") + (t ? "M" : "m") + (r ? ">" : "_") + (o ? "R" : "_") + (0 === n ? "Gr" : 1 === n ? "Bl" : 2 === n ? "Wh" : "") + "]", e ? u + "(" + s.cvt[u] + "," + a + ")" : "", l, "(d =", i, "->", y * m, ")"), s.rp1 = s.rp0, s.rp2 = l, t && (s.rp0 = l);
                        }
                        Ut.prototype.exec = function(e, t) {
                            if ("number" != typeof t) throw new Error("Point size is not a number!");
                            if (!(2 < this._errorState)) {
                                var r = this.font, o = this._prepState;
                                if (!o || o.ppem !== t) {
                                    var n = this._fpgmState;
                                    if (!n) {
                                        T.prototype = Yt, (n = this._fpgmState = new T("fpgm", r.tables.fpgm)).funcs = [], n.font = r, j.DEBUG && (console.log("---EXEC FPGM---"), n.step = -1);
                                        try {
                                            vr(n);
                                        } catch (e) {
                                            return console.log("Hinting error in FPGM:" + e), void (this._errorState = 3);
                                        }
                                    }
                                    T.prototype = n, (o = this._prepState = new T("prep", r.tables.prep)).ppem = t;
                                    var s = r.tables.cvt;
                                    if (s) for(var i = o.cvt = new Array(s.length), a = t / r.unitsPerEm, l = 0; l < s.length; l++)i[l] = s[l] * a;
                                    else o.cvt = [];
                                    j.DEBUG && (console.log("---EXEC PREP---"), o.step = -1);
                                    try {
                                        vr(o);
                                    } catch (e) {
                                        this._errorState < 2 && console.log("Hinting error in PREP:" + e), this._errorState = 2;
                                    }
                                }
                                if (!(1 < this._errorState)) try {
                                    return yr(e, o);
                                } catch (e) {
                                    this._errorState < 1 && (console.log("Hinting error:" + e), console.log("Note: further hinting errors are silenced")), this._errorState = 1;
                                }
                            }
                        };
                        var yr = function(e, t) {
                            var r = t.ppem / t.font.unitsPerEm, o = r, n = e.components;
                            if (T.prototype = t, n) {
                                for(var s = t.font, i = [], a = [], l = 0; l < n.length; l++){
                                    var u = n[l], c = s.glyphs.get(u.glyphIndex), d = new T("glyf", c.instructions);
                                    j.DEBUG && (console.log("---EXEC COMP " + l + "---"), d.step = -1), gr(c, d, r, o);
                                    for(var f = Math.round(u.dx * r), h = Math.round(u.dy * o), p = d.gZone, m = d.contours, y = 0; y < p.length; y++){
                                        var g = p[y];
                                        g.xTouched = g.yTouched = !1, g.xo = g.x = g.x + f, g.yo = g.y = g.y + h;
                                    }
                                    var v = i.length;
                                    i.push.apply(i, p);
                                    for(var b = 0; b < m.length; b++)a.push(m[b] + v);
                                }
                                e.instructions && !d.inhibitGridFit && ((d = new T("glyf", e.instructions)).gZone = d.z0 = d.z1 = d.z2 = i, d.contours = a, i.push(new E(0, 0), new E(Math.round(e.advanceWidth * r), 0)), j.DEBUG && (console.log("---EXEC COMPOSITE---"), d.step = -1), vr(d), i.length -= 2);
                            } else d = new T("glyf", e.instructions), j.DEBUG && (console.log("---EXEC GLYPH---"), d.step = -1), gr(e, d, r, o), i = d.gZone;
                            return i;
                        }, gr = function(e, t, r, o) {
                            for(var n, s, i, a = e.points || [], l = a.length, u = t.gZone = t.z0 = t.z1 = t.z2 = [], c = t.contours = [], d = 0; d < l; d++)n = a[d], u[d] = new E(n.x * r, n.y * o, n.lastPointOfContour, n.onCurve);
                            for(var f = 0; f < l; f++)n = u[f], s || (s = n, c.push(f)), n.lastPointOfContour ? ((n.nextPointOnContour = s).prevPointOnContour = n, s = void 0) : (i = u[f + 1], (n.nextPointOnContour = i).prevPointOnContour = n);
                            if (!t.inhibitGridFit) {
                                if (j.DEBUG) {
                                    console.log("PROCESSING GLYPH", t.stack);
                                    for(var h = 0; h < l; h++)console.log(h, u[h].x, u[h].y);
                                }
                                if (u.push(new E(0, 0), new E(Math.round(e.advanceWidth * r), 0)), vr(t), u.length -= 2, j.DEBUG) {
                                    console.log("FINISHED GLYPH", t.stack);
                                    for(var p = 0; p < l; p++)console.log(p, u[p].x, u[p].y);
                                }
                            }
                        }, vr = function(e) {
                            var t = e.prog;
                            if (t) {
                                var r, o = t.length;
                                for(e.ip = 0; e.ip < o; e.ip++){
                                    if (j.DEBUG && e.step++, !(r = br[t[e.ip]])) throw new Error("unknown instruction: 0x" + Number(t[e.ip]).toString(16));
                                    r(e);
                                }
                            }
                        }, br = [
                            Kt.bind(void 0, M),
                            Kt.bind(void 0, x),
                            Jt.bind(void 0, M),
                            Jt.bind(void 0, x),
                            $t.bind(void 0, M),
                            $t.bind(void 0, x),
                            er.bind(void 0, 0),
                            er.bind(void 0, 1),
                            tr.bind(void 0, 0),
                            tr.bind(void 0, 1),
                            function(e) {
                                var t = (r = e.stack).pop(), r = r.pop();
                                j.DEBUG && console.log(e.step, "SPVFS[]", t, r), e.pv = e.dpv = qt(r, t);
                            },
                            function(e) {
                                var t = (r = e.stack).pop(), r = r.pop();
                                j.DEBUG && console.log(e.step, "SPVFS[]", t, r), e.fv = qt(r, t);
                            },
                            function(e) {
                                var t = e.stack, r = e.pv;
                                j.DEBUG && console.log(e.step, "GPV[]"), t.push(16384 * r.x), t.push(16384 * r.y);
                            },
                            function(e) {
                                var t = e.stack, r = e.fv;
                                j.DEBUG && console.log(e.step, "GFV[]"), t.push(16384 * r.x), t.push(16384 * r.y);
                            },
                            function(e) {
                                e.fv = e.pv, j.DEBUG && console.log(e.step, "SFVTPV[]");
                            },
                            function(e) {
                                var t = (s = e.stack).pop(), r = s.pop(), o = s.pop(), n = s.pop(), s = s.pop(), i = e.z0, a = e.z1, l = i[t], i = i[r], u = a[o], a = a[n], e = e.z2[s], t = (j.DEBUG && console.log("ISECT[], ", t, r, o, n, s), l.x), r = l.y, o = i.x, n = i.y, s = u.x, l = u.y, i = a.x, u = a.y, a = (t - o) * (l - u) - (r - n) * (s - i), c = t * n - r * o, d = s * u - l * i;
                                e.x = (c * (s - i) - d * (t - o)) / a, e.y = (c * (l - u) - d * (r - n)) / a;
                            },
                            function(e) {
                                e.rp0 = e.stack.pop(), j.DEBUG && console.log(e.step, "SRP0[]", e.rp0);
                            },
                            function(e) {
                                e.rp1 = e.stack.pop(), j.DEBUG && console.log(e.step, "SRP1[]", e.rp1);
                            },
                            function(e) {
                                e.rp2 = e.stack.pop(), j.DEBUG && console.log(e.step, "SRP2[]", e.rp2);
                            },
                            function(e) {
                                var t = e.stack.pop();
                                switch(j.DEBUG && console.log(e.step, "SZP0[]", t), e.zp0 = t){
                                    case 0:
                                        e.tZone || Zt(e), e.z0 = e.tZone;
                                        break;
                                    case 1:
                                        e.z0 = e.gZone;
                                        break;
                                    default:
                                        throw new Error("Invalid zone pointer");
                                }
                            },
                            function(e) {
                                var t = e.stack.pop();
                                switch(j.DEBUG && console.log(e.step, "SZP1[]", t), e.zp1 = t){
                                    case 0:
                                        e.tZone || Zt(e), e.z1 = e.tZone;
                                        break;
                                    case 1:
                                        e.z1 = e.gZone;
                                        break;
                                    default:
                                        throw new Error("Invalid zone pointer");
                                }
                            },
                            function(e) {
                                var t = e.stack.pop();
                                switch(j.DEBUG && console.log(e.step, "SZP2[]", t), e.zp2 = t){
                                    case 0:
                                        e.tZone || Zt(e), e.z2 = e.tZone;
                                        break;
                                    case 1:
                                        e.z2 = e.gZone;
                                        break;
                                    default:
                                        throw new Error("Invalid zone pointer");
                                }
                            },
                            function(e) {
                                var t = e.stack.pop();
                                switch(j.DEBUG && console.log(e.step, "SZPS[]", t), e.zp0 = e.zp1 = e.zp2 = t){
                                    case 0:
                                        e.tZone || Zt(e), e.z0 = e.z1 = e.z2 = e.tZone;
                                        break;
                                    case 1:
                                        e.z0 = e.z1 = e.z2 = e.gZone;
                                        break;
                                    default:
                                        throw new Error("Invalid zone pointer");
                                }
                            },
                            function(e) {
                                e.loop = e.stack.pop(), j.DEBUG && console.log(e.step, "SLOOP[]", e.loop);
                            },
                            function(e) {
                                j.DEBUG && console.log(e.step, "RTG[]"), e.round = Ft;
                            },
                            function(e) {
                                j.DEBUG && console.log(e.step, "RTHG[]"), e.round = Gt;
                            },
                            function(e) {
                                var t = e.stack.pop();
                                j.DEBUG && console.log(e.step, "SMD[]", t), e.minDis = t / 64;
                            },
                            function(e) {
                                j.DEBUG && console.log(e.step, "ELSE[]"), Qt(e, !1);
                            },
                            function(e) {
                                var t = e.stack.pop();
                                j.DEBUG && console.log(e.step, "JMPR[]", t), e.ip += t - 1;
                            },
                            function(e) {
                                var t = e.stack.pop();
                                j.DEBUG && console.log(e.step, "SCVTCI[]", t), e.cvCutIn = t / 64;
                            },
                            void 0,
                            void 0,
                            function(e) {
                                var t = e.stack;
                                j.DEBUG && console.log(e.step, "DUP[]"), t.push(t[t.length - 1]);
                            },
                            rr,
                            function(e) {
                                j.DEBUG && console.log(e.step, "CLEAR[]"), e.stack.length = 0;
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "SWAP[]"), t.push(r), t.push(o);
                            },
                            function(e) {
                                var t = e.stack;
                                j.DEBUG && console.log(e.step, "DEPTH[]"), t.push(t.length);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop();
                                j.DEBUG && console.log(e.step, "CINDEX[]", r), t.push(t[t.length - r]);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop();
                                j.DEBUG && console.log(e.step, "MINDEX[]", r), t.push(t.splice(t.length - r, 1)[0]);
                            },
                            void 0,
                            void 0,
                            void 0,
                            function(e) {
                                var t = (o = e.stack).pop(), r = o.pop(), o = (j.DEBUG && console.log(e.step, "LOOPCALL[]", t, r), e.ip), n = e.prog;
                                e.prog = e.funcs[t];
                                for(var s = 0; s < r; s++)vr(e), j.DEBUG && console.log(++e.step, s + 1 < r ? "next loopcall" : "done loopcall", s);
                                e.ip = o, e.prog = n;
                            },
                            function(e) {
                                var t = e.stack.pop(), r = (j.DEBUG && console.log(e.step, "CALL[]", t), e.ip), o = e.prog;
                                e.prog = e.funcs[t], vr(e), e.ip = r, e.prog = o, j.DEBUG && console.log(++e.step, "returning from", t);
                            },
                            function(e) {
                                if ("fpgm" !== e.env) throw new Error("FDEF not allowed here");
                                var t = e.stack, r = e.prog, o = e.ip, t = t.pop(), n = o;
                                for(j.DEBUG && console.log(e.step, "FDEF[]", t); 45 !== r[++o];);
                                e.ip = o, e.funcs[t] = r.slice(n + 1, o);
                            },
                            void 0,
                            or.bind(void 0, 0),
                            or.bind(void 0, 1),
                            nr.bind(void 0, M),
                            nr.bind(void 0, x),
                            sr.bind(void 0, 0),
                            sr.bind(void 0, 1),
                            ir.bind(void 0, 0),
                            ir.bind(void 0, 1),
                            ar.bind(void 0, 0),
                            ar.bind(void 0, 1),
                            function(e) {
                                for(var t = e.stack, r = e.loop, o = e.fv, n = t.pop() / 64, s = e.z2; r--;){
                                    var i = t.pop(), a = s[i];
                                    j.DEBUG && console.log(e.step, (1 < e.loop ? "loop " + (e.loop - r) + ": " : "") + "SHPIX[]", i, n), o.setRelative(a, a, n), o.touch(a);
                                }
                                e.loop = 1;
                            },
                            function(e) {
                                for(var t = e.stack, r = e.rp1, o = e.rp2, n = e.loop, s = e.z0[r], i = e.z1[o], a = e.fv, l = e.dpv, u = e.z2; n--;){
                                    var c = t.pop(), d = u[c];
                                    j.DEBUG && console.log(e.step, (1 < e.loop ? "loop " + (e.loop - n) + ": " : "") + "IP[]", c, r, "<->", o), a.interpolate(d, s, i, l), a.touch(d);
                                }
                                e.loop = 1;
                            },
                            lr.bind(void 0, 0),
                            lr.bind(void 0, 1),
                            function(e) {
                                for(var t = e.stack, r = e.rp0, o = e.z0[r], n = e.loop, s = e.fv, i = e.pv, a = e.z1; n--;){
                                    var l = t.pop(), u = a[l];
                                    j.DEBUG && console.log(e.step, (1 < e.loop ? "loop " + (e.loop - n) + ": " : "") + "ALIGNRP[]", l), s.setRelative(u, o, 0, i), s.touch(u);
                                }
                                e.loop = 1;
                            },
                            function(e) {
                                j.DEBUG && console.log(e.step, "RTDG[]"), e.round = Bt;
                            },
                            ur.bind(void 0, 0),
                            ur.bind(void 0, 1),
                            function(e) {
                                var t = e.prog, r = e.ip, o = e.stack, n = t[++r];
                                j.DEBUG && console.log(e.step, "NPUSHB[]", n);
                                for(var s = 0; s < n; s++)o.push(t[++r]);
                                e.ip = r;
                            },
                            function(e) {
                                var t = e.ip, r = e.prog, o = e.stack, n = r[++t];
                                j.DEBUG && console.log(e.step, "NPUSHW[]", n);
                                for(var s = 0; s < n; s++){
                                    var i = r[++t] << 8 | r[++t];
                                    32768 & i && (i = -(1 + (65535 ^ i))), o.push(i);
                                }
                                e.ip = t;
                            },
                            function(e) {
                                var t = e.stack, r = (r = e.store) || (e.store = []), o = t.pop(), t = t.pop();
                                j.DEBUG && console.log(e.step, "WS", o, t), r[t] = o;
                            },
                            function(e) {
                                var t = e.stack, r = e.store, o = t.pop(), e = (j.DEBUG && console.log(e.step, "RS", o), r && r[o] || 0);
                                t.push(e);
                            },
                            function(e) {
                                var t = (r = e.stack).pop(), r = r.pop();
                                j.DEBUG && console.log(e.step, "WCVTP", t, r), e.cvt[r] = t / 64;
                            },
                            function(e) {
                                var t = e.stack, r = t.pop();
                                j.DEBUG && console.log(e.step, "RCVT", r), t.push(64 * e.cvt[r]);
                            },
                            cr.bind(void 0, 0),
                            cr.bind(void 0, 1),
                            void 0,
                            dr.bind(void 0, 0),
                            dr.bind(void 0, 1),
                            function(e) {
                                j.DEBUG && console.log(e.step, "MPPEM[]"), e.stack.push(e.ppem);
                            },
                            void 0,
                            function(e) {
                                j.DEBUG && console.log(e.step, "FLIPON[]"), e.autoFlip = !0;
                            },
                            void 0,
                            void 0,
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "LT[]", r, o), t.push(o < r ? 1 : 0);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "LTEQ[]", r, o), t.push(o <= r ? 1 : 0);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "GT[]", r, o), t.push(r < o ? 1 : 0);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "GTEQ[]", r, o), t.push(r <= o ? 1 : 0);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "EQ[]", r, o), t.push(r === o ? 1 : 0);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "NEQ[]", r, o), t.push(r !== o ? 1 : 0);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop();
                                j.DEBUG && console.log(e.step, "ODD[]", r), t.push(Math.trunc(r) % 2 ? 1 : 0);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop();
                                j.DEBUG && console.log(e.step, "EVEN[]", r), t.push(Math.trunc(r) % 2 ? 0 : 1);
                            },
                            function(e) {
                                var t = e.stack.pop();
                                j.DEBUG && console.log(e.step, "IF[]", t), t || (Qt(e, !0), j.DEBUG && console.log(e.step, "EIF[]"));
                            },
                            function(e) {
                                j.DEBUG && console.log(e.step, "EIF[]");
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "AND[]", r, o), t.push(r && o ? 1 : 0);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "OR[]", r, o), t.push(r || o ? 1 : 0);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop();
                                j.DEBUG && console.log(e.step, "NOT[]", r), t.push(r ? 0 : 1);
                            },
                            fr.bind(void 0, 1),
                            function(e) {
                                var t = e.stack.pop();
                                j.DEBUG && console.log(e.step, "SDB[]", t), e.deltaBase = t;
                            },
                            function(e) {
                                var t = e.stack.pop();
                                j.DEBUG && console.log(e.step, "SDS[]", t), e.deltaShift = Math.pow(.5, t);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "ADD[]", r, o), t.push(o + r);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "SUB[]", r, o), t.push(o - r);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "DIV[]", r, o), t.push(64 * o / r);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "MUL[]", r, o), t.push(o * r / 64);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop();
                                j.DEBUG && console.log(e.step, "ABS[]", r), t.push(Math.abs(r));
                            },
                            function(e) {
                                var t = e.stack, r = t.pop();
                                j.DEBUG && console.log(e.step, "NEG[]", r), t.push(-r);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop();
                                j.DEBUG && console.log(e.step, "FLOOR[]", r), t.push(64 * Math.floor(r / 64));
                            },
                            function(e) {
                                var t = e.stack, r = t.pop();
                                j.DEBUG && console.log(e.step, "CEILING[]", r), t.push(64 * Math.ceil(r / 64));
                            },
                            hr.bind(void 0, 0),
                            hr.bind(void 0, 1),
                            hr.bind(void 0, 2),
                            hr.bind(void 0, 3),
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            function(e) {
                                var t = (r = e.stack).pop(), r = r.pop();
                                j.DEBUG && console.log(e.step, "WCVTF[]", t, r), e.cvt[r] = t * e.ppem / e.font.unitsPerEm;
                            },
                            fr.bind(void 0, 2),
                            fr.bind(void 0, 3),
                            pr.bind(void 0, 1),
                            pr.bind(void 0, 2),
                            pr.bind(void 0, 3),
                            function(e) {
                                var t, r = e.stack.pop();
                                switch(j.DEBUG && console.log(e.step, "SROUND[]", r), e.round = Ht, 192 & r){
                                    case 0:
                                        t = .5;
                                        break;
                                    case 64:
                                        t = 1;
                                        break;
                                    case 128:
                                        t = 2;
                                        break;
                                    default:
                                        throw new Error("invalid SROUND value");
                                }
                                switch(e.srPeriod = t, 48 & r){
                                    case 0:
                                        e.srPhase = 0;
                                        break;
                                    case 16:
                                        e.srPhase = .25 * t;
                                        break;
                                    case 32:
                                        e.srPhase = .5 * t;
                                        break;
                                    case 48:
                                        e.srPhase = .75 * t;
                                        break;
                                    default:
                                        throw new Error("invalid SROUND value");
                                }
                                e.srThreshold = 0 === (r &= 15) ? 0 : (r / 8 - .5) * t;
                            },
                            function(e) {
                                var t, r = e.stack.pop();
                                switch(j.DEBUG && console.log(e.step, "S45ROUND[]", r), e.round = Ht, 192 & r){
                                    case 0:
                                        t = Math.sqrt(2) / 2;
                                        break;
                                    case 64:
                                        t = Math.sqrt(2);
                                        break;
                                    case 128:
                                        t = 2 * Math.sqrt(2);
                                        break;
                                    default:
                                        throw new Error("invalid S45ROUND value");
                                }
                                switch(e.srPeriod = t, 48 & r){
                                    case 0:
                                        e.srPhase = 0;
                                        break;
                                    case 16:
                                        e.srPhase = .25 * t;
                                        break;
                                    case 32:
                                        e.srPhase = .5 * t;
                                        break;
                                    case 48:
                                        e.srPhase = .75 * t;
                                        break;
                                    default:
                                        throw new Error("invalid S45ROUND value");
                                }
                                e.srThreshold = 0 === (r &= 15) ? 0 : (r / 8 - .5) * t;
                            },
                            void 0,
                            void 0,
                            function(e) {
                                j.DEBUG && console.log(e.step, "ROFF[]"), e.round = Nt;
                            },
                            void 0,
                            function(e) {
                                j.DEBUG && console.log(e.step, "RUTG[]"), e.round = Vt;
                            },
                            function(e) {
                                j.DEBUG && console.log(e.step, "RDTG[]"), e.round = zt;
                            },
                            rr,
                            rr,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            function(e) {
                                var t = e.stack.pop();
                                j.DEBUG && console.log(e.step, "SCANCTRL[]", t);
                            },
                            mr.bind(void 0, 0),
                            mr.bind(void 0, 1),
                            function(e) {
                                var t = e.stack, r = t.pop(), o = 0;
                                j.DEBUG && console.log(e.step, "GETINFO[]", r), 1 & r && (o = 35), 32 & r && (o |= 4096), t.push(o);
                            },
                            void 0,
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop(), n = t.pop();
                                j.DEBUG && console.log(e.step, "ROLL[]"), t.push(o), t.push(r), t.push(n);
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "MAX[]", r, o), t.push(Math.max(o, r));
                            },
                            function(e) {
                                var t = e.stack, r = t.pop(), o = t.pop();
                                j.DEBUG && console.log(e.step, "MIN[]", r, o), t.push(Math.min(o, r));
                            },
                            function(e) {
                                var t = e.stack.pop();
                                j.DEBUG && console.log(e.step, "SCANTYPE[]", t);
                            },
                            function(e) {
                                var t = e.stack.pop(), r = e.stack.pop();
                                switch(j.DEBUG && console.log(e.step, "INSTCTRL[]", t, r), t){
                                    case 1:
                                        return void (e.inhibitGridFit = !!r);
                                    case 2:
                                        return void (e.ignoreCvt = !!r);
                                    default:
                                        throw new Error("invalid INSTCTRL[] selector");
                                }
                            },
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            C.bind(void 0, 1),
                            C.bind(void 0, 2),
                            C.bind(void 0, 3),
                            C.bind(void 0, 4),
                            C.bind(void 0, 5),
                            C.bind(void 0, 6),
                            C.bind(void 0, 7),
                            C.bind(void 0, 8),
                            O.bind(void 0, 1),
                            O.bind(void 0, 2),
                            O.bind(void 0, 3),
                            O.bind(void 0, 4),
                            O.bind(void 0, 5),
                            O.bind(void 0, 6),
                            O.bind(void 0, 7),
                            O.bind(void 0, 8),
                            L.bind(void 0, 0, 0, 0, 0, 0),
                            L.bind(void 0, 0, 0, 0, 0, 1),
                            L.bind(void 0, 0, 0, 0, 0, 2),
                            L.bind(void 0, 0, 0, 0, 0, 3),
                            L.bind(void 0, 0, 0, 0, 1, 0),
                            L.bind(void 0, 0, 0, 0, 1, 1),
                            L.bind(void 0, 0, 0, 0, 1, 2),
                            L.bind(void 0, 0, 0, 0, 1, 3),
                            L.bind(void 0, 0, 0, 1, 0, 0),
                            L.bind(void 0, 0, 0, 1, 0, 1),
                            L.bind(void 0, 0, 0, 1, 0, 2),
                            L.bind(void 0, 0, 0, 1, 0, 3),
                            L.bind(void 0, 0, 0, 1, 1, 0),
                            L.bind(void 0, 0, 0, 1, 1, 1),
                            L.bind(void 0, 0, 0, 1, 1, 2),
                            L.bind(void 0, 0, 0, 1, 1, 3),
                            L.bind(void 0, 0, 1, 0, 0, 0),
                            L.bind(void 0, 0, 1, 0, 0, 1),
                            L.bind(void 0, 0, 1, 0, 0, 2),
                            L.bind(void 0, 0, 1, 0, 0, 3),
                            L.bind(void 0, 0, 1, 0, 1, 0),
                            L.bind(void 0, 0, 1, 0, 1, 1),
                            L.bind(void 0, 0, 1, 0, 1, 2),
                            L.bind(void 0, 0, 1, 0, 1, 3),
                            L.bind(void 0, 0, 1, 1, 0, 0),
                            L.bind(void 0, 0, 1, 1, 0, 1),
                            L.bind(void 0, 0, 1, 1, 0, 2),
                            L.bind(void 0, 0, 1, 1, 0, 3),
                            L.bind(void 0, 0, 1, 1, 1, 0),
                            L.bind(void 0, 0, 1, 1, 1, 1),
                            L.bind(void 0, 0, 1, 1, 1, 2),
                            L.bind(void 0, 0, 1, 1, 1, 3),
                            L.bind(void 0, 1, 0, 0, 0, 0),
                            L.bind(void 0, 1, 0, 0, 0, 1),
                            L.bind(void 0, 1, 0, 0, 0, 2),
                            L.bind(void 0, 1, 0, 0, 0, 3),
                            L.bind(void 0, 1, 0, 0, 1, 0),
                            L.bind(void 0, 1, 0, 0, 1, 1),
                            L.bind(void 0, 1, 0, 0, 1, 2),
                            L.bind(void 0, 1, 0, 0, 1, 3),
                            L.bind(void 0, 1, 0, 1, 0, 0),
                            L.bind(void 0, 1, 0, 1, 0, 1),
                            L.bind(void 0, 1, 0, 1, 0, 2),
                            L.bind(void 0, 1, 0, 1, 0, 3),
                            L.bind(void 0, 1, 0, 1, 1, 0),
                            L.bind(void 0, 1, 0, 1, 1, 1),
                            L.bind(void 0, 1, 0, 1, 1, 2),
                            L.bind(void 0, 1, 0, 1, 1, 3),
                            L.bind(void 0, 1, 1, 0, 0, 0),
                            L.bind(void 0, 1, 1, 0, 0, 1),
                            L.bind(void 0, 1, 1, 0, 0, 2),
                            L.bind(void 0, 1, 1, 0, 0, 3),
                            L.bind(void 0, 1, 1, 0, 1, 0),
                            L.bind(void 0, 1, 1, 0, 1, 1),
                            L.bind(void 0, 1, 1, 0, 1, 2),
                            L.bind(void 0, 1, 1, 0, 1, 3),
                            L.bind(void 0, 1, 1, 1, 0, 0),
                            L.bind(void 0, 1, 1, 1, 0, 1),
                            L.bind(void 0, 1, 1, 1, 0, 2),
                            L.bind(void 0, 1, 1, 1, 0, 3),
                            L.bind(void 0, 1, 1, 1, 1, 0),
                            L.bind(void 0, 1, 1, 1, 1, 1),
                            L.bind(void 0, 1, 1, 1, 1, 2),
                            L.bind(void 0, 1, 1, 1, 1, 3)
                        ], jr = Array.from || function(e) {
                            return e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g) || [];
                        };
                        function k(e) {
                            (e = e || {}).empty || (_(e.familyName, "When creating a new Font object, familyName is required."), _(e.styleName, "When creating a new Font object, styleName is required."), _(e.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), _(e.ascender, "When creating a new Font object, ascender is required."), _(e.descender, "When creating a new Font object, descender is required."), _(e.descender < 0, "Descender should be negative (e.g. -512)."), this.names = {
                                fontFamily: {
                                    en: e.familyName || " "
                                },
                                fontSubfamily: {
                                    en: e.styleName || " "
                                },
                                fullName: {
                                    en: e.fullName || e.familyName + " " + e.styleName
                                },
                                postScriptName: {
                                    en: e.postScriptName || (e.familyName + e.styleName).replace(/\s/g, "")
                                },
                                designer: {
                                    en: e.designer || " "
                                },
                                designerURL: {
                                    en: e.designerURL || " "
                                },
                                manufacturer: {
                                    en: e.manufacturer || " "
                                },
                                manufacturerURL: {
                                    en: e.manufacturerURL || " "
                                },
                                license: {
                                    en: e.license || " "
                                },
                                licenseURL: {
                                    en: e.licenseURL || " "
                                },
                                version: {
                                    en: e.version || "Version 0.1"
                                },
                                description: {
                                    en: e.description || " "
                                },
                                copyright: {
                                    en: e.copyright || " "
                                },
                                trademark: {
                                    en: e.trademark || " "
                                }
                            }, this.unitsPerEm = e.unitsPerEm || 1e3, this.ascender = e.ascender, this.descender = e.descender, this.createdTimestamp = e.createdTimestamp, this.tables = {
                                os2: {
                                    usWeightClass: e.weightClass || this.usWeightClasses.MEDIUM,
                                    usWidthClass: e.widthClass || this.usWidthClasses.MEDIUM,
                                    fsSelection: e.fsSelection || this.fsSelectionValues.REGULAR
                                }
                            }), this.supported = !0, this.glyphs = new p.GlyphSet(this, e.glyphs || []), this.encoding = new Te(this), this.position = new Ct(this), this.substitution = new i(this), this.tables = this.tables || {}, Object.defineProperty(this, "hinting", {
                                get: function() {
                                    return this._hinting || ("truetype" === this.outlinesFormat ? this._hinting = new Ut(this) : void 0);
                                }
                            });
                        }
                        function _r(e, t) {
                            var r, o = JSON.stringify(e), n = 256;
                            for(r in t){
                                var s = parseInt(r);
                                if (s && !(s < 256)) {
                                    if (JSON.stringify(t[r]) === o) return s;
                                    n <= s && (n = s + 1);
                                }
                            }
                            return t[n] = e, n;
                        }
                        k.prototype.hasChar = function(e) {
                            return null !== this.encoding.charToGlyphIndex(e);
                        }, k.prototype.charToGlyphIndex = function(e) {
                            return this.encoding.charToGlyphIndex(e);
                        }, k.prototype.charToGlyph = function(e) {
                            e = this.charToGlyphIndex(e);
                            return this.glyphs.get(e) || this.glyphs.get(0);
                        }, k.prototype.stringToGlyphs = function(e, t) {
                            t = t || this.defaultRenderOptions;
                            for(var r = jr(e), o = [], n = 0; n < r.length; n += 1){
                                var s = r[n];
                                o.push(this.charToGlyphIndex(s));
                            }
                            var i = o.length;
                            if (t.features) {
                                var e = t.script || this.substitution.getDefaultScriptName(), a = [];
                                t.features.liga && (a = a.concat(this.substitution.getFeature("liga", e, t.language))), t.features.rlig && (a = a.concat(this.substitution.getFeature("rlig", e, t.language)));
                                for(var l = 0; l < i; l += 1)for(var u = 0; u < a.length; u++){
                                    for(var c = a[u], d = c.sub, f = d.length, h = 0; h < f && d[h] === o[l + h];)h++;
                                    h === f && (o.splice(l, f, c.by), i = i - f + 1);
                                }
                            }
                            for(var p = new Array(i), m = this.glyphs.get(0), y = 0; y < i; y += 1)p[y] = this.glyphs.get(o[y]) || m;
                            return p;
                        }, k.prototype.nameToGlyphIndex = function(e) {
                            return this.glyphNames.nameToGlyphIndex(e);
                        }, k.prototype.nameToGlyph = function(e) {
                            e = this.nameToGlyphIndex(e);
                            return this.glyphs.get(e) || this.glyphs.get(0);
                        }, k.prototype.glyphIndexToName = function(e) {
                            return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(e) : "";
                        }, k.prototype.getKerningValue = function(e, t) {
                            e = e.index || e, t = t.index || t;
                            var r = this.position.defaultKerningTables;
                            return r ? this.position.getKerningValue(r, e, t) : this.kerningPairs[e + "," + t] || 0;
                        }, k.prototype.defaultRenderOptions = {
                            kerning: !0,
                            features: {
                                liga: !0,
                                rlig: !0
                            }
                        }, k.prototype.forEachGlyph = function(e, t, r, o, n, s) {
                            t = void 0 !== t ? t : 0, r = void 0 !== r ? r : 0, n = n || this.defaultRenderOptions;
                            var i, a = 1 / this.unitsPerEm * (o = void 0 !== o ? o : 72), l = this.stringToGlyphs(e, n);
                            n.kerning && (e = n.script || this.position.getDefaultScriptName(), i = this.position.getKerningTables(e, n.language));
                            for(var u = 0; u < l.length; u += 1){
                                var c = l[u];
                                s.call(this, c, t, r, o, n), c.advanceWidth && (t += c.advanceWidth * a), n.kerning && u < l.length - 1 && (t += (i ? this.position.getKerningValue(i, c.index, l[u + 1].index) : this.getKerningValue(c, l[u + 1])) * a), n.letterSpacing ? t += n.letterSpacing * o : n.tracking && (t += n.tracking / 1e3 * o);
                            }
                            return t;
                        }, k.prototype.getPath = function(e, t, r, o, n) {
                            var s = new f;
                            return this.forEachGlyph(e, t, r, o, n, function(e, t, r, o) {
                                e = e.getPath(t, r, o, n, this);
                                s.extend(e);
                            }), s;
                        }, k.prototype.getPaths = function(e, t, r, o, n) {
                            var s = [];
                            return this.forEachGlyph(e, t, r, o, n, function(e, t, r, o) {
                                e = e.getPath(t, r, o, n, this);
                                s.push(e);
                            }), s;
                        }, k.prototype.getAdvanceWidth = function(e, t, r) {
                            return this.forEachGlyph(e, 0, 0, t, r, function() {});
                        }, k.prototype.draw = function(e, t, r, o, n, s) {
                            this.getPath(t, r, o, n, s).draw(e);
                        }, k.prototype.drawPoints = function(n, e, t, r, o, s) {
                            this.forEachGlyph(e, t, r, o, s, function(e, t, r, o) {
                                e.drawPoints(n, t, r, o);
                            });
                        }, k.prototype.drawMetrics = function(n, e, t, r, o, s) {
                            this.forEachGlyph(e, t, r, o, s, function(e, t, r, o) {
                                e.drawMetrics(n, t, r, o);
                            });
                        }, k.prototype.getEnglishName = function(e) {
                            e = this.names[e];
                            if (e) return e.en;
                        }, k.prototype.validate = function() {
                            var t = this;
                            function e(e) {
                                e = t.getEnglishName(e);
                                e && e.trim().length;
                            }
                            e("fontFamily"), e("weightName"), e("manufacturer"), e("copyright"), e("version"), this.unitsPerEm;
                        }, k.prototype.toTables = function() {
                            return wt.fontToTable(this);
                        }, k.prototype.toBuffer = function() {
                            return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."), this.toArrayBuffer();
                        }, k.prototype.toArrayBuffer = function() {
                            for(var e = this.toTables().encode(), t = new ArrayBuffer(e.length), r = new Uint8Array(t), o = 0; o < e.length; o++)r[o] = e[o];
                            return t;
                        }, k.prototype.download = function(t) {
                            var e = this.getEnglishName("fontFamily"), r = this.getEnglishName("fontSubfamily"), o = (t = t || e.replace(/\s/g, "") + "-" + r + ".otf", this.toArrayBuffer());
                            "undefined" != typeof window ? (window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem, window.requestFileSystem(window.TEMPORARY, o.byteLength, function(e) {
                                e.root.getFile(t, {
                                    create: !0
                                }, function(r) {
                                    r.createWriter(function(e) {
                                        var t = new DataView(o), t = new Blob([
                                            t
                                        ], {
                                            type: "font/opentype"
                                        });
                                        e.write(t), e.addEventListener("writeend", function() {
                                            location.href = r.toURL();
                                        }, !1);
                                    });
                                });
                            }, function(e) {
                                throw new Error(e.name + ": " + e.message);
                            })) : (e = Ar("fs"), r = function(e) {
                                for(var t = new kr(e.byteLength), r = new Uint8Array(e), o = 0; o < t.length; ++o)t[o] = r[o];
                                return t;
                            }(o), e.writeFileSync(t, r));
                        }, k.prototype.fsSelectionValues = {
                            ITALIC: 1,
                            UNDERSCORE: 2,
                            NEGATIVE: 4,
                            OUTLINED: 8,
                            STRIKEOUT: 16,
                            BOLD: 32,
                            REGULAR: 64,
                            USER_TYPO_METRICS: 128,
                            WWS: 256,
                            OBLIQUE: 512
                        }, k.prototype.usWidthClasses = {
                            ULTRA_CONDENSED: 1,
                            EXTRA_CONDENSED: 2,
                            CONDENSED: 3,
                            SEMI_CONDENSED: 4,
                            MEDIUM: 5,
                            SEMI_EXPANDED: 6,
                            EXPANDED: 7,
                            EXTRA_EXPANDED: 8,
                            ULTRA_EXPANDED: 9
                        }, k.prototype.usWeightClasses = {
                            THIN: 100,
                            EXTRA_LIGHT: 200,
                            LIGHT: 300,
                            NORMAL: 400,
                            MEDIUM: 500,
                            SEMI_BOLD: 600,
                            BOLD: 700,
                            EXTRA_BOLD: 800,
                            BLACK: 900
                        };
                        var xr = {
                            make: function(e, t) {
                                var r = new S.Table("fvar", [
                                    {
                                        name: "version",
                                        type: "ULONG",
                                        value: 65536
                                    },
                                    {
                                        name: "offsetToData",
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "countSizePairs",
                                        type: "USHORT",
                                        value: 2
                                    },
                                    {
                                        name: "axisCount",
                                        type: "USHORT",
                                        value: e.axes.length
                                    },
                                    {
                                        name: "axisSize",
                                        type: "USHORT",
                                        value: 20
                                    },
                                    {
                                        name: "instanceCount",
                                        type: "USHORT",
                                        value: e.instances.length
                                    },
                                    {
                                        name: "instanceSize",
                                        type: "USHORT",
                                        value: 4 + 4 * e.axes.length
                                    }
                                ]);
                                r.offsetToData = r.sizeOf();
                                for(var o, n, s, i = 0; i < e.axes.length; i++)r.fields = r.fields.concat((o = i, n = e.axes[i], s = t, s = _r(n.name, t), [
                                    {
                                        name: "tag_" + o,
                                        type: "TAG",
                                        value: n.tag
                                    },
                                    {
                                        name: "minValue_" + o,
                                        type: "FIXED",
                                        value: n.minValue << 16
                                    },
                                    {
                                        name: "defaultValue_" + o,
                                        type: "FIXED",
                                        value: n.defaultValue << 16
                                    },
                                    {
                                        name: "maxValue_" + o,
                                        type: "FIXED",
                                        value: n.maxValue << 16
                                    },
                                    {
                                        name: "flags_" + o,
                                        type: "USHORT",
                                        value: 0
                                    },
                                    {
                                        name: "nameID_" + o,
                                        type: "USHORT",
                                        value: s
                                    }
                                ]));
                                for(var a = 0; a < e.instances.length; a++)r.fields = r.fields.concat(function(e, t, r, o) {
                                    for(var n = [
                                        {
                                            name: "nameID_" + e,
                                            type: "USHORT",
                                            value: _r(t.name, o)
                                        },
                                        {
                                            name: "flags_" + e,
                                            type: "USHORT",
                                            value: 0
                                        }
                                    ], s = 0; s < r.length; ++s){
                                        var i = r[s].tag;
                                        n.push({
                                            name: "axis_" + e + " " + i,
                                            type: "FIXED",
                                            value: t.coordinates[i] << 16
                                        });
                                    }
                                    return n;
                                }(a, e.instances[a], e.axes, t));
                                return r;
                            },
                            parse: function(e, t, r) {
                                for(var o, n, s, i, a = new R.Parser(e, t), l = a.parseULong(), u = (P.argument(65536 === l, "Unsupported fvar table version."), a.parseOffset16()), c = (a.skip("uShort", 1), a.parseUShort()), d = a.parseUShort(), f = a.parseUShort(), h = a.parseUShort(), p = [], m = 0; m < c; m++)p.push((o = e, n = t + u + m * d, s = r, i = {}, o = new R.Parser(o, n), i.tag = o.parseTag(), i.minValue = o.parseFixed(), i.defaultValue = o.parseFixed(), i.maxValue = o.parseFixed(), o.skip("uShort", 1), i.name = s[o.parseUShort()] || {}, i));
                                for(var y = [], g = t + u + c * d, v = 0; v < f; v++)y.push(function(e, t, r, o) {
                                    var n = {}, s = new R.Parser(e, t);
                                    n.name = o[s.parseUShort()] || {}, s.skip("uShort", 1), n.coordinates = {};
                                    for(var i = 0; i < r.length; ++i)n.coordinates[r[i].tag] = s.parseFixed();
                                    return n;
                                }(e, g + v * h, p, r));
                                return {
                                    axes: p,
                                    instances: y
                                };
                            }
                        }, A = new Array(10);
                        A[1] = function() {
                            var e = this.offset + this.relativeOffset, t = this.parseUShort();
                            return 1 === t ? {
                                posFormat: 1,
                                coverage: this.parsePointer(u.coverage),
                                value: this.parseValueRecord()
                            } : 2 === t ? {
                                posFormat: 2,
                                coverage: this.parsePointer(u.coverage),
                                values: this.parseValueRecordList()
                            } : void P.assert(!1, "0x" + e.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.");
                        }, A[2] = function() {
                            var e, t, r, o, n = this.offset + this.relativeOffset, s = this.parseUShort(), n = (P.assert(1 === s || 2 === s, "0x" + n.toString(16) + ": GPOS lookup type 2 format must be 1 or 2."), this.parsePointer(u.coverage)), i = this.parseUShort(), a = this.parseUShort();
                            return 1 === s ? {
                                posFormat: s,
                                coverage: n,
                                valueFormat1: i,
                                valueFormat2: a,
                                pairSets: this.parseList(u.pointer(u.list(function() {
                                    return {
                                        secondGlyph: this.parseUShort(),
                                        value1: this.parseValueRecord(i),
                                        value2: this.parseValueRecord(a)
                                    };
                                })))
                            } : 2 === s ? (e = this.parsePointer(u.classDef), t = this.parsePointer(u.classDef), r = this.parseUShort(), o = this.parseUShort(), {
                                posFormat: s,
                                coverage: n,
                                valueFormat1: i,
                                valueFormat2: a,
                                classDef1: e,
                                classDef2: t,
                                class1Count: r,
                                class2Count: o,
                                classRecords: this.parseList(r, u.list(o, function() {
                                    return {
                                        value1: this.parseValueRecord(i),
                                        value2: this.parseValueRecord(a)
                                    };
                                }))
                            }) : void 0;
                        }, A[3] = function() {
                            return {
                                error: "GPOS Lookup 3 not supported"
                            };
                        }, A[4] = function() {
                            return {
                                error: "GPOS Lookup 4 not supported"
                            };
                        }, A[5] = function() {
                            return {
                                error: "GPOS Lookup 5 not supported"
                            };
                        }, A[6] = function() {
                            return {
                                error: "GPOS Lookup 6 not supported"
                            };
                        }, A[7] = function() {
                            return {
                                error: "GPOS Lookup 7 not supported"
                            };
                        }, A[8] = function() {
                            return {
                                error: "GPOS Lookup 8 not supported"
                            };
                        }, A[9] = function() {
                            return {
                                error: "GPOS Lookup 9 not supported"
                            };
                        };
                        var wr = new Array(10);
                        var Sr = {
                            parse: function(e, t) {
                                return t = (e = new u(e, t = t || 0)).parseVersion(1), P.argument(1 === t || 1.1 === t, "Unsupported GPOS table version " + t), 1 === t ? {
                                    version: t,
                                    scripts: e.parseScriptList(),
                                    features: e.parseFeatureList(),
                                    lookups: e.parseLookupList(A)
                                } : {
                                    version: t,
                                    scripts: e.parseScriptList(),
                                    features: e.parseFeatureList(),
                                    lookups: e.parseLookupList(A),
                                    variations: e.parseFeatureVariationsList()
                                };
                            },
                            make: function(e) {
                                return new S.Table("GPOS", [
                                    {
                                        name: "version",
                                        type: "ULONG",
                                        value: 65536
                                    },
                                    {
                                        name: "scripts",
                                        type: "TABLE",
                                        value: new S.ScriptList(e.scripts)
                                    },
                                    {
                                        name: "features",
                                        type: "TABLE",
                                        value: new S.FeatureList(e.features)
                                    },
                                    {
                                        name: "lookups",
                                        type: "TABLE",
                                        value: new S.LookupList(e.lookups, wr)
                                    }
                                ]);
                            }
                        };
                        var Mr = {
                            parse: function(e, t) {
                                if (e = new R.Parser(e, t), 0 === (t = e.parseUShort())) {
                                    var r = e, o = {}, n = (r.skip("uShort"), r.parseUShort()), s = (P.argument(0 === n, "Unsupported kern sub-table version."), r.skip("uShort", 2), r.parseUShort());
                                    r.skip("uShort", 3);
                                    for(var i = 0; i < s; i += 1){
                                        var a = r.parseUShort(), l = r.parseUShort(), u = r.parseShort();
                                        o[a + "," + l] = u;
                                    }
                                    return o;
                                }
                                if (1 !== t) throw new Error("Unsupported kern table version (" + t + ").");
                                var c = e, d = {}, n = (c.skip("uShort"), 1 < c.parseULong() && console.warn("Only the first kern subtable is supported."), c.skip("uLong"), 255 & c.parseUShort());
                                if (c.skip("uShort"), 0 == n) {
                                    var f = c.parseUShort();
                                    c.skip("uShort", 3);
                                    for(var h = 0; h < f; h += 1){
                                        var p = c.parseUShort(), m = c.parseUShort(), y = c.parseShort();
                                        d[p + "," + m] = y;
                                    }
                                }
                                return d;
                            }
                        };
                        var Er = {
                            parse: function(e, t, r, o) {
                                for(var n = new R.Parser(e, t), s = o ? n.parseUShort : n.parseULong, i = [], a = 0; a < r + 1; a += 1){
                                    var l = s.call(n);
                                    o && (l *= 2), i.push(l);
                                }
                                return i;
                            }
                        };
                        function Tr(e, r) {
                            Ar("fs").readFile(e, function(e, t) {
                                if (e) return r(e.message);
                                r(null, Lt(t));
                            });
                        }
                        function Cr(e, t) {
                            var r = new XMLHttpRequest;
                            r.open("get", e, !0), r.responseType = "arraybuffer", r.onload = function() {
                                return r.response ? t(null, r.response) : t("Font could not be loaded: " + r.statusText);
                            }, r.onerror = function() {
                                t("Font could not be loaded");
                            }, r.send();
                        }
                        function Or(e, t) {
                            for(var r = [], o = 12, n = 0; n < t; n += 1){
                                var s = R.getTag(e, o), i = R.getULong(e, o + 4), a = R.getULong(e, o + 8), l = R.getULong(e, o + 12);
                                r.push({
                                    tag: s,
                                    checksum: i,
                                    offset: a,
                                    length: l,
                                    compression: !1
                                }), o += 16;
                            }
                            return r;
                        }
                        function D(e, t) {
                            if ("WOFF" !== t.compression) return {
                                data: e,
                                offset: t.offset
                            };
                            var e = new Uint8Array(e.buffer, t.offset + 2, t.compressedLength - 2), r = new Uint8Array(t.length);
                            if (re(e, r), r.byteLength !== t.length) throw new Error("Decompression error: " + t.tag + " decompressed length doesn't match recorded length");
                            return {
                                data: new DataView(r.buffer, 0),
                                offset: 0
                            };
                        }
                        function Lr(e) {
                            var t, r, o, n, s, i, a, l, u, c, d, f, h, p, m = new k({
                                empty: !0
                            }), y = new DataView(e, 0), g = [], e = R.getTag(y, 0);
                            if (e === String.fromCharCode(0, 1, 0, 0) || "true" === e || "typ1" === e) m.outlinesFormat = "truetype", g = Or(y, o = R.getUShort(y, 4));
                            else if ("OTTO" === e) m.outlinesFormat = "cff", g = Or(y, o = R.getUShort(y, 4));
                            else {
                                if ("wOFF" !== e) throw new Error("Unsupported OpenType signature " + e);
                                var v = R.getTag(y, 4);
                                if (v === String.fromCharCode(0, 1, 0, 0)) m.outlinesFormat = "truetype";
                                else {
                                    if ("OTTO" !== v) throw new Error("Unsupported OpenType flavor " + e);
                                    m.outlinesFormat = "cff";
                                }
                                g = function(e, t) {
                                    for(var r = [], o = 44, n = 0; n < t; n += 1){
                                        var s = R.getTag(e, o), i = R.getULong(e, o + 4), a = R.getULong(e, o + 8), l = R.getULong(e, o + 12), u = void 0, u = a < l && "WOFF";
                                        r.push({
                                            tag: s,
                                            offset: i,
                                            compression: u,
                                            compressedLength: a,
                                            length: l
                                        }), o += 20;
                                    }
                                    return r;
                                }(y, o = R.getUShort(y, 12));
                            }
                            for(var b = 0; b < o; b += 1){
                                var j = g[b], _ = void 0;
                                switch(j.tag){
                                    case "cmap":
                                        _ = D(y, j), m.tables.cmap = we.parse(_.data, _.offset), m.encoding = new Ce(m.tables.cmap);
                                        break;
                                    case "cvt ":
                                        _ = D(y, j), p = new R.Parser(_.data, _.offset), m.tables.cvt = p.parseShortList(j.length / 2);
                                        break;
                                    case "fvar":
                                        s = j;
                                        break;
                                    case "fpgm":
                                        _ = D(y, j), p = new R.Parser(_.data, _.offset), m.tables.fpgm = p.parseByteList(j.length);
                                        break;
                                    case "head":
                                        _ = D(y, j), m.tables.head = Ze.parse(_.data, _.offset), m.unitsPerEm = m.tables.head.unitsPerEm, t = m.tables.head.indexToLocFormat;
                                        break;
                                    case "hhea":
                                        _ = D(y, j), m.tables.hhea = Qe.parse(_.data, _.offset), m.ascender = m.tables.hhea.ascender, m.descender = m.tables.hhea.descender, m.numberOfHMetrics = m.tables.hhea.numberOfHMetrics;
                                        break;
                                    case "hmtx":
                                        u = j;
                                        break;
                                    case "ltag":
                                        _ = D(y, j), r = Je.parse(_.data, _.offset);
                                        break;
                                    case "maxp":
                                        _ = D(y, j), m.tables.maxp = $e.parse(_.data, _.offset), m.numGlyphs = m.tables.maxp.numGlyphs;
                                        break;
                                    case "name":
                                        f = j;
                                        break;
                                    case "OS/2":
                                        _ = D(y, j), m.tables.os2 = ht.parse(_.data, _.offset);
                                        break;
                                    case "post":
                                        _ = D(y, j), m.tables.post = pt.parse(_.data, _.offset), m.glyphNames = new Le(m.tables.post);
                                        break;
                                    case "prep":
                                        _ = D(y, j), p = new R.Parser(_.data, _.offset), m.tables.prep = p.parseByteList(j.length);
                                        break;
                                    case "glyf":
                                        i = j;
                                        break;
                                    case "loca":
                                        d = j;
                                        break;
                                    case "CFF ":
                                        n = j;
                                        break;
                                    case "kern":
                                        c = j;
                                        break;
                                    case "GPOS":
                                        a = j;
                                        break;
                                    case "GSUB":
                                        l = j;
                                        break;
                                    case "meta":
                                        h = j;
                                }
                            }
                            v = D(y, f);
                            if (m.tables.name = dt.parse(v.data, v.offset, r), m.names = m.tables.name, i && d) {
                                e = 0 === t, v = D(y, d), v = Er.parse(v.data, v.offset, m.numGlyphs, e), e = D(y, i);
                                m.glyphs = It.parse(e.data, e.offset, v, m);
                            } else {
                                if (!n) throw new Error("Font doesn't contain TrueType or CFF outlines.");
                                e = D(y, n);
                                Ye.parse(e.data, e.offset, m);
                            }
                            for(var v = D(y, u), x = (Ke.parse(v.data, v.offset, m.numberOfHMetrics, m.numGlyphs, m.glyphs), m), w = x.tables.cmap.glyphIndexMap, S = Object.keys(w), M = 0; M < S.length; M += 1){
                                var E, T = S[M], C = w[T];
                                (E = x.glyphs.get(C)).addUnicode(parseInt(T));
                            }
                            for(var O = 0; O < x.glyphs.length; O += 1)E = x.glyphs.get(O), x.cffEncoding ? x.isCIDFont ? E.name = "gid" + O : E.name = x.cffEncoding.charset[O] : x.glyphNames.names && (E.name = x.glyphNames.glyphIndexToName(O));
                            return c ? (e = D(y, c), m.kerningPairs = Mr.parse(e.data, e.offset)) : m.kerningPairs = {}, a && (v = D(y, a), m.tables.gpos = Sr.parse(v.data, v.offset), m.position.init()), l && (e = D(y, l), m.tables.gsub = yt.parse(e.data, e.offset)), s && (v = D(y, s), m.tables.fvar = xr.parse(v.data, v.offset, m.names)), h && (e = D(y, h), m.tables.meta = gt.parse(e.data, e.offset), m.metas = m.tables.meta), m;
                        }
                        j.Font = k, j.Glyph = h, j.Path = f, j.BoundingBox = a, j._parse = R, j.parse = Lr, j.load = function(e, o) {
                            ("undefined" == typeof window ? Tr : Cr)(e, function(e, t) {
                                if (e) return o(e);
                                var r;
                                try {
                                    r = Lr(t);
                                } catch (e) {
                                    return o(e, null);
                                }
                                return o(null, r);
                            });
                        }, j.loadSync = function(e) {
                            return Lr(Lt(Ar("fs").readFileSync(e)));
                        }, Object.defineProperty(j, "__esModule", {
                            value: !0
                        });
                    }, "object" == typeof o && void 0 !== r ? t(o) : "function" == typeof s && s.amd ? s([
                        "exports"
                    ], t) : t(e.opentype = {});
                }).call(this, Ar("buffer").Buffer);
            },
            {
                buffer: 4,
                fs: 2
            }
        ],
        242: [
            function(e, t, u) {
                (function(n) {
                    function s(e, t) {
                        for(var r = 0, o = e.length - 1; 0 <= o; o--){
                            var n = e[o];
                            "." === n ? e.splice(o, 1) : ".." === n ? (e.splice(o, 1), r++) : r && (e.splice(o, 1), r--);
                        }
                        if (t) for(; r--;)e.unshift("..");
                        return e;
                    }
                    function i(e, t) {
                        if (e.filter) return e.filter(t);
                        for(var r = [], o = 0; o < e.length; o++)t(e[o], o, e) && r.push(e[o]);
                        return r;
                    }
                    u.resolve = function() {
                        for(var e = "", t = !1, r = arguments.length - 1; -1 <= r && !t; r--){
                            var o = 0 <= r ? arguments[r] : n.cwd();
                            if ("string" != typeof o) throw new TypeError("Arguments to path.resolve must be strings");
                            o && (e = o + "/" + e, t = "/" === o.charAt(0));
                        }
                        return (t ? "/" : "") + (e = s(i(e.split("/"), function(e) {
                            return !!e;
                        }), !t).join("/")) || ".";
                    }, u.normalize = function(e) {
                        var t = u.isAbsolute(e), r = "/" === o(e, -1);
                        return (e = (e = s(i(e.split("/"), function(e) {
                            return !!e;
                        }), !t).join("/")) || t ? e : ".") && r && (e += "/"), (t ? "/" : "") + e;
                    }, u.isAbsolute = function(e) {
                        return "/" === e.charAt(0);
                    }, u.join = function() {
                        var e = Array.prototype.slice.call(arguments, 0);
                        return u.normalize(i(e, function(e, t) {
                            if ("string" != typeof e) throw new TypeError("Arguments to path.join must be strings");
                            return e;
                        }).join("/"));
                    }, u.relative = function(e, t) {
                        function r(e) {
                            for(var t = 0; t < e.length && "" === e[t]; t++);
                            for(var r = e.length - 1; 0 <= r && "" === e[r]; r--);
                            return r < t ? [] : e.slice(t, r - t + 1);
                        }
                        e = u.resolve(e).substr(1), t = u.resolve(t).substr(1);
                        for(var o = r(e.split("/")), n = r(t.split("/")), s = Math.min(o.length, n.length), i = s, a = 0; a < s; a++)if (o[a] !== n[a]) {
                            i = a;
                            break;
                        }
                        for(var l = [], a = i; a < o.length; a++)l.push("..");
                        return (l = l.concat(n.slice(i))).join("/");
                    }, u.sep = "/", u.delimiter = ":", u.dirname = function(e) {
                        if ("string" != typeof e && (e += ""), 0 === e.length) return ".";
                        for(var t = 47 === e.charCodeAt(0), r = -1, o = !0, n = e.length - 1; 1 <= n; --n)if (47 === e.charCodeAt(n)) {
                            if (!o) {
                                r = n;
                                break;
                            }
                        } else o = !1;
                        return -1 === r ? t ? "/" : "." : t && 1 === r ? "/" : e.slice(0, r);
                    }, u.basename = function(e, t) {
                        e = function(e) {
                            "string" != typeof e && (e += "");
                            for(var t = 0, r = -1, o = !0, n = e.length - 1; 0 <= n; --n)if (47 === e.charCodeAt(n)) {
                                if (!o) {
                                    t = n + 1;
                                    break;
                                }
                            } else -1 === r && (o = !1, r = n + 1);
                            return -1 === r ? "" : e.slice(t, r);
                        }(e);
                        return e = t && e.substr(-1 * t.length) === t ? e.substr(0, e.length - t.length) : e;
                    }, u.extname = function(e) {
                        "string" != typeof e && (e += "");
                        for(var t = -1, r = 0, o = -1, n = !0, s = 0, i = e.length - 1; 0 <= i; --i){
                            var a = e.charCodeAt(i);
                            if (47 === a) {
                                if (n) continue;
                                r = i + 1;
                                break;
                            }
                            -1 === o && (n = !1, o = i + 1), 46 === a ? -1 === t ? t = i : 1 !== s && (s = 1) : -1 !== t && (s = -1);
                        }
                        return -1 === t || -1 === o || 0 === s || 1 === s && t === o - 1 && t === r + 1 ? "" : e.slice(t, o);
                    };
                    var o = "b" === "ab".substr(-1) ? function(e, t, r) {
                        return e.substr(t, r);
                    } : function(e, t, r) {
                        return t < 0 && (t = e.length + t), e.substr(t, r);
                    };
                }).call(this, e("_process"));
            },
            {
                _process: 243
            }
        ],
        243: [
            function(e, t, r) {
                var o, n, t = t.exports = {};
                function s() {
                    throw new Error("setTimeout has not been defined");
                }
                function i() {
                    throw new Error("clearTimeout has not been defined");
                }
                try {
                    o = "function" == typeof setTimeout ? setTimeout : s;
                } catch (e) {
                    o = s;
                }
                try {
                    n = "function" == typeof clearTimeout ? clearTimeout : i;
                } catch (e) {
                    n = i;
                }
                function a(t) {
                    if (o === setTimeout) return setTimeout(t, 0);
                    if ((o === s || !o) && setTimeout) return (o = setTimeout)(t, 0);
                    try {
                        return o(t, 0);
                    } catch (e) {
                        try {
                            return o.call(null, t, 0);
                        } catch (e) {
                            return o.call(this, t, 0);
                        }
                    }
                }
                var l, u = [], c = !1, d = -1;
                function f() {
                    c && l && (c = !1, l.length ? u = l.concat(u) : d = -1, u.length && h());
                }
                function h() {
                    if (!c) {
                        for(var e = a(f), t = (c = !0, u.length); t;){
                            for(l = u, u = []; ++d < t;)l && l[d].run();
                            d = -1, t = u.length;
                        }
                        l = null, c = !1, !function(t) {
                            if (n === clearTimeout) return clearTimeout(t);
                            if ((n === i || !n) && clearTimeout) return (n = clearTimeout)(t);
                            try {
                                n(t);
                            } catch (e) {
                                try {
                                    return n.call(null, t);
                                } catch (e) {
                                    return n.call(this, t);
                                }
                            }
                        }(e);
                    }
                }
                function p(e, t) {
                    this.fun = e, this.array = t;
                }
                function m() {}
                t.nextTick = function(e) {
                    var t = new Array(arguments.length - 1);
                    if (1 < arguments.length) for(var r = 1; r < arguments.length; r++)t[r - 1] = arguments[r];
                    u.push(new p(e, t)), 1 !== u.length || c || a(h);
                }, p.prototype.run = function() {
                    this.fun.apply(null, this.array);
                }, t.title = "browser", t.browser = !0, t.env = {}, t.argv = [], t.version = "", t.versions = {}, t.on = m, t.addListener = m, t.once = m, t.off = m, t.removeListener = m, t.removeAllListeners = m, t.emit = m, t.prependListener = m, t.prependOnceListener = m, t.listeners = function(e) {
                    return [];
                }, t.binding = function(e) {
                    throw new Error("process.binding is not supported");
                }, t.cwd = function() {
                    return "/";
                }, t.chdir = function(e) {
                    throw new Error("process.chdir is not supported");
                }, t.umask = function() {
                    return 0;
                };
            },
            {}
        ],
        244: [
            function(e, t, r) {
                t = function(s) {
                    "use strict";
                    var l, e = Object.prototype, u = e.hasOwnProperty, t = "function" == typeof Symbol ? Symbol : {}, o = t.iterator || "@@iterator", r = t.asyncIterator || "@@asyncIterator", n = t.toStringTag || "@@toStringTag";
                    function i(e, t, r, o) {
                        var n, s, i, a, t = t && t.prototype instanceof y ? t : y, t = Object.create(t.prototype), o = new S(o || []);
                        return t._invoke = (n = e, s = r, i = o, a = d, function(e, t) {
                            if (a === h) throw new Error("Generator is already running");
                            if (a === p) {
                                if ("throw" === e) throw t;
                                return E();
                            }
                            for(i.method = e, i.arg = t;;){
                                var r = i.delegate;
                                if (r) {
                                    r = function e(t, r) {
                                        var o = t.iterator[r.method];
                                        if (o === l) {
                                            if (r.delegate = null, "throw" === r.method) {
                                                if (t.iterator.return && (r.method = "return", r.arg = l, e(t, r), "throw" === r.method)) return m;
                                                r.method = "throw", r.arg = new TypeError("The iterator does not provide a 'throw' method");
                                            }
                                            return m;
                                        }
                                        o = c(o, t.iterator, r.arg);
                                        if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, m;
                                        o = o.arg;
                                        if (!o) return r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, m;
                                        if (!o.done) return o;
                                        r[t.resultName] = o.value, r.next = t.nextLoc, "return" !== r.method && (r.method = "next", r.arg = l);
                                        r.delegate = null;
                                        return m;
                                    }(r, i);
                                    if (r) {
                                        if (r === m) continue;
                                        return r;
                                    }
                                }
                                if ("next" === i.method) i.sent = i._sent = i.arg;
                                else if ("throw" === i.method) {
                                    if (a === d) throw a = p, i.arg;
                                    i.dispatchException(i.arg);
                                } else "return" === i.method && i.abrupt("return", i.arg);
                                a = h;
                                r = c(n, s, i);
                                if ("normal" === r.type) {
                                    if (a = i.done ? p : f, r.arg !== m) return {
                                        value: r.arg,
                                        done: i.done
                                    };
                                } else "throw" === r.type && (a = p, i.method = "throw", i.arg = r.arg);
                            }
                        }), t;
                    }
                    function c(e, t, r) {
                        try {
                            return {
                                type: "normal",
                                arg: e.call(t, r)
                            };
                        } catch (e) {
                            return {
                                type: "throw",
                                arg: e
                            };
                        }
                    }
                    s.wrap = i;
                    var d = "suspendedStart", f = "suspendedYield", h = "executing", p = "completed", m = {};
                    function y() {}
                    function a() {}
                    function g() {}
                    var t = {}, v = (t[o] = function() {
                        return this;
                    }, Object.getPrototypeOf), v = v && v(v(M([]))), b = (v && v !== e && u.call(v, o) && (t = v), g.prototype = y.prototype = Object.create(t));
                    function j(e) {
                        [
                            "next",
                            "throw",
                            "return"
                        ].forEach(function(t) {
                            e[t] = function(e) {
                                return this._invoke(t, e);
                            };
                        });
                    }
                    function _(i) {
                        var t;
                        this._invoke = function(r, o) {
                            function e() {
                                return new Promise(function(e, t) {
                                    !function t(e, r, o, n) {
                                        var s, e = c(i[e], i, r);
                                        if ("throw" !== e.type) return (r = (s = e.arg).value) && "object" == typeof r && u.call(r, "__await") ? Promise.resolve(r.__await).then(function(e) {
                                            t("next", e, o, n);
                                        }, function(e) {
                                            t("throw", e, o, n);
                                        }) : Promise.resolve(r).then(function(e) {
                                            s.value = e, o(s);
                                        }, function(e) {
                                            return t("throw", e, o, n);
                                        });
                                        n(e.arg);
                                    }(r, o, e, t);
                                });
                            }
                            return t = t ? t.then(e, e) : e();
                        };
                    }
                    function x(e) {
                        var t = {
                            tryLoc: e[0]
                        };
                        1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t);
                    }
                    function w(e) {
                        var t = e.completion || {};
                        t.type = "normal", delete t.arg, e.completion = t;
                    }
                    function S(e) {
                        this.tryEntries = [
                            {
                                tryLoc: "root"
                            }
                        ], e.forEach(x, this), this.reset(!0);
                    }
                    function M(t) {
                        if (t) {
                            var r, e = t[o];
                            if (e) return e.call(t);
                            if ("function" == typeof t.next) return t;
                            if (!isNaN(t.length)) return r = -1, (e = function e() {
                                for(; ++r < t.length;)if (u.call(t, r)) return e.value = t[r], e.done = !1, e;
                                return e.value = l, e.done = !0, e;
                            }).next = e;
                        }
                        return {
                            next: E
                        };
                    }
                    function E() {
                        return {
                            value: l,
                            done: !0
                        };
                    }
                    return (a.prototype = b.constructor = g).constructor = a, g[n] = a.displayName = "GeneratorFunction", s.isGeneratorFunction = function(e) {
                        e = "function" == typeof e && e.constructor;
                        return !!e && (e === a || "GeneratorFunction" === (e.displayName || e.name));
                    }, s.mark = function(e) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(e, g) : (e.__proto__ = g, n in e || (e[n] = "GeneratorFunction")), e.prototype = Object.create(b), e;
                    }, s.awrap = function(e) {
                        return {
                            __await: e
                        };
                    }, j(_.prototype), _.prototype[r] = function() {
                        return this;
                    }, s.AsyncIterator = _, s.async = function(e, t, r, o) {
                        var n = new _(i(e, t, r, o));
                        return s.isGeneratorFunction(t) ? n : n.next().then(function(e) {
                            return e.done ? e.value : n.next();
                        });
                    }, j(b), b[n] = "Generator", b[o] = function() {
                        return this;
                    }, b.toString = function() {
                        return "[object Generator]";
                    }, s.keys = function(r) {
                        var e, o = [];
                        for(e in r)o.push(e);
                        return o.reverse(), function e() {
                            for(; o.length;){
                                var t = o.pop();
                                if (t in r) return e.value = t, e.done = !1, e;
                            }
                            return e.done = !0, e;
                        };
                    }, s.values = M, S.prototype = {
                        constructor: S,
                        reset: function(e) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = l, this.done = !1, this.delegate = null, this.method = "next", this.arg = l, this.tryEntries.forEach(w), !e) for(var t in this)"t" === t.charAt(0) && u.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = l);
                        },
                        stop: function() {
                            this.done = !0;
                            var e = this.tryEntries[0].completion;
                            if ("throw" === e.type) throw e.arg;
                            return this.rval;
                        },
                        dispatchException: function(r) {
                            if (this.done) throw r;
                            var o = this;
                            function e(e, t) {
                                return s.type = "throw", s.arg = r, o.next = e, t && (o.method = "next", o.arg = l), !!t;
                            }
                            for(var t = this.tryEntries.length - 1; 0 <= t; --t){
                                var n = this.tryEntries[t], s = n.completion;
                                if ("root" === n.tryLoc) return e("end");
                                if (n.tryLoc <= this.prev) {
                                    var i = u.call(n, "catchLoc"), a = u.call(n, "finallyLoc");
                                    if (i && a) {
                                        if (this.prev < n.catchLoc) return e(n.catchLoc, !0);
                                        if (this.prev < n.finallyLoc) return e(n.finallyLoc);
                                    } else if (i) {
                                        if (this.prev < n.catchLoc) return e(n.catchLoc, !0);
                                    } else {
                                        if (!a) throw new Error("try statement without catch or finally");
                                        if (this.prev < n.finallyLoc) return e(n.finallyLoc);
                                    }
                                }
                            }
                        },
                        abrupt: function(e, t) {
                            for(var r = this.tryEntries.length - 1; 0 <= r; --r){
                                var o = this.tryEntries[r];
                                if (o.tryLoc <= this.prev && u.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                    var n = o;
                                    break;
                                }
                            }
                            var s = (n = n && ("break" === e || "continue" === e) && n.tryLoc <= t && t <= n.finallyLoc ? null : n) ? n.completion : {};
                            return s.type = e, s.arg = t, n ? (this.method = "next", this.next = n.finallyLoc, m) : this.complete(s);
                        },
                        complete: function(e, t) {
                            if ("throw" === e.type) throw e.arg;
                            return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), m;
                        },
                        finish: function(e) {
                            for(var t = this.tryEntries.length - 1; 0 <= t; --t){
                                var r = this.tryEntries[t];
                                if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), w(r), m;
                            }
                        },
                        catch: function(e) {
                            for(var t = this.tryEntries.length - 1; 0 <= t; --t){
                                var r, o, n = this.tryEntries[t];
                                if (n.tryLoc === e) return "throw" === (r = n.completion).type && (o = r.arg, w(n)), o;
                            }
                            throw new Error("illegal catch attempt");
                        },
                        delegateYield: function(e, t, r) {
                            return this.delegate = {
                                iterator: M(e),
                                resultName: t,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = l), m;
                        }
                    }, s;
                }("object" == typeof t ? t.exports : {});
                try {
                    regeneratorRuntime = t;
                } catch (e) {
                    Function("r", "regeneratorRuntime = r")(t);
                }
            },
            {}
        ],
        245: [
            function(e, t, r) {
                !function(e) {
                    "use strict";
                    var t, r, i, o, n, s, a, l, u, c;
                    function d(e) {
                        if ("string" != typeof e && (e = String(e)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e)) throw new TypeError("Invalid character in header field name");
                        return e.toLowerCase();
                    }
                    function f(e) {
                        return e = "string" != typeof e ? String(e) : e;
                    }
                    function h(t) {
                        var e = {
                            next: function() {
                                var e = t.shift();
                                return {
                                    done: void 0 === e,
                                    value: e
                                };
                            }
                        };
                        return r && (e[Symbol.iterator] = function() {
                            return e;
                        }), e;
                    }
                    function p(t) {
                        this.map = {}, t instanceof p ? t.forEach(function(e, t) {
                            this.append(t, e);
                        }, this) : Array.isArray(t) ? t.forEach(function(e) {
                            this.append(e[0], e[1]);
                        }, this) : t && Object.getOwnPropertyNames(t).forEach(function(e) {
                            this.append(e, t[e]);
                        }, this);
                    }
                    function m(e) {
                        if (e.bodyUsed) return Promise.reject(new TypeError("Already read"));
                        e.bodyUsed = !0;
                    }
                    function y(r) {
                        return new Promise(function(e, t) {
                            r.onload = function() {
                                e(r.result);
                            }, r.onerror = function() {
                                t(r.error);
                            };
                        });
                    }
                    function g(e) {
                        var t = new FileReader, r = y(t);
                        return t.readAsArrayBuffer(e), r;
                    }
                    function v(e) {
                        var t;
                        return e.slice ? e.slice(0) : ((t = new Uint8Array(e.byteLength)).set(new Uint8Array(e)), t.buffer);
                    }
                    function b() {
                        return this.bodyUsed = !1, this._initBody = function(e) {
                            if (this._bodyInit = e) {
                                if ("string" == typeof e) this._bodyText = e;
                                else if (i && Blob.prototype.isPrototypeOf(e)) this._bodyBlob = e;
                                else if (o && FormData.prototype.isPrototypeOf(e)) this._bodyFormData = e;
                                else if (t && URLSearchParams.prototype.isPrototypeOf(e)) this._bodyText = e.toString();
                                else if (n && i && a(e)) this._bodyArrayBuffer = v(e.buffer), this._bodyInit = new Blob([
                                    this._bodyArrayBuffer
                                ]);
                                else {
                                    if (!n || !ArrayBuffer.prototype.isPrototypeOf(e) && !l(e)) throw new Error("unsupported BodyInit type");
                                    this._bodyArrayBuffer = v(e);
                                }
                            } else this._bodyText = "";
                            this.headers.get("content-type") || ("string" == typeof e ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : t && URLSearchParams.prototype.isPrototypeOf(e) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
                        }, i && (this.blob = function() {
                            var e = m(this);
                            if (e) return e;
                            if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                            if (this._bodyArrayBuffer) return Promise.resolve(new Blob([
                                this._bodyArrayBuffer
                            ]));
                            if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                            return Promise.resolve(new Blob([
                                this._bodyText
                            ]));
                        }, this.arrayBuffer = function() {
                            return this._bodyArrayBuffer ? m(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(g);
                        }), this.text = function() {
                            var e, t, r = m(this);
                            if (r) return r;
                            if (this._bodyBlob) return r = this._bodyBlob, e = new FileReader, t = y(e), e.readAsText(r), t;
                            if (this._bodyArrayBuffer) return Promise.resolve(function(e) {
                                for(var t = new Uint8Array(e), r = new Array(t.length), o = 0; o < t.length; o++)r[o] = String.fromCharCode(t[o]);
                                return r.join("");
                            }(this._bodyArrayBuffer));
                            if (this._bodyFormData) throw new Error("could not read FormData body as text");
                            return Promise.resolve(this._bodyText);
                        }, o && (this.formData = function() {
                            return this.text().then(_);
                        }), this.json = function() {
                            return this.text().then(JSON.parse);
                        }, this;
                    }
                    function j(e, t) {
                        var r, o = (t = t || {}).body;
                        if (e instanceof j) {
                            if (e.bodyUsed) throw new TypeError("Already read");
                            this.url = e.url, this.credentials = e.credentials, t.headers || (this.headers = new p(e.headers)), this.method = e.method, this.mode = e.mode, o || null == e._bodyInit || (o = e._bodyInit, e.bodyUsed = !0);
                        } else this.url = String(e);
                        if (this.credentials = t.credentials || this.credentials || "omit", !t.headers && this.headers || (this.headers = new p(t.headers)), this.method = (e = t.method || this.method || "GET", r = e.toUpperCase(), -1 < u.indexOf(r) ? r : e), this.mode = t.mode || this.mode || null, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && o) throw new TypeError("Body not allowed for GET or HEAD requests");
                        this._initBody(o);
                    }
                    function _(e) {
                        var r = new FormData;
                        return e.trim().split("&").forEach(function(e) {
                            var t;
                            e && (t = (e = e.split("=")).shift().replace(/\+/g, " "), e = e.join("=").replace(/\+/g, " "), r.append(decodeURIComponent(t), decodeURIComponent(e)));
                        }), r;
                    }
                    function x(e, t) {
                        t = t || {}, this.type = "default", this.status = void 0 === t.status ? 200 : t.status, this.ok = 200 <= this.status && this.status < 300, this.statusText = "statusText" in t ? t.statusText : "OK", this.headers = new p(t.headers), this.url = t.url || "", this._initBody(e);
                    }
                    e.fetch || (t = "URLSearchParams" in e, r = "Symbol" in e && "iterator" in Symbol, i = "FileReader" in e && "Blob" in e && function() {
                        try {
                            return new Blob, !0;
                        } catch (e) {
                            return !1;
                        }
                    }(), o = "FormData" in e, (n = "ArrayBuffer" in e) && (s = [
                        "[object Int8Array]",
                        "[object Uint8Array]",
                        "[object Uint8ClampedArray]",
                        "[object Int16Array]",
                        "[object Uint16Array]",
                        "[object Int32Array]",
                        "[object Uint32Array]",
                        "[object Float32Array]",
                        "[object Float64Array]"
                    ], a = function(e) {
                        return e && DataView.prototype.isPrototypeOf(e);
                    }, l = ArrayBuffer.isView || function(e) {
                        return e && -1 < s.indexOf(Object.prototype.toString.call(e));
                    }), p.prototype.append = function(e, t) {
                        e = d(e), t = f(t);
                        var r = this.map[e];
                        this.map[e] = r ? r + "," + t : t;
                    }, p.prototype.delete = function(e) {
                        delete this.map[d(e)];
                    }, p.prototype.get = function(e) {
                        return e = d(e), this.has(e) ? this.map[e] : null;
                    }, p.prototype.has = function(e) {
                        return this.map.hasOwnProperty(d(e));
                    }, p.prototype.set = function(e, t) {
                        this.map[d(e)] = f(t);
                    }, p.prototype.forEach = function(e, t) {
                        for(var r in this.map)this.map.hasOwnProperty(r) && e.call(t, this.map[r], r, this);
                    }, p.prototype.keys = function() {
                        var r = [];
                        return this.forEach(function(e, t) {
                            r.push(t);
                        }), h(r);
                    }, p.prototype.values = function() {
                        var t = [];
                        return this.forEach(function(e) {
                            t.push(e);
                        }), h(t);
                    }, p.prototype.entries = function() {
                        var r = [];
                        return this.forEach(function(e, t) {
                            r.push([
                                t,
                                e
                            ]);
                        }), h(r);
                    }, r && (p.prototype[Symbol.iterator] = p.prototype.entries), u = [
                        "DELETE",
                        "GET",
                        "HEAD",
                        "OPTIONS",
                        "POST",
                        "PUT"
                    ], j.prototype.clone = function() {
                        return new j(this, {
                            body: this._bodyInit
                        });
                    }, b.call(j.prototype), b.call(x.prototype), x.prototype.clone = function() {
                        return new x(this._bodyInit, {
                            status: this.status,
                            statusText: this.statusText,
                            headers: new p(this.headers),
                            url: this.url
                        });
                    }, x.error = function() {
                        var e = new x(null, {
                            status: 0,
                            statusText: ""
                        });
                        return e.type = "error", e;
                    }, c = [
                        301,
                        302,
                        303,
                        307,
                        308
                    ], x.redirect = function(e, t) {
                        if (-1 === c.indexOf(t)) throw new RangeError("Invalid status code");
                        return new x(null, {
                            status: t,
                            headers: {
                                location: e
                            }
                        });
                    }, e.Headers = p, e.Request = j, e.Response = x, e.fetch = function(r, s) {
                        return new Promise(function(o, e) {
                            var t = new j(r, s), n = new XMLHttpRequest;
                            n.onload = function() {
                                var r, e = {
                                    status: n.status,
                                    statusText: n.statusText,
                                    headers: (e = n.getAllResponseHeaders() || "", r = new p, e.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function(e) {
                                        var e = e.split(":"), t = e.shift().trim();
                                        t && (e = e.join(":").trim(), r.append(t, e));
                                    }), r)
                                }, t = (e.url = "responseURL" in n ? n.responseURL : e.headers.get("X-Request-URL"), "response" in n ? n.response : n.responseText);
                                o(new x(t, e));
                            }, n.onerror = function() {
                                e(new TypeError("Network request failed"));
                            }, n.ontimeout = function() {
                                e(new TypeError("Network request failed"));
                            }, n.open(t.method, t.url, !0), "include" === t.credentials ? n.withCredentials = !0 : "omit" === t.credentials && (n.withCredentials = !1), "responseType" in n && i && (n.responseType = "blob"), t.headers.forEach(function(e, t) {
                                n.setRequestHeader(t, e);
                            }), n.send(void 0 === t._bodyInit ? null : t._bodyInit);
                        });
                    }, e.fetch.polyfill = !0);
                }("undefined" != typeof self ? self : this);
            },
            {}
        ],
        246: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.function.name"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.split"), e("core-js/modules/es.function.name"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l, o = n(e("../core/main")), u = n(e("../color/color_conversion"));
                function n(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                var c = [
                    {
                        h: 0,
                        s: 0,
                        b: .8275,
                        name: "gray"
                    },
                    {
                        h: 0,
                        s: 0,
                        b: .8627,
                        name: "gray"
                    },
                    {
                        h: 0,
                        s: 0,
                        b: .7529,
                        name: "gray"
                    },
                    {
                        h: .0167,
                        s: .1176,
                        b: 1,
                        name: "light pink"
                    }
                ], d = [
                    {
                        h: 0,
                        s: 0,
                        b: 0,
                        name: "black"
                    },
                    {
                        h: 0,
                        s: 0,
                        b: .5,
                        name: "gray"
                    },
                    {
                        h: 0,
                        s: 0,
                        b: 1,
                        name: "white"
                    },
                    {
                        h: 0,
                        s: .5,
                        b: .5,
                        name: "dark maroon"
                    },
                    {
                        h: 0,
                        s: .5,
                        b: 1,
                        name: "salmon pink"
                    },
                    {
                        h: 0,
                        s: 1,
                        b: 0,
                        name: "black"
                    },
                    {
                        h: 0,
                        s: 1,
                        b: .5,
                        name: "dark red"
                    },
                    {
                        h: 0,
                        s: 1,
                        b: 1,
                        name: "red"
                    },
                    {
                        h: 5,
                        s: 0,
                        b: 1,
                        name: "very light peach"
                    },
                    {
                        h: 5,
                        s: .5,
                        b: .5,
                        name: "brown"
                    },
                    {
                        h: 5,
                        s: .5,
                        b: 1,
                        name: "peach"
                    },
                    {
                        h: 5,
                        s: 1,
                        b: .5,
                        name: "brick red"
                    },
                    {
                        h: 5,
                        s: 1,
                        b: 1,
                        name: "crimson"
                    },
                    {
                        h: 10,
                        s: 0,
                        b: 1,
                        name: "light peach"
                    },
                    {
                        h: 10,
                        s: .5,
                        b: .5,
                        name: "brown"
                    },
                    {
                        h: 10,
                        s: .5,
                        b: 1,
                        name: "light orange"
                    },
                    {
                        h: 10,
                        s: 1,
                        b: .5,
                        name: "brown"
                    },
                    {
                        h: 10,
                        s: 1,
                        b: 1,
                        name: "orange"
                    },
                    {
                        h: 15,
                        s: 0,
                        b: 1,
                        name: "very light yellow"
                    },
                    {
                        h: 15,
                        s: .5,
                        b: .5,
                        name: "olive green"
                    },
                    {
                        h: 15,
                        s: .5,
                        b: 1,
                        name: "light yellow"
                    },
                    {
                        h: 15,
                        s: 1,
                        b: 0,
                        name: "dark olive green"
                    },
                    {
                        h: 15,
                        s: 1,
                        b: .5,
                        name: "olive green"
                    },
                    {
                        h: 15,
                        s: 1,
                        b: 1,
                        name: "yellow"
                    },
                    {
                        h: 20,
                        s: 0,
                        b: 1,
                        name: "very light yellow"
                    },
                    {
                        h: 20,
                        s: .5,
                        b: .5,
                        name: "olive green"
                    },
                    {
                        h: 20,
                        s: .5,
                        b: 1,
                        name: "light yellow green"
                    },
                    {
                        h: 20,
                        s: 1,
                        b: 0,
                        name: "dark olive green"
                    },
                    {
                        h: 20,
                        s: 1,
                        b: .5,
                        name: "dark yellow green"
                    },
                    {
                        h: 20,
                        s: 1,
                        b: 1,
                        name: "yellow green"
                    },
                    {
                        h: 25,
                        s: .5,
                        b: .5,
                        name: "dark yellow green"
                    },
                    {
                        h: 25,
                        s: .5,
                        b: 1,
                        name: "light green"
                    },
                    {
                        h: 25,
                        s: 1,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 25,
                        s: 1,
                        b: 1,
                        name: "green"
                    },
                    {
                        h: 30,
                        s: .5,
                        b: 1,
                        name: "light green"
                    },
                    {
                        h: 30,
                        s: 1,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 30,
                        s: 1,
                        b: 1,
                        name: "green"
                    },
                    {
                        h: 35,
                        s: 0,
                        b: .5,
                        name: "light green"
                    },
                    {
                        h: 35,
                        s: 0,
                        b: 1,
                        name: "very light green"
                    },
                    {
                        h: 35,
                        s: .5,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 35,
                        s: .5,
                        b: 1,
                        name: "light green"
                    },
                    {
                        h: 35,
                        s: 1,
                        b: 0,
                        name: "very dark green"
                    },
                    {
                        h: 35,
                        s: 1,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 35,
                        s: 1,
                        b: 1,
                        name: "green"
                    },
                    {
                        h: 40,
                        s: 0,
                        b: 1,
                        name: "very light green"
                    },
                    {
                        h: 40,
                        s: .5,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 40,
                        s: .5,
                        b: 1,
                        name: "light green"
                    },
                    {
                        h: 40,
                        s: 1,
                        b: .5,
                        name: "dark green"
                    },
                    {
                        h: 40,
                        s: 1,
                        b: 1,
                        name: "green"
                    },
                    {
                        h: 45,
                        s: .5,
                        b: 1,
                        name: "light turquoise"
                    },
                    {
                        h: 45,
                        s: 1,
                        b: .5,
                        name: "dark turquoise"
                    },
                    {
                        h: 45,
                        s: 1,
                        b: 1,
                        name: "turquoise"
                    },
                    {
                        h: 50,
                        s: 0,
                        b: 1,
                        name: "light sky blue"
                    },
                    {
                        h: 50,
                        s: .5,
                        b: .5,
                        name: "dark cyan"
                    },
                    {
                        h: 50,
                        s: .5,
                        b: 1,
                        name: "light cyan"
                    },
                    {
                        h: 50,
                        s: 1,
                        b: .5,
                        name: "dark cyan"
                    },
                    {
                        h: 50,
                        s: 1,
                        b: 1,
                        name: "cyan"
                    },
                    {
                        h: 55,
                        s: 0,
                        b: 1,
                        name: "light sky blue"
                    },
                    {
                        h: 55,
                        s: .5,
                        b: 1,
                        name: "light sky blue"
                    },
                    {
                        h: 55,
                        s: 1,
                        b: .5,
                        name: "dark blue"
                    },
                    {
                        h: 55,
                        s: 1,
                        b: 1,
                        name: "sky blue"
                    },
                    {
                        h: 60,
                        s: 0,
                        b: .5,
                        name: "gray"
                    },
                    {
                        h: 60,
                        s: 0,
                        b: 1,
                        name: "very light blue"
                    },
                    {
                        h: 60,
                        s: .5,
                        b: .5,
                        name: "blue"
                    },
                    {
                        h: 60,
                        s: .5,
                        b: 1,
                        name: "light blue"
                    },
                    {
                        h: 60,
                        s: 1,
                        b: .5,
                        name: "navy blue"
                    },
                    {
                        h: 60,
                        s: 1,
                        b: 1,
                        name: "blue"
                    },
                    {
                        h: 65,
                        s: 0,
                        b: 1,
                        name: "lavender"
                    },
                    {
                        h: 65,
                        s: .5,
                        b: .5,
                        name: "navy blue"
                    },
                    {
                        h: 65,
                        s: .5,
                        b: 1,
                        name: "light purple"
                    },
                    {
                        h: 65,
                        s: 1,
                        b: .5,
                        name: "dark navy blue"
                    },
                    {
                        h: 65,
                        s: 1,
                        b: 1,
                        name: "blue"
                    },
                    {
                        h: 70,
                        s: 0,
                        b: 1,
                        name: "lavender"
                    },
                    {
                        h: 70,
                        s: .5,
                        b: .5,
                        name: "navy blue"
                    },
                    {
                        h: 70,
                        s: .5,
                        b: 1,
                        name: "lavender blue"
                    },
                    {
                        h: 70,
                        s: 1,
                        b: .5,
                        name: "dark navy blue"
                    },
                    {
                        h: 70,
                        s: 1,
                        b: 1,
                        name: "blue"
                    },
                    {
                        h: 75,
                        s: .5,
                        b: 1,
                        name: "lavender"
                    },
                    {
                        h: 75,
                        s: 1,
                        b: .5,
                        name: "dark purple"
                    },
                    {
                        h: 75,
                        s: 1,
                        b: 1,
                        name: "purple"
                    },
                    {
                        h: 80,
                        s: .5,
                        b: 1,
                        name: "pinkish purple"
                    },
                    {
                        h: 80,
                        s: 1,
                        b: .5,
                        name: "dark purple"
                    },
                    {
                        h: 80,
                        s: 1,
                        b: 1,
                        name: "purple"
                    },
                    {
                        h: 85,
                        s: 0,
                        b: 1,
                        name: "light pink"
                    },
                    {
                        h: 85,
                        s: .5,
                        b: .5,
                        name: "purple"
                    },
                    {
                        h: 85,
                        s: .5,
                        b: 1,
                        name: "light fuchsia"
                    },
                    {
                        h: 85,
                        s: 1,
                        b: .5,
                        name: "dark fuchsia"
                    },
                    {
                        h: 85,
                        s: 1,
                        b: 1,
                        name: "fuchsia"
                    },
                    {
                        h: 90,
                        s: .5,
                        b: .5,
                        name: "dark fuchsia"
                    },
                    {
                        h: 90,
                        s: .5,
                        b: 1,
                        name: "hot pink"
                    },
                    {
                        h: 90,
                        s: 1,
                        b: .5,
                        name: "dark fuchsia"
                    },
                    {
                        h: 90,
                        s: 1,
                        b: 1,
                        name: "fuchsia"
                    },
                    {
                        h: 95,
                        s: 0,
                        b: 1,
                        name: "pink"
                    },
                    {
                        h: 95,
                        s: .5,
                        b: 1,
                        name: "light pink"
                    },
                    {
                        h: 95,
                        s: 1,
                        b: .5,
                        name: "dark magenta"
                    },
                    {
                        h: 95,
                        s: 1,
                        b: 1,
                        name: "magenta"
                    }
                ];
                o.default.prototype._rgbColorName = function(e) {
                    var t, r, e = u.default._rgbaToHSBA(e), o = [
                        (l = e)[0],
                        e[1],
                        e[2]
                    ];
                    0 !== o[0] && (o[0] = Math.round(100 * o[0]), (e = o[0].toString().split(""))[r = e.length - 1] = parseInt(e[r]), e[r] < 2.5 ? e[r] = 0 : 2.5 <= e[r] && e[r] < 7.5 && (e[r] = 5), 2 === e.length ? (e[0] = parseInt(e[0]), 7.5 <= e[r] && (e[r] = 0, e[0] = e[0] + 1), o[0] = 10 * e[0] + e[1]) : 7.5 <= e[r] ? o[0] = 10 : o[0] = e[r]), o[2] = o[2] / 255;
                    for(var n = o.length - 1; 1 <= n; n--)o[n] <= .25 ? o[n] = 0 : .25 < o[n] && o[n] < .75 ? o[n] = .5 : o[n] = 1;
                    if (0 === o[0] && 0 === o[1] && 1 === o[2]) {
                        for(var s = 2; 0 <= s; s--)l[s] = Math.round(1e4 * l[s]) / 1e4;
                        for(var i = 0; i < c.length; i++){
                            if (c[i].h === l[0] && c[i].s === l[1] && c[i].b === l[2]) {
                                t = c[i].name;
                                break;
                            }
                            t = "white";
                        }
                    } else for(var a = 0; a < d.length; a++)if (d[a].h === o[0] && d[a].s === o[1] && d[a].b === o[2]) {
                        t = d[a].name;
                        break;
                    }
                    return t;
                };
                e = o.default;
                r.default = e;
            },
            {
                "../color/color_conversion": 252,
                "../core/main": 267,
                "core-js/modules/es.function.name": 165,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.split": 191
            }
        ],
        247: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.concat"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.ends-with"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.ends-with"), e("core-js/modules/es.string.replace"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                var i = "_Description", a = "_fallbackDesc", l = "_fallbackTable", u = "_Label", c = "_labelDesc", d = "_labelTable";
                function f(e) {
                    if ("label" === e || "fallback" === e) throw new Error("description should not be LABEL or FALLBACK");
                    return e.endsWith(".") || e.endsWith(";") || e.endsWith(",") || e.endsWith("?") || e.endsWith("!") || (e += "."), e;
                }
                s.default.prototype.describe = function(e, t) {
                    var r;
                    s.default._validateParameters("describe", arguments), "string" == typeof e && (r = this.canvas.id, e = f(e), this.dummyDOM || (this.dummyDOM = document.getElementById(r).parentNode), this.descriptions || (this.descriptions = {}), this.descriptions.fallback ? this.descriptions.fallback.innerHTML !== e && (this.descriptions.fallback.innerHTML = e) : this._describeHTML("fallback", e), t === this.LABEL && (this.descriptions.label ? this.descriptions.label.innerHTML !== e && (this.descriptions.label.innerHTML = e) : this._describeHTML("label", e)));
                }, s.default.prototype.describeElement = function(e, t, r) {
                    var o, n;
                    s.default._validateParameters("describeElement", arguments), "string" == typeof t && "string" == typeof e && (o = this.canvas.id, t = f(t), n = function(e) {
                        if ("label" === e || "fallback" === e) throw new Error("element name should not be LABEL or FALLBACK");
                        e.endsWith(".") || e.endsWith(";") || e.endsWith(",") ? e = e.replace(/.$/, ":") : e.endsWith(":") || (e += ":");
                        return e;
                    }(e), e = e.replace(/[^a-zA-Z0-9]/g, ""), n = '<th scope="row">'.concat(n, "</th><td>").concat(t, "</td>"), this.dummyDOM || (this.dummyDOM = document.getElementById(o).parentNode), this.descriptions ? this.descriptions.fallbackElements || (this.descriptions.fallbackElements = {}) : this.descriptions = {
                        fallbackElements: {}
                    }, this.descriptions.fallbackElements[e] ? this.descriptions.fallbackElements[e].innerHTML !== n && (this.descriptions.fallbackElements[e].innerHTML = n) : this._describeElementHTML("fallback", e, n), r === this.LABEL && (this.descriptions.labelElements || (this.descriptions.labelElements = {}), this.descriptions.labelElements[e] ? this.descriptions.labelElements[e].innerHTML !== n && (this.descriptions.labelElements[e].innerHTML = n) : this._describeElementHTML("label", e, n)));
                }, s.default.prototype._describeHTML = function(e, t) {
                    var r, o = this.canvas.id;
                    "fallback" === e ? (this.dummyDOM.querySelector("#".concat(o + i)) ? this.dummyDOM.querySelector("#" + o + l).insertAdjacentHTML("beforebegin", '<p id="'.concat(o + a, '"></p>')) : (r = '<div id="'.concat(o).concat(i, '" role="region" aria-label="Canvas Description"><p id="').concat(o).concat(a, '"></p></div>'), this.dummyDOM.querySelector("#".concat(o, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(o, "accessibleOutput")).insertAdjacentHTML("beforebegin", r) : this.dummyDOM.querySelector("#".concat(o)).innerHTML = r), this.descriptions.fallback = this.dummyDOM.querySelector("#".concat(o).concat(a)), this.descriptions.fallback.innerHTML = t) : "label" === e && (this.dummyDOM.querySelector("#".concat(o + u)) ? this.dummyDOM.querySelector("#".concat(o + d)) && this.dummyDOM.querySelector("#".concat(o + d)).insertAdjacentHTML("beforebegin", '<p id="'.concat(o).concat(c, '"></p>')) : (r = '<div id="'.concat(o).concat(u, '" class="p5Label"><p id="').concat(o).concat(c, '"></p></div>'), this.dummyDOM.querySelector("#".concat(o, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(o, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", r) : this.dummyDOM.querySelector("#" + o).insertAdjacentHTML("afterend", r)), this.descriptions.label = this.dummyDOM.querySelector("#" + o + c), this.descriptions.label.innerHTML = t);
                }, s.default.prototype._describeElementHTML = function(e, t, r) {
                    var o, n = this.canvas.id;
                    "fallback" === e ? (this.dummyDOM.querySelector("#".concat(n + i)) ? this.dummyDOM.querySelector("#" + n + l) || this.dummyDOM.querySelector("#" + n + a).insertAdjacentHTML("afterend", '<table id="'.concat(n).concat(l, '"><caption>Canvas elements and their descriptions</caption></table>')) : (o = '<div id="'.concat(n).concat(i, '" role="region" aria-label="Canvas Description"><table id="').concat(n).concat(l, '"><caption>Canvas elements and their descriptions</caption></table></div>'), this.dummyDOM.querySelector("#".concat(n, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(n, "accessibleOutput")).insertAdjacentHTML("beforebegin", o) : this.dummyDOM.querySelector("#" + n).innerHTML = o), (o = document.createElement("tr")).id = n + "_fte_" + t, this.dummyDOM.querySelector("#" + n + l).appendChild(o), this.descriptions.fallbackElements[t] = this.dummyDOM.querySelector("#".concat(n).concat("_fte_").concat(t)), this.descriptions.fallbackElements[t].innerHTML = r) : "label" === e && (this.dummyDOM.querySelector("#".concat(n + u)) ? this.dummyDOM.querySelector("#".concat(n + d)) || this.dummyDOM.querySelector("#" + n + c).insertAdjacentHTML("afterend", '<table id="'.concat(n + d, '"></table>')) : (o = '<div id="'.concat(n).concat(u, '" class="p5Label"><table id="').concat(n).concat(d, '"></table></div>'), this.dummyDOM.querySelector("#".concat(n, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(n, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", o) : this.dummyDOM.querySelector("#" + n).insertAdjacentHTML("afterend", o)), (e = document.createElement("tr")).id = n + "_lte_" + t, this.dummyDOM.querySelector("#" + n + d).appendChild(e), this.descriptions.labelElements[t] = this.dummyDOM.querySelector("#".concat(n).concat("_lte_").concat(t)), this.descriptions.labelElements[t].innerHTML = r);
                };
                e = s.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.string.ends-with": 184,
                "core-js/modules/es.string.replace": 189
            }
        ],
        248: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.map"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                e.default.prototype._updateGridOutput = function(e) {
                    var t, r, o, n;
                    this.dummyDOM.querySelector("#".concat(e, "_summary")) && (t = this._accessibleOutputs[e], o = function(e, t, r, o) {
                        t = "".concat(t, " canvas, ").concat(r, " by ").concat(o, " pixels, contains ").concat(e[0]);
                        t = (1 === e[0] ? "".concat(t, " shape: ") : "".concat(t, " shapes: ")).concat(e[1]);
                        return t;
                    }((r = function(e, t) {
                        var r, o = "", n = "", s = 0;
                        for(r in t){
                            var i, a = 0;
                            for(i in t[r]){
                                var l = '<li id="'.concat(e, "shape").concat(s, '">').concat(t[r][i].color, " ").concat(r, ",");
                                "line" === r ? l += " location = ".concat(t[r][i].pos, ", length = ").concat(t[r][i].length, " pixels") : (l += " location = ".concat(t[r][i].pos), "point" !== r && (l += ", area = ".concat(t[r][i].area, " %")), l += "</li>"), o += l, a++, s++;
                            }
                            n = 1 < a ? "".concat(n, " ").concat(a, " ").concat(r, "s") : "".concat(n, " ").concat(a, " ").concat(r);
                        }
                        return {
                            numShapes: [
                                s,
                                n
                            ],
                            details: o
                        };
                    }(e, this.ingredients.shapes)).numShapes, this.ingredients.colors.background, this.width, this.height), n = function(e, t) {
                        var r, o, n, s = 0, i = "", a = Array.apply(null, Array(10)).map(function() {});
                        for(r in a)a[r] = Array.apply(null, Array(10)).map(function() {});
                        for(o in t)for(var l in t[o]){
                            var u = void 0;
                            u = "line" !== o ? '<a href="#'.concat(e, "shape").concat(s, '">').concat(t[o][l].color, " ").concat(o, "</a>") : '<a href="#'.concat(e, "shape").concat(s, '">').concat(t[o][l].color, " ").concat(o, " midpoint</a>"), a[t[o][l].loc.locY][t[o][l].loc.locX] ? a[t[o][l].loc.locY][t[o][l].loc.locX] = a[t[o][l].loc.locY][t[o][l].loc.locX] + "  " + u : a[t[o][l].loc.locY][t[o][l].loc.locX] = u, s++;
                        }
                        for(n in a){
                            var c, d = "<tr>";
                            for(c in a[n])d += "<td>", void 0 !== a[n][c] && (d += a[n][c]), d += "</td>";
                            i = i + d + "</tr>";
                        }
                        return i;
                    }(e, this.ingredients.shapes), o !== t.summary.innerHTML && (t.summary.innerHTML = o), n !== t.map.innerHTML && (t.map.innerHTML = n), r.details !== t.shapeDetails.innerHTML && (t.shapeDetails.innerHTML = r.details), this._accessibleOutputs[e] = t);
                };
                e = e.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.map": 161
            }
        ],
        249: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.map"), e("core-js/modules/es.number.to-fixed"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.map"), e("core-js/modules/es.number.to-fixed"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                function l(e, t, r) {
                    return e[0] < .4 * t ? e[1] < .4 * r ? "top left" : e[1] > .6 * r ? "bottom left" : "mid left" : e[0] > .6 * t ? e[1] < .4 * r ? "top right" : e[1] > .6 * r ? "bottom right" : "mid right" : e[1] < .4 * r ? "top middle" : e[1] > .6 * r ? "bottom middle" : "middle";
                }
                function u(e, t, r) {
                    t = Math.floor(e[0] / t * 10), e = Math.floor(e[1] / r * 10);
                    return 10 === t && (t -= 1), 10 === e && (e -= 1), {
                        locX: t,
                        locY: e
                    };
                }
                o.default.prototype.textOutput = function(e) {
                    o.default._validateParameters("textOutput", arguments), this._accessibleOutputs.text || (this._accessibleOutputs.text = !0, this._createOutput("textOutput", "Fallback"), e === this.LABEL && (this._accessibleOutputs.textLabel = !0, this._createOutput("textOutput", "Label")));
                }, o.default.prototype.gridOutput = function(e) {
                    o.default._validateParameters("gridOutput", arguments), this._accessibleOutputs.grid || (this._accessibleOutputs.grid = !0, this._createOutput("gridOutput", "Fallback"), e === this.LABEL && (this._accessibleOutputs.gridLabel = !0, this._createOutput("gridOutput", "Label")));
                }, o.default.prototype._addAccsOutput = function() {
                    return this._accessibleOutputs || (this._accessibleOutputs = {
                        text: !1,
                        grid: !1,
                        textLabel: !1,
                        gridLabel: !1
                    }), this._accessibleOutputs.grid || this._accessibleOutputs.text;
                }, o.default.prototype._createOutput = function(e, t) {
                    var r, o, n, s = this.canvas.id, i = (this.ingredients || (this.ingredients = {
                        shapes: {},
                        colors: {
                            background: "white",
                            fill: "white",
                            stroke: "black"
                        },
                        pShapes: ""
                    }), this.dummyDOM || (this.dummyDOM = document.getElementById(s).parentNode), "");
                    "Fallback" === t ? (r = s + e, this.dummyDOM.querySelector("#".concat(o = s + "accessibleOutput")) || (this.dummyDOM.querySelector("#".concat(s, "_Description")) ? this.dummyDOM.querySelector("#".concat(s, "_Description")).insertAdjacentHTML("afterend", '<div id="'.concat(o, '" role="region" aria-label="Canvas Outputs"></div>')) : this.dummyDOM.querySelector("#".concat(s)).innerHTML = '<div id="'.concat(o, '" role="region" aria-label="Canvas Outputs"></div>'))) : "Label" === t && (r = s + e + (i = t), this.dummyDOM.querySelector("#".concat(o = s + "accessibleOutput" + t)) || (this.dummyDOM.querySelector("#".concat(s, "_Label")) ? this.dummyDOM.querySelector("#".concat(s, "_Label")) : this.dummyDOM.querySelector("#".concat(s))).insertAdjacentHTML("afterend", '<div id="'.concat(o, '"></div>'))), this._accessibleOutputs[r] = {}, "textOutput" === e ? (i = "#".concat(s, "gridOutput").concat(i), n = '<div id="'.concat(r, '">Text Output<div id="').concat(r, 'Summary" aria-label="text output summary"><p id="').concat(r, '_summary"></p><ul id="').concat(r, '_list"></ul></div><table id="').concat(r, '_shapeDetails" summary="text output shape details"></table></div>'), this.dummyDOM.querySelector(i) ? this.dummyDOM.querySelector(i).insertAdjacentHTML("beforebegin", n) : this.dummyDOM.querySelector("#".concat(o)).innerHTML = n, this._accessibleOutputs[r].list = this.dummyDOM.querySelector("#".concat(r, "_list"))) : "gridOutput" === e && (i = "#".concat(s, "textOutput").concat(i), n = '<div id="'.concat(r, '">Grid Output<p id="').concat(r, '_summary" aria-label="grid output summary"><table id="').concat(r, '_map" summary="grid output content"></table><ul id="').concat(r, '_shapeDetails" aria-label="grid output shape details"></ul></div>'), this.dummyDOM.querySelector(i) ? this.dummyDOM.querySelector(i).insertAdjacentHTML("afterend", n) : this.dummyDOM.querySelector("#".concat(o)).innerHTML = n, this._accessibleOutputs[r].map = this.dummyDOM.querySelector("#".concat(r, "_map"))), this._accessibleOutputs[r].shapeDetails = this.dummyDOM.querySelector("#".concat(r, "_shapeDetails")), this._accessibleOutputs[r].summary = this.dummyDOM.querySelector("#".concat(r, "_summary"));
                }, o.default.prototype._updateAccsOutput = function() {
                    var e = this.canvas.id;
                    JSON.stringify(this.ingredients.shapes) !== this.ingredients.pShapes && (this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this._accessibleOutputs.text && this._updateTextOutput(e + "textOutput"), this._accessibleOutputs.grid && this._updateGridOutput(e + "gridOutput"), this._accessibleOutputs.textLabel && this._updateTextOutput(e + "textOutputLabel"), this._accessibleOutputs.gridLabel && this._updateGridOutput(e + "gridOutputLabel"));
                }, o.default.prototype._accsBackground = function(e) {
                    this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this.ingredients.shapes = {}, this.ingredients.colors.backgroundRGBA !== e && (this.ingredients.colors.backgroundRGBA = e, this.ingredients.colors.background = this._rgbColorName(e));
                }, o.default.prototype._accsCanvasColors = function(e, t) {
                    "fill" === e ? this.ingredients.colors.fillRGBA !== t && (this.ingredients.colors.fillRGBA = t, this.ingredients.colors.fill = this._rgbColorName(t)) : "stroke" === e && this.ingredients.colors.strokeRGBA !== t && (this.ingredients.colors.strokeRGBA = t, this.ingredients.colors.stroke = this._rgbColorName(t));
                }, o.default.prototype._accsOutput = function(e, t) {
                    "ellipse" === e && t[2] === t[3] ? e = "circle" : "rectangle" === e && t[2] === t[3] && (e = "square");
                    var r, o, n = {}, s = !0, i = function(e, t) {
                        var r;
                        e = "rectangle" === e || "ellipse" === e || "arc" === e || "circle" === e || "square" === e ? (r = Math.round(t[0] + t[2] / 2), Math.round(t[1] + t[3] / 2)) : "triangle" === e ? (r = (t[0] + t[2] + t[4]) / 3, (t[1] + t[3] + t[5]) / 3) : "quadrilateral" === e ? (r = (t[0] + t[2] + t[4] + t[6]) / 4, (t[1] + t[3] + t[5] + t[7]) / 4) : "line" === e ? (r = (t[0] + t[2]) / 2, (t[1] + t[3]) / 2) : (r = t[0], t[1]);
                        return [
                            r,
                            e
                        ];
                    }(e, t);
                    if ("line" === e ? (n.color = this.ingredients.colors.stroke, n.length = Math.round(this.dist(t[0], t[1], t[2], t[3])), r = l([
                        t[0],
                        [
                            1
                        ]
                    ], this.width, this.height), o = l([
                        t[2],
                        [
                            3
                        ]
                    ], this.width, this.height), n.loc = u(i, this.width, this.height), n.pos = r === o ? "at ".concat(r) : "from ".concat(r, " to ").concat(o)) : ("point" === e ? n.color = this.ingredients.colors.stroke : (n.color = this.ingredients.colors.fill, n.area = function(e, t, r, o) {
                        var n = 0;
                        var s, i, a, l, u, c, d;
                        "arc" === e ? (s = ((t[5] - t[4]) % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI), n = s * t[2] * t[3] / 8, "open" !== t[6] && "chord" !== t[6] || (d = t[0], i = t[1], a = t[0] + t[2] / 2 * Math.cos(t[4]).toFixed(2), l = t[1] + t[3] / 2 * Math.sin(t[4]).toFixed(2), u = t[0] + t[2] / 2 * Math.cos(t[5]).toFixed(2), c = t[1] + t[3] / 2 * Math.sin(t[5]).toFixed(2), d = Math.abs(d * (l - c) + a * (c - i) + u * (i - l)) / 2, s > Math.PI ? n += d : n -= d)) : "ellipse" === e || "circle" === e ? n = 3.14 * t[2] / 2 * t[3] / 2 : "line" === e || "point" === e ? n = 0 : "quadrilateral" === e ? n = Math.abs((t[6] + t[0]) * (t[7] - t[1]) + (t[0] + t[2]) * (t[1] - t[3]) + (t[2] + t[4]) * (t[3] - t[5]) + (t[4] + t[6]) * (t[5] - t[7])) / 2 : "rectangle" === e || "square" === e ? n = t[2] * t[3] : "triangle" === e && (n = Math.abs(t[0] * (t[3] - t[5]) + t[2] * (t[5] - t[1]) + t[4] * (t[1] - t[3])) / 2);
                        return Math.round(100 * n / (r * o));
                    }(e, t, this.width, this.height)), n.pos = l(i, this.width, this.height), n.loc = u(i, this.width, this.height)), this.ingredients.shapes[e]) {
                        if (this.ingredients.shapes[e] !== [
                            n
                        ]) {
                            for(var a in this.ingredients.shapes[e])JSON.stringify(this.ingredients.shapes[e][a]) === JSON.stringify(n) && (s = !1);
                            !0 === s && this.ingredients.shapes[e].push(n);
                        }
                    } else this.ingredients.shapes[e] = [
                        n
                    ];
                };
                e = o.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.fill": 152,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.number.to-fixed": 171
            }
        ],
        250: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.concat"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                e.default.prototype._updateTextOutput = function(e) {
                    var t, r, o, n;
                    this.dummyDOM.querySelector("#".concat(e, "_summary")) && (t = this._accessibleOutputs[e], o = function(e, t, r, o) {
                        r = "Your output is a, ".concat(r, " by ").concat(o, " pixels, ").concat(t, " canvas containing the following");
                        r = 1 === e ? "".concat(r, " shape:") : "".concat(r, " ").concat(e, " shapes:");
                        return r;
                    }((r = function(e, t) {
                        var r, o = "", n = 0;
                        for(r in t)for(var s in t[r]){
                            var i = '<li><a href="#'.concat(e, "shape").concat(n, '">').concat(t[r][s].color, " ").concat(r, "</a>");
                            "line" === r ? i += ", ".concat(t[r][s].pos, ", ").concat(t[r][s].length, " pixels long.</li>") : (i += ", at ".concat(t[r][s].pos), "point" !== r && (i += ", covering ".concat(t[r][s].area, "% of the canvas")), i += ".</li>"), o += i, n++;
                        }
                        return {
                            numShapes: n,
                            listShapes: o
                        };
                    }(e, this.ingredients.shapes)).numShapes, this.ingredients.colors.background, this.width, this.height), n = function(e, t) {
                        var r, o = "", n = 0;
                        for(r in t)for(var s in t[r]){
                            var i = '<tr id="'.concat(e, "shape").concat(n, '"><th>').concat(t[r][s].color, " ").concat(r, "</th>");
                            "line" === r ? i += "<td>location = ".concat(t[r][s].pos, "</td><td>length = ").concat(t[r][s].length, " pixels</td></tr>") : (i += "<td>location = ".concat(t[r][s].pos, "</td>"), "point" !== r && (i += "<td> area = ".concat(t[r][s].area, "%</td>")), i += "</tr>"), o += i, n++;
                        }
                        return o;
                    }(e, this.ingredients.shapes), o !== t.summary.innerHTML && (t.summary.innerHTML = o), r.listShapes !== t.list.innerHTML && (t.list.innerHTML = r.listShapes), n !== t.shapeDetails.innerHTML && (t.shapeDetails.innerHTML = n), this._accessibleOutputs[e] = t);
                };
                e = e.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149
            }
        ],
        251: [
            function(e, t, r) {
                "use strict";
                var o = (o = e("./core/main")) && o.__esModule ? o : {
                    default: o
                };
                e("./core/constants"), e("./core/environment"), e("./core/friendly_errors/stacktrace"), e("./core/friendly_errors/validate_params"), e("./core/friendly_errors/file_errors"), e("./core/friendly_errors/fes_core"), e("./core/friendly_errors/sketch_reader"), e("./core/helpers"), e("./core/legacy"), e("./core/preload"), e("./core/p5.Element"), e("./core/p5.Graphics"), e("./core/p5.Renderer"), e("./core/p5.Renderer2D"), e("./core/rendering"), e("./core/shim"), e("./core/structure"), e("./core/transform"), e("./core/shape/2d_primitives"), e("./core/shape/attributes"), e("./core/shape/curves"), e("./core/shape/vertex"), e("./accessibility/outputs"), e("./accessibility/textOutput"), e("./accessibility/gridOutput"), e("./accessibility/color_namer"), e("./color/color_conversion"), e("./color/creating_reading"), e("./color/p5.Color"), e("./color/setting"), e("./data/p5.TypedDict"), e("./data/local_storage.js"), e("./dom/dom"), e("./accessibility/describe"), e("./events/acceleration"), e("./events/keyboard"), e("./events/mouse"), e("./events/touch"), e("./image/filters"), e("./image/image"), e("./image/loading_displaying"), e("./image/p5.Image"), e("./image/pixels"), e("./io/files"), e("./io/p5.Table"), e("./io/p5.TableRow"), e("./io/p5.XML"), e("./math/calculation"), e("./math/math"), e("./math/noise"), e("./math/p5.Vector"), e("./math/random"), e("./math/trigonometry"), e("./typography/attributes"), e("./typography/loading_displaying"), e("./typography/p5.Font"), e("./utilities/array_functions"), e("./utilities/conversion"), e("./utilities/string_functions"), e("./utilities/time_date"), e("./webgl/3d_primitives"), e("./webgl/interaction"), e("./webgl/light"), e("./webgl/loading"), e("./webgl/material"), e("./webgl/p5.Camera"), e("./webgl/p5.Geometry"), e("./webgl/p5.Matrix"), e("./webgl/p5.RendererGL.Immediate"), e("./webgl/p5.RendererGL"), e("./webgl/p5.RendererGL.Retained"), e("./webgl/p5.Shader"), e("./webgl/p5.RenderBuffer"), e("./webgl/p5.Texture"), e("./webgl/text"), e("./core/init"), t.exports = o.default;
            },
            {
                "./accessibility/color_namer": 246,
                "./accessibility/describe": 247,
                "./accessibility/gridOutput": 248,
                "./accessibility/outputs": 249,
                "./accessibility/textOutput": 250,
                "./color/color_conversion": 252,
                "./color/creating_reading": 253,
                "./color/p5.Color": 254,
                "./color/setting": 255,
                "./core/constants": 256,
                "./core/environment": 257,
                "./core/friendly_errors/fes_core": 258,
                "./core/friendly_errors/file_errors": 259,
                "./core/friendly_errors/sketch_reader": 260,
                "./core/friendly_errors/stacktrace": 261,
                "./core/friendly_errors/validate_params": 262,
                "./core/helpers": 263,
                "./core/init": 264,
                "./core/legacy": 266,
                "./core/main": 267,
                "./core/p5.Element": 268,
                "./core/p5.Graphics": 269,
                "./core/p5.Renderer": 270,
                "./core/p5.Renderer2D": 271,
                "./core/preload": 272,
                "./core/rendering": 273,
                "./core/shape/2d_primitives": 274,
                "./core/shape/attributes": 275,
                "./core/shape/curves": 276,
                "./core/shape/vertex": 277,
                "./core/shim": 278,
                "./core/structure": 279,
                "./core/transform": 280,
                "./data/local_storage.js": 281,
                "./data/p5.TypedDict": 282,
                "./dom/dom": 283,
                "./events/acceleration": 284,
                "./events/keyboard": 285,
                "./events/mouse": 286,
                "./events/touch": 287,
                "./image/filters": 288,
                "./image/image": 289,
                "./image/loading_displaying": 290,
                "./image/p5.Image": 291,
                "./image/pixels": 292,
                "./io/files": 293,
                "./io/p5.Table": 294,
                "./io/p5.TableRow": 295,
                "./io/p5.XML": 296,
                "./math/calculation": 297,
                "./math/math": 298,
                "./math/noise": 299,
                "./math/p5.Vector": 300,
                "./math/random": 301,
                "./math/trigonometry": 302,
                "./typography/attributes": 303,
                "./typography/loading_displaying": 304,
                "./typography/p5.Font": 305,
                "./utilities/array_functions": 306,
                "./utilities/conversion": 307,
                "./utilities/string_functions": 308,
                "./utilities/time_date": 309,
                "./webgl/3d_primitives": 310,
                "./webgl/interaction": 311,
                "./webgl/light": 312,
                "./webgl/loading": 313,
                "./webgl/material": 314,
                "./webgl/p5.Camera": 315,
                "./webgl/p5.Geometry": 316,
                "./webgl/p5.Matrix": 317,
                "./webgl/p5.RenderBuffer": 318,
                "./webgl/p5.RendererGL": 321,
                "./webgl/p5.RendererGL.Immediate": 319,
                "./webgl/p5.RendererGL.Retained": 320,
                "./webgl/p5.Shader": 322,
                "./webgl/p5.Texture": 323,
                "./webgl/text": 324
            }
        ],
        252: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                e.default.ColorConversion = {}, e.default.ColorConversion._hsbaToHSLA = function(e) {
                    var t = e[0], r = e[1], o = e[2], n = (2 - r) * o / 2;
                    return 0 != n && (1 == n ? r = 0 : n < .5 ? r /= 2 - r : r = r * o / (2 - 2 * n)), [
                        t,
                        r,
                        n,
                        e[3]
                    ];
                }, e.default.ColorConversion._hsbaToRGBA = function(e) {
                    var t, r, o, n, s, i = 6 * e[0], a = e[1], l = e[2];
                    return 0 === a ? [
                        l,
                        l,
                        l,
                        e[3]
                    ] : (r = l * (1 - a), o = l * (1 - a * (i - (t = Math.floor(i)))), a = l * (1 - a * (1 + t - i)), i = 1 === t ? (n = o, s = l, r) : 2 === t ? (n = r, s = l, a) : 3 === t ? (n = r, s = o, l) : 4 === t ? (n = a, s = r, l) : 5 === t ? (n = l, s = r, o) : (n = l, s = a, r), [
                        n,
                        s,
                        i,
                        e[3]
                    ]);
                }, e.default.ColorConversion._hslaToHSBA = function(e) {
                    var t = e[0], r = e[1], o = e[2], n = o < .5 ? (1 + r) * o : o + r - o * r;
                    return [
                        t,
                        r = 2 * (n - o) / n,
                        n,
                        e[3]
                    ];
                }, e.default.ColorConversion._hslaToRGBA = function(e) {
                    var t, r = 6 * e[0], o = e[1], n = e[2];
                    return 0 === o ? [
                        n,
                        n,
                        n,
                        e[3]
                    ] : [
                        (t = function(e, t, r) {
                            return e < 0 ? e += 6 : 6 <= e && (e -= 6), e < 1 ? t + (r - t) * e : e < 3 ? r : e < 4 ? t + (r - t) * (4 - e) : t;
                        })(2 + r, o = 2 * n - (n = n < .5 ? (1 + o) * n : n + o - n * o), n),
                        t(r, o, n),
                        t(r - 2, o, n),
                        e[3]
                    ];
                }, e.default.ColorConversion._rgbaToHSBA = function(e) {
                    var t, r, o = e[0], n = e[1], s = e[2], i = Math.max(o, n, s), a = i - Math.min(o, n, s);
                    return 0 == a ? r = t = 0 : (r = a / i, o === i ? t = (n - s) / a : n === i ? t = 2 + (s - o) / a : s === i && (t = 4 + (o - n) / a), t < 0 ? t += 6 : 6 <= t && (t -= 6)), [
                        t / 6,
                        r,
                        i,
                        e[3]
                    ];
                }, e.default.ColorConversion._rgbaToHSLA = function(e) {
                    var t, r, o = e[0], n = e[1], s = e[2], i = Math.max(o, n, s), a = Math.min(o, n, s), l = i + a, a = i - a;
                    return 0 == a ? r = t = 0 : (r = l < 1 ? a / l : a / (2 - l), o === i ? t = (n - s) / a : n === i ? t = 2 + (s - o) / a : s === i && (t = 4 + (o - n) / a), t < 0 ? t += 6 : 6 <= t && (t -= 6)), [
                        t / 6,
                        r,
                        l / 2,
                        e[3]
                    ];
                };
                e = e.default.ColorConversion;
                r.default = e;
            },
            {
                "../core/main": 267
            }
        ],
        253: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.map"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.map"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = (n = e("../core/main")) && n.__esModule ? n : {
                    default: n
                }, u = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                e("./p5.Color"), e("../core/friendly_errors/validate_params"), e("../core/friendly_errors/file_errors"), e("../core/friendly_errors/fes_core"), l.default.prototype.alpha = function(e) {
                    return l.default._validateParameters("alpha", arguments), this.color(e)._getAlpha();
                }, l.default.prototype.blue = function(e) {
                    return l.default._validateParameters("blue", arguments), this.color(e)._getBlue();
                }, l.default.prototype.brightness = function(e) {
                    return l.default._validateParameters("brightness", arguments), this.color(e)._getBrightness();
                }, l.default.prototype.color = function() {
                    var e;
                    return l.default._validateParameters("color", arguments), arguments[0] instanceof l.default.Color ? arguments[0] : (e = arguments[0] instanceof Array ? arguments[0] : arguments, new l.default.Color(this, e));
                }, l.default.prototype.green = function(e) {
                    return l.default._validateParameters("green", arguments), this.color(e)._getGreen();
                }, l.default.prototype.hue = function(e) {
                    return l.default._validateParameters("hue", arguments), this.color(e)._getHue();
                }, l.default.prototype.lerpColor = function(e, t, r) {
                    l.default._validateParameters("lerpColor", arguments);
                    var o, n, s, i = this._colorMode, a = this._colorMaxes;
                    if (i === u.RGB) n = e.levels.map(function(e) {
                        return e / 255;
                    }), s = t.levels.map(function(e) {
                        return e / 255;
                    });
                    else if (i === u.HSB) e._getBrightness(), t._getBrightness(), n = e.hsba, s = t.hsba;
                    else {
                        if (i !== u.HSL) throw new Error("".concat(i, "cannot be used for interpolation."));
                        e._getLightness(), t._getLightness(), n = e.hsla, s = t.hsla;
                    }
                    return r = Math.max(Math.min(r, 1), 0), void 0 === this.lerp && (this.lerp = function(e, t, r) {
                        return r * (t - e) + e;
                    }), e = this.lerp(n[0], s[0], r), t = this.lerp(n[1], s[1], r), o = this.lerp(n[2], s[2], r), n = this.lerp(n[3], s[3], r), e *= a[i][0], t *= a[i][1], o *= a[i][2], n *= a[i][3], this.color(e, t, o, n);
                }, l.default.prototype.lightness = function(e) {
                    return l.default._validateParameters("lightness", arguments), this.color(e)._getLightness();
                }, l.default.prototype.red = function(e) {
                    return l.default._validateParameters("red", arguments), this.color(e)._getRed();
                }, l.default.prototype.saturation = function(e) {
                    return l.default._validateParameters("saturation", arguments), this.color(e)._getSaturation();
                };
                var n = l.default;
                r.default = n;
            },
            {
                "../core/constants": 256,
                "../core/friendly_errors/fes_core": 258,
                "../core/friendly_errors/file_errors": 259,
                "../core/friendly_errors/validate_params": 262,
                "../core/main": 267,
                "./p5.Color": 254,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        254: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.constructor"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.trim"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.constructor"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.trim"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var c = n(e("../core/main")), d = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants")), f = n(e("./color_conversion"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                function n(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                c.default.Color = function(e, t) {
                    if (this._storeModeAndMaxes(e._colorMode, e._colorMaxes), this.mode !== d.RGB && this.mode !== d.HSL && this.mode !== d.HSB) throw new Error("".concat(this.mode, " is an invalid colorMode."));
                    return this._array = c.default.Color._parseInputs.apply(this, t), this._calculateLevels(), this;
                }, c.default.Color.prototype.toString = function(e) {
                    var t = this.levels, r = this._array, o = r[3];
                    switch(e){
                        case "#rrggbb":
                            return "#".concat(t[0] < 16 ? "0".concat(t[0].toString(16)) : t[0].toString(16), t[1] < 16 ? "0".concat(t[1].toString(16)) : t[1].toString(16), t[2] < 16 ? "0".concat(t[2].toString(16)) : t[2].toString(16));
                        case "#rrggbbaa":
                            return "#".concat(t[0] < 16 ? "0".concat(t[0].toString(16)) : t[0].toString(16), t[1] < 16 ? "0".concat(t[1].toString(16)) : t[1].toString(16), t[2] < 16 ? "0".concat(t[2].toString(16)) : t[2].toString(16), t[3] < 16 ? "0".concat(t[3].toString(16)) : t[3].toString(16));
                        case "#rgb":
                            return "#".concat(Math.round(15 * r[0]).toString(16), Math.round(15 * r[1]).toString(16), Math.round(15 * r[2]).toString(16));
                        case "#rgba":
                            return "#".concat(Math.round(15 * r[0]).toString(16), Math.round(15 * r[1]).toString(16), Math.round(15 * r[2]).toString(16), Math.round(15 * r[3]).toString(16));
                        case "rgb":
                            return "rgb(".concat(t[0], ", ", t[1], ", ", t[2], ")");
                        case "rgb%":
                            return "rgb(".concat((100 * r[0]).toPrecision(3), "%, ", (100 * r[1]).toPrecision(3), "%, ", (100 * r[2]).toPrecision(3), "%)");
                        case "rgba%":
                            return "rgba(".concat((100 * r[0]).toPrecision(3), "%, ", (100 * r[1]).toPrecision(3), "%, ", (100 * r[2]).toPrecision(3), "%, ", (100 * r[3]).toPrecision(3), "%)");
                        case "hsb":
                        case "hsv":
                            return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsb(".concat(this.hsba[0] * this.maxes[d.HSB][0], ", ", this.hsba[1] * this.maxes[d.HSB][1], ", ", this.hsba[2] * this.maxes[d.HSB][2], ")");
                        case "hsb%":
                        case "hsv%":
                            return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsb(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%)");
                        case "hsba":
                        case "hsva":
                            return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsba(".concat(this.hsba[0] * this.maxes[d.HSB][0], ", ", this.hsba[1] * this.maxes[d.HSB][1], ", ", this.hsba[2] * this.maxes[d.HSB][2], ", ", o, ")");
                        case "hsba%":
                        case "hsva%":
                            return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsba(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%, ", (100 * o).toPrecision(3), "%)");
                        case "hsl":
                            return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsl(".concat(this.hsla[0] * this.maxes[d.HSL][0], ", ", this.hsla[1] * this.maxes[d.HSL][1], ", ", this.hsla[2] * this.maxes[d.HSL][2], ")");
                        case "hsl%":
                            return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%)");
                        case "hsla":
                            return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsla(".concat(this.hsla[0] * this.maxes[d.HSL][0], ", ", this.hsla[1] * this.maxes[d.HSL][1], ", ", this.hsla[2] * this.maxes[d.HSL][2], ", ", o, ")");
                        case "hsla%":
                            return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%, ", (100 * o).toPrecision(3), "%)");
                        default:
                            return "rgba(".concat(t[0], ",", t[1], ",", t[2], ",", o, ")");
                    }
                }, c.default.Color.prototype.setRed = function(e) {
                    this._array[0] = e / this.maxes[d.RGB][0], this._calculateLevels();
                }, c.default.Color.prototype.setGreen = function(e) {
                    this._array[1] = e / this.maxes[d.RGB][1], this._calculateLevels();
                }, c.default.Color.prototype.setBlue = function(e) {
                    this._array[2] = e / this.maxes[d.RGB][2], this._calculateLevels();
                }, c.default.Color.prototype.setAlpha = function(e) {
                    this._array[3] = e / this.maxes[this.mode][3], this._calculateLevels();
                }, c.default.Color.prototype._calculateLevels = function() {
                    for(var e = this._array, t = this.levels = new Array(e.length), r = e.length - 1; 0 <= r; --r)t[r] = Math.round(255 * e[r]);
                    this.hsla = null, this.hsba = null;
                }, c.default.Color.prototype._getAlpha = function() {
                    return this._array[3] * this.maxes[this.mode][3];
                }, c.default.Color.prototype._storeModeAndMaxes = function(e, t) {
                    this.mode = e, this.maxes = t;
                }, c.default.Color.prototype._getMode = function() {
                    return this.mode;
                }, c.default.Color.prototype._getMaxes = function() {
                    return this.maxes;
                }, c.default.Color.prototype._getBlue = function() {
                    return this._array[2] * this.maxes[d.RGB][2];
                }, c.default.Color.prototype._getBrightness = function() {
                    return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), this.hsba[2] * this.maxes[d.HSB][2];
                }, c.default.Color.prototype._getGreen = function() {
                    return this._array[1] * this.maxes[d.RGB][1];
                }, c.default.Color.prototype._getHue = function() {
                    return this.mode === d.HSB ? (this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), this.hsba[0] * this.maxes[d.HSB][0]) : (this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), this.hsla[0] * this.maxes[d.HSL][0]);
                }, c.default.Color.prototype._getLightness = function() {
                    return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), this.hsla[2] * this.maxes[d.HSL][2];
                }, c.default.Color.prototype._getRed = function() {
                    return this._array[0] * this.maxes[d.RGB][0];
                }, c.default.Color.prototype._getSaturation = function() {
                    return this.mode === d.HSB ? (this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), this.hsba[1] * this.maxes[d.HSB][1]) : (this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), this.hsla[1] * this.maxes[d.HSL][1]);
                };
                var h = {
                    aliceblue: "#f0f8ff",
                    antiquewhite: "#faebd7",
                    aqua: "#00ffff",
                    aquamarine: "#7fffd4",
                    azure: "#f0ffff",
                    beige: "#f5f5dc",
                    bisque: "#ffe4c4",
                    black: "#000000",
                    blanchedalmond: "#ffebcd",
                    blue: "#0000ff",
                    blueviolet: "#8a2be2",
                    brown: "#a52a2a",
                    burlywood: "#deb887",
                    cadetblue: "#5f9ea0",
                    chartreuse: "#7fff00",
                    chocolate: "#d2691e",
                    coral: "#ff7f50",
                    cornflowerblue: "#6495ed",
                    cornsilk: "#fff8dc",
                    crimson: "#dc143c",
                    cyan: "#00ffff",
                    darkblue: "#00008b",
                    darkcyan: "#008b8b",
                    darkgoldenrod: "#b8860b",
                    darkgray: "#a9a9a9",
                    darkgreen: "#006400",
                    darkgrey: "#a9a9a9",
                    darkkhaki: "#bdb76b",
                    darkmagenta: "#8b008b",
                    darkolivegreen: "#556b2f",
                    darkorange: "#ff8c00",
                    darkorchid: "#9932cc",
                    darkred: "#8b0000",
                    darksalmon: "#e9967a",
                    darkseagreen: "#8fbc8f",
                    darkslateblue: "#483d8b",
                    darkslategray: "#2f4f4f",
                    darkslategrey: "#2f4f4f",
                    darkturquoise: "#00ced1",
                    darkviolet: "#9400d3",
                    deeppink: "#ff1493",
                    deepskyblue: "#00bfff",
                    dimgray: "#696969",
                    dimgrey: "#696969",
                    dodgerblue: "#1e90ff",
                    firebrick: "#b22222",
                    floralwhite: "#fffaf0",
                    forestgreen: "#228b22",
                    fuchsia: "#ff00ff",
                    gainsboro: "#dcdcdc",
                    ghostwhite: "#f8f8ff",
                    gold: "#ffd700",
                    goldenrod: "#daa520",
                    gray: "#808080",
                    green: "#008000",
                    greenyellow: "#adff2f",
                    grey: "#808080",
                    honeydew: "#f0fff0",
                    hotpink: "#ff69b4",
                    indianred: "#cd5c5c",
                    indigo: "#4b0082",
                    ivory: "#fffff0",
                    khaki: "#f0e68c",
                    lavender: "#e6e6fa",
                    lavenderblush: "#fff0f5",
                    lawngreen: "#7cfc00",
                    lemonchiffon: "#fffacd",
                    lightblue: "#add8e6",
                    lightcoral: "#f08080",
                    lightcyan: "#e0ffff",
                    lightgoldenrodyellow: "#fafad2",
                    lightgray: "#d3d3d3",
                    lightgreen: "#90ee90",
                    lightgrey: "#d3d3d3",
                    lightpink: "#ffb6c1",
                    lightsalmon: "#ffa07a",
                    lightseagreen: "#20b2aa",
                    lightskyblue: "#87cefa",
                    lightslategray: "#778899",
                    lightslategrey: "#778899",
                    lightsteelblue: "#b0c4de",
                    lightyellow: "#ffffe0",
                    lime: "#00ff00",
                    limegreen: "#32cd32",
                    linen: "#faf0e6",
                    magenta: "#ff00ff",
                    maroon: "#800000",
                    mediumaquamarine: "#66cdaa",
                    mediumblue: "#0000cd",
                    mediumorchid: "#ba55d3",
                    mediumpurple: "#9370db",
                    mediumseagreen: "#3cb371",
                    mediumslateblue: "#7b68ee",
                    mediumspringgreen: "#00fa9a",
                    mediumturquoise: "#48d1cc",
                    mediumvioletred: "#c71585",
                    midnightblue: "#191970",
                    mintcream: "#f5fffa",
                    mistyrose: "#ffe4e1",
                    moccasin: "#ffe4b5",
                    navajowhite: "#ffdead",
                    navy: "#000080",
                    oldlace: "#fdf5e6",
                    olive: "#808000",
                    olivedrab: "#6b8e23",
                    orange: "#ffa500",
                    orangered: "#ff4500",
                    orchid: "#da70d6",
                    palegoldenrod: "#eee8aa",
                    palegreen: "#98fb98",
                    paleturquoise: "#afeeee",
                    palevioletred: "#db7093",
                    papayawhip: "#ffefd5",
                    peachpuff: "#ffdab9",
                    peru: "#cd853f",
                    pink: "#ffc0cb",
                    plum: "#dda0dd",
                    powderblue: "#b0e0e6",
                    purple: "#800080",
                    rebeccapurple: "#663399",
                    red: "#ff0000",
                    rosybrown: "#bc8f8f",
                    royalblue: "#4169e1",
                    saddlebrown: "#8b4513",
                    salmon: "#fa8072",
                    sandybrown: "#f4a460",
                    seagreen: "#2e8b57",
                    seashell: "#fff5ee",
                    sienna: "#a0522d",
                    silver: "#c0c0c0",
                    skyblue: "#87ceeb",
                    slateblue: "#6a5acd",
                    slategray: "#708090",
                    slategrey: "#708090",
                    snow: "#fffafa",
                    springgreen: "#00ff7f",
                    steelblue: "#4682b4",
                    tan: "#d2b48c",
                    teal: "#008080",
                    thistle: "#d8bfd8",
                    tomato: "#ff6347",
                    turquoise: "#40e0d0",
                    violet: "#ee82ee",
                    wheat: "#f5deb3",
                    white: "#ffffff",
                    whitesmoke: "#f5f5f5",
                    yellow: "#ffff00",
                    yellowgreen: "#9acd32"
                }, e = /\s*/, s = /(\d{1,3})/, l = /((?:\d+(?:\.\d+)?)|(?:\.\d+))/, u = new RegExp("".concat(l.source, "%")), p = {
                    HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                    HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                    HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
                    HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
                    RGB: new RegExp([
                        "^rgb\\(",
                        s.source,
                        ",",
                        s.source,
                        ",",
                        s.source,
                        "\\)$"
                    ].join(e.source), "i"),
                    RGB_PERCENT: new RegExp([
                        "^rgb\\(",
                        u.source,
                        ",",
                        u.source,
                        ",",
                        u.source,
                        "\\)$"
                    ].join(e.source), "i"),
                    RGBA: new RegExp([
                        "^rgba\\(",
                        s.source,
                        ",",
                        s.source,
                        ",",
                        s.source,
                        ",",
                        l.source,
                        "\\)$"
                    ].join(e.source), "i"),
                    RGBA_PERCENT: new RegExp([
                        "^rgba\\(",
                        u.source,
                        ",",
                        u.source,
                        ",",
                        u.source,
                        ",",
                        l.source,
                        "\\)$"
                    ].join(e.source), "i"),
                    HSL: new RegExp([
                        "^hsl\\(",
                        s.source,
                        ",",
                        u.source,
                        ",",
                        u.source,
                        "\\)$"
                    ].join(e.source), "i"),
                    HSLA: new RegExp([
                        "^hsla\\(",
                        s.source,
                        ",",
                        u.source,
                        ",",
                        u.source,
                        ",",
                        l.source,
                        "\\)$"
                    ].join(e.source), "i"),
                    HSB: new RegExp([
                        "^hsb\\(",
                        s.source,
                        ",",
                        u.source,
                        ",",
                        u.source,
                        "\\)$"
                    ].join(e.source), "i"),
                    HSBA: new RegExp([
                        "^hsba\\(",
                        s.source,
                        ",",
                        u.source,
                        ",",
                        u.source,
                        ",",
                        l.source,
                        "\\)$"
                    ].join(e.source), "i")
                }, s = (c.default.Color._parseInputs = function(e, t, r, o) {
                    var n, s = arguments.length, i = this.mode, a = this.maxes[i], l = [];
                    if (3 <= s) {
                        for(l[0] = e / a[0], l[1] = t / a[1], l[2] = r / a[2], l[3] = "number" == typeof o ? o / a[3] : 1, n = l.length - 1; 0 <= n; --n){
                            var u = l[n];
                            u < 0 ? l[n] = 0 : 1 < u && (l[n] = 1);
                        }
                        return i === d.HSL ? f.default._hslaToRGBA(l) : i === d.HSB ? f.default._hsbaToRGBA(l) : l;
                    }
                    if (1 === s && "string" == typeof e) {
                        r = e.trim().toLowerCase();
                        if (h[r]) return c.default.Color._parseInputs.call(this, h[r]);
                        if (p.HEX3.test(r)) return (l = p.HEX3.exec(r).slice(1).map(function(e) {
                            return parseInt(e + e, 16) / 255;
                        }))[3] = 1, l;
                        if (p.HEX6.test(r)) return (l = p.HEX6.exec(r).slice(1).map(function(e) {
                            return parseInt(e, 16) / 255;
                        }))[3] = 1, l;
                        if (p.HEX4.test(r)) return l = p.HEX4.exec(r).slice(1).map(function(e) {
                            return parseInt(e + e, 16) / 255;
                        });
                        if (p.HEX8.test(r)) return l = p.HEX8.exec(r).slice(1).map(function(e) {
                            return parseInt(e, 16) / 255;
                        });
                        if (p.RGB.test(r)) return (l = p.RGB.exec(r).slice(1).map(function(e) {
                            return e / 255;
                        }))[3] = 1, l;
                        if (p.RGB_PERCENT.test(r)) return (l = p.RGB_PERCENT.exec(r).slice(1).map(function(e) {
                            return parseFloat(e) / 100;
                        }))[3] = 1, l;
                        if (p.RGBA.test(r)) return l = p.RGBA.exec(r).slice(1).map(function(e, t) {
                            return 3 === t ? parseFloat(e) : e / 255;
                        });
                        if (p.RGBA_PERCENT.test(r)) return l = p.RGBA_PERCENT.exec(r).slice(1).map(function(e, t) {
                            return 3 === t ? parseFloat(e) : parseFloat(e) / 100;
                        });
                        if (p.HSL.test(r) ? (l = p.HSL.exec(r).slice(1).map(function(e, t) {
                            return 0 === t ? parseInt(e, 10) / 360 : parseInt(e, 10) / 100;
                        }))[3] = 1 : p.HSLA.test(r) && (l = p.HSLA.exec(r).slice(1).map(function(e, t) {
                            return 0 === t ? parseInt(e, 10) / 360 : 3 === t ? parseFloat(e) : parseInt(e, 10) / 100;
                        })), (l = l.map(function(e) {
                            return Math.max(Math.min(e, 1), 0);
                        })).length) return f.default._hslaToRGBA(l);
                        if (p.HSB.test(r) ? (l = p.HSB.exec(r).slice(1).map(function(e, t) {
                            return 0 === t ? parseInt(e, 10) / 360 : parseInt(e, 10) / 100;
                        }))[3] = 1 : p.HSBA.test(r) && (l = p.HSBA.exec(r).slice(1).map(function(e, t) {
                            return 0 === t ? parseInt(e, 10) / 360 : 3 === t ? parseFloat(e) : parseInt(e, 10) / 100;
                        })), l.length) {
                            for(n = l.length - 1; 0 <= n; --n)l[n] = Math.max(Math.min(l[n], 1), 0);
                            return f.default._hsbaToRGBA(l);
                        }
                        l = [
                            1,
                            1,
                            1,
                            1
                        ];
                    } else {
                        if (1 !== s && 2 !== s || "number" != typeof e) throw new Error("".concat(arguments, "is not a valid color representation."));
                        l[0] = e / a[2], l[1] = e / a[2], l[2] = e / a[2], l[3] = "number" == typeof t ? t / a[3] : 1, l = l.map(function(e) {
                            return Math.max(Math.min(e, 1), 0);
                        });
                    }
                    return l;
                }, c.default.Color);
                r.default = s;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "./color_conversion": 252,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.constructor": 180,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.trim": 193,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        255: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.fill"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (n = e("../core/main")) && n.__esModule ? n : {
                    default: n
                }, a = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = l();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function l() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, l = function() {
                        return e;
                    }, e);
                }
                e("./p5.Color"), s.default.prototype.background = function() {
                    var e;
                    return (e = this._renderer).background.apply(e, arguments), this;
                }, s.default.prototype.clear = function() {
                    return this._renderer.clear((arguments.length <= 0 ? void 0 : arguments[0]) || 0, (arguments.length <= 1 ? void 0 : arguments[1]) || 0, (arguments.length <= 2 ? void 0 : arguments[2]) || 0, (arguments.length <= 3 ? void 0 : arguments[3]) || 0), this;
                }, s.default.prototype.colorMode = function(e, t, r, o, n) {
                    return s.default._validateParameters("colorMode", arguments), e !== a.RGB && e !== a.HSB && e !== a.HSL || (this._colorMode = e, e = this._colorMaxes[e], 2 === arguments.length ? (e[0] = t, e[1] = t, e[2] = t, e[3] = t) : 4 === arguments.length ? (e[0] = t, e[1] = r, e[2] = o) : 5 === arguments.length && (e[0] = t, e[1] = r, e[2] = o, e[3] = n)), this;
                }, s.default.prototype.fill = function() {
                    var e;
                    return this._renderer._setProperty("_fillSet", !0), this._renderer._setProperty("_doFill", !0), (e = this._renderer).fill.apply(e, arguments), this;
                }, s.default.prototype.noFill = function() {
                    return this._renderer._setProperty("_doFill", !1), this;
                }, s.default.prototype.noStroke = function() {
                    return this._renderer._setProperty("_doStroke", !1), this;
                }, s.default.prototype.stroke = function() {
                    var e;
                    return this._renderer._setProperty("_strokeSet", !0), this._renderer._setProperty("_doStroke", !0), (e = this._renderer).stroke.apply(e, arguments), this;
                }, s.default.prototype.erase = function() {
                    return this._renderer.erase(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 255, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 255), this;
                }, s.default.prototype.noErase = function() {
                    return this._renderer.noErase(), this;
                };
                var n = s.default;
                r.default = n;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "./p5.Color": 254,
                "core-js/modules/es.array.fill": 152,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        256: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.BEZIER = r.QUADRATIC = r.LINEAR = r._CTX_MIDDLE = r._DEFAULT_LEADMULT = r._DEFAULT_TEXT_FILL = r.WORD = r.CHAR = r.BOLDITALIC = r.BOLD = r.ITALIC = r.NORMAL = r.BLUR = r.ERODE = r.DILATE = r.POSTERIZE = r.INVERT = r.OPAQUE = r.GRAY = r.THRESHOLD = r.BURN = r.DODGE = r.SOFT_LIGHT = r.HARD_LIGHT = r.OVERLAY = r.REPLACE = r.SCREEN = r.MULTIPLY = r.EXCLUSION = r.SUBTRACT = r.DIFFERENCE = r.LIGHTEST = r.DARKEST = r.ADD = r.REMOVE = r.BLEND = r.UP_ARROW = r.TAB = r.SHIFT = r.RIGHT_ARROW = r.RETURN = r.OPTION = r.LEFT_ARROW = r.ESCAPE = r.ENTER = r.DOWN_ARROW = r.DELETE = r.CONTROL = r.BACKSPACE = r.ALT = r.AUTO = r.HSL = r.HSB = r.RGB = r.MITER = r.BEVEL = r.ROUND = r.SQUARE = r.PROJECT = r.PIE = r.CHORD = r.OPEN = r.CLOSE = r.TESS = r.QUAD_STRIP = r.QUADS = r.TRIANGLE_STRIP = r.TRIANGLE_FAN = r.TRIANGLES = r.LINE_LOOP = r.LINE_STRIP = r.LINES = r.POINTS = r.BASELINE = r.BOTTOM = r.TOP = r.CENTER = r.LEFT = r.RIGHT = r.RADIUS = r.CORNERS = r.CORNER = r.RAD_TO_DEG = r.DEG_TO_RAD = r.RADIANS = r.DEGREES = r.TWO_PI = r.TAU = r.QUARTER_PI = r.PI = r.HALF_PI = r.WAIT = r.TEXT = r.MOVE = r.HAND = r.CROSS = r.ARROW = r.WEBGL = r.P2D = r.VERSION = void 0, r.COVER = r.CONTAIN = r.FALLBACK = r.LABEL = r.AXES = r.GRID = r._DEFAULT_FILL = r._DEFAULT_STROKE = r.PORTRAIT = r.LANDSCAPE = r.MIRROR = r.CLAMP = r.REPEAT = r.NEAREST = r.IMAGE = r.IMMEDIATE = r.TEXTURE = r.FILL = r.STROKE = r.CURVE = void 0;
                var o = Math.PI, n = (r.VERSION = "1.5.0", r.P2D = "p2d", r.WEBGL = "webgl", r.ARROW = "default", r.CROSS = "crosshair", r.HAND = "pointer", r.MOVE = "move", r.TEXT = "text", r.WAIT = "wait", o / 2), n = (r.HALF_PI = n, o), n = (r.PI = n, o / 4), n = (r.QUARTER_PI = n, 2 * o), n = (r.TAU = n, 2 * o), n = (r.TWO_PI = n, r.DEGREES = "degrees", r.RADIANS = "radians", o / 180), n = (r.DEG_TO_RAD = n, 180 / o);
                r.RAD_TO_DEG = n, r.CORNER = "corner", r.CORNERS = "corners", r.RADIUS = "radius", r.RIGHT = "right", r.LEFT = "left", r.CENTER = "center", r.TOP = "top", r.BOTTOM = "bottom", r.BASELINE = "alphabetic", r.POINTS = 0, r.LINES = 1, r.LINE_STRIP = 3, r.LINE_LOOP = 2, r.TRIANGLES = 4, r.TRIANGLE_FAN = 6, r.TRIANGLE_STRIP = 5, r.QUADS = "quads", r.QUAD_STRIP = "quad_strip", r.TESS = "tess", r.CLOSE = "close", r.OPEN = "open", r.CHORD = "chord", r.PIE = "pie", r.PROJECT = "square", r.SQUARE = "butt", r.ROUND = "round", r.BEVEL = "bevel", r.MITER = "miter", r.RGB = "rgb", r.HSB = "hsb", r.HSL = "hsl", r.AUTO = "auto", r.ALT = 18, r.BACKSPACE = 8, r.CONTROL = 17, r.DELETE = 46, r.DOWN_ARROW = 40, r.ENTER = 13, r.ESCAPE = 27, r.LEFT_ARROW = 37, r.OPTION = 18, r.RETURN = 13, r.RIGHT_ARROW = 39, r.SHIFT = 16, r.TAB = 9, r.UP_ARROW = 38, r.BLEND = "source-over", r.REMOVE = "destination-out", r.ADD = "lighter", r.DARKEST = "darken", r.LIGHTEST = "lighten", r.DIFFERENCE = "difference", r.SUBTRACT = "subtract", r.EXCLUSION = "exclusion", r.MULTIPLY = "multiply", r.SCREEN = "screen", r.REPLACE = "copy", r.OVERLAY = "overlay", r.HARD_LIGHT = "hard-light", r.SOFT_LIGHT = "soft-light", r.DODGE = "color-dodge", r.BURN = "color-burn", r.THRESHOLD = "threshold", r.GRAY = "gray", r.OPAQUE = "opaque", r.INVERT = "invert", r.POSTERIZE = "posterize", r.DILATE = "dilate", r.ERODE = "erode", r.BLUR = "blur", r.NORMAL = "normal", r.ITALIC = "italic", r.BOLD = "bold", r.BOLDITALIC = "bold italic", r.CHAR = "CHAR", r.WORD = "WORD", r._DEFAULT_TEXT_FILL = "#000000", r._DEFAULT_LEADMULT = 1.25, r._CTX_MIDDLE = "middle", r.LINEAR = "linear", r.QUADRATIC = "quadratic", r.BEZIER = "bezier", r.CURVE = "curve", r.STROKE = "stroke", r.FILL = "fill", r.TEXTURE = "texture", r.IMMEDIATE = "immediate", r.IMAGE = "image", r.NEAREST = "nearest", r.REPEAT = "repeat", r.CLAMP = "clamp", r.MIRROR = "mirror", r.LANDSCAPE = "landscape", r.PORTRAIT = "portrait", r._DEFAULT_STROKE = "#000000", r._DEFAULT_FILL = "#FFFFFF", r.GRID = "grid", r.AXES = "axes", r.LABEL = "label", r.FALLBACK = "fallback", r.CONTAIN = "contain";
                r.COVER = "cover";
            },
            {}
        ],
        257: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.search"), e("core-js/modules/es.string.split"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.search"), e("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (s = e("./main")) && s.__esModule ? s : {
                    default: s
                }, s = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("./constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                var l = [
                    s.ARROW,
                    s.CROSS,
                    s.HAND,
                    s.MOVE,
                    s.TEXT,
                    s.WAIT
                ], u = (n.default.prototype._frameRate = 0, n.default.prototype._lastFrameTime = window.performance.now(), n.default.prototype._targetFrameRate = 60, window.print);
                function c() {
                    return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth || 0;
                }
                function d() {
                    return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight || 0;
                }
                n.default.prototype.print = function() {
                    var e;
                    arguments.length ? (e = console).log.apply(e, arguments) : u();
                }, n.default.prototype.frameCount = 0, n.default.prototype.deltaTime = 0, n.default.prototype.focused = document.hasFocus(), n.default.prototype.cursor = function(e, t, r) {
                    var o, n = "auto", s = this._curElement.elt;
                    l.includes(e) ? n = e : "string" == typeof e && (o = "", t && r && "number" == typeof t && "number" == typeof r && (o = "".concat(t, " ").concat(r)), n = "http://" === e.substring(0, 7) || "https://" === e.substring(0, 8) || /\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e) ? "url(".concat(e, ") ").concat(o, ", auto") : e), s.style.cursor = n;
                }, n.default.prototype.frameRate = function(e) {
                    return n.default._validateParameters("frameRate", arguments), "number" != typeof e || e < 0 ? this._frameRate : (this._setProperty("_targetFrameRate", e), 0 === e && this._setProperty("_frameRate", e), this);
                }, n.default.prototype.getFrameRate = function() {
                    return this.frameRate();
                }, n.default.prototype.setFrameRate = function(e) {
                    return this.frameRate(e);
                }, n.default.prototype.noCursor = function() {
                    this._curElement.elt.style.cursor = "none";
                }, n.default.prototype.displayWidth = screen.width, n.default.prototype.displayHeight = screen.height, n.default.prototype.windowWidth = c(), n.default.prototype.windowHeight = d(), n.default.prototype._onresize = function(e) {
                    this._setProperty("windowWidth", c()), this._setProperty("windowHeight", d());
                    var t = this._isGlobal ? window : this;
                    "function" != typeof t.windowResized || void 0 === (t = t.windowResized(e)) || t || e.preventDefault();
                }, n.default.prototype.width = 0, n.default.prototype.height = 0, n.default.prototype.fullscreen = function(e) {
                    if (n.default._validateParameters("fullscreen", arguments), void 0 === e) return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
                    if (e) {
                        e = document.documentElement;
                        if (!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled)) throw new Error("Fullscreen not enabled in this browser.");
                        e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen ? e.webkitRequestFullscreen() : e.msRequestFullscreen && e.msRequestFullscreen();
                    } else document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
                }, n.default.prototype.pixelDensity = function(e) {
                    var t;
                    return n.default._validateParameters("pixelDensity", arguments), "number" == typeof e ? (e !== this._pixelDensity && (this._pixelDensity = e), (t = this).resizeCanvas(this.width, this.height, !0)) : t = this._pixelDensity, t;
                }, n.default.prototype.displayDensity = function() {
                    return window.devicePixelRatio;
                }, n.default.prototype.getURL = function() {
                    return location.href;
                }, n.default.prototype.getURLPath = function() {
                    return location.pathname.split("/").filter(function(e) {
                        return "" !== e;
                    });
                }, n.default.prototype.getURLParams = function() {
                    for(var e, t = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim, r = {}; null != (e = t.exec(location.search));)e.index === t.lastIndex && t.lastIndex++, r[e[1]] = e[2];
                    return r;
                };
                e = n.default;
                r.default = e;
            },
            {
                "./constants": 256,
                "./main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.string.includes": 185,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.search": 190,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        258: [
            function(r, e, t) {
                "use strict";
                r("core-js/modules/es.symbol"), r("core-js/modules/es.symbol.description"), r("core-js/modules/es.symbol.iterator"), r("core-js/modules/es.array.concat"), r("core-js/modules/es.array.filter"), r("core-js/modules/es.array.for-each"), r("core-js/modules/es.array.includes"), r("core-js/modules/es.array.iterator"), r("core-js/modules/es.array.join"), r("core-js/modules/es.array.map"), r("core-js/modules/es.array.slice"), r("core-js/modules/es.array.some"), r("core-js/modules/es.function.name"), r("core-js/modules/es.object.assign"), r("core-js/modules/es.object.get-own-property-names"), r("core-js/modules/es.object.keys"), r("core-js/modules/es.object.to-string"), r("core-js/modules/es.regexp.constructor"), r("core-js/modules/es.regexp.exec"), r("core-js/modules/es.regexp.to-string"), r("core-js/modules/es.string.iterator"), r("core-js/modules/es.string.match"), r("core-js/modules/es.string.replace"), r("core-js/modules/es.string.search"), r("core-js/modules/es.string.split"), r("core-js/modules/web.dom-collections.for-each"), r("core-js/modules/web.dom-collections.iterator"), r("core-js/modules/es.symbol"), r("core-js/modules/es.symbol.description"), r("core-js/modules/es.symbol.iterator"), r("core-js/modules/es.array.concat"), r("core-js/modules/es.array.filter"), r("core-js/modules/es.array.for-each"), r("core-js/modules/es.array.includes"), r("core-js/modules/es.array.iterator"), r("core-js/modules/es.array.join"), r("core-js/modules/es.array.map"), r("core-js/modules/es.array.slice"), r("core-js/modules/es.array.some"), r("core-js/modules/es.function.name"), r("core-js/modules/es.object.assign"), r("core-js/modules/es.object.get-own-property-names"), r("core-js/modules/es.object.keys"), r("core-js/modules/es.object.to-string"), r("core-js/modules/es.regexp.constructor"), r("core-js/modules/es.regexp.exec"), r("core-js/modules/es.regexp.to-string"), r("core-js/modules/es.string.iterator"), r("core-js/modules/es.string.match"), r("core-js/modules/es.string.replace"), r("core-js/modules/es.string.search"), r("core-js/modules/es.string.split"), r("core-js/modules/web.dom-collections.for-each"), r("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = void 0;
                var o = (l = r("../main")) && l.__esModule ? l : {
                    default: l
                };
                r("../internationalization");
                function n(r, o) {
                    o = o || console.log.bind(console), s || i(), s.some(function(e) {
                        var t;
                        if (r.message && null !== r.message.match("\\W?".concat(e.name, "\\W"))) return t = "function" === e.type ? "".concat(e.name, "()") : e.name, o("Did you just try to use p5.js's ".concat(t, " ").concat(e.type, "? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat(a)), !0;
                    });
                }
                var s = null, i = null, a = (o.default._friendlyError = o.default._checkForUserDefinedFunctions = o.default._fesErrorMonitor = function() {}, s = null, "https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup"), i = function() {
                    function e(r) {
                        return Object.getOwnPropertyNames(r).filter(function(e) {
                            return "_" !== e[0] && !(e in t) && (t[e] = !0);
                        }).map(function(e) {
                            var t = "function" == typeof r[e] ? "function" : e === e.toUpperCase() ? "constant" : "variable";
                            return {
                                name: e,
                                type: t
                            };
                        });
                    }
                    var t = {};
                    (s = [].concat(e(o.default.prototype), e(r("../constants")))).sort(function(e, t) {
                        return t.name.length - e.name.length;
                    });
                }, l = (o.default.prototype._helpForMisusedAtTopLevelCode = n, "complete" !== document.readyState && (window.addEventListener("error", n, !1), window.addEventListener("load", function() {
                    window.removeEventListener("error", n, !1);
                })), o.default);
                t.default = l;
            },
            {
                "../constants": 256,
                "../internationalization": 265,
                "../main": 267,
                "./browser_errors": void 0,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.for-each": 154,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.array.some": 163,
                "core-js/modules/es.function.name": 165,
                "core-js/modules/es.object.assign": 172,
                "core-js/modules/es.object.get-own-property-names": 174,
                "core-js/modules/es.object.keys": 176,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.constructor": 180,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.match": 187,
                "core-js/modules/es.string.replace": 189,
                "core-js/modules/es.string.search": 190,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/web.dom-collections.for-each": 229,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        259: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (o = e("../main")) && o.__esModule ? o : {
                    default: o
                };
                e("../internationalization");
                o.default._friendlyFileLoadError = function() {};
                e = o.default;
                r.default = e;
            },
            {
                "../internationalization": 265,
                "../main": 267
            }
        ],
        260: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.constructor"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.match"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.trim"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.for-each"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.constructor"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.match"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.trim"), e("core-js/modules/web.dom-collections.for-each"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = L(e("../main")), s = e("../internationalization"), a = O(e("../constants")), l, u, c, d, f, h, p, m, y, g, v, b, j, _, x, w, S, M, E, T, D;
                function C() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, C = function() {
                        return e;
                    }, e);
                }
                function O(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = C();
                    if (t && t.has(e)) return t.get(e);
                    var r, o, n = {}, s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e)Object.prototype.hasOwnProperty.call(e, r) && ((o = s ? Object.getOwnPropertyDescriptor(e, r) : null) && (o.get || o.set) ? Object.defineProperty(n, r, o) : n[r] = e[r]);
                    return n.default = e, t && t.set(e, n), n;
                }
                function L(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                function I(e) {
                    return P(e) || A(e) || k();
                }
                function k() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance");
                }
                function A(e) {
                    if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
                }
                function P(e) {
                    if (Array.isArray(e)) {
                        for(var t = 0, r = new Array(e.length); t < e.length; t++)r[t] = e[t];
                        return r;
                    }
                }
                n.default._fesCodeReader = function() {};
                var R = n.default;
                r.default = R;
            },
            {
                "../constants": 256,
                "../internationalization": 265,
                "../main": 267,
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.for-each": 154,
                "core-js/modules/es.array.from": 155,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.keys": 176,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.constructor": 180,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.includes": 185,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.match": 187,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.string.trim": 193,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.for-each": 229,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        261: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.match"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.match"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("../main")) && e.__esModule ? e : {
                    default: e
                };
                function o() {
                    var t = /(^|@)\S+:\d+/, r = /^\s*at .*(\S+:\d+|\(native\))/m, o = /^(eval@)?(\[native code])?$/;
                    return {
                        parse: function(e) {
                            return void 0 !== e.stacktrace || void 0 !== e["opera#sourceloc"] ? this.parseOpera(e) : e.stack && e.stack.match(r) ? this.parseV8OrIE(e) : e.stack ? this.parseFFOrSafari(e) : void 0;
                        },
                        extractLocation: function(e) {
                            return -1 === e.indexOf(":") ? [
                                e
                            ] : [
                                (e = /(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e.replace(/[()]/g, "")))[1],
                                e[2] || void 0,
                                e[3] || void 0
                            ];
                        },
                        parseV8OrIE: function(e) {
                            return e.stack.split("\n").filter(function(e) {
                                return !!e.match(r);
                            }, this).map(function(e) {
                                var t = (e = -1 < e.indexOf("(eval ") ? e.replace(/eval code/g, "eval").replace(/(\(eval at [^()]*)|(\),.*$)/g, "") : e).replace(/^\s+/, "").replace(/\(eval code/g, "("), r = t.match(/ (\((.+):(\d+):(\d+)\)$)/), t = (t = r ? t.replace(r[0], "") : t).split(/\s+/).slice(1), r = this.extractLocation(r ? r[1] : t.pop());
                                return {
                                    functionName: t.join(" ") || void 0,
                                    fileName: -1 < [
                                        "eval",
                                        "<anonymous>"
                                    ].indexOf(r[0]) ? void 0 : r[0],
                                    lineNumber: r[1],
                                    columnNumber: r[2],
                                    source: e
                                };
                            }, this);
                        },
                        parseFFOrSafari: function(e) {
                            return e.stack.split("\n").filter(function(e) {
                                return !e.match(o);
                            }, this).map(function(e) {
                                var t, r;
                                return -1 === (e = -1 < e.indexOf(" > eval") ? e.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ":$1") : e).indexOf("@") && -1 === e.indexOf(":") ? {
                                    functionName: e
                                } : {
                                    functionName: (r = e.match(t = /((.*".+"[^@]*)?[^@]*)(?:@)/)) && r[1] ? r[1] : void 0,
                                    fileName: (r = this.extractLocation(e.replace(t, "")))[0],
                                    lineNumber: r[1],
                                    columnNumber: r[2],
                                    source: e
                                };
                            }, this);
                        },
                        parseOpera: function(e) {
                            return !e.stacktrace || -1 < e.message.indexOf("\n") && e.message.split("\n").length > e.stacktrace.split("\n").length ? this.parseOpera9(e) : e.stack ? this.parseOpera11(e) : this.parseOpera10(e);
                        },
                        parseOpera9: function(e) {
                            for(var t = /Line (\d+).*script (?:in )?(\S+)/i, r = e.message.split("\n"), o = [], n = 2, s = r.length; n < s; n += 2){
                                var i = t.exec(r[n]);
                                i && o.push({
                                    fileName: i[2],
                                    lineNumber: i[1],
                                    source: r[n]
                                });
                            }
                            return o;
                        },
                        parseOpera10: function(e) {
                            for(var t = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i, r = e.stacktrace.split("\n"), o = [], n = 0, s = r.length; n < s; n += 2){
                                var i = t.exec(r[n]);
                                i && o.push({
                                    functionName: i[3] || void 0,
                                    fileName: i[2],
                                    lineNumber: i[1],
                                    source: r[n]
                                });
                            }
                            return o;
                        },
                        parseOpera11: function(e) {
                            return e.stack.split("\n").filter(function(e) {
                                return !!e.match(t) && !e.match(/^Error created at/);
                            }, this).map(function(e) {
                                var t, r = e.split("@"), o = this.extractLocation(r.pop()), r = r.shift() || "";
                                return {
                                    functionName: r.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^)]*\)/g, "") || void 0,
                                    args: void 0 === (t = r.match(/\(([^)]*)\)/) ? r.replace(/^[^(]+\(([^)]*)\)$/, "$1") : t) || "[arguments not available]" === t ? void 0 : t.split(","),
                                    fileName: o[0],
                                    lineNumber: o[1],
                                    columnNumber: o[2],
                                    source: e
                                };
                            }, this);
                        }
                    };
                }
                e.default._getErrorStackParser = function() {
                    return new o;
                };
                e = e.default;
                r.default = e;
            },
            {
                "../main": 267,
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.string.match": 187,
                "core-js/modules/es.string.replace": 189,
                "core-js/modules/es.string.split": 191
            }
        ],
        262: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.last-index-of"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.map"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.get-prototype-of"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.reflect.construct"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.set"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.split"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.for-each"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.last-index-of"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.map"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.object.get-prototype-of"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.reflect.construct"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.set"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.split"), e("core-js/modules/web.dom-collections.for-each"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (n = e("../main")) && n.__esModule ? n : {
                    default: n
                };
                (function(e) {
                    if (e && e.__esModule) return;
                    if (null === e || "object" !== a(e) && "function" != typeof e) return;
                    var t = i();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                })(e("../constants")), e("../internationalization");
                function i() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, i = function() {
                        return e;
                    }, e);
                }
                function a(e) {
                    return (a = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                n.default._validateParameters = n.default._clearValidateParamsCache = function() {};
                e = n.default;
                r.default = e;
            },
            {
                "../../../docs/parameterData.json": void 0,
                "../constants": 256,
                "../internationalization": 265,
                "../main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.for-each": 154,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.array.last-index-of": 160,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.function.name": 165,
                "core-js/modules/es.map": 166,
                "core-js/modules/es.number.constructor": 169,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.get-prototype-of": 175,
                "core-js/modules/es.object.keys": 176,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.reflect.construct": 179,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.set": 183,
                "core-js/modules/es.string.includes": 185,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.for-each": 229,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        263: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("./constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                r.default = {
                    modeAdjust: function(e, t, r, o, n) {
                        return n === s.CORNER ? {
                            x: e,
                            y: t,
                            w: r,
                            h: o
                        } : n === s.CORNERS ? {
                            x: e,
                            y: t,
                            w: r - e,
                            h: o - t
                        } : n === s.RADIUS ? {
                            x: e - r,
                            y: t - o,
                            w: 2 * r,
                            h: 2 * o
                        } : n === s.CENTER ? {
                            x: e - .5 * r,
                            y: t - .5 * o,
                            w: r,
                            h: o
                        } : void 0;
                    }
                };
            },
            {
                "./constants": 256,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        264: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator");
                var o = (n = e("../core/main")) && n.__esModule ? n : {
                    default: n
                };
                e("./internationalization");
                var n = Promise.resolve();
                Promise.all([
                    new Promise(function(e, t) {
                        "complete" === document.readyState ? e() : window.addEventListener("load", e, !1);
                    }),
                    n
                ]).then(function() {
                    void 0 !== window._setupDone ? console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import") : window.mocha || (window.setup && "function" == typeof window.setup || window.draw && "function" == typeof window.draw) && !o.default.instance && new o.default;
                });
            },
            {
                "../core/main": 267,
                "./internationalization": 265,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.promise": 178,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        265: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.split"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.split"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.setTranslatorLanguage = r.currentTranslatorLanguage = r.availableTranslatorLanguages = r.initialize = r.translator = void 0;
                var n, s, o = a(e("i18next")), i = a(e("i18next-browser-languagedetector"));
                function a(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                function l(e, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
                    }
                }
                var u = function() {
                    function r(e, t) {
                        if (!(this instanceof r)) throw new TypeError("Cannot call a class as a function");
                        this.init(e, t);
                    }
                    var e, t, o;
                    return e = r, t = [
                        {
                            key: "fetchWithTimeout",
                            value: function(e, t) {
                                var r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 2e3;
                                return Promise.race([
                                    fetch(e, t),
                                    new Promise(function(e, t) {
                                        return setTimeout(function() {
                                            return t(new Error("timeout"));
                                        }, r);
                                    })
                                ]);
                            }
                        },
                        {
                            key: "init",
                            value: function(e) {
                                var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
                                this.services = e, this.options = t;
                            }
                        },
                        {
                            key: "read",
                            value: function(e, t, r) {
                                var o = this.options.loadPath;
                                e === this.options.fallback ? r(null, n[e][t]) : s.includes(e) ? (o = this.services.interpolator.interpolate(o, {
                                    lng: e,
                                    ns: t
                                }), this.loadUrl(o, r)) : r("Not found", !1);
                            }
                        },
                        {
                            key: "loadUrl",
                            value: function(t, r) {
                                this.fetchWithTimeout(t).then(function(e) {
                                    if (e.ok) return e.json();
                                    throw new Error("failed loading ".concat(t));
                                }, function() {
                                    throw new Error("failed loading ".concat(t));
                                }).then(function(e) {
                                    return r(null, e);
                                }).catch(r);
                            }
                        }
                    ], l(e.prototype, t), o && l(e, o), r;
                }();
                u.type = "backend", r.translator = function(e, t) {
                    console.debug("p5.js translator called before translations were loaded"), o.default.t(e, t);
                }, r.initialize = function() {
                    return o.default.use(i.default).use(u).init({
                        fallbackLng: "en",
                        nestingPrefix: "$tr(",
                        nestingSuffix: ")",
                        defaultNS: "translation",
                        returnEmptyString: !1,
                        interpolation: {
                            escapeValue: !1
                        },
                        detection: {
                            checkWhitelist: !1,
                            order: [
                                "querystring",
                                "navigator",
                                "htmlTag",
                                "path",
                                "subdomain"
                            ],
                            caches: []
                        },
                        backend: {
                            fallback: "en",
                            loadPath: "https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json"
                        },
                        partialBundledLanguages: !0,
                        resources: n
                    }).then(function(e) {
                        r.translator = e;
                    }, function(e) {
                        return console.debug("Translations failed to load (".concat(e, ")"));
                    });
                }, r.availableTranslatorLanguages = function() {
                    return o.default.languages;
                }, r.currentTranslatorLanguage = function(e) {
                    return o.default.language;
                };
                r.setTranslatorLanguage = function(e) {
                    return o.default.changeLanguage(e || void 0, function(e) {
                        return console.debug("Translations failed to load (".concat(e, ")"));
                    });
                };
            },
            {
                "../../translations": void 0,
                "../../translations/dev": void 0,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.keys": 176,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.promise": 178,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.string.includes": 185,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/web.dom-collections.iterator": 230,
                i18next: 3,
                "i18next-browser-languagedetector": 3
            }
        ],
        266: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("./main")) && e.__esModule ? e : {
                    default: e
                };
                e.default.prototype.pushStyle = function() {
                    throw new Error("pushStyle() not used, see push()");
                }, e.default.prototype.popStyle = function() {
                    throw new Error("popStyle() not used, see pop()");
                }, e.default.prototype.popMatrix = function() {
                    throw new Error("popMatrix() not used, see pop()");
                }, e.default.prototype.pushMatrix = function() {
                    throw new Error("pushMatrix() not used, see push()");
                };
                e = e.default;
                r.default = e;
            },
            {
                "./main": 267
            }
        ],
        267: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.get-own-property-names"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.for-each"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.get-own-property-names"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.for-each"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0, e("./shim");
                var n = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("./constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                function s(e, t) {
                    for(var r = 0; r < t.length; r++){
                        var o = t[r];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
                    }
                }
                var l, u = function() {
                    function v(e, t, r) {
                        var d = this;
                        if (!(this instanceof v)) throw new TypeError("Cannot call a class as a function");
                        this._setupDone = !1, this._preloadDone = !1, this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1, this._userNode = t, this._curElement = null, this._elements = [], this._glAttributes = null, this._requestAnimId = 0, this._preloadCount = 0, this._isGlobal = !1, this._loop = !0, this._initializeInstanceVariables(), this._defaultCanvasSize = {
                            width: 100,
                            height: 100
                        }, this._events = {
                            mousemove: null,
                            mousedown: null,
                            mouseup: null,
                            dragend: null,
                            dragover: null,
                            click: null,
                            dblclick: null,
                            mouseover: null,
                            mouseout: null,
                            keydown: null,
                            keyup: null,
                            keypress: null,
                            touchstart: null,
                            touchmove: null,
                            touchend: null,
                            resize: null,
                            blur: null
                        }, this._millisStart = -1, this._lcg_random_state = null, this._gaussian_previous = !1, this._events.wheel = null, this._loadingScreenId = "p5_loading", this._registeredMethods = {};
                        var t = Object.getOwnPropertyNames(v.prototype._registeredMethods), o = !0, n = !1, s = void 0;
                        try {
                            for(var i, a = t[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                                var l = i.value;
                                this._registeredMethods[l] = v.prototype._registeredMethods[l].slice();
                            }
                        } catch (e) {
                            n = !0, s = e;
                        } finally{
                            try {
                                o || null == a.return || a.return();
                            } finally{
                                if (n) throw s;
                            }
                        }
                        window.DeviceOrientationEvent && (this._events.deviceorientation = null), window.DeviceMotionEvent && !window._isNodeWebkit && (this._events.devicemotion = null), this._start = function() {
                            d._userNode && "string" == typeof d._userNode && (d._userNode = document.getElementById(d._userNode));
                            var e = d._isGlobal ? window : d;
                            if (e.preload) {
                                var t, r = document.getElementById(d._loadingScreenId), o = (r || ((r = document.createElement("div")).innerHTML = "Loading...", r.style.position = "absolute", r.id = d._loadingScreenId, (d._userNode || document.body).appendChild(r)), d._preloadMethods);
                                for(t in o){
                                    o[t] = o[t] || v;
                                    var n = o[t];
                                    n !== v.prototype && n !== v || (d._isGlobal && (window[t] = d._wrapPreload(d, t)), n = d), d._registeredPreloadMethods[t] = n[t], n[t] = d._wrapPreload(n, t);
                                }
                                e.preload(), d._runIfPreloadsAreDone();
                            } else d._setup(), d._draw();
                        }, this._runIfPreloadsAreDone = function() {
                            var e, t = this._isGlobal ? window : this;
                            0 === t._preloadCount && ((e = document.getElementById(t._loadingScreenId)) && e.parentNode.removeChild(e), this._setupDone || (this._lastFrameTime = window.performance.now(), t._setup(), t._draw()));
                        }, this._decrementPreload = function() {
                            var e = this._isGlobal ? window : this;
                            e._preloadDone || "function" != typeof e.preload || (e._setProperty("_preloadCount", e._preloadCount - 1), e._runIfPreloadsAreDone());
                        }, this._wrapPreload = function(o, n) {
                            var s = this;
                            return function() {
                                s._incrementPreload();
                                for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                                return s._registeredPreloadMethods[n].apply(o, t);
                            };
                        }, this._incrementPreload = function() {
                            var e = this._isGlobal ? window : this;
                            e._preloadDone || e._setProperty("_preloadCount", e._preloadCount + 1);
                        }, this._setup = function() {
                            d.createCanvas(d._defaultCanvasSize.width, d._defaultCanvasSize.height, "p2d");
                            var e = d._isGlobal ? window : d;
                            if ("function" == typeof e.preload) for(var t in d._preloadMethods)e[t] = d._preloadMethods[t][t], e[t] && d && (e[t] = e[t].bind(d));
                            d._millisStart = window.performance.now(), e._preloadDone = !0, "function" == typeof e.setup && e.setup();
                            var r = document.getElementsByTagName("canvas"), o = !0, n = !1, s = void 0;
                            try {
                                for(var i, a = r[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                                    var l = i.value;
                                    "true" === l.dataset.hidden && (l.style.visibility = "", delete l.dataset.hidden);
                                }
                            } catch (e) {
                                n = !0, s = e;
                            } finally{
                                try {
                                    o || null == a.return || a.return();
                                } finally{
                                    if (n) throw s;
                                }
                            }
                            d._lastFrameTime = window.performance.now(), d._setupDone = !0, (d._accessibleOutputs.grid || d._accessibleOutputs.text) && d._updateAccsOutput();
                        }, this._draw = function() {
                            var e = window.performance.now(), t = e - d._lastFrameTime, r = 1e3 / d._targetFrameRate;
                            (!d._loop || r - 5 <= t) && (d.redraw(), d._frameRate = 1e3 / (e - d._lastFrameTime), d.deltaTime = e - d._lastFrameTime, d._setProperty("deltaTime", d.deltaTime), d._lastFrameTime = e, void 0 !== d._updateMouseCoords && (d._updateMouseCoords(), d._setProperty("movedX", 0), d._setProperty("movedY", 0))), d._loop && (d._requestAnimId = window.requestAnimationFrame(d._draw));
                        }, this._setProperty = function(e, t) {
                            d[e] = t, d._isGlobal && (window[e] = t);
                        }, this.remove = function() {
                            var t = document.getElementById(d._loadingScreenId);
                            if (t && (t.parentNode.removeChild(t), d._incrementPreload()), d._curElement) {
                                for(var e in d._loop = !1, d._requestAnimId && window.cancelAnimationFrame(d._requestAnimId), d._events)window.removeEventListener(e, d._events[e]);
                                var r = !0, t = !1, o = void 0;
                                try {
                                    for(var n, s = d._elements[Symbol.iterator](); !(r = (n = s.next()).done); r = !0){
                                        var i, a = n.value;
                                        for(i in a.elt && a.elt.parentNode && a.elt.parentNode.removeChild(a.elt), a._events)a.elt.removeEventListener(i, a._events[i]);
                                    }
                                } catch (e) {
                                    t = !0, o = e;
                                } finally{
                                    try {
                                        r || null == s.return || s.return();
                                    } finally{
                                        if (t) throw o;
                                    }
                                }
                                var l = d;
                                d._registeredMethods.remove.forEach(function(e) {
                                    void 0 !== e && e.call(l);
                                });
                            }
                            if (d._isGlobal) {
                                for(var u in v.prototype)try {
                                    delete window[u];
                                } catch (e) {
                                    window[u] = void 0;
                                }
                                for(var c in d)if (d.hasOwnProperty(c)) try {
                                    delete window[c];
                                } catch (e) {
                                    window[c] = void 0;
                                }
                                v.instance = null;
                            }
                        }, this._registeredMethods.init.forEach(function(e) {
                            void 0 !== e && e.call(this);
                        }, this), this._setupPromisePreloads();
                        var u, c, f = this._createFriendlyGlobalFunctionBinder();
                        if (e) e(this), v._checkForUserDefinedFunctions(this);
                        else {
                            for(var h in this._isGlobal = !0, v.instance = this, v.prototype)"function" == typeof v.prototype[h] ? (u = h.substring(2), this._events.hasOwnProperty(u) || (Math.hasOwnProperty(h) && Math[h] === v.prototype[h] ? f(h, v.prototype[h]) : f(h, v.prototype[h].bind(this)))) : f(h, v.prototype[h]);
                            for(var p in this)this.hasOwnProperty(p) && f(p, this[p]);
                        }
                        for(c in this._events){
                            var m = this["_on".concat(c)];
                            m && (m = m.bind(this), window.addEventListener(c, m, {
                                passive: !1
                            }), this._events[c] = m);
                        }
                        function y() {
                            d._setProperty("focused", !0);
                        }
                        function g() {
                            d._setProperty("focused", !1);
                        }
                        window.addEventListener("focus", y), window.addEventListener("blur", g), this.registerMethod("remove", function() {
                            window.removeEventListener("focus", y), window.removeEventListener("blur", g);
                        }), "complete" === document.readyState ? this._start() : window.addEventListener("load", this._start.bind(this), !1);
                    }
                    var e, t, r;
                    return e = v, t = [
                        {
                            key: "_initializeInstanceVariables",
                            value: function() {
                                this._accessibleOutputs = {
                                    text: !1,
                                    grid: !1,
                                    textLabel: !1,
                                    gridLabel: !1
                                }, this._styles = [], this._bezierDetail = 20, this._curveDetail = 20, this._colorMode = n.RGB, this._colorMaxes = {
                                    rgb: [
                                        255,
                                        255,
                                        255,
                                        255
                                    ],
                                    hsb: [
                                        360,
                                        100,
                                        100,
                                        1
                                    ],
                                    hsl: [
                                        360,
                                        100,
                                        100,
                                        1
                                    ]
                                }, this._downKeys = {};
                            }
                        },
                        {
                            key: "registerPreloadMethod",
                            value: function(e, t) {
                                v.prototype._preloadMethods.hasOwnProperty(e) || (v.prototype._preloadMethods[e] = t);
                            }
                        },
                        {
                            key: "registerMethod",
                            value: function(e, t) {
                                var r = this || v.prototype;
                                r._registeredMethods.hasOwnProperty(e) || (r._registeredMethods[e] = []), r._registeredMethods[e].push(t);
                            }
                        },
                        {
                            key: "_createFriendlyGlobalFunctionBinder",
                            value: function() {
                                var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, r = e.globalObject || window;
                                e.log || console.log.bind(console);
                                return function(e, t) {
                                    v.disableFriendlyErrors, r[e] = t;
                                };
                            }
                        }
                    ], s(e.prototype, t), r && s(e, r), v;
                }();
                for(l in u.instance = null, u.disableFriendlyErrors = !1, n)u.prototype[l] = n[l];
                u.VERSION = n.VERSION, u.prototype._preloadMethods = {
                    loadJSON: u.prototype,
                    loadImage: u.prototype,
                    loadStrings: u.prototype,
                    loadXML: u.prototype,
                    loadBytes: u.prototype,
                    loadTable: u.prototype,
                    loadFont: u.prototype,
                    loadModel: u.prototype,
                    loadShader: u.prototype
                }, u.prototype._registeredMethods = {
                    init: [],
                    pre: [],
                    post: [],
                    remove: []
                }, u.prototype._registeredPreloadMethods = {}, r.default = u;
            },
            {
                "./constants": 256,
                "./shim": 278,
                "core-js/modules/es.array.for-each": 154,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.get-own-property-names": 174,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.for-each": 229,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        268: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (e = e("./main")) && e.__esModule ? e : {
                    default: e
                };
                o.default.Element = function(e, t) {
                    this.elt = e, this._pInst = this._pixelsState = t, this._events = {}, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight;
                }, o.default.Element.prototype.parent = function(e) {
                    return void 0 === e ? this.elt.parentNode : ("string" == typeof e ? ("#" === e[0] && (e = e.substring(1)), e = document.getElementById(e)) : e instanceof o.default.Element && (e = e.elt), e.appendChild(this.elt), this);
                }, o.default.Element.prototype.id = function(e) {
                    return void 0 === e ? this.elt.id : (this.elt.id = e, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this);
                }, o.default.Element.prototype.class = function(e) {
                    return void 0 === e ? this.elt.className : (this.elt.className = e, this);
                }, o.default.Element.prototype.mousePressed = function(t) {
                    return o.default.Element._adjustListener("mousedown", function(e) {
                        return this._pInst._setProperty("mouseIsPressed", !0), this._pInst._setMouseButton(e), t.call(this, e);
                    }, this), this;
                }, o.default.Element.prototype.doubleClicked = function(e) {
                    return o.default.Element._adjustListener("dblclick", e, this), this;
                }, o.default.Element.prototype.mouseWheel = function(e) {
                    return o.default.Element._adjustListener("wheel", e, this), this;
                }, o.default.Element.prototype.mouseReleased = function(e) {
                    return o.default.Element._adjustListener("mouseup", e, this), this;
                }, o.default.Element.prototype.mouseClicked = function(e) {
                    return o.default.Element._adjustListener("click", e, this), this;
                }, o.default.Element.prototype.mouseMoved = function(e) {
                    return o.default.Element._adjustListener("mousemove", e, this), this;
                }, o.default.Element.prototype.mouseOver = function(e) {
                    return o.default.Element._adjustListener("mouseover", e, this), this;
                }, o.default.Element.prototype.mouseOut = function(e) {
                    return o.default.Element._adjustListener("mouseout", e, this), this;
                }, o.default.Element.prototype.touchStarted = function(e) {
                    return o.default.Element._adjustListener("touchstart", e, this), this;
                }, o.default.Element.prototype.touchMoved = function(e) {
                    return o.default.Element._adjustListener("touchmove", e, this), this;
                }, o.default.Element.prototype.touchEnded = function(e) {
                    return o.default.Element._adjustListener("touchend", e, this), this;
                }, o.default.Element.prototype.dragOver = function(e) {
                    return o.default.Element._adjustListener("dragover", e, this), this;
                }, o.default.Element.prototype.dragLeave = function(e) {
                    return o.default.Element._adjustListener("dragleave", e, this), this;
                }, o.default.Element._adjustListener = function(e, t, r) {
                    return !1 === t ? o.default.Element._detachListener(e, r) : o.default.Element._attachListener(e, t, r), this;
                }, o.default.Element._attachListener = function(e, t, r) {
                    r._events[e] && o.default.Element._detachListener(e, r);
                    t = t.bind(r);
                    r.elt.addEventListener(e, t, !1), r._events[e] = t;
                }, o.default.Element._detachListener = function(e, t) {
                    var r = t._events[e];
                    t.elt.removeEventListener(e, r, !1), t._events[e] = null;
                }, o.default.Element.prototype._setProperty = function(e, t) {
                    this[e] = t;
                };
                e = o.default.Element;
                r.default = e;
            },
            {
                "./main": 267
            }
        ],
        269: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.splice"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (n = e("./main")) && n.__esModule ? n : {
                    default: n
                }, a = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = l();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("./constants"));
                function l() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, l = function() {
                        return e;
                    }, e);
                }
                s.default.Graphics = function(e, t, r, o) {
                    var n, r = r || a.P2D;
                    for(n in this.canvas = document.createElement("canvas"), (o._userNode || document.body).appendChild(this.canvas), s.default.Element.call(this, this.canvas, o), s.default.prototype)this[n] || ("function" == typeof s.default.prototype[n] ? this[n] = s.default.prototype[n].bind(this) : this[n] = s.default.prototype[n]);
                    return s.default.prototype._initializeInstanceVariables.apply(this), this.width = e, this.height = t, this._pixelDensity = o._pixelDensity, r === a.WEBGL ? this._renderer = new s.default.RendererGL(this.canvas, this, !1) : this._renderer = new s.default.Renderer2D(this.canvas, this, !1), o._elements.push(this), Object.defineProperty(this, "deltaTime", {
                        get: function() {
                            return this._pInst.deltaTime;
                        }
                    }), this._renderer.resize(e, t), this._renderer._applyDefaults(), this;
                }, s.default.Graphics.prototype = Object.create(s.default.Element.prototype), s.default.Graphics.prototype.reset = function() {
                    this._renderer.resetMatrix(), this._renderer.isP3D && this._renderer._update();
                }, s.default.Graphics.prototype.remove = function() {
                    this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
                    var e, t = this._pInst._elements.indexOf(this);
                    for(e in -1 !== t && this._pInst._elements.splice(t, 1), this._events)this.elt.removeEventListener(e, this._events[e]);
                };
                var n = s.default.Graphics;
                r.default = n;
            },
            {
                "./constants": 256,
                "./main": 267,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.splice": 164,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        270: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.object.assign"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.trim"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.object.assign"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.trim"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (n = e("./main")) && n.__esModule ? n : {
                    default: n
                }, k = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== l(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = i();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function i() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, i = function() {
                        return e;
                    }, e);
                }
                function l(e) {
                    return (l = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                function u(e) {
                    var t = 0, r = 0;
                    if (e.offsetParent) for(; t += e.offsetLeft, r += e.offsetTop, e = e.offsetParent;);
                    else t += e.offsetLeft, r += e.offsetTop;
                    return [
                        t,
                        r
                    ];
                }
                a.default.Renderer = function(e, t, r) {
                    a.default.Element.call(this, e, t), this.canvas = e, this._pixelsState = t, r ? (this._isMainCanvas = !0, this._pInst._setProperty("_curElement", this), this._pInst._setProperty("canvas", this.canvas), this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height)) : (this.canvas.style.display = "none", this._styles = []), this._textSize = 12, this._textLeading = 15, this._textFont = "sans-serif", this._textStyle = k.NORMAL, this._textAscent = null, this._textDescent = null, this._textAlign = k.LEFT, this._textBaseline = k.BASELINE, this._textWrap = k.WORD, this._rectMode = k.CORNER, this._ellipseMode = k.CENTER, this._curveTightness = 0, this._imageMode = k.CORNER, this._tint = null, this._doStroke = !0, this._doFill = !0, this._strokeSet = !1, this._fillSet = !1, this._leadingSet = !1;
                }, a.default.Renderer.prototype = Object.create(a.default.Element.prototype), a.default.Renderer.prototype.push = function() {
                    return {
                        properties: {
                            _doStroke: this._doStroke,
                            _strokeSet: this._strokeSet,
                            _doFill: this._doFill,
                            _fillSet: this._fillSet,
                            _tint: this._tint,
                            _imageMode: this._imageMode,
                            _rectMode: this._rectMode,
                            _ellipseMode: this._ellipseMode,
                            _textFont: this._textFont,
                            _textLeading: this._textLeading,
                            _leadingSet: this._leadingSet,
                            _textSize: this._textSize,
                            _textAlign: this._textAlign,
                            _textBaseline: this._textBaseline,
                            _textStyle: this._textStyle,
                            _textWrap: this._textWrap
                        }
                    };
                }, a.default.Renderer.prototype.pop = function(e) {
                    e.properties && Object.assign(this, e.properties);
                }, a.default.Renderer.prototype.resize = function(e, t) {
                    this.width = e, this.height = t, this.elt.width = e * this._pInst._pixelDensity, this.elt.height = t * this._pInst._pixelDensity, this.elt.style.width = "".concat(e, "px"), this.elt.style.height = "".concat(t, "px"), this._isMainCanvas && (this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height));
                }, a.default.Renderer.prototype.get = function(e, t, r, o) {
                    var n = this._pixelsState, s = n._pixelDensity, i = this.canvas;
                    if (void 0 === e && void 0 === t) e = t = 0, r = n.width, o = n.height;
                    else if (e *= s, t *= s, void 0 === r && void 0 === o) return e < 0 || t < 0 || e >= i.width || t >= i.height ? [
                        0,
                        0,
                        0,
                        0
                    ] : this._getPixel(e, t);
                    n = new a.default.Image(r, o);
                    return n.canvas.getContext("2d").drawImage(i, e, t, r * s, o * s, 0, 0, r, o), n;
                }, a.default.Renderer.prototype.textLeading = function(e) {
                    return "number" == typeof e ? (this._setProperty("_leadingSet", !0), this._setProperty("_textLeading", e), this._pInst) : this._textLeading;
                }, a.default.Renderer.prototype.textSize = function(e) {
                    return "number" == typeof e ? (this._setProperty("_textSize", e), this._leadingSet || this._setProperty("_textLeading", e * k._DEFAULT_LEADMULT), this._applyTextProperties()) : this._textSize;
                }, a.default.Renderer.prototype.textStyle = function(e) {
                    return e ? (e !== k.NORMAL && e !== k.ITALIC && e !== k.BOLD && e !== k.BOLDITALIC || this._setProperty("_textStyle", e), this._applyTextProperties()) : this._textStyle;
                }, a.default.Renderer.prototype.textAscent = function() {
                    return null === this._textAscent && this._updateTextMetrics(), this._textAscent;
                }, a.default.Renderer.prototype.textDescent = function() {
                    return null === this._textDescent && this._updateTextMetrics(), this._textDescent;
                }, a.default.Renderer.prototype.textAlign = function(e, t) {
                    return void 0 !== e ? (this._setProperty("_textAlign", e), void 0 !== t && this._setProperty("_textBaseline", t), this._applyTextProperties()) : {
                        horizontal: this._textAlign,
                        vertical: this._textBaseline
                    };
                }, a.default.Renderer.prototype.textWrap = function(e) {
                    return this._setProperty("_textWrap", e), this._textWrap;
                }, a.default.Renderer.prototype.text = function(e, t, r, o, n) {
                    var s, i, a, l, u = this._pInst, c = this._textWrap, d = Number.MAX_VALUE, f = r;
                    if ((this._doFill || this._doStroke) && void 0 !== e) {
                        if (s = (e = (e = "string" != typeof e ? e.toString() : e).replace(/(\t)/g, "  ")).split("\n"), void 0 !== o) {
                            switch(this._rectMode === k.CENTER && (t -= o / 2), this._textAlign){
                                case k.CENTER:
                                    t += o / 2;
                                    break;
                                case k.RIGHT:
                                    t += o;
                            }
                            if (void 0 !== n) {
                                this._rectMode === k.CENTER && (r -= n / 2);
                                var e = r, h = u.textAscent();
                                switch(this._textBaseline){
                                    case k.BOTTOM:
                                        l = r + n, r = Math.max(l, r), f += h;
                                        break;
                                    case k.CENTER:
                                        l = r + n / 2, r = Math.max(l, r), f += h / 2;
                                }
                                d = r + n - h, this._textBaseline === k.CENTER && (d = e + n - h / 2);
                            } else {
                                if (this._textBaseline === k.BOTTOM) return console.warn("textAlign(*, BOTTOM) requires x, y, width and height");
                                if (this._textBaseline === k.CENTER) return console.warn("textAlign(*, CENTER) requires x, y, width and height");
                            }
                            if (c === k.WORD) {
                                for(var p = [], m = 0; m < s.length; m++){
                                    for(var y = "", g = s[m].split(" "), v = 0; v < g.length; v++)i = "".concat(y + g[v]) + " ", y = o < (a = this.textWidth(i)) && 0 < y.length ? (p.push(y), "".concat(g[v]) + " ") : i;
                                    p.push(y);
                                }
                                var b = 0;
                                this._textBaseline === k.CENTER ? b = (p.length - 1) * u.textLeading() / 2 : this._textBaseline === k.BOTTOM && (b = (p.length - 1) * u.textLeading());
                                for(var j = 0; j < s.length; j++){
                                    y = "", g = s[j].split(" ");
                                    for(var _ = 0; _ < g.length; _++)i = "".concat(y + g[_]) + " ", o < (a = this.textWidth(i)) && 0 < y.length ? (this._renderText(u, y.trim(), t, r - b, d, f), y = "".concat(g[_]) + " ", r += u.textLeading()) : y = i;
                                    this._renderText(u, y.trim(), t, r - b, d, f), r += u.textLeading();
                                }
                            } else {
                                for(var x = [], w = 0; w < s.length; w++)for(var S = s[w].split(y = ""), M = 0; M < S.length; M++)i = "".concat(y + S[M]), (a = this.textWidth(i)) <= o ? y += S[M] : o < a && 0 < y.length && (x.push(y), y = "".concat(S[M]));
                                x.push(y);
                                var E = 0;
                                this._textBaseline === k.CENTER ? E = (x.length - 1) * u.textLeading() / 2 : this._textBaseline === k.BOTTOM && (E = (x.length - 1) * u.textLeading());
                                for(var T = 0; T < s.length; T++){
                                    S = s[T].split(y = "");
                                    for(var C = 0; C < S.length; C++)i = "".concat(y + S[C]), (a = this.textWidth(i)) <= o ? y += S[C] : o < a && 0 < y.length && (this._renderText(u, y.trim(), t, r - E, d, f), r += u.textLeading(), y = "".concat(S[C]));
                                }
                                this._renderText(u, y.trim(), t, r - E, d, f), r += u.textLeading();
                            }
                        } else {
                            var O = 0;
                            this._textBaseline === k.CENTER ? O = (s.length - 1) * u.textLeading() / 2 : this._textBaseline === k.BOTTOM && (O = (s.length - 1) * u.textLeading());
                            for(var L = 0; L < s.length; L++)this._renderText(u, s[L], t, r - O, d, f), r += u.textLeading();
                        }
                        return u;
                    }
                }, a.default.Renderer.prototype._applyDefaults = function() {
                    return this;
                }, a.default.Renderer.prototype._isOpenType = function() {
                    var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : this._textFont;
                    return "object" === l(e) && e.font && e.font.supported;
                }, a.default.Renderer.prototype._updateTextMetrics = function() {
                    var e, t, r, o, n, s;
                    return this._isOpenType() ? (this._setProperty("_textAscent", this._textFont._textAscent()), this._setProperty("_textDescent", this._textFont._textDescent())) : ((e = document.createElement("span")).style.fontFamily = this._textFont, e.style.fontSize = "".concat(this._textSize, "px"), e.innerHTML = "ABCjgq|", (s = document.createElement("div")).style.display = "inline-block", s.style.width = "1px", s.style.height = "0px", o = ((t = document.createElement("div")).appendChild(e), t.appendChild(s), t.style.height = "0px", t.style.overflow = "hidden", document.body.appendChild(t), s.style.verticalAlign = "baseline", u(s)), n = u(e), r = o[1] - n[1], o = (s.style.verticalAlign = "bottom", u(s)), n = u(e), s = o[1] - n[1] - r, document.body.removeChild(t), this._setProperty("_textAscent", r), this._setProperty("_textDescent", s)), this;
                };
                var n = a.default.Renderer;
                r.default = n;
            },
            {
                "../core/constants": 256,
                "./main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.number.constructor": 169,
                "core-js/modules/es.object.assign": 172,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.replace": 189,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.string.trim": 193,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        271: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.number.to-fixed"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.number.to-fixed"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var d = (n = e("./main")) && n.__esModule ? n : {
                    default: n
                }, p = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("./constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                e("./p5.Renderer");
                var h = "rgba(0,0,0,0)", n = (d.default.Renderer2D = function(e, t, r) {
                    return d.default.Renderer.call(this, e, t, r), this.drawingContext = this.canvas.getContext("2d"), this._pInst._setProperty("drawingContext", this.drawingContext), this;
                }, d.default.Renderer2D.prototype = Object.create(d.default.Renderer.prototype), d.default.Renderer2D.prototype._applyDefaults = function() {
                    this._cachedFillStyle = this._cachedStrokeStyle = void 0, this._cachedBlendMode = p.BLEND, this._setFill(p._DEFAULT_FILL), this._setStroke(p._DEFAULT_STROKE), this.drawingContext.lineCap = p.ROUND, this.drawingContext.font = "normal 12px sans-serif";
                }, d.default.Renderer2D.prototype.resize = function(e, t) {
                    d.default.Renderer.prototype.resize.call(this, e, t), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity);
                }, d.default.Renderer2D.prototype.background = function() {
                    var e, t;
                    this.drawingContext.save(), this.resetMatrix(), (arguments.length <= 0 ? void 0 : arguments[0]) instanceof d.default.Image ? 0 <= (arguments.length <= 1 ? void 0 : arguments[1]) ? (e = arguments.length <= 0 ? void 0 : arguments[0], this.drawingContext.globalAlpha = (arguments.length <= 1 ? void 0 : arguments[1]) / 255, this._pInst.image(e, 0, 0, this.width, this.height)) : this._pInst.image(arguments.length <= 0 ? void 0 : arguments[0], 0, 0, this.width, this.height) : (e = this._getFill(), t = (t = this._pInst).color.apply(t, arguments), this._pInst._addAccsOutput() && this._pInst._accsBackground(t.levels), t = t.toString(), this._setFill(t), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.fillRect(0, 0, this.width, this.height), this._setFill(e), this._isErasing && this._pInst.erase()), this.drawingContext.restore();
                }, d.default.Renderer2D.prototype.clear = function() {
                    this.drawingContext.save(), this.resetMatrix(), this.drawingContext.clearRect(0, 0, this.width, this.height), this.drawingContext.restore();
                }, d.default.Renderer2D.prototype.fill = function() {
                    var e = (e = this._pInst).color.apply(e, arguments);
                    this._setFill(e.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("fill", e.levels);
                }, d.default.Renderer2D.prototype.stroke = function() {
                    var e = (e = this._pInst).color.apply(e, arguments);
                    this._setStroke(e.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("stroke", e.levels);
                }, d.default.Renderer2D.prototype.erase = function(e, t) {
                    this._isErasing || (this._cachedFillStyle = this.drawingContext.fillStyle, e = this._pInst.color(255, e).toString(), this.drawingContext.fillStyle = e, this._cachedStrokeStyle = this.drawingContext.strokeStyle, e = this._pInst.color(255, t).toString(), this.drawingContext.strokeStyle = e, t = this._cachedBlendMode, this.blendMode(p.REMOVE), this._cachedBlendMode = t, this._isErasing = !0);
                }, d.default.Renderer2D.prototype.noErase = function() {
                    this._isErasing && (this.drawingContext.fillStyle = this._cachedFillStyle, this.drawingContext.strokeStyle = this._cachedStrokeStyle, this.blendMode(this._cachedBlendMode), this._isErasing = !1);
                }, d.default.Renderer2D.prototype.image = function(e, t, r, o, n, s, i, a, l) {
                    e.gifProperties && e._animateGif(this._pInst);
                    try {
                        var u = (u = this._tint && e.canvas ? this._getTintedImageCanvas(e) : u) || e.canvas || e.elt, c = 1;
                        e.width && 0 < e.width && (c = u.width / e.width), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.drawImage(u, c * t, c * r, c * o, c * n, s, i, a, l), this._isErasing && this._pInst.erase();
                    } catch (e) {
                        if ("NS_ERROR_NOT_AVAILABLE" !== e.name) throw e;
                    }
                }, d.default.Renderer2D.prototype._getTintedImageCanvas = function(e) {
                    if (!e.canvas) return e;
                    e.tintCanvas || (e.tintCanvas = document.createElement("canvas")), e.tintCanvas.width !== e.canvas.width && (e.tintCanvas.width = e.canvas.width), e.tintCanvas.height !== e.canvas.height && (e.tintCanvas.height = e.canvas.height);
                    var t = e.tintCanvas.getContext("2d");
                    return t.save(), t.clearRect(0, 0, e.canvas.width, e.canvas.height), (this._tint[0] < 255 || this._tint[1] < 255 || this._tint[2] < 255) && (t.drawImage(e.canvas, 0, 0), t.globalCompositeOperation = "luminosity", t.drawImage(e.canvas, 0, 0), t.globalCompositeOperation = "color", t.drawImage(e.canvas, 0, 0), t.globalCompositeOperation = "multiply", t.fillStyle = "rgb(".concat(this._tint.slice(0, 3).join(", "), ")"), t.fillRect(0, 0, e.canvas.width, e.canvas.height), t.globalCompositeOperation = "destination-in"), t.globalAlpha = this._tint[3] / 255, t.drawImage(e.canvas, 0, 0), t.restore(), e.tintCanvas;
                }, d.default.Renderer2D.prototype.blendMode = function(e) {
                    if (e === p.SUBTRACT) console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");
                    else {
                        if (e !== p.BLEND && e !== p.REMOVE && e !== p.DARKEST && e !== p.LIGHTEST && e !== p.DIFFERENCE && e !== p.MULTIPLY && e !== p.EXCLUSION && e !== p.SCREEN && e !== p.REPLACE && e !== p.OVERLAY && e !== p.HARD_LIGHT && e !== p.SOFT_LIGHT && e !== p.DODGE && e !== p.BURN && e !== p.ADD) throw new Error("Mode ".concat(e, " not recognized."));
                        this._cachedBlendMode = e, this.drawingContext.globalCompositeOperation = e;
                    }
                }, d.default.Renderer2D.prototype.blend = function() {
                    for(var e = this.drawingContext.globalCompositeOperation, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    var n = r[r.length - 1], s = Array.prototype.slice.call(r, 0, r.length - 1);
                    this.drawingContext.globalCompositeOperation = n, d.default.prototype.copy.apply(this, s), this.drawingContext.globalCompositeOperation = e;
                }, d.default.Renderer2D.prototype._getPixel = function(e, t) {
                    e = this.drawingContext.getImageData(e, t, 1, 1).data;
                    return [
                        e[0],
                        e[1],
                        e[2],
                        e[3]
                    ];
                }, d.default.Renderer2D.prototype.loadPixels = function() {
                    var e = this._pixelsState, t = e._pixelDensity, r = this.width * t, t = this.height * t, r = this.drawingContext.getImageData(0, 0, r, t);
                    e._setProperty("imageData", r), e._setProperty("pixels", r.data);
                }, d.default.Renderer2D.prototype.set = function(e, t, r) {
                    e = Math.floor(e), t = Math.floor(t);
                    var o = this._pixelsState;
                    if (r instanceof d.default.Image) this.drawingContext.save(), this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(o._pixelDensity, o._pixelDensity), this.drawingContext.clearRect(e, t, r.width, r.height), this.drawingContext.drawImage(r.canvas, e, t), this.drawingContext.restore();
                    else {
                        var n = 0, s = 0, i = 0, a = 0, l = 4 * (t * o._pixelDensity * (this.width * o._pixelDensity) + e * o._pixelDensity);
                        if (o.imageData || o.loadPixels.call(o), "number" == typeof r) l < o.pixels.length && (i = s = n = r, a = 255);
                        else if (r instanceof Array) {
                            if (r.length < 4) throw new Error("pixel array must be of the form [R, G, B, A]");
                            l < o.pixels.length && (n = r[0], s = r[1], i = r[2], a = r[3]);
                        } else r instanceof d.default.Color && l < o.pixels.length && (n = r.levels[0], s = r.levels[1], i = r.levels[2], a = r.levels[3]);
                        for(var u = 0; u < o._pixelDensity; u++)for(var c = 0; c < o._pixelDensity; c++)l = 4 * ((t * o._pixelDensity + c) * this.width * o._pixelDensity + (e * o._pixelDensity + u)), o.pixels[l] = n, o.pixels[l + 1] = s, o.pixels[l + 2] = i, o.pixels[l + 3] = a;
                    }
                }, d.default.Renderer2D.prototype.updatePixels = function(e, t, r, o) {
                    var n = this._pixelsState, s = n._pixelDensity;
                    void 0 === e && void 0 === t && void 0 === r && void 0 === o && (t = e = 0, r = this.width, o = this.height), e *= s, t *= s, r *= s, o *= s, this.gifProperties && (this.gifProperties.frames[this.gifProperties.displayIndex].image = n.imageData), this.drawingContext.putImageData(n.imageData, e, t, 0, 0, r, o);
                }, d.default.Renderer2D.prototype._acuteArcToBezier = function(e, t) {
                    var r = t / 2, o = Math.cos(r), n = Math.sin(r), s = 1 / Math.tan(r), r = e + r, i = Math.cos(r), r = Math.sin(r), a = (4 - o) / 3, n = n + (o - a) * s;
                    return {
                        ax: Math.cos(e).toFixed(7),
                        ay: Math.sin(e).toFixed(7),
                        bx: (a * i + n * r).toFixed(7),
                        by: (a * r - n * i).toFixed(7),
                        cx: (a * i - n * r).toFixed(7),
                        cy: (a * r + n * i).toFixed(7),
                        dx: Math.cos(e + t).toFixed(7),
                        dy: Math.sin(e + t).toFixed(7)
                    };
                }, d.default.Renderer2D.prototype.arc = function(r, o, e, t, n, s, i) {
                    var a, l = this.drawingContext, u = e / 2, c = t / 2, d = [];
                    for(r += u, o += c; 1e-5 <= s - n;)a = Math.min(s - n, p.HALF_PI), d.push(this._acuteArcToBezier(n, a)), n += a;
                    return this._doFill && (l.beginPath(), d.forEach(function(e, t) {
                        0 === t && l.moveTo(r + e.ax * u, o + e.ay * c), l.bezierCurveTo(r + e.bx * u, o + e.by * c, r + e.cx * u, o + e.cy * c, r + e.dx * u, o + e.dy * c);
                    }), i !== p.PIE && null != i || l.lineTo(r, o), l.closePath(), l.fill()), this._doStroke && (l.beginPath(), d.forEach(function(e, t) {
                        0 === t && l.moveTo(r + e.ax * u, o + e.ay * c), l.bezierCurveTo(r + e.bx * u, o + e.by * c, r + e.cx * u, o + e.cy * c, r + e.dx * u, o + e.dy * c);
                    }), i === p.PIE ? (l.lineTo(r, o), l.closePath()) : i === p.CHORD && l.closePath(), l.stroke()), this;
                }, d.default.Renderer2D.prototype.ellipse = function(e) {
                    var t = this.drawingContext, r = this._doFill, o = this._doStroke, n = parseFloat(e[0]), s = parseFloat(e[1]), i = parseFloat(e[2]), e = parseFloat(e[3]);
                    if (r && !o) {
                        if (this._getFill() === h) return this;
                    } else if (!r && o && this._getStroke() === h) return this;
                    var a = i / 2 * .5522847498, l = e / 2 * .5522847498, u = n + i, c = s + e, i = n + i / 2, e = s + e / 2;
                    t.beginPath(), t.moveTo(n, e), t.bezierCurveTo(n, e - l, i - a, s, i, s), t.bezierCurveTo(i + a, s, u, e - l, u, e), t.bezierCurveTo(u, e + l, i + a, c, i, c), t.bezierCurveTo(i - a, c, n, e + l, n, e), r && t.fill(), o && t.stroke();
                }, d.default.Renderer2D.prototype.line = function(e, t, r, o) {
                    var n = this.drawingContext;
                    return this._doStroke && this._getStroke() !== h && (n.beginPath(), n.moveTo(e, t), n.lineTo(r, o), n.stroke()), this;
                }, d.default.Renderer2D.prototype.point = function(e, t) {
                    var r, o, n = this.drawingContext;
                    return !this._doStroke || this._getStroke() === h ? this : (r = this._getStroke(), o = this._getFill(), this._setFill(r), n.beginPath(), n.arc(e, t, n.lineWidth / 2, 0, p.TWO_PI, !1), n.fill(), void this._setFill(o));
                }, d.default.Renderer2D.prototype.quad = function(e, t, r, o, n, s, i, a) {
                    var l = this.drawingContext, u = this._doFill, c = this._doStroke;
                    if (u && !c) {
                        if (this._getFill() === h) return this;
                    } else if (!u && c && this._getStroke() === h) return this;
                    return l.beginPath(), l.moveTo(e, t), l.lineTo(r, o), l.lineTo(n, s), l.lineTo(i, a), l.closePath(), u && l.fill(), c && l.stroke(), this;
                }, d.default.Renderer2D.prototype.rect = function(e) {
                    var t, r, o = e[0], n = e[1], s = e[2], i = e[3], a = e[4], l = e[5], u = e[6], e = e[7], c = this.drawingContext, d = this._doFill, f = this._doStroke;
                    if (d && !f) {
                        if (this._getFill() === h) return this;
                    } else if (!d && f && this._getStroke() === h) return this;
                    return c.beginPath(), void 0 === a ? c.rect(o, n, s, i) : (void 0 === l && (l = a), void 0 === u && (u = l), void 0 === e && (e = u), f = (d = Math.abs(s)) / 2, r = (t = Math.abs(i)) / 2, t < 2 * (a = d < 2 * a ? f : a) && (a = r), t < 2 * (l = d < 2 * l ? f : l) && (l = r), t < 2 * (u = d < 2 * u ? f : u) && (u = r), t < 2 * (e = d < 2 * e ? f : e) && (e = r), c.beginPath(), c.moveTo(o + a, n), c.arcTo(o + s, n, o + s, n + i, l), c.arcTo(o + s, n + i, o, n + i, u), c.arcTo(o, n + i, o, n, e), c.arcTo(o, n, o + s, n, a), c.closePath()), this._doFill && c.fill(), this._doStroke && c.stroke(), this;
                }, d.default.Renderer2D.prototype.triangle = function(e) {
                    var t = this.drawingContext, r = this._doFill, o = this._doStroke, n = e[0], s = e[1], i = e[2], a = e[3], l = e[4], e = e[5];
                    if (r && !o) {
                        if (this._getFill() === h) return this;
                    } else if (!r && o && this._getStroke() === h) return this;
                    t.beginPath(), t.moveTo(n, s), t.lineTo(i, a), t.lineTo(l, e), t.closePath(), r && t.fill(), o && t.stroke();
                }, d.default.Renderer2D.prototype.endShape = function(e, t, r, o, n, s, i) {
                    if (0 !== t.length && (this._doStroke || this._doFill)) {
                        var a, l, u, c = e === p.CLOSE, d = (c && !s && t.push(t[0]), t.length);
                        if (!r || i !== p.POLYGON && null !== i) {
                            if (!o || i !== p.POLYGON && null !== i) {
                                if (!n || i !== p.POLYGON && null !== i) {
                                    if (i === p.POINTS) for(l = 0; l < d; l++)a = t[l], this._doStroke && this._pInst.stroke(a[6]), this._pInst.point(a[0], a[1]);
                                    else if (i === p.LINES) for(l = 0; l + 1 < d; l += 2)a = t[l], this._doStroke && this._pInst.stroke(t[l + 1][6]), this._pInst.line(a[0], a[1], t[l + 1][0], t[l + 1][1]);
                                    else if (i === p.TRIANGLES) for(l = 0; l + 2 < d; l += 3)a = t[l], this.drawingContext.beginPath(), this.drawingContext.moveTo(a[0], a[1]), this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1]), this.drawingContext.lineTo(t[l + 2][0], t[l + 2][1]), this.drawingContext.closePath(), this._doFill && (this._pInst.fill(t[l + 2][5]), this.drawingContext.fill()), this._doStroke && (this._pInst.stroke(t[l + 2][6]), this.drawingContext.stroke());
                                    else if (i === p.TRIANGLE_STRIP) for(l = 0; l + 1 < d; l++)a = t[l], this.drawingContext.beginPath(), this.drawingContext.moveTo(t[l + 1][0], t[l + 1][1]), this.drawingContext.lineTo(a[0], a[1]), this._doStroke && this._pInst.stroke(t[l + 1][6]), this._doFill && this._pInst.fill(t[l + 1][5]), l + 2 < d && (this.drawingContext.lineTo(t[l + 2][0], t[l + 2][1]), this._doStroke && this._pInst.stroke(t[l + 2][6]), this._doFill && this._pInst.fill(t[l + 2][5])), this._doFillStrokeClose(c);
                                    else if (i === p.TRIANGLE_FAN) {
                                        if (2 < d) {
                                            for(this.drawingContext.beginPath(), l = 2; l < d; l++)a = t[l], this.drawingContext.moveTo(t[0][0], t[0][1]), this.drawingContext.lineTo(t[l - 1][0], t[l - 1][1]), this.drawingContext.lineTo(a[0], a[1]), this.drawingContext.lineTo(t[0][0], t[0][1]), l < d - 1 && (this._doFill && a[5] !== t[l + 1][5] || this._doStroke && a[6] !== t[l + 1][6]) && (this._doFill && (this._pInst.fill(a[5]), this.drawingContext.fill(), this._pInst.fill(t[l + 1][5])), this._doStroke && (this._pInst.stroke(a[6]), this.drawingContext.stroke(), this._pInst.stroke(t[l + 1][6])), this.drawingContext.closePath(), this.drawingContext.beginPath());
                                            this._doFillStrokeClose(c);
                                        }
                                    } else if (i === p.QUADS) for(l = 0; l + 3 < d; l += 4){
                                        for(a = t[l], this.drawingContext.beginPath(), this.drawingContext.moveTo(a[0], a[1]), u = 1; u < 4; u++)this.drawingContext.lineTo(t[l + u][0], t[l + u][1]);
                                        this.drawingContext.lineTo(a[0], a[1]), this._doFill && this._pInst.fill(t[l + 3][5]), this._doStroke && this._pInst.stroke(t[l + 3][6]), this._doFillStrokeClose(c);
                                    }
                                    else if (i === p.QUAD_STRIP) {
                                        if (3 < d) for(l = 0; l + 1 < d; l += 2)a = t[l], this.drawingContext.beginPath(), l + 3 < d ? (this.drawingContext.moveTo(t[l + 2][0], t[l + 2][1]), this.drawingContext.lineTo(a[0], a[1]), this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1]), this.drawingContext.lineTo(t[l + 3][0], t[l + 3][1]), this._doFill && this._pInst.fill(t[l + 3][5]), this._doStroke && this._pInst.stroke(t[l + 3][6])) : (this.drawingContext.moveTo(a[0], a[1]), this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1])), this._doFillStrokeClose(c);
                                    } else {
                                        for(this.drawingContext.beginPath(), this.drawingContext.moveTo(t[0][0], t[0][1]), l = 1; l < d; l++)(a = t[l]).isVert && (a.moveTo ? this.drawingContext.moveTo(a[0], a[1]) : this.drawingContext.lineTo(a[0], a[1]));
                                        this._doFillStrokeClose(c);
                                    }
                                } else {
                                    for(this.drawingContext.beginPath(), l = 0; l < d; l++)t[l].isVert ? t[l].moveTo ? this.drawingContext.moveTo(t[l][0], t[l][1]) : this.drawingContext.lineTo(t[l][0], t[l][1]) : this.drawingContext.quadraticCurveTo(t[l][0], t[l][1], t[l][2], t[l][3]);
                                    this._doFillStrokeClose(c);
                                }
                            } else {
                                for(this.drawingContext.beginPath(), l = 0; l < d; l++)t[l].isVert ? t[l].moveTo ? this.drawingContext.moveTo(t[l][0], t[l][1]) : this.drawingContext.lineTo(t[l][0], t[l][1]) : this.drawingContext.bezierCurveTo(t[l][0], t[l][1], t[l][2], t[l][3], t[l][4], t[l][5]);
                                this._doFillStrokeClose(c);
                            }
                        } else if (3 < d) {
                            var f = [], h = 1 - this._curveTightness;
                            for(this.drawingContext.beginPath(), this.drawingContext.moveTo(t[1][0], t[1][1]), l = 1; l + 2 < d; l++)a = t[l], f[0] = [
                                a[0],
                                a[1]
                            ], f[1] = [
                                a[0] + (h * t[l + 1][0] - h * t[l - 1][0]) / 6,
                                a[1] + (h * t[l + 1][1] - h * t[l - 1][1]) / 6
                            ], f[2] = [
                                t[l + 1][0] + (h * t[l][0] - h * t[l + 2][0]) / 6,
                                t[l + 1][1] + (h * t[l][1] - h * t[l + 2][1]) / 6
                            ], f[3] = [
                                t[l + 1][0],
                                t[l + 1][1]
                            ], this.drawingContext.bezierCurveTo(f[1][0], f[1][1], f[2][0], f[2][1], f[3][0], f[3][1]);
                            c && this.drawingContext.lineTo(t[l + 1][0], t[l + 1][1]), this._doFillStrokeClose(c);
                        }
                        s = n = o = r = !1, c && t.pop();
                    }
                    return this;
                }, d.default.Renderer2D.prototype.strokeCap = function(e) {
                    return e !== p.ROUND && e !== p.SQUARE && e !== p.PROJECT || (this.drawingContext.lineCap = e), this;
                }, d.default.Renderer2D.prototype.strokeJoin = function(e) {
                    return e !== p.ROUND && e !== p.BEVEL && e !== p.MITER || (this.drawingContext.lineJoin = e), this;
                }, d.default.Renderer2D.prototype.strokeWeight = function(e) {
                    return this.drawingContext.lineWidth = void 0 === e || 0 === e ? 1e-4 : e, this;
                }, d.default.Renderer2D.prototype._getFill = function() {
                    return this._cachedFillStyle || (this._cachedFillStyle = this.drawingContext.fillStyle), this._cachedFillStyle;
                }, d.default.Renderer2D.prototype._setFill = function(e) {
                    e !== this._cachedFillStyle && (this.drawingContext.fillStyle = e, this._cachedFillStyle = e);
                }, d.default.Renderer2D.prototype._getStroke = function() {
                    return this._cachedStrokeStyle || (this._cachedStrokeStyle = this.drawingContext.strokeStyle), this._cachedStrokeStyle;
                }, d.default.Renderer2D.prototype._setStroke = function(e) {
                    e !== this._cachedStrokeStyle && (this.drawingContext.strokeStyle = e, this._cachedStrokeStyle = e);
                }, d.default.Renderer2D.prototype.bezier = function(e, t, r, o, n, s, i, a) {
                    return this._pInst.beginShape(), this._pInst.vertex(e, t), this._pInst.bezierVertex(r, o, n, s, i, a), this._pInst.endShape(), this;
                }, d.default.Renderer2D.prototype.curve = function(e, t, r, o, n, s, i, a) {
                    return this._pInst.beginShape(), this._pInst.curveVertex(e, t), this._pInst.curveVertex(r, o), this._pInst.curveVertex(n, s), this._pInst.curveVertex(i, a), this._pInst.endShape(), this;
                }, d.default.Renderer2D.prototype._doFillStrokeClose = function(e) {
                    e && this.drawingContext.closePath(), this._doFill && this.drawingContext.fill(), this._doStroke && this.drawingContext.stroke();
                }, d.default.Renderer2D.prototype.applyMatrix = function(e, t, r, o, n, s) {
                    this.drawingContext.transform(e, t, r, o, n, s);
                }, d.default.Renderer2D.prototype.resetMatrix = function() {
                    return this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), this;
                }, d.default.Renderer2D.prototype.rotate = function(e) {
                    this.drawingContext.rotate(e);
                }, d.default.Renderer2D.prototype.scale = function(e, t) {
                    return this.drawingContext.scale(e, t), this;
                }, d.default.Renderer2D.prototype.translate = function(e, t) {
                    return e instanceof d.default.Vector && (t = e.y, e = e.x), this.drawingContext.translate(e, t), this;
                }, d.default.Renderer2D.prototype.text = function(e, t, r, o, n) {
                    void 0 !== o && this.drawingContext.textBaseline === p.BASELINE && (s = !0, this.drawingContext.textBaseline = p.TOP);
                    var s, o = d.default.Renderer.prototype.text.apply(this, arguments);
                    return s && (this.drawingContext.textBaseline = p.BASELINE), o;
                }, d.default.Renderer2D.prototype._renderText = function(e, t, r, o, n, s) {
                    if (!(o < s || n <= o)) return e.push(), this._isOpenType() ? this._textFont._renderPath(t, r, o, {
                        renderer: this
                    }) : (this._doStroke && this._strokeSet && this.drawingContext.strokeText(t, r, o), this._doFill && (this._fillSet || this._setFill(p._DEFAULT_TEXT_FILL), this.drawingContext.fillText(t, r, o))), e.pop(), e;
                }, d.default.Renderer2D.prototype.textWidth = function(e) {
                    return this._isOpenType() ? this._textFont._textWidth(e, this._textSize) : this.drawingContext.measureText(e).width;
                }, d.default.Renderer2D.prototype._applyTextProperties = function() {
                    var e, t = this._pInst;
                    return this._setProperty("_textAscent", null), this._setProperty("_textDescent", null), e = this._textFont, this._isOpenType() && (e = this._textFont.font.familyName, this._setProperty("_textStyle", this._textFont.font.styleName)), this.drawingContext.font = "".concat(this._textStyle || "normal", " ").concat(this._textSize || 12, "px ").concat(e || "sans-serif"), this.drawingContext.textAlign = this._textAlign, this._textBaseline === p.CENTER ? this.drawingContext.textBaseline = p._CTX_MIDDLE : this.drawingContext.textBaseline = this._textBaseline, t;
                }, d.default.Renderer2D.prototype.push = function() {
                    return this.drawingContext.save(), d.default.Renderer.prototype.push.apply(this);
                }, d.default.Renderer2D.prototype.pop = function(e) {
                    this.drawingContext.restore(), this._cachedFillStyle = this.drawingContext.fillStyle, this._cachedStrokeStyle = this.drawingContext.strokeStyle, d.default.Renderer.prototype.pop.call(this, e);
                }, d.default.Renderer2D);
                r.default = n;
            },
            {
                "./constants": 256,
                "./main": 267,
                "./p5.Renderer": 270,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.fill": 152,
                "core-js/modules/es.array.for-each": 154,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.function.name": 165,
                "core-js/modules/es.number.to-fixed": 171,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        272: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.assign"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.assign"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator");
                var f = (e = e("./main")) && e.__esModule ? e : {
                    default: e
                };
                f.default.prototype._promisePreloads = [];
                function s() {
                    return {};
                }
                var h = (f.default.prototype.registerPromisePreload = function(e) {
                    f.default.prototype._promisePreloads.push(e);
                }, false);
                f.default.prototype._setupPromisePreloads = function() {
                    var e = !0, t = !1, r = void 0;
                    try {
                        for(var o, n = this._promisePreloads[Symbol.iterator](); !(e = (o = n.next()).done); e = !0){
                            var s = o.value, i = this, a = s.method, l = s.addCallbacks, u = s.legacyPreloadSetup, c = s.target || this, d = c[a].bind(c);
                            if (c === f.default.prototype) {
                                if (h) continue;
                                i = null, d = c[a];
                            }
                            c[a] = this._wrapPromisePreload(i, d, l), u && (c[u.method] = this._legacyPreloadGenerator(i, u, c[a]));
                        }
                    } catch (e) {
                        t = !0, r = e;
                    } finally{
                        try {
                            e || null == n.return || n.return();
                        } finally{
                            if (t) throw r;
                        }
                    }
                    h = !0;
                }, f.default.prototype._wrapPromisePreload = function(e, l, u) {
                    var t = function() {
                        for(var e = this, t = (this._incrementPreload(), null), r = null, o = arguments.length, n = new Array(o), s = 0; s < o; s++)n[s] = arguments[s];
                        if (u) for(var i = n.length - 1; 0 <= i && !r && "function" == typeof n[i]; i--)r = t, t = n.pop();
                        var a = Promise.resolve(l.apply(this, n));
                        return t && a.then(t), r && a.catch(r), a.then(function() {
                            return e._decrementPreload();
                        }), a;
                    };
                    return t = e ? t.bind(e) : t;
                };
                f.default.prototype._legacyPreloadGenerator = function(e, t, o) {
                    var n = t.createBaseObject || s, t = function() {
                        var t = this, r = (this._incrementPreload(), n.apply(this, arguments));
                        return o.apply(this, arguments).then(function(e) {
                            Object.assign(r, e), t._decrementPreload();
                        }), r;
                    };
                    return t = e ? t.bind(e) : t;
                };
            },
            {
                "./main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.assign": 172,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.promise": 178,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        273: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (n = e("./main")) && n.__esModule ? n : {
                    default: n
                }, l = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== u(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = i();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("./constants"));
                function i() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, i = function() {
                        return e;
                    }, e);
                }
                function u(e) {
                    return (u = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("./p5.Graphics"), e("./p5.Renderer2D"), e("../webgl/p5.RendererGL");
                var c = "defaultCanvas0", n = (a.default.prototype.createCanvas = function(e, t, r) {
                    a.default._validateParameters("createCanvas", arguments);
                    var o, n, s, r = r || l.P2D;
                    if (r === l.WEBGL) (n = document.getElementById(c)) && (n.parentNode.removeChild(n), o = this._renderer, this._elements = this._elements.filter(function(e) {
                        return e !== o;
                    })), (n = document.createElement("canvas")).id = c, n.classList.add("p5Canvas");
                    else if (this._defaultGraphicsCreated) n = this.canvas;
                    else {
                        n = document.createElement("canvas");
                        for(var i = 0; document.getElementById("defaultCanvas".concat(i));)i++;
                        c = "defaultCanvas".concat(i), n.id = c, n.classList.add("p5Canvas");
                    }
                    return this._setupDone || (n.dataset.hidden = !0, n.style.visibility = "hidden"), (this._userNode || (0 === document.getElementsByTagName("main").length && (s = document.createElement("main"), document.body.appendChild(s)), document.getElementsByTagName("main")[0])).appendChild(n), r === l.WEBGL ? (this._setProperty("_renderer", new a.default.RendererGL(n, this, !0)), this._elements.push(this._renderer)) : this._defaultGraphicsCreated || (this._setProperty("_renderer", new a.default.Renderer2D(n, this, !0)), this._defaultGraphicsCreated = !0, this._elements.push(this._renderer)), this._renderer.resize(e, t), this._renderer._applyDefaults(), this._renderer;
                }, a.default.prototype.resizeCanvas = function(e, t, r) {
                    if (a.default._validateParameters("resizeCanvas", arguments), this._renderer) {
                        var o, n, s = {};
                        for(o in this.drawingContext){
                            var i = this.drawingContext[o];
                            "object" !== u(i) && "function" != typeof i && (s[o] = i);
                        }
                        for(n in this._renderer.resize(e, t), this.width = e, this.height = t, s)try {
                            this.drawingContext[n] = s[n];
                        } catch (e) {}
                        r || this.redraw();
                    }
                    this._addAccsOutput() && this._updateAccsOutput();
                }, a.default.prototype.noCanvas = function() {
                    this.canvas && this.canvas.parentNode.removeChild(this.canvas);
                }, a.default.prototype.createGraphics = function(e, t, r) {
                    return a.default._validateParameters("createGraphics", arguments), new a.default.Graphics(e, t, r, this);
                }, a.default.prototype.blendMode = function(e) {
                    a.default._validateParameters("blendMode", arguments), e === l.NORMAL && (console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."), e = l.BLEND), this._renderer.blendMode(e);
                }, a.default);
                r.default = n;
            },
            {
                "../webgl/p5.RendererGL": 321,
                "./constants": 256,
                "./main": 267,
                "./p5.Graphics": 269,
                "./p5.Renderer2D": 271,
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        274: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.slice"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = n(e("../main")), a = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = c();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../constants")), u = n(e("../helpers"));
                function c() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, c = function() {
                        return e;
                    }, e);
                }
                function n(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                e("../friendly_errors/fes_core"), e("../friendly_errors/file_errors"), e("../friendly_errors/validate_params"), l.default.prototype._normalizeArcAngles = function(e, t, r, o, n) {
                    var s;
                    return e -= a.TWO_PI * Math.floor(e / a.TWO_PI), t -= a.TWO_PI * Math.floor(t / a.TWO_PI), s = Math.min(Math.abs(e - t), a.TWO_PI - Math.abs(e - t)), n && (e = e <= a.HALF_PI ? Math.atan(r / o * Math.tan(e)) : e > a.HALF_PI && e <= 3 * a.HALF_PI ? Math.atan(r / o * Math.tan(e)) + a.PI : Math.atan(r / o * Math.tan(e)) + a.TWO_PI, t = t <= a.HALF_PI ? Math.atan(r / o * Math.tan(t)) : t > a.HALF_PI && t <= 3 * a.HALF_PI ? Math.atan(r / o * Math.tan(t)) + a.PI : Math.atan(r / o * Math.tan(t)) + a.TWO_PI), t < e && (t += a.TWO_PI), {
                        start: e,
                        stop: t,
                        correspondToSamePoint: s < 1e-5
                    };
                }, l.default.prototype.arc = function(e, t, r, o, n, s, i, a) {
                    return l.default._validateParameters("arc", arguments), (this._renderer._doStroke || this._renderer._doFill) && n !== s && (n = this._toRadians(n), s = this._toRadians(s), r = Math.abs(r), o = Math.abs(o), e = u.default.modeAdjust(e, t, r, o, this._renderer._ellipseMode), (t = this._normalizeArcAngles(n, s, e.w, e.h, !0)).correspondToSamePoint ? this._renderer.ellipse([
                        e.x,
                        e.y,
                        e.w,
                        e.h,
                        a
                    ]) : (this._renderer.arc(e.x, e.y, e.w, e.h, t.start, t.stop, i, a), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("arc", [
                        e.x,
                        e.y,
                        e.w,
                        e.h,
                        t.start,
                        t.stop,
                        i
                    ]))), this;
                }, l.default.prototype.ellipse = function(e, t, r, o, n) {
                    return l.default._validateParameters("ellipse", arguments), this._renderEllipse.apply(this, arguments);
                }, l.default.prototype.circle = function() {
                    l.default._validateParameters("circle", arguments);
                    var e = Array.prototype.slice.call(arguments, 0, 2);
                    return e.push(arguments[2]), e.push(arguments[2]), this._renderEllipse.apply(this, e);
                }, l.default.prototype._renderEllipse = function(e, t, r, o, n) {
                    return (this._renderer._doStroke || this._renderer._doFill) && (r < 0 && (r = Math.abs(r)), void 0 === o ? o = r : o < 0 && (o = Math.abs(o)), e = u.default.modeAdjust(e, t, r, o, this._renderer._ellipseMode), this._renderer.ellipse([
                        e.x,
                        e.y,
                        e.w,
                        e.h,
                        n
                    ]), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("ellipse", [
                        e.x,
                        e.y,
                        e.w,
                        e.h
                    ])), this;
                }, l.default.prototype.line = function() {
                    for(var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return l.default._validateParameters("line", r), this._renderer._doStroke && (e = this._renderer).line.apply(e, r), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("line", r), this;
                }, l.default.prototype.point = function() {
                    for(var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return l.default._validateParameters("point", r), this._renderer._doStroke && (1 === r.length && r[0] instanceof l.default.Vector ? this._renderer.point.call(this._renderer, r[0].x, r[0].y, r[0].z) : ((e = this._renderer).point.apply(e, r), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("point", r))), this;
                }, l.default.prototype.quad = function() {
                    for(var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return l.default._validateParameters("quad", r), (this._renderer._doStroke || this._renderer._doFill) && (this._renderer.isP3D && r.length <= 12 ? this._renderer.quad.call(this._renderer, r[0], r[1], 0, r[2], r[3], 0, r[4], r[5], 0, r[6], r[7], 0, r[8], r[9]) : ((e = this._renderer).quad.apply(e, r), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("quadrilateral", r))), this;
                }, l.default.prototype.rect = function() {
                    return l.default._validateParameters("rect", arguments), this._renderRect.apply(this, arguments);
                }, l.default.prototype.square = function(e, t, r, o, n, s, i) {
                    return l.default._validateParameters("square", arguments), this._renderRect.call(this, e, t, r, r, o, n, s, i);
                }, l.default.prototype._renderRect = function() {
                    if (this._renderer._doStroke || this._renderer._doFill) {
                        3 === arguments.length && (arguments[3] = arguments[2]);
                        for(var e = u.default.modeAdjust(arguments[0], arguments[1], arguments[2], arguments[3], this._renderer._rectMode), t = [
                            e.x,
                            e.y,
                            e.w,
                            e.h
                        ], r = 4; r < arguments.length; r++)t[r] = arguments[r];
                        this._renderer.rect(t), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("rectangle", [
                            e.x,
                            e.y,
                            e.w,
                            e.h
                        ]);
                    }
                    return this;
                }, l.default.prototype.triangle = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    return l.default._validateParameters("triangle", t), (this._renderer._doStroke || this._renderer._doFill) && this._renderer.triangle(t), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("triangle", t), this;
                };
                e = l.default;
                r.default = e;
            },
            {
                "../constants": 256,
                "../friendly_errors/fes_core": 258,
                "../friendly_errors/file_errors": 259,
                "../friendly_errors/validate_params": 262,
                "../helpers": 263,
                "../main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        275: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (l = e("../main")) && l.__esModule ? l : {
                    default: l
                }, s = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                n.default.prototype.ellipseMode = function(e) {
                    return n.default._validateParameters("ellipseMode", arguments), e !== s.CORNER && e !== s.CORNERS && e !== s.RADIUS && e !== s.CENTER || (this._renderer._ellipseMode = e), this;
                }, n.default.prototype.noSmooth = function() {
                    return this._renderer.isP3D ? this.setAttributes("antialias", !1) : "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = !1), this;
                }, n.default.prototype.rectMode = function(e) {
                    return n.default._validateParameters("rectMode", arguments), e !== s.CORNER && e !== s.CORNERS && e !== s.RADIUS && e !== s.CENTER || (this._renderer._rectMode = e), this;
                }, n.default.prototype.smooth = function() {
                    return this.setAttributes("antialias", !0), this._renderer.isP3D || "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = !0), this;
                }, n.default.prototype.strokeCap = function(e) {
                    return n.default._validateParameters("strokeCap", arguments), e !== s.ROUND && e !== s.SQUARE && e !== s.PROJECT || this._renderer.strokeCap(e), this;
                }, n.default.prototype.strokeJoin = function(e) {
                    return n.default._validateParameters("strokeJoin", arguments), e !== s.ROUND && e !== s.BEVEL && e !== s.MITER || this._renderer.strokeJoin(e), this;
                }, n.default.prototype.strokeWeight = function(e) {
                    return n.default._validateParameters("strokeWeight", arguments), this._renderer.strokeWeight(e), this;
                };
                var l = n.default;
                r.default = l;
            },
            {
                "../constants": 256,
                "../main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        276: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (o = e("../main")) && o.__esModule ? o : {
                    default: o
                };
                e("../friendly_errors/fes_core"), e("../friendly_errors/file_errors"), e("../friendly_errors/validate_params"), a.default.prototype.bezier = function() {
                    for(var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return a.default._validateParameters("bezier", r), (this._renderer._doStroke || this._renderer._doFill) && (e = this._renderer).bezier.apply(e, r), this;
                }, a.default.prototype.bezierDetail = function(e) {
                    return a.default._validateParameters("bezierDetail", arguments), this._bezierDetail = e, this;
                }, a.default.prototype.bezierPoint = function(e, t, r, o, n) {
                    a.default._validateParameters("bezierPoint", arguments);
                    var s = 1 - n;
                    return Math.pow(s, 3) * e + 3 * Math.pow(s, 2) * n * t + 3 * s * Math.pow(n, 2) * r + Math.pow(n, 3) * o;
                }, a.default.prototype.bezierTangent = function(e, t, r, o, n) {
                    a.default._validateParameters("bezierTangent", arguments);
                    var s = 1 - n;
                    return 3 * o * Math.pow(n, 2) - 3 * r * Math.pow(n, 2) + 6 * r * s * n - 6 * t * s * n + 3 * t * Math.pow(s, 2) - 3 * e * Math.pow(s, 2);
                }, a.default.prototype.curve = function() {
                    for(var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return a.default._validateParameters("curve", r), this._renderer._doStroke && (e = this._renderer).curve.apply(e, r), this;
                }, a.default.prototype.curveDetail = function(e) {
                    return a.default._validateParameters("curveDetail", arguments), this._curveDetail = e < 3 ? 3 : e, this;
                }, a.default.prototype.curveTightness = function(e) {
                    return a.default._validateParameters("curveTightness", arguments), this._renderer._curveTightness = e, this;
                }, a.default.prototype.curvePoint = function(e, t, r, o, n) {
                    a.default._validateParameters("curvePoint", arguments);
                    var s = n * n * n, i = n * n;
                    return e * (-0.5 * s + i - .5 * n) + t * (1.5 * s - 2.5 * i + 1) + r * (-1.5 * s + 2 * i + .5 * n) + o * (.5 * s - .5 * i);
                }, a.default.prototype.curveTangent = function(e, t, r, o, n) {
                    a.default._validateParameters("curveTangent", arguments);
                    var s = n * n;
                    return e * (-3 * s / 2 + 2 * n - .5) + t * (9 * s / 2 - 5 * n) + r * (-9 * s / 2 + 4 * n + .5) + o * (3 * s / 2 - n);
                };
                var o = a.default;
                r.default = o;
            },
            {
                "../friendly_errors/fes_core": 258,
                "../friendly_errors/file_errors": 259,
                "../friendly_errors/validate_params": 262,
                "../main": 267
            }
        ],
        277: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.slice"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (y = e("../main")) && y.__esModule ? y : {
                    default: y
                }, l = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = u();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../constants"));
                function u() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, u = function() {
                        return e;
                    }, e);
                }
                var n = null, c = [], d = [], f = !1, s = !1, h = !1, p = !1, m = !0, y = (a.default.prototype.beginContour = function() {
                    return d = [], p = !0, this;
                }, a.default.prototype.beginShape = function(e) {
                    var t;
                    return a.default._validateParameters("beginShape", arguments), this._renderer.isP3D ? (t = this._renderer).beginShape.apply(t, arguments) : (n = e === l.POINTS || e === l.LINES || e === l.TRIANGLES || e === l.TRIANGLE_FAN || e === l.TRIANGLE_STRIP || e === l.QUADS || e === l.QUAD_STRIP ? e : null, c = [], d = []), this;
                }, a.default.prototype.bezierVertex = function() {
                    for(var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    if (a.default._validateParameters("bezierVertex", r), this._renderer.isP3D) (e = this._renderer).bezierVertex.apply(e, r);
                    else if (0 === c.length) a.default._friendlyError("vertex() must be used once before calling bezierVertex()", "bezierVertex");
                    else {
                        f = !0;
                        for(var n = [], s = 0; s < r.length; s++)n[s] = r[s];
                        n.isVert = !1, (p ? d : c).push(n);
                    }
                    return this;
                }, a.default.prototype.curveVertex = function() {
                    for(var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return a.default._validateParameters("curveVertex", r), this._renderer.isP3D ? (e = this._renderer).curveVertex.apply(e, r) : (s = !0, this.vertex(r[0], r[1])), this;
                }, a.default.prototype.endContour = function() {
                    var e = d[0].slice();
                    e.isVert = d[0].isVert, e.moveTo = !1, d.push(e), m && (c.push(c[0]), m = !1);
                    for(var t = 0; t < d.length; t++)c.push(d[t]);
                    return this;
                }, a.default.prototype.endShape = function(e) {
                    if (a.default._validateParameters("endShape", arguments), this._renderer.isP3D) this._renderer.endShape(e, s, f, h, p, n);
                    else {
                        if (0 === c.length) return this;
                        if (!this._renderer._doStroke && !this._renderer._doFill) return this;
                        var t = e === l.CLOSE;
                        t && !p && c.push(c[0]), this._renderer.endShape(e, c, s, f, h, p, n), m = (p = h = f = s = !1, true), t && c.pop();
                    }
                    return this;
                }, a.default.prototype.quadraticVertex = function() {
                    for(var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    if (a.default._validateParameters("quadraticVertex", r), this._renderer.isP3D) (e = this._renderer).quadraticVertex.apply(e, r);
                    else {
                        if (this._contourInited) return (e = {}).x = r[0], e.y = r[1], e.x3 = r[2], e.y3 = r[3], e.type = l.QUADRATIC, this._contourVertices.push(e), this;
                        if (0 < c.length) {
                            h = !0;
                            for(var n = [], s = 0; s < r.length; s++)n[s] = r[s];
                            n.isVert = !1, (p ? d : c).push(n);
                        } else a.default._friendlyError("vertex() must be used once before calling quadraticVertex()", "quadraticVertex");
                    }
                    return this;
                }, a.default.prototype.vertex = function(e, t, r, o, n) {
                    var s;
                    return this._renderer.isP3D ? (s = this._renderer).vertex.apply(s, arguments) : ((s = []).isVert = !0, s[0] = e, s[1] = t, s[2] = 0, s[3] = 0, s[4] = 0, s[5] = this._renderer._getFill(), s[6] = this._renderer._getStroke(), r && (s.moveTo = r), (p ? (0 === d.length && (s.moveTo = !0), d) : c).push(s)), this;
                }, a.default.prototype.normal = function(e, t, r) {
                    var o;
                    return this._assert3d("normal"), a.default._validateParameters("normal", arguments), (o = this._renderer).normal.apply(o, arguments), this;
                }, a.default);
                r.default = y;
            },
            {
                "../constants": 256,
                "../main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        278: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function n(e) {
                    return (n = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                var a, l, u;
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.assign"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.typed-array.uint8-clamped-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.assign"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.typed-array.uint8-clamped-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e, t) {
                    window.setTimeout(e, 1e3 / 60);
                }, "undefined" == typeof Uint8ClampedArray || Uint8ClampedArray.prototype.slice || Object.defineProperty(Uint8ClampedArray.prototype, "slice", {
                    value: Array.prototype.slice,
                    writable: !0,
                    configurable: !0,
                    enumerable: !1
                }), Object.assign || (a = Object.keys, e = Object.defineProperty, l = "function" == typeof Symbol && "symbol" === n(Symbol()), u = Object.prototype.propertyIsEnumerable, e(Object, "assign", {
                    value: function(e, t) {
                        if (null == e) throw new TypeError("target must be an object");
                        for(var r, o, n, s = Object(e), i = 1; i < arguments.length; ++i)for(r = Object(arguments[i]), n = a(r), l && Object.getOwnPropertySymbols && n.push.apply(n, Object.getOwnPropertySymbols(r).filter(function(t) {
                            return function(e) {
                                return u.call(t, e);
                            };
                        }(r))), o = 0; o < n.length; ++o)s[n[o]] = r[n[o]];
                        return s;
                    },
                    configurable: !0,
                    enumerable: !1,
                    writable: !0
                }));
            },
            {
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.assign": 172,
                "core-js/modules/es.object.keys": 176,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.typed-array.copy-within": 197,
                "core-js/modules/es.typed-array.every": 198,
                "core-js/modules/es.typed-array.fill": 199,
                "core-js/modules/es.typed-array.filter": 200,
                "core-js/modules/es.typed-array.find": 202,
                "core-js/modules/es.typed-array.find-index": 201,
                "core-js/modules/es.typed-array.for-each": 205,
                "core-js/modules/es.typed-array.includes": 206,
                "core-js/modules/es.typed-array.index-of": 207,
                "core-js/modules/es.typed-array.iterator": 210,
                "core-js/modules/es.typed-array.join": 211,
                "core-js/modules/es.typed-array.last-index-of": 212,
                "core-js/modules/es.typed-array.map": 213,
                "core-js/modules/es.typed-array.reduce": 215,
                "core-js/modules/es.typed-array.reduce-right": 214,
                "core-js/modules/es.typed-array.reverse": 216,
                "core-js/modules/es.typed-array.set": 217,
                "core-js/modules/es.typed-array.slice": 218,
                "core-js/modules/es.typed-array.some": 219,
                "core-js/modules/es.typed-array.sort": 220,
                "core-js/modules/es.typed-array.subarray": 221,
                "core-js/modules/es.typed-array.to-locale-string": 222,
                "core-js/modules/es.typed-array.to-string": 223,
                "core-js/modules/es.typed-array.uint8-clamped-array": 227,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        279: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.for-each"), e("core-js/modules/es.object.assign"), e("core-js/modules/web.dom-collections.for-each"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.object.assign"), e("core-js/modules/web.dom-collections.for-each"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("./main")) && e.__esModule ? e : {
                    default: e
                };
                e.default.prototype.noLoop = function() {
                    this._loop = !1;
                }, e.default.prototype.loop = function() {
                    this._loop || (this._loop = !0, this._setupDone && this._draw());
                }, e.default.prototype.isLooping = function() {
                    return this._loop;
                }, e.default.prototype.push = function() {
                    this._styles.push({
                        props: {
                            _colorMode: this._colorMode
                        },
                        renderer: this._renderer.push()
                    });
                }, e.default.prototype.pop = function() {
                    var e = this._styles.pop();
                    e ? (this._renderer.pop(e.renderer), Object.assign(this, e.props)) : console.warn("pop() was called without matching push()");
                }, e.default.prototype.redraw = function(e) {
                    if (!this._inUserDraw && this._setupDone) {
                        var t = parseInt(e), r = ((isNaN(t) || t < 1) && (t = 1), this._isGlobal ? window : this);
                        if ("function" == typeof r.draw) {
                            void 0 === r.setup && r.scale(r._pixelDensity, r._pixelDensity);
                            for(var o = function(e) {
                                e.call(r);
                            }, n = 0; n < t; n++){
                                r.resetMatrix(), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._updateAccsOutput(), r._renderer.isP3D && r._renderer._update(), r._setProperty("frameCount", r.frameCount + 1), r._registeredMethods.pre.forEach(o), this._inUserDraw = !0;
                                try {
                                    r.draw();
                                } finally{
                                    this._inUserDraw = !1;
                                }
                                r._registeredMethods.post.forEach(o);
                            }
                        }
                    }
                };
                e = e.default;
                r.default = e;
            },
            {
                "./main": 267,
                "core-js/modules/es.array.for-each": 154,
                "core-js/modules/es.object.assign": 172,
                "core-js/modules/web.dom-collections.for-each": 229
            }
        ],
        280: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-prototype-of"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-prototype-of"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (e = e("./main")) && e.__esModule ? e : {
                    default: e
                };
                function o(e) {
                    return function(e) {
                        if (Array.isArray(e)) {
                            for(var t = 0, r = new Array(e.length); t < e.length; t++)r[t] = e[t];
                            return r;
                        }
                    }(e) || function(e) {
                        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
                    }(e) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                n.default.prototype.applyMatrix = function() {
                    var e = arguments[0] instanceof Object.getPrototypeOf(Uint8Array);
                    return Array.isArray(arguments[0]) || e ? (e = this._renderer).applyMatrix.apply(e, o(arguments[0])) : (e = this._renderer).applyMatrix.apply(e, arguments), this;
                }, n.default.prototype.resetMatrix = function() {
                    return this._renderer.resetMatrix(), this;
                }, n.default.prototype.rotate = function(e, t) {
                    return n.default._validateParameters("rotate", arguments), this._renderer.rotate(this._toRadians(e), t), this;
                }, n.default.prototype.rotateX = function(e) {
                    return this._assert3d("rotateX"), n.default._validateParameters("rotateX", arguments), this._renderer.rotateX(this._toRadians(e)), this;
                }, n.default.prototype.rotateY = function(e) {
                    return this._assert3d("rotateY"), n.default._validateParameters("rotateY", arguments), this._renderer.rotateY(this._toRadians(e)), this;
                }, n.default.prototype.rotateZ = function(e) {
                    return this._assert3d("rotateZ"), n.default._validateParameters("rotateZ", arguments), this._renderer.rotateZ(this._toRadians(e)), this;
                }, n.default.prototype.scale = function(e, t, r) {
                    var o;
                    return n.default._validateParameters("scale", arguments), e instanceof n.default.Vector ? (e = (o = e).x, t = o.y, r = o.z) : e instanceof Array && (e = (o = e)[0], t = o[1], r = o[2] || 1), isNaN(t) ? t = r = e : isNaN(r) && (r = 1), this._renderer.scale.call(this._renderer, e, t, r), this;
                }, n.default.prototype.shearX = function(e) {
                    n.default._validateParameters("shearX", arguments);
                    e = this._toRadians(e);
                    return this._renderer.applyMatrix(1, 0, Math.tan(e), 1, 0, 0), this;
                }, n.default.prototype.shearY = function(e) {
                    n.default._validateParameters("shearY", arguments);
                    e = this._toRadians(e);
                    return this._renderer.applyMatrix(1, Math.tan(e), 0, 1, 0, 0), this;
                }, n.default.prototype.translate = function(e, t, r) {
                    return n.default._validateParameters("translate", arguments), this._renderer.isP3D ? this._renderer.translate(e, t, r) : this._renderer.translate(e, t), this;
                };
                e = n.default;
                r.default = e;
            },
            {
                "./main": 267,
                "core-js/modules/es.array.from": 155,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-prototype-of": 175,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.typed-array.copy-within": 197,
                "core-js/modules/es.typed-array.every": 198,
                "core-js/modules/es.typed-array.fill": 199,
                "core-js/modules/es.typed-array.filter": 200,
                "core-js/modules/es.typed-array.find": 202,
                "core-js/modules/es.typed-array.find-index": 201,
                "core-js/modules/es.typed-array.for-each": 205,
                "core-js/modules/es.typed-array.includes": 206,
                "core-js/modules/es.typed-array.index-of": 207,
                "core-js/modules/es.typed-array.iterator": 210,
                "core-js/modules/es.typed-array.join": 211,
                "core-js/modules/es.typed-array.last-index-of": 212,
                "core-js/modules/es.typed-array.map": 213,
                "core-js/modules/es.typed-array.reduce": 215,
                "core-js/modules/es.typed-array.reduce-right": 214,
                "core-js/modules/es.typed-array.reverse": 216,
                "core-js/modules/es.typed-array.set": 217,
                "core-js/modules/es.typed-array.slice": 218,
                "core-js/modules/es.typed-array.some": 219,
                "core-js/modules/es.typed-array.sort": 220,
                "core-js/modules/es.typed-array.subarray": 221,
                "core-js/modules/es.typed-array.to-locale-string": 222,
                "core-js/modules/es.typed-array.to-string": 223,
                "core-js/modules/es.typed-array.uint8-array": 226,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        281: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.ends-with"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.ends-with"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator");
                var n = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                function s(e) {
                    return function(e) {
                        if (Array.isArray(e)) {
                            for(var t = 0, r = new Array(e.length); t < e.length; t++)r[t] = e[t];
                            return r;
                        }
                    }(e) || function(e) {
                        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
                    }(e) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                n.default.prototype.storeItem = function(e, t) {
                    "string" != typeof e && console.log("The argument that you passed to storeItem() - ".concat(e, " is not a string.")), e.endsWith("p5TypeID") && console.log("The argument that you passed to storeItem() - ".concat(e, " must not end with 'p5TypeID'.")), void 0 === t && console.log("You cannot store undefined variables using storeItem().");
                    var r = i(t);
                    switch(r){
                        case "number":
                        case "boolean":
                            t = t.toString();
                            break;
                        case "object":
                            t instanceof n.default.Color ? r = "p5.Color" : t instanceof n.default.Vector && (r = "p5.Vector", t = [
                                t.x,
                                t.y,
                                t.z
                            ]), t = JSON.stringify(t);
                    }
                    localStorage.setItem(e, t);
                    e = "".concat(e, "p5TypeID");
                    localStorage.setItem(e, r);
                }, n.default.prototype.getItem = function(e) {
                    var t = localStorage.getItem(e), r = localStorage.getItem("".concat(e, "p5TypeID"));
                    if (void 0 === r) console.log("Unable to determine type of item stored under ".concat(e, "in local storage. Did you save the item with something other than setItem()?"));
                    else if (null !== t) switch(r){
                        case "number":
                            t = parseFloat(t);
                            break;
                        case "boolean":
                            t = "true" === t;
                            break;
                        case "object":
                            t = JSON.parse(t);
                            break;
                        case "p5.Color":
                            t = JSON.parse(t), t = this.color.apply(this, s(t.levels));
                            break;
                        case "p5.Vector":
                            t = JSON.parse(t), t = this.createVector.apply(this, s(t));
                    }
                    return t;
                }, n.default.prototype.clearStorage = function() {
                    localStorage.clear();
                }, n.default.prototype.removeItem = function(e) {
                    "string" != typeof e && console.log("The argument that you passed to removeItem() - ".concat(e, " is not a string.")), localStorage.removeItem(e), localStorage.removeItem("".concat(e, "p5TypeID"));
                };
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.from": 155,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.ends-with": 184,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        282: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.concat"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.string.sub"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.string.sub"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                n.default.prototype.createStringDict = function(e, t) {
                    return n.default._validateParameters("createStringDict", arguments), new n.default.StringDict(e, t);
                }, n.default.prototype.createNumberDict = function(e, t) {
                    return n.default._validateParameters("createNumberDict", arguments), new n.default.NumberDict(e, t);
                }, n.default.TypedDict = function(e, t) {
                    return e instanceof Object ? this.data = e : (this.data = {}, this.data[e] = t), this;
                }, n.default.TypedDict.prototype.size = function() {
                    return Object.keys(this.data).length;
                }, n.default.TypedDict.prototype.hasKey = function(e) {
                    return this.data.hasOwnProperty(e);
                }, n.default.TypedDict.prototype.get = function(e) {
                    if (this.data.hasOwnProperty(e)) return this.data[e];
                    console.log("".concat(e, " does not exist in this Dictionary"));
                }, n.default.TypedDict.prototype.set = function(e, t) {
                    this._validate(t) ? this.data[e] = t : console.log("Those values dont work for this dictionary type.");
                }, n.default.TypedDict.prototype._addObj = function(e) {
                    for(var t in e)this.set(t, e[t]);
                }, n.default.TypedDict.prototype.create = function(e, t) {
                    e instanceof Object && void 0 === t ? this._addObj(e) : void 0 !== e ? this.set(e, t) : console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair");
                }, n.default.TypedDict.prototype.clear = function() {
                    this.data = {};
                }, n.default.TypedDict.prototype.remove = function(e) {
                    if (!this.data.hasOwnProperty(e)) throw new Error("".concat(e, " does not exist in this Dictionary"));
                    delete this.data[e];
                }, n.default.TypedDict.prototype.print = function() {
                    for(var e in this.data)console.log("key:".concat(e, " value:").concat(this.data[e]));
                }, n.default.TypedDict.prototype.saveTable = function(e) {
                    var t, r = "";
                    for(t in this.data)r += "".concat(t, ",").concat(this.data[t], "\n");
                    var o = new Blob([
                        r
                    ], {
                        type: "text/csv"
                    });
                    n.default.prototype.downloadFile(o, e || "mycsv", "csv");
                }, n.default.TypedDict.prototype.saveJSON = function(e, t) {
                    n.default.prototype.saveJSON(this.data, e, t);
                }, n.default.TypedDict.prototype._validate = function(e) {
                    return !0;
                }, n.default.StringDict = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    n.default.TypedDict.apply(this, t);
                }, n.default.StringDict.prototype = Object.create(n.default.TypedDict.prototype), n.default.StringDict.prototype._validate = function(e) {
                    return "string" == typeof e;
                }, n.default.NumberDict = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    n.default.TypedDict.apply(this, t);
                }, n.default.NumberDict.prototype = Object.create(n.default.TypedDict.prototype), n.default.NumberDict.prototype._validate = function(e) {
                    return "number" == typeof e;
                }, n.default.NumberDict.prototype.add = function(e, t) {
                    this.data.hasOwnProperty(e) ? this.data[e] += t : console.log("The key - ".concat(e, " does not exist in this dictionary."));
                }, n.default.NumberDict.prototype.sub = function(e, t) {
                    this.add(e, -t);
                }, n.default.NumberDict.prototype.mult = function(e, t) {
                    this.data.hasOwnProperty(e) ? this.data[e] *= t : console.log("The key - ".concat(e, " does not exist in this dictionary."));
                }, n.default.NumberDict.prototype.div = function(e, t) {
                    this.data.hasOwnProperty(e) ? this.data[e] /= t : console.log("The key - ".concat(e, " does not exist in this dictionary."));
                }, n.default.NumberDict.prototype._valueTest = function(e) {
                    if (0 === Object.keys(this.data).length) throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");
                    if (1 === Object.keys(this.data).length) return this.data[Object.keys(this.data)[0]];
                    var t, r = this.data[Object.keys(this.data)[0]];
                    for(t in this.data)this.data[t] * e < r * e && (r = this.data[t]);
                    return r;
                }, n.default.NumberDict.prototype.minValue = function() {
                    return this._valueTest(1);
                }, n.default.NumberDict.prototype.maxValue = function() {
                    return this._valueTest(-1);
                }, n.default.NumberDict.prototype._keyTest = function(e) {
                    if (0 === Object.keys(this.data).length) throw new Error("Unable to use minValue on an empty NumberDict");
                    if (1 === Object.keys(this.data).length) return Object.keys(this.data)[0];
                    for(var t = Object.keys(this.data)[0], r = 1; r < Object.keys(this.data).length; r++)Object.keys(this.data)[r] * e < t * e && (t = Object.keys(this.data)[r]);
                    return t;
                }, n.default.NumberDict.prototype.minKey = function() {
                    return this._keyTest(1);
                }, n.default.NumberDict.prototype.maxKey = function() {
                    return this._keyTest(-1);
                };
                e = n.default.TypedDict;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.object.keys": 176,
                "core-js/modules/es.string.sub": 192
            }
        ],
        283: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.every"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.trim"), e("core-js/modules/web.dom-collections.for-each"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/web.url"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.every"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.for-each"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.trim"), e("core-js/modules/web.dom-collections.for-each"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/web.url"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var h = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                function f(e) {
                    return (f = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                function p(e, t, r) {
                    (t._userNode || document.body).appendChild(e);
                    r = new (r ? h.default.MediaElement : h.default.Element)(e, t);
                    return t._elements.push(r), r;
                }
                function n(e, t, r, o) {
                    var n = document.createElement(t), s = ("string" == typeof (r = r || "") && (r = [
                        r
                    ]), !0), t = !1, i = void 0;
                    try {
                        for(var a, l = r[Symbol.iterator](); !(s = (a = l.next()).done); s = !0){
                            var u = a.value, c = document.createElement("source");
                            c.setAttribute("src", u), n.appendChild(c);
                        }
                    } catch (e) {
                        t = !0, i = e;
                    } finally{
                        try {
                            s || null == l.return || l.return();
                        } finally{
                            if (t) throw i;
                        }
                    }
                    "function" == typeof o && n.addEventListener("canplaythrough", function e() {
                        o(), n.removeEventListener("canplaythrough", e);
                    });
                    var d = p(n, e, !0);
                    return d.loadedmetadata = !1, n.addEventListener("loadedmetadata", function() {
                        d.width = n.videoWidth, d.height = n.videoHeight, 0 === d.elt.width && (d.elt.width = n.videoWidth), 0 === d.elt.height && (d.elt.height = n.videoHeight), d.presetPlaybackRate && (d.elt.playbackRate = d.presetPlaybackRate, delete d.presetPlaybackRate), d.loadedmetadata = !0;
                    }), d;
                }
                h.default.prototype.select = function(e, t) {
                    h.default._validateParameters("select", arguments);
                    t = this._getContainer(t).querySelector(e);
                    return t ? this._wrapElement(t) : null;
                }, h.default.prototype.selectAll = function(e, t) {
                    h.default._validateParameters("selectAll", arguments);
                    var r = [], o = this._getContainer(t).querySelectorAll(e);
                    if (o) for(var n = 0; n < o.length; n++){
                        var s = this._wrapElement(o[n]);
                        r.push(s);
                    }
                    return r;
                }, h.default.prototype._getContainer = function(e) {
                    var t = document;
                    return "string" == typeof e ? t = document.querySelector(e) || document : e instanceof h.default.Element ? t = e.elt : e instanceof HTMLElement && (t = e), t;
                }, h.default.prototype._wrapElement = function(e) {
                    var t, r = Array.prototype.slice.call(e.children);
                    return "INPUT" === e.tagName && "checkbox" === e.type ? ((t = new h.default.Element(e, this)).checked = function() {
                        return 0 === arguments.length ? this.elt.checked : (this.elt.checked = !!arguments[0], this);
                    }, t) : "VIDEO" === e.tagName || "AUDIO" === e.tagName ? new h.default.MediaElement(e, this) : "SELECT" === e.tagName ? this.createSelect(new h.default.Element(e, this)) : 0 < r.length && r.every(function(e) {
                        return "INPUT" === e.tagName || "LABEL" === e.tagName;
                    }) ? this.createRadio(new h.default.Element(e, this)) : new h.default.Element(e, this);
                }, h.default.prototype.removeElements = function(e) {
                    h.default._validateParameters("removeElements", arguments);
                    this._elements.filter(function(e) {
                        return !(e.elt instanceof HTMLCanvasElement);
                    }).map(function(e) {
                        return e.remove();
                    });
                }, h.default.Element.prototype.changed = function(e) {
                    return h.default.Element._adjustListener("change", e, this), this;
                }, h.default.Element.prototype.input = function(e) {
                    return h.default.Element._adjustListener("input", e, this), this;
                }, h.default.prototype.createDiv = function() {
                    var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t = document.createElement("div");
                    return t.innerHTML = e, p(t, this);
                }, h.default.prototype.createP = function() {
                    var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t = document.createElement("p");
                    return t.innerHTML = e, p(t, this);
                }, h.default.prototype.createSpan = function() {
                    var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t = document.createElement("span");
                    return t.innerHTML = e, p(t, this);
                }, h.default.prototype.createImg = function() {
                    h.default._validateParameters("createImg", arguments);
                    var t, r = document.createElement("img"), o = arguments;
                    return 1 < o.length && "string" == typeof o[1] && (r.alt = o[1]), 2 < o.length && "string" == typeof o[2] && (r.crossOrigin = o[2]), r.src = o[0], t = p(r, this), r.addEventListener("load", function() {
                        t.width = r.offsetWidth || r.width, t.height = r.offsetHeight || r.height;
                        var e = o[o.length - 1];
                        "function" == typeof e && e(t);
                    }), t;
                }, h.default.prototype.createA = function(e, t, r) {
                    h.default._validateParameters("createA", arguments);
                    var o = document.createElement("a");
                    return o.href = e, o.innerHTML = t, r && (o.target = r), p(o, this);
                }, h.default.prototype.createSlider = function(e, t, r, o) {
                    h.default._validateParameters("createSlider", arguments);
                    var n = document.createElement("input");
                    return n.type = "range", n.min = e, n.max = t, 0 === o ? n.step = 1e-18 : o && (n.step = o), "number" == typeof r && (n.value = r), p(n, this);
                }, h.default.prototype.createButton = function(e, t) {
                    h.default._validateParameters("createButton", arguments);
                    var r = document.createElement("button");
                    return r.innerHTML = e, t && (r.value = t), p(r, this);
                }, h.default.prototype.createCheckbox = function() {
                    h.default._validateParameters("createCheckbox", arguments);
                    var e = document.createElement("div"), t = document.createElement("input"), r = (t.type = "checkbox", document.createElement("label")), o = (r.appendChild(t), e.appendChild(r), p(e, this));
                    return o.checked = function() {
                        var e = o.elt.firstElementChild.getElementsByTagName("input")[0];
                        if (e) {
                            if (0 === arguments.length) return e.checked;
                            e.checked = !!arguments[0];
                        }
                        return o;
                    }, this.value = function(e) {
                        return o.value = e, this;
                    }, arguments[0] && (o.value(arguments[0]), (e = document.createElement("span")).innerHTML = arguments[0], r.appendChild(e)), arguments[1] && (t.checked = !0), o;
                }, h.default.prototype.createSelect = function() {
                    h.default._validateParameters("createSelect", arguments);
                    var e, t, r = arguments[0];
                    return r instanceof h.default.Element && r.elt instanceof HTMLSelectElement ? this.elt = (e = r).elt : r instanceof HTMLSelectElement ? (e = p(r, this), this.elt = r) : (t = document.createElement("select"), r && "boolean" == typeof r && t.setAttribute("multiple", "true"), e = p(t, this), this.elt = t), e.option = function(e, t) {
                        var r;
                        if (void 0 !== e) {
                            for(var o, n = 0; n < this.elt.length; n += 1)if (this.elt[n].textContent === e) {
                                r = n;
                                break;
                            }
                            void 0 !== r ? !1 === t ? this.elt.remove(r) : this.elt[r].value = t : ((o = document.createElement("option")).textContent = e, o.value = void 0 === t ? e : t, this.elt.appendChild(o), this._pInst._elements.push(o));
                        }
                    }, e.selected = function(e) {
                        if (void 0 !== e) {
                            for(var t = 0; t < this.elt.length; t += 1)this.elt[t].value.toString() === e.toString() && (this.elt.selectedIndex = t);
                            return this;
                        }
                        if (this.elt.getAttribute("multiple")) {
                            var r = [], o = !0, n = !1, s = void 0;
                            try {
                                for(var i, a = this.elt.selectedOptions[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                                    var l = i.value;
                                    r.push(l.value);
                                }
                            } catch (e) {
                                n = !0, s = e;
                            } finally{
                                try {
                                    o || null == a.return || a.return();
                                } finally{
                                    if (n) throw s;
                                }
                            }
                            return r;
                        }
                        return this.elt.value;
                    }, e.disable = function(e) {
                        if ("string" == typeof e) for(var t = 0; t < this.elt.length; t++)this.elt[t].value.toString() === e && (this.elt[t].disabled = !0, this.elt[t].selected = !1);
                        else this.elt.disabled = !0;
                        return this;
                    }, e;
                }, h.default.prototype.createRadio = function() {
                    function t(e) {
                        return e instanceof HTMLInputElement && "radio" === e.type;
                    }
                    function d(e) {
                        return e instanceof HTMLLabelElement;
                    }
                    var f, e, r, o = arguments[0];
                    o instanceof h.default.Element && (o.elt instanceof HTMLDivElement || o.elt instanceof HTMLSpanElement) ? (f = o, this.elt = o.elt) : o instanceof HTMLDivElement || o instanceof HTMLSpanElement ? (f = p(o, this), e = this.elt = o, "string" == typeof arguments[1] && (r = arguments[1])) : ("string" == typeof o && (r = o), e = document.createElement("div"), f = p(e, this), this.elt = e), f._name = r || "radioOption";
                    return f._getOptionsArray = function() {
                        return Array.from(this.elt.children).filter(function(e) {
                            return t(e) || d(e) && t(e.firstElementChild);
                        }).map(function(e) {
                            return t(e) ? e : e.firstElementChild;
                        });
                    }, f.option = function(e, t) {
                        var r, o, n, s = !0, i = !1, a = void 0;
                        try {
                            for(var l, u = f._getOptionsArray()[Symbol.iterator](); !(s = (l = u.next()).done); s = !0){
                                var c = l.value;
                                if (c.value === e) {
                                    r = c;
                                    break;
                                }
                            }
                        } catch (e) {
                            i = !0, a = e;
                        } finally{
                            try {
                                s || null == u.return || u.return();
                            } finally{
                                if (i) throw a;
                            }
                        }
                        return void 0 === r && ((r = document.createElement("input")).setAttribute("type", "radio"), r.setAttribute("value", e)), r.setAttribute("name", f._name), d(r.parentElement) ? o = r.parentElement : (o = document.createElement("label")).insertAdjacentElement("afterbegin", r), o.lastElementChild instanceof HTMLSpanElement ? n = o.lastElementChild : (n = document.createElement("span"), r.insertAdjacentElement("afterend", n)), n.innerHTML = void 0 === t ? e : t, this.elt.appendChild(o), r;
                    }, f.remove = function(e) {
                        var t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = f._getOptionsArray()[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                var i = n.value;
                                if (i.value === e) return void (d(i.parentElement) ? i.parentElement : i).remove();
                            }
                        } catch (e) {
                            r = !0, o = e;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                    }, f.value = function() {
                        var e = "", t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = f._getOptionsArray()[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                var i = n.value;
                                if (i.checked) {
                                    e = i.value;
                                    break;
                                }
                            }
                        } catch (e) {
                            r = !0, o = e;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                        return e;
                    }, f.selected = function(e) {
                        var t = null;
                        if (void 0 === e) {
                            var r = !0, o = !1, n = void 0;
                            try {
                                for(var s, i = f._getOptionsArray()[Symbol.iterator](); !(r = (s = i.next()).done); r = !0){
                                    var a = s.value;
                                    if (a.checked) {
                                        t = a;
                                        break;
                                    }
                                }
                            } catch (e) {
                                o = !0, n = e;
                            } finally{
                                try {
                                    r || null == i.return || i.return();
                                } finally{
                                    if (o) throw n;
                                }
                            }
                        } else {
                            f._getOptionsArray().forEach(function(e) {
                                e.checked = !1, e.removeAttribute("checked");
                            });
                            var l = !0, o = !1, n = void 0;
                            try {
                                for(var u, c = f._getOptionsArray()[Symbol.iterator](); !(l = (u = c.next()).done); l = !0){
                                    var d = u.value;
                                    d.value === e && (d.setAttribute("checked", !0), d.checked = !0, t = d);
                                }
                            } catch (e) {
                                o = !0, n = e;
                            } finally{
                                try {
                                    l || null == c.return || c.return();
                                } finally{
                                    if (o) throw n;
                                }
                            }
                        }
                        return t;
                    }, f.disable = function() {
                        var e = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = f._getOptionsArray()[Symbol.iterator](); !(t = (n = s.next()).done); t = !0)n.value.setAttribute("disabled", e);
                        } catch (e) {
                            r = !0, o = e;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                    }, f;
                }, h.default.prototype.createColorPicker = function(e) {
                    h.default._validateParameters("createColorPicker", arguments);
                    var t = document.createElement("input");
                    return t.type = "color", e ? e instanceof h.default.Color ? t.value = e.toString("#rrggbb") : (h.default.prototype._colorMode = "rgb", h.default.prototype._colorMaxes = {
                        rgb: [
                            255,
                            255,
                            255,
                            255
                        ],
                        hsb: [
                            360,
                            100,
                            100,
                            1
                        ],
                        hsl: [
                            360,
                            100,
                            100,
                            1
                        ]
                    }, t.value = h.default.prototype.color(e).toString("#rrggbb")) : t.value = "#000000", (t = p(t, this)).color = function() {
                        return e && (e.mode && (h.default.prototype._colorMode = e.mode), e.maxes && (h.default.prototype._colorMaxes = e.maxes)), h.default.prototype.color(this.elt.value);
                    }, t;
                }, h.default.prototype.createInput = function() {
                    var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "text", r = (h.default._validateParameters("createInput", arguments), document.createElement("input"));
                    return r.setAttribute("value", e), r.setAttribute("type", t), p(r, this);
                }, h.default.prototype.createFileInput = function(a) {
                    var e, t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
                    h.default._validateParameters("createFileInput", arguments);
                    if (window.File && window.FileReader && window.FileList && window.Blob) return (e = document.createElement("input")).setAttribute("type", "file"), t && e.setAttribute("multiple", !0), e.addEventListener("change", function(e) {
                        var t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = e.target.files[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                var i = n.value;
                                h.default.File._load(i, a);
                            }
                        } catch (e) {
                            r = !0, o = e;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                    }, !1), p(e, this);
                    console.log("The File APIs are not fully supported in this browser. Cannot create element.");
                }, h.default.prototype.createVideo = function(e, t) {
                    return h.default._validateParameters("createVideo", arguments), n(this, "video", e, t);
                }, h.default.prototype.createAudio = function(e, t) {
                    return h.default._validateParameters("createAudio", arguments), n(this, "audio", e, t);
                }, h.default.prototype.VIDEO = "video", h.default.prototype.AUDIO = "audio", void 0 === navigator.mediaDevices && (navigator.mediaDevices = {}), void 0 === navigator.mediaDevices.getUserMedia && (navigator.mediaDevices.getUserMedia = function(r) {
                    var o = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
                    return o ? new Promise(function(e, t) {
                        o.call(navigator, r, e, t);
                    }) : Promise.reject(new Error("getUserMedia is not implemented in this browser"));
                }), h.default.prototype.createCapture = function() {
                    if (h.default._validateParameters("createCapture", arguments), !navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) throw new DOMException("getUserMedia not supported in this browser");
                    var e, t = !0, r = !0, o = !0, n = !1, s = void 0;
                    try {
                        for(var i, a = arguments[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                            var l = i.value;
                            l === h.default.prototype.VIDEO ? r = !1 : l === h.default.prototype.AUDIO ? t = !1 : "object" === f(l) ? u = l : "function" == typeof l && (e = l);
                        }
                    } catch (e) {
                        n = !0, s = e;
                    } finally{
                        try {
                            o || null == a.return || a.return();
                        } finally{
                            if (n) throw s;
                        }
                    }
                    var u = u || {
                        video: t,
                        audio: r
                    }, c = document.createElement("video"), d = (c.setAttribute("playsinline", ""), navigator.mediaDevices.getUserMedia(u).then(function(t) {
                        try {
                            "srcObject" in c ? c.srcObject = t : c.src = window.URL.createObjectURL(t);
                        } catch (e) {
                            c.src = t;
                        }
                    }, console.log), p(c, this, !0));
                    return d.loadedmetadata = !1, c.addEventListener("loadedmetadata", function() {
                        c.play(), c.width ? (d.width = c.width, d.height = c.height) : (d.width = d.elt.width = c.videoWidth, d.height = d.elt.height = c.videoHeight), d.loadedmetadata = !0, e && e(c.srcObject);
                    }), d;
                }, h.default.prototype.createElement = function(e, t) {
                    h.default._validateParameters("createElement", arguments);
                    e = document.createElement(e);
                    return void 0 !== t && (e.innerHTML = t), p(e, this);
                }, h.default.Element.prototype.addClass = function(e) {
                    return this.elt.className ? this.hasClass(e) || (this.elt.className = this.elt.className + " " + e) : this.elt.className = e, this;
                }, h.default.Element.prototype.removeClass = function(e) {
                    return this.elt.classList.remove(e), this;
                }, h.default.Element.prototype.hasClass = function(e) {
                    return this.elt.classList.contains(e);
                }, h.default.Element.prototype.toggleClass = function(e) {
                    return this.elt.classList.contains(e) ? this.elt.classList.remove(e) : this.elt.classList.add(e), this;
                }, h.default.Element.prototype.child = function(e) {
                    return void 0 === e ? this.elt.childNodes : ("string" == typeof e ? ("#" === e[0] && (e = e.substring(1)), e = document.getElementById(e)) : e instanceof h.default.Element && (e = e.elt), e instanceof HTMLElement && this.elt.appendChild(e), this);
                }, h.default.Element.prototype.center = function(e) {
                    var t = this.elt.style.display, r = "none" === this.elt.style.display, o = "none" === this.parent().style.display, n = {
                        x: this.elt.offsetLeft,
                        y: this.elt.offsetTop
                    }, s = (r && this.show(), o && this.parent().show(), this.elt.style.display = "block", this.position(0, 0), Math.abs(this.parent().offsetWidth - this.elt.offsetWidth)), i = Math.abs(this.parent().offsetHeight - this.elt.offsetHeight);
                    return "both" === e || void 0 === e ? this.position(s / 2 + this.parent().offsetLeft, i / 2 + this.parent().offsetTop) : "horizontal" === e ? this.position(s / 2 + this.parent().offsetLeft, n.y) : "vertical" === e && this.position(n.x, i / 2 + this.parent().offsetTop), this.style("display", t), r && this.hide(), o && this.parent().hide(), this;
                }, h.default.Element.prototype.html = function() {
                    return 0 === arguments.length ? this.elt.innerHTML : (arguments[1] ? this.elt.insertAdjacentHTML("beforeend", arguments[0]) : this.elt.innerHTML = arguments[0], this);
                }, h.default.Element.prototype.position = function() {
                    return 0 === arguments.length ? {
                        x: this.elt.offsetLeft,
                        y: this.elt.offsetTop
                    } : (this.elt.style.position = "static" !== arguments[2] && "fixed" !== arguments[2] && "relative" !== arguments[2] && "sticky" !== arguments[2] && "initial" !== arguments[2] && "inherit" !== arguments[2] ? "absolute" : arguments[2], this.elt.style.left = arguments[0] + "px", this.elt.style.top = arguments[1] + "px", this.x = arguments[0], this.y = arguments[1], this);
                }, h.default.Element.prototype._translate = function() {
                    this.elt.style.position = "absolute";
                    var e = "";
                    return this.elt.style.transform && (e = (e = this.elt.style.transform.replace(/translate3d\(.*\)/g, "")).replace(/translate[X-Z]?\(.*\)/g, "")), 2 === arguments.length ? this.elt.style.transform = "translate(" + arguments[0] + "px, " + arguments[1] + "px)" : 2 < arguments.length && (this.elt.style.transform = "translate3d(" + arguments[0] + "px," + arguments[1] + "px," + arguments[2] + "px)", this.elt.parentElement.style.perspective = 3 === arguments.length ? "1000px" : arguments[3] + "px"), this.elt.style.transform += e, this;
                }, h.default.Element.prototype._rotate = function() {
                    var e = "";
                    return this.elt.style.transform && (e = (e = this.elt.style.transform.replace(/rotate3d\(.*\)/g, "")).replace(/rotate[X-Z]?\(.*\)/g, "")), 1 === arguments.length ? this.elt.style.transform = "rotate(" + arguments[0] + "deg)" : 2 === arguments.length ? this.elt.style.transform = "rotate(" + arguments[0] + "deg, " + arguments[1] + "deg)" : 3 === arguments.length && (this.elt.style.transform = "rotateX(" + arguments[0] + "deg)", this.elt.style.transform += "rotateY(" + arguments[1] + "deg)", this.elt.style.transform += "rotateZ(" + arguments[2] + "deg)"), this.elt.style.transform += e, this;
                }, h.default.Element.prototype.style = function(e, t) {
                    if (void 0 === (t = t instanceof h.default.Color ? "rgba(" + t.levels[0] + "," + t.levels[1] + "," + t.levels[2] + "," + t.levels[3] / 255 + ")" : t)) {
                        if (-1 === e.indexOf(":")) return window.getComputedStyle(this.elt).getPropertyValue(e);
                        for(var r = e.split(";"), o = 0; o < r.length; o++){
                            var n = r[o].split(":");
                            n[0] && n[1] && (this.elt.style[n[0].trim()] = n[1].trim());
                        }
                    } else this.elt.style[e] = t, "width" !== e && "height" !== e && "left" !== e && "top" !== e || (t = window.getComputedStyle(this.elt).getPropertyValue(e).replace(/[^\d.]/g, ""), this[e] = Math.round(parseFloat(t, 10)));
                    return this;
                }, h.default.Element.prototype.attribute = function(e, t) {
                    if (null == this.elt.firstChild || "checkbox" !== this.elt.firstChild.type && "radio" !== this.elt.firstChild.type) return void 0 === t ? this.elt.getAttribute(e) : (this.elt.setAttribute(e, t), this);
                    if (void 0 === t) return this.elt.firstChild.getAttribute(e);
                    for(var r = 0; r < this.elt.childNodes.length; r++)this.elt.childNodes[r].setAttribute(e, t);
                }, h.default.Element.prototype.removeAttribute = function(e) {
                    if (null != this.elt.firstChild && ("checkbox" === this.elt.firstChild.type || "radio" === this.elt.firstChild.type)) for(var t = 0; t < this.elt.childNodes.length; t++)this.elt.childNodes[t].removeAttribute(e);
                    return this.elt.removeAttribute(e), this;
                }, h.default.Element.prototype.value = function() {
                    return 0 < arguments.length ? (this.elt.value = arguments[0], this) : "range" === this.elt.type ? parseFloat(this.elt.value) : this.elt.value;
                }, h.default.Element.prototype.show = function() {
                    return this.elt.style.display = "block", this;
                }, h.default.Element.prototype.hide = function() {
                    return this.elt.style.display = "none", this;
                }, h.default.Element.prototype.size = function(e, t) {
                    if (0 === arguments.length) return {
                        width: this.elt.offsetWidth,
                        height: this.elt.offsetHeight
                    };
                    var r = e, o = t, n = h.default.prototype.AUTO;
                    if (r !== n || o !== n) {
                        if (r === n ? r = t * this.width / this.height : o === n && (o = e * this.height / this.width), this.elt instanceof HTMLCanvasElement) {
                            var s, i = {}, a = this.elt.getContext("2d");
                            for(s in a)i[s] = a[s];
                            for(s in this.elt.setAttribute("width", r * this._pInst._pixelDensity), this.elt.setAttribute("height", o * this._pInst._pixelDensity), this.elt.style.width = r + "px", this.elt.style.height = o + "px", this._pInst.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), i)this.elt.getContext("2d")[s] = i[s];
                        } else this.elt.style.width = r + "px", this.elt.style.height = o + "px", this.elt.width = r, this.elt.height = o;
                        this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this._pInst && this._pInst._curElement && this._pInst._curElement.elt === this.elt && (this._pInst._setProperty("width", this.elt.offsetWidth), this._pInst._setProperty("height", this.elt.offsetHeight));
                    }
                    return this;
                }, h.default.Element.prototype.remove = function() {
                    this instanceof h.default.MediaElement && (this.stop(), null !== (t = this.elt.srcObject) && t.getTracks().forEach(function(e) {
                        e.stop();
                    }));
                    var e, t = this._pInst._elements.indexOf(this);
                    for(e in -1 !== t && this._pInst._elements.splice(t, 1), this._events)this.elt.removeEventListener(e, this._events[e]);
                    this.elt && this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
                }, h.default.Element.prototype.drop = function(n, s) {
                    var e;
                    return window.File && window.FileReader && window.FileList && window.Blob ? (this._dragDisabled || (this._dragDisabled = !0, this.elt.addEventListener("dragover", e = function(e) {
                        e.preventDefault();
                    }), this.elt.addEventListener("dragleave", e)), h.default.Element._attachListener("drop", function(e) {
                        e.preventDefault(), "function" == typeof s && s.call(this, e);
                        for(var t = e.dataTransfer.files, r = 0; r < t.length; r++){
                            var o = t[r];
                            h.default.File._load(o, n);
                        }
                    }, this)) : console.log("The File APIs are not fully supported in this browser."), this;
                }, h.default.MediaElement = function(o, e) {
                    h.default.Element.call(this, o, e);
                    var n = this;
                    this.elt.crossOrigin = "anonymous", this._prevTime = 0, this._cueIDCounter = 0, this._cues = [], (this._pixelsState = this)._pixelDensity = 1, this._modified = !1, Object.defineProperty(n, "src", {
                        get: function() {
                            var e = n.elt.children[0].src, t = n.elt.src === window.location.href ? "" : n.elt.src;
                            return e === window.location.href ? t : e;
                        },
                        set: function(e) {
                            for(var t = 0; t < n.elt.children.length; t++)n.elt.removeChild(n.elt.children[t]);
                            var r = document.createElement("source");
                            r.src = e, o.appendChild(r), n.elt.src = e, n.modified = !0;
                        }
                    }), n._onended = function() {}, n.elt.onended = function() {
                        n._onended(n);
                    };
                }, h.default.MediaElement.prototype = Object.create(h.default.Element.prototype), h.default.MediaElement.prototype.play = function() {
                    var e, t = this;
                    return this.elt.currentTime === this.elt.duration && (this.elt.currentTime = 0), 1 < this.elt.readyState || this.elt.load(), (e = this.elt.play()) && e.catch && e.catch(function(e) {
                        "NotAllowedError" === e.name ? h.default._friendlyAutoplayError(t.src) : console.error("Media play method encountered an unexpected error", e);
                    }), this;
                }, h.default.MediaElement.prototype.stop = function() {
                    return this.elt.pause(), this.elt.currentTime = 0, this;
                }, h.default.MediaElement.prototype.pause = function() {
                    return this.elt.pause(), this;
                }, h.default.MediaElement.prototype.loop = function() {
                    return this.elt.setAttribute("loop", !0), this.play(), this;
                }, h.default.MediaElement.prototype.noLoop = function() {
                    return this.elt.removeAttribute("loop"), this;
                }, h.default.MediaElement.prototype._setupAutoplayFailDetection = function() {
                    var e = this, t = setTimeout(function() {
                        return h.default._friendlyAutoplayError(e.src);
                    }, 500);
                    this.elt.addEventListener("play", function() {
                        return clearTimeout(t);
                    }, {
                        passive: !0,
                        once: !0
                    });
                }, h.default.MediaElement.prototype.autoplay = function(e) {
                    var t = this, r = this.elt.getAttribute("autoplay");
                    return this.elt.setAttribute("autoplay", e), e && !r && (e = function() {
                        return t._setupAutoplayFailDetection();
                    }, 4 === this.elt.readyState ? e() : this.elt.addEventListener("canplay", e, {
                        passive: !0,
                        once: !0
                    })), this;
                }, h.default.MediaElement.prototype.volume = function(e) {
                    if (void 0 === e) return this.elt.volume;
                    this.elt.volume = e;
                }, h.default.MediaElement.prototype.speed = function(e) {
                    if (void 0 === e) return this.presetPlaybackRate || this.elt.playbackRate;
                    this.loadedmetadata ? this.elt.playbackRate = e : this.presetPlaybackRate = e;
                }, h.default.MediaElement.prototype.time = function(e) {
                    return void 0 === e ? this.elt.currentTime : (this.elt.currentTime = e, this);
                }, h.default.MediaElement.prototype.duration = function() {
                    return this.elt.duration;
                }, h.default.MediaElement.prototype.pixels = [], h.default.MediaElement.prototype._ensureCanvas = function() {
                    this.canvas || (this.canvas = document.createElement("canvas"), this.drawingContext = this.canvas.getContext("2d"), this.setModified(!0)), this.loadedmetadata && (this.canvas.width !== this.elt.width && (this.canvas.width = this.elt.width, this.canvas.height = this.elt.height, this.width = this.canvas.width, this.height = this.canvas.height), this.drawingContext.drawImage(this.elt, 0, 0, this.canvas.width, this.canvas.height), this.setModified(!0));
                }, h.default.MediaElement.prototype.loadPixels = function() {
                    return this._ensureCanvas(), h.default.Renderer2D.prototype.loadPixels.apply(this, arguments);
                }, h.default.MediaElement.prototype.updatePixels = function(e, t, r, o) {
                    return this.loadedmetadata && (this._ensureCanvas(), h.default.Renderer2D.prototype.updatePixels.call(this, e, t, r, o)), this.setModified(!0), this;
                }, h.default.MediaElement.prototype.get = function() {
                    return this._ensureCanvas(), h.default.Renderer2D.prototype.get.apply(this, arguments);
                }, h.default.MediaElement.prototype._getPixel = function() {
                    return this.loadPixels(), h.default.Renderer2D.prototype._getPixel.apply(this, arguments);
                }, h.default.MediaElement.prototype.set = function(e, t, r) {
                    this.loadedmetadata && (this._ensureCanvas(), h.default.Renderer2D.prototype.set.call(this, e, t, r), this.setModified(!0));
                }, h.default.MediaElement.prototype.copy = function() {
                    this._ensureCanvas(), h.default.prototype.copy.apply(this, arguments);
                }, h.default.MediaElement.prototype.mask = function() {
                    this.loadPixels(), this.setModified(!0), h.default.Image.prototype.mask.apply(this, arguments);
                }, h.default.MediaElement.prototype.isModified = function() {
                    return this._modified;
                }, h.default.MediaElement.prototype.setModified = function(e) {
                    this._modified = e;
                }, h.default.MediaElement.prototype.onended = function(e) {
                    return this._onended = e, this;
                }, h.default.MediaElement.prototype.connect = function(e) {
                    var t, r;
                    if ("function" == typeof h.default.prototype.getAudioContext) t = h.default.prototype.getAudioContext(), r = h.default.soundOut.input;
                    else try {
                        r = (t = e.context).destination;
                    } catch (e) {
                        throw "connect() is meant to be used with Web Audio API or p5.sound.js";
                    }
                    this.audioSourceNode || (this.audioSourceNode = t.createMediaElementSource(this.elt), this.audioSourceNode.connect(r)), e ? e.input ? this.audioSourceNode.connect(e.input) : this.audioSourceNode.connect(e) : this.audioSourceNode.connect(r);
                }, h.default.MediaElement.prototype.disconnect = function() {
                    if (!this.audioSourceNode) throw "nothing to disconnect";
                    this.audioSourceNode.disconnect();
                }, h.default.MediaElement.prototype.showControls = function() {
                    this.elt.style["text-align"] = "inherit", this.elt.controls = !0;
                }, h.default.MediaElement.prototype.hideControls = function() {
                    this.elt.controls = !1;
                };
                function s(e, t, r, o) {
                    this.callback = e, this.time = t, this.id = r, this.val = o;
                }
                h.default.MediaElement.prototype.addCue = function(e, t, r) {
                    var o = this._cueIDCounter++, t = new s(t, e, o, r);
                    return this._cues.push(t), this.elt.ontimeupdate || (this.elt.ontimeupdate = this._onTimeUpdate.bind(this)), o;
                }, h.default.MediaElement.prototype.removeCue = function(e) {
                    for(var t = 0; t < this._cues.length; t++)this._cues[t].id === e && (console.log(e), this._cues.splice(t, 1));
                    0 === this._cues.length && (this.elt.ontimeupdate = null);
                }, h.default.MediaElement.prototype.clearCues = function() {
                    this._cues = [], this.elt.ontimeupdate = null;
                }, h.default.MediaElement.prototype._onTimeUpdate = function() {
                    for(var e = this.time(), t = 0; t < this._cues.length; t++){
                        var r = this._cues[t].time, o = this._cues[t].val;
                        this._prevTime < r && r <= e && this._cues[t].callback(o);
                    }
                    this._prevTime = e;
                }, h.default.File = function(e, t) {
                    this.file = e, this._pInst = t;
                    t = e.type.split("/");
                    this.type = t[0], this.subtype = t[1], this.name = e.name, this.size = e.size, this.data = void 0;
                }, h.default.File._createLoader = function(o, n) {
                    var e = new FileReader;
                    return e.onload = function(e) {
                        var t, r = new h.default.File(o);
                        "application/json" === r.file.type ? r.data = JSON.parse(e.target.result) : "text/xml" === r.file.type ? (t = (new DOMParser).parseFromString(e.target.result, "text/xml"), r.data = new h.default.XML(t.documentElement)) : r.data = e.target.result, n(r);
                    }, e;
                }, h.default.File._load = function(e, t) {
                    var r;
                    /^text\//.test(e.type) || "application/json" === e.type ? h.default.File._createLoader(e, t).readAsText(e) : /^(video|audio)\//.test(e.type) ? ((r = new h.default.File(e)).data = URL.createObjectURL(e), t(r)) : h.default.File._createLoader(e, t).readAsDataURL(e);
                };
                e = h.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.every": 151,
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.for-each": 154,
                "core-js/modules/es.array.from": 155,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.array.splice": 164,
                "core-js/modules/es.function.name": 165,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.promise": 178,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.replace": 189,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.string.trim": 193,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/web.dom-collections.for-each": 229,
                "core-js/modules/web.dom-collections.iterator": 230,
                "core-js/modules/web.url": 232
            }
        ],
        284: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (y = e("../core/main")) && y.__esModule ? y : {
                    default: y
                }, s = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                n.default.prototype.deviceOrientation = 1 < window.innerWidth / window.innerHeight ? "landscape" : "portrait", n.default.prototype.accelerationX = 0, n.default.prototype.accelerationY = 0, n.default.prototype.accelerationZ = 0, n.default.prototype.pAccelerationX = 0, n.default.prototype.pAccelerationY = 0, n.default.prototype.pAccelerationZ = 0, n.default.prototype._updatePAccelerations = function() {
                    this._setProperty("pAccelerationX", this.accelerationX), this._setProperty("pAccelerationY", this.accelerationY), this._setProperty("pAccelerationZ", this.accelerationZ);
                }, n.default.prototype.rotationX = 0, n.default.prototype.rotationY = 0, n.default.prototype.rotationZ = 0, n.default.prototype.pRotationX = 0, n.default.prototype.pRotationY = 0;
                var l = n.default.prototype.pRotationZ = 0, u = 0, c = 0, d = "clockwise", f = "clockwise", h = "clockwise", p = (n.default.prototype.pRotateDirectionX = void 0, n.default.prototype.pRotateDirectionY = void 0, n.default.prototype.pRotateDirectionZ = void 0, n.default.prototype._updatePRotations = function() {
                    this._setProperty("pRotationX", this.rotationX), this._setProperty("pRotationY", this.rotationY), this._setProperty("pRotationZ", this.rotationZ);
                }, n.default.prototype.turnAxis = void 0, .5), m = 30, y = (n.default.prototype.setMoveThreshold = function(e) {
                    n.default._validateParameters("setMoveThreshold", arguments), p = e;
                }, n.default.prototype.setShakeThreshold = function(e) {
                    n.default._validateParameters("setShakeThreshold", arguments), m = e;
                }, n.default.prototype._ondeviceorientation = function(e) {
                    this._updatePRotations(), this._angleMode === s.radians && (e.beta = e.beta * (_PI / 180), e.gamma = e.gamma * (_PI / 180), e.alpha = e.alpha * (_PI / 180)), this._setProperty("rotationX", e.beta), this._setProperty("rotationY", e.gamma), this._setProperty("rotationZ", e.alpha), this._handleMotion();
                }, n.default.prototype._ondevicemotion = function(e) {
                    this._updatePAccelerations(), this._setProperty("accelerationX", 2 * e.acceleration.x), this._setProperty("accelerationY", 2 * e.acceleration.y), this._setProperty("accelerationZ", 2 * e.acceleration.z), this._handleMotion();
                }, n.default.prototype._handleMotion = function() {
                    90 === window.orientation || -90 === window.orientation ? this._setProperty("deviceOrientation", "landscape") : 0 === window.orientation ? this._setProperty("deviceOrientation", "portrait") : void 0 === window.orientation && this._setProperty("deviceOrientation", "undefined");
                    var e, t, r, o, n, s = this._isGlobal ? window : this;
                    "function" == typeof s.deviceMoved && (Math.abs(this.accelerationX - this.pAccelerationX) > p || Math.abs(this.accelerationY - this.pAccelerationY) > p || Math.abs(this.accelerationZ - this.pAccelerationZ) > p) && s.deviceMoved(), "function" == typeof s.deviceTurned && (t = this.rotationX + 180, e = this.pRotationX + 180, r = l + 180, 0 < t - e && t - e < 270 || t - e < -270 ? d = "clockwise" : (t - e < 0 || 270 < t - e) && (d = "counter-clockwise"), d !== this.pRotateDirectionX && (r = t), 90 < Math.abs(t - r) && Math.abs(t - r) < 270 && (r = t, this._setProperty("turnAxis", "X"), s.deviceTurned()), this.pRotateDirectionX = d, l = r - 180, e = this.rotationY + 180, t = this.pRotationY + 180, r = u + 180, 0 < e - t && e - t < 270 || e - t < -270 ? f = "clockwise" : (e - t < 0 || 270 < e - this.pRotationY) && (f = "counter-clockwise"), f !== this.pRotateDirectionY && (r = e), 90 < Math.abs(e - r) && Math.abs(e - r) < 270 && (r = e, this._setProperty("turnAxis", "Y"), s.deviceTurned()), this.pRotateDirectionY = f, u = r - 180, 0 < this.rotationZ - this.pRotationZ && this.rotationZ - this.pRotationZ < 270 || this.rotationZ - this.pRotationZ < -270 ? h = "clockwise" : (this.rotationZ - this.pRotationZ < 0 || 270 < this.rotationZ - this.pRotationZ) && (h = "counter-clockwise"), h !== this.pRotateDirectionZ && (c = this.rotationZ), 90 < Math.abs(this.rotationZ - c) && Math.abs(this.rotationZ - c) < 270 && (c = this.rotationZ, this._setProperty("turnAxis", "Z"), s.deviceTurned()), this.pRotateDirectionZ = h, this._setProperty("turnAxis", void 0)), "function" == typeof s.deviceShaken && (null !== this.pAccelerationX && (o = Math.abs(this.accelerationX - this.pAccelerationX), n = Math.abs(this.accelerationY - this.pAccelerationY)), m < o + n && s.deviceShaken());
                }, n.default);
                r.default = y;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        285: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                o.default.prototype.isKeyPressed = !1, o.default.prototype.keyIsPressed = !1, o.default.prototype.key = "", o.default.prototype.keyCode = 0, o.default.prototype._onkeydown = function(e) {
                    var t;
                    this._downKeys[e.which] || (this._setProperty("isKeyPressed", !0), this._setProperty("keyIsPressed", !0), this._setProperty("keyCode", e.which), this._downKeys[e.which] = !0, this._setProperty("key", e.key || String.fromCharCode(e.which) || e.which), "function" != typeof (t = this._isGlobal ? window : this).keyPressed || e.charCode || !1 === t.keyPressed(e) && e.preventDefault());
                }, o.default.prototype._onkeyup = function(e) {
                    this._downKeys[e.which] = !1, this._areDownKeys() || (this._setProperty("isKeyPressed", !1), this._setProperty("keyIsPressed", !1)), this._setProperty("_lastKeyCodeTyped", null), this._setProperty("key", e.key || String.fromCharCode(e.which) || e.which), this._setProperty("keyCode", e.which);
                    var t = this._isGlobal ? window : this;
                    "function" == typeof t.keyReleased && !1 === t.keyReleased(e) && e.preventDefault();
                }, o.default.prototype._onkeypress = function(e) {
                    var t;
                    e.which !== this._lastKeyCodeTyped && (this._setProperty("_lastKeyCodeTyped", e.which), this._setProperty("key", e.key || String.fromCharCode(e.which) || e.which), "function" == typeof (t = this._isGlobal ? window : this).keyTyped && !1 === t.keyTyped(e) && e.preventDefault());
                }, o.default.prototype._onblur = function(e) {
                    this._downKeys = {};
                }, o.default.prototype.keyIsDown = function(e) {
                    return o.default._validateParameters("keyIsDown", arguments), this._downKeys[e] || !1;
                }, o.default.prototype._areDownKeys = function() {
                    for(var e in this._downKeys)if (this._downKeys.hasOwnProperty(e) && !0 === this._downKeys[e]) return !0;
                    return !1;
                };
                e = o.default;
                r.default = e;
            },
            {
                "../core/main": 267
            }
        ],
        286: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.string.includes"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (n = e("../core/main")) && n.__esModule ? n : {
                    default: n
                }, s = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                n.default.prototype.movedX = 0, n.default.prototype.movedY = 0, n.default.prototype._hasMouseInteracted = !1, n.default.prototype.mouseX = 0, n.default.prototype.mouseY = 0, n.default.prototype.pmouseX = 0, n.default.prototype.pmouseY = 0, n.default.prototype.winMouseX = 0, n.default.prototype.winMouseY = 0, n.default.prototype.pwinMouseX = 0, n.default.prototype.pwinMouseY = 0, n.default.prototype.mouseButton = 0, n.default.prototype.mouseIsPressed = !1, n.default.prototype._updateNextMouseCoords = function(e) {
                    var t, r, o, n, s;
                    null !== this._curElement && (!e.touches || 0 < e.touches.length) && (t = this._curElement.elt, r = this.width, o = this.height, (n = e) && !n.clientX && (n.touches ? n = n.touches[0] : n.changedTouches && (n = n.changedTouches[0])), s = t.getBoundingClientRect(), r = t.scrollWidth / r || 1, t = t.scrollHeight / o || 1, o = {
                        x: (n.clientX - s.left) / r,
                        y: (n.clientY - s.top) / t,
                        winX: n.clientX,
                        winY: n.clientY,
                        id: n.identifier
                    }, this._setProperty("movedX", e.movementX), this._setProperty("movedY", e.movementY), this._setProperty("mouseX", o.x), this._setProperty("mouseY", o.y), this._setProperty("winMouseX", o.winX), this._setProperty("winMouseY", o.winY)), this._hasMouseInteracted || (this._updateMouseCoords(), this._setProperty("_hasMouseInteracted", !0));
                }, n.default.prototype._updateMouseCoords = function() {
                    this._setProperty("pmouseX", this.mouseX), this._setProperty("pmouseY", this.mouseY), this._setProperty("pwinMouseX", this.winMouseX), this._setProperty("pwinMouseY", this.winMouseY), this._setProperty("_pmouseWheelDeltaY", this._mouseWheelDeltaY);
                }, n.default.prototype._setMouseButton = function(e) {
                    1 === e.button ? this._setProperty("mouseButton", s.CENTER) : 2 === e.button ? this._setProperty("mouseButton", s.RIGHT) : this._setProperty("mouseButton", s.LEFT);
                }, n.default.prototype._onmousemove = function(e) {
                    var t = this._isGlobal ? window : this;
                    this._updateNextMouseCoords(e), this.mouseIsPressed ? "function" == typeof t.mouseDragged ? !1 === t.mouseDragged(e) && e.preventDefault() : "function" == typeof t.touchMoved && !1 === t.touchMoved(e) && e.preventDefault() : "function" == typeof t.mouseMoved && !1 === t.mouseMoved(e) && e.preventDefault();
                }, n.default.prototype._onmousedown = function(e) {
                    var t = this._isGlobal ? window : this;
                    this._setProperty("mouseIsPressed", !0), this._setMouseButton(e), this._updateNextMouseCoords(e), "function" == typeof t.mousePressed ? !1 === t.mousePressed(e) && e.preventDefault() : navigator.userAgent.toLowerCase().includes("safari") && "function" == typeof t.touchStarted && !1 === t.touchStarted(e) && e.preventDefault();
                }, n.default.prototype._onmouseup = function(e) {
                    var t = this._isGlobal ? window : this;
                    this._setProperty("mouseIsPressed", !1), "function" == typeof t.mouseReleased ? !1 === t.mouseReleased(e) && e.preventDefault() : "function" == typeof t.touchEnded && !1 === t.touchEnded(e) && e.preventDefault();
                }, n.default.prototype._ondragend = n.default.prototype._onmouseup, n.default.prototype._ondragover = n.default.prototype._onmousemove, n.default.prototype._onclick = function(e) {
                    var t = this._isGlobal ? window : this;
                    "function" == typeof t.mouseClicked && !1 === t.mouseClicked(e) && e.preventDefault();
                }, n.default.prototype._ondblclick = function(e) {
                    var t = this._isGlobal ? window : this;
                    "function" == typeof t.doubleClicked && !1 === t.doubleClicked(e) && e.preventDefault();
                }, n.default.prototype._mouseWheelDeltaY = 0, n.default.prototype._pmouseWheelDeltaY = 0, n.default.prototype._onwheel = function(e) {
                    var t = this._isGlobal ? window : this;
                    this._setProperty("_mouseWheelDeltaY", e.deltaY), "function" == typeof t.mouseWheel && (e.delta = e.deltaY, !1 === t.mouseWheel(e) && e.preventDefault());
                }, n.default.prototype.requestPointerLock = function() {
                    var e = this._curElement.elt;
                    return e.requestPointerLock = e.requestPointerLock || e.mozRequestPointerLock, e.requestPointerLock ? (e.requestPointerLock(), !0) : (console.log("requestPointerLock is not implemented in this browser"), !1);
                }, n.default.prototype.exitPointerLock = function() {
                    document.exitPointerLock();
                };
                e = n.default;
                r.default = e;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.includes": 185,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        287: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.includes"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.string.includes"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                e.default.prototype.touches = [], e.default.prototype._updateTouchCoords = function(e) {
                    if (null !== this._curElement) {
                        for(var t = [], r = 0; r < e.touches.length; r++)t[r] = function(e, t, r, o) {
                            var n = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 0, s = e.getBoundingClientRect(), t = e.scrollWidth / t || 1, e = e.scrollHeight / r || 1, r = o.touches[n] || o.changedTouches[n];
                            return {
                                x: (r.clientX - s.left) / t,
                                y: (r.clientY - s.top) / e,
                                winX: r.clientX,
                                winY: r.clientY,
                                id: r.identifier
                            };
                        }(this._curElement.elt, this.width, this.height, e, r);
                        this._setProperty("touches", t);
                    }
                }, e.default.prototype._ontouchstart = function(e) {
                    var t = this._isGlobal ? window : this;
                    this._setProperty("mouseIsPressed", !0), this._updateTouchCoords(e), this._updateNextMouseCoords(e), this._updateMouseCoords(), "function" == typeof t.touchStarted ? !1 === t.touchStarted(e) && e.preventDefault() : navigator.userAgent.toLowerCase().includes("safari") && "function" == typeof t.mousePressed && !1 === t.mousePressed(e) && e.preventDefault();
                }, e.default.prototype._ontouchmove = function(e) {
                    var t = this._isGlobal ? window : this;
                    this._updateTouchCoords(e), this._updateNextMouseCoords(e), "function" == typeof t.touchMoved ? !1 === t.touchMoved(e) && e.preventDefault() : "function" == typeof t.mouseDragged && !1 === t.mouseDragged(e) && e.preventDefault();
                }, e.default.prototype._ontouchend = function(e) {
                    this._setProperty("mouseIsPressed", !1), this._updateTouchCoords(e), this._updateNextMouseCoords(e);
                    var t = this._isGlobal ? window : this;
                    "function" == typeof t.touchEnded ? !1 === t.touchEnded(e) && e.preventDefault() : "function" == typeof t.mouseReleased && !1 === t.mouseReleased(e) && e.preventDefault();
                };
                e = e.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.string.includes": 185
            }
        ],
        288: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.typed-array.int32-array"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.typed-array.int32-array"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var N, F, B, G, V = {};
                function o(e, I) {
                    for(var t, r, o, n, s, i, a, l, u, c, d = V._toPixels(e), f = e.width, h = e.height, p = f * h, m = new Int32Array(p), y = 0; y < p; y++)m[y] = V._getARGB(d, y);
                    var g, v, b, j = new Int32Array(p), _ = new Int32Array(p), x = new Int32Array(p), w = new Int32Array(p), S = 0, M = 3.5 * I | 0;
                    if (N !== (M = M < 1 ? 1 : M < 248 ? M : 248)) {
                        F = 1 + (N = M) << 1, B = new Int32Array(F), G = new Array(F);
                        for(var E, T, C = 0; C < F; C++)G[C] = new Int32Array(256);
                        for(var O = 1, L = M - 1; O < M; O++){
                            B[M + O] = B[L] = T = L * L;
                            for(var k = G[M + O], U = G[L--], A = 0; A < 256; A++)k[A] = U[A] = T * A;
                        }
                        E = B[M] = M * M, k = G[M];
                        for(var P = 0; P < 256; P++)k[P] = E * P;
                    }
                    for(v = 0; v < h; v++){
                        for(g = 0; g < f; g++){
                            if (n = o = r = s = t = 0, (i = g - N) < 0) c = -i, i = 0;
                            else {
                                if (f <= i) break;
                                c = 0;
                            }
                            for(b = c; b < F && !(f <= i); b++){
                                var R, D = m[i + S];
                                s += (R = G[b])[(-16777216 & D) >>> 24], r += R[(16711680 & D) >> 16], o += R[(65280 & D) >> 8], n += R[255 & D], t += B[b], i++;
                            }
                            j[a = S + g] = s / t, _[a] = r / t, x[a] = o / t, w[a] = n / t;
                        }
                        S += f;
                    }
                    for(u = (l = -N) * f, v = S = 0; v < h; v++){
                        for(g = 0; g < f; g++){
                            if (l < (n = o = r = s = t = 0)) c = a = -l, i = g;
                            else {
                                if (h <= l) break;
                                c = 0, a = l, i = g + u;
                            }
                            for(b = c; b < F && !(h <= a); b++)s += (R = G[b])[j[i]], r += R[_[i]], o += R[x[i]], n += R[w[i]], t += B[b], a++, i += f;
                            m[g + S] = s / t << 24 | r / t << 16 | o / t << 8 | n / t;
                        }
                        S += f, u += f, l++;
                    }
                    V._setPixels(d, m);
                }
                V._toPixels = function(e) {
                    var t, r;
                    return e instanceof ImageData ? e.data : e.getContext("2d") ? e.getContext("2d").getImageData(0, 0, e.width, e.height).data : e.getContext("webgl") ? (r = (t = e.getContext("webgl")).drawingBufferWidth * t.drawingBufferHeight * 4, r = new Uint8Array(r), t.readPixels(0, 0, e.width, e.height, t.RGBA, t.UNSIGNED_BYTE, r), r) : void 0;
                }, V._getARGB = function(e, t) {
                    t *= 4;
                    return e[3 + t] << 24 & 4278190080 | e[t] << 16 & 16711680 | e[1 + t] << 8 & 65280 | 255 & e[2 + t];
                }, V._setPixels = function(e, t) {
                    for(var r, o = 0, n = e.length; o < n; o++)e[0 + (r = 4 * o)] = (16711680 & t[o]) >>> 16, e[1 + r] = (65280 & t[o]) >>> 8, e[2 + r] = 255 & t[o], e[3 + r] = (4278190080 & t[o]) >>> 24;
                }, V._toImageData = function(e) {
                    return e instanceof ImageData ? e : e.getContext("2d").getImageData(0, 0, e.width, e.height);
                }, V._createImageData = function(e, t) {
                    return V._tmpCanvas = document.createElement("canvas"), V._tmpCtx = V._tmpCanvas.getContext("2d"), this._tmpCtx.createImageData(e, t);
                }, V.apply = function(e, t, r) {
                    var o = e.getContext("2d"), n = o.getImageData(0, 0, e.width, e.height), t = t(n, r);
                    t instanceof ImageData ? o.putImageData(t, 0, 0, 0, 0, e.width, e.height) : o.putImageData(n, 0, 0, 0, 0, e.width, e.height);
                }, V.threshold = function(e, t) {
                    for(var r = V._toPixels(e), o = (void 0 === t && (t = .5), Math.floor(255 * t)), n = 0; n < r.length; n += 4){
                        var s = void 0, s = o <= .2126 * r[n] + .7152 * r[n + 1] + .0722 * r[n + 2] ? 255 : 0;
                        r[n] = r[n + 1] = r[n + 2] = s;
                    }
                }, V.gray = function(e) {
                    for(var t = V._toPixels(e), r = 0; r < t.length; r += 4){
                        var o = t[r], n = t[r + 1], s = t[r + 2];
                        t[r] = t[r + 1] = t[r + 2] = .2126 * o + .7152 * n + .0722 * s;
                    }
                }, V.opaque = function(e) {
                    for(var t = V._toPixels(e), r = 0; r < t.length; r += 4)t[r + 3] = 255;
                    return t;
                }, V.invert = function(e) {
                    for(var t = V._toPixels(e), r = 0; r < t.length; r += 4)t[r] = 255 - t[r], t[r + 1] = 255 - t[r + 1], t[r + 2] = 255 - t[r + 2];
                }, V.posterize = function(e, t) {
                    var r = V._toPixels(e);
                    if (t < 2 || 255 < t) throw new Error("Level must be greater than 2 and less than 255 for posterize");
                    for(var o = t - 1, n = 0; n < r.length; n += 4){
                        var s = r[n], i = r[n + 1], a = r[n + 2];
                        r[n] = 255 * (s * t >> 8) / o, r[n + 1] = 255 * (i * t >> 8) / o, r[n + 2] = 255 * (a * t >> 8) / o;
                    }
                }, V.dilate = function(e) {
                    for(var t, r, o, n, s, i, a, l, u, c = V._toPixels(e), d = 0, f = c.length ? c.length / 4 : 0, h = new Int32Array(f); d < f;)for(r = (t = d) + e.width; d < r;)n = o = V._getARGB(c, d), (u = d - 1) < t && (u = d), r <= (l = d + 1) && (l = d), (s = d - e.width) < 0 && (s = 0), f <= (i = d + e.width) && (i = d), s = V._getARGB(c, s), u = V._getARGB(c, u), i = V._getARGB(c, i), (n = 77 * (n >> 16 & 255) + 151 * (n >> 8 & 255) + 28 * (255 & n)) < (a = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) && (o = u, n = a), n < (a = 77 * ((u = V._getARGB(c, l)) >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) && (o = u, n = a), n < (l = 77 * (s >> 16 & 255) + 151 * (s >> 8 & 255) + 28 * (255 & s)) && (o = s, n = l), n < (u = 77 * (i >> 16 & 255) + 151 * (i >> 8 & 255) + 28 * (255 & i)) && (o = i, n = u), h[d++] = o;
                    V._setPixels(c, h);
                }, V.erode = function(e) {
                    for(var t, r, o, n, s, i, a, l, u, c = V._toPixels(e), d = 0, f = c.length ? c.length / 4 : 0, h = new Int32Array(f); d < f;)for(r = (t = d) + e.width; d < r;)n = o = V._getARGB(c, d), (u = d - 1) < t && (u = d), r <= (l = d + 1) && (l = d), (s = d - e.width) < 0 && (s = 0), f <= (i = d + e.width) && (i = d), s = V._getARGB(c, s), u = V._getARGB(c, u), i = V._getARGB(c, i), (a = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < (n = 77 * (n >> 16 & 255) + 151 * (n >> 8 & 255) + 28 * (255 & n)) && (o = u, n = a), (a = 77 * ((u = V._getARGB(c, l)) >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < n && (o = u, n = a), (l = 77 * (s >> 16 & 255) + 151 * (s >> 8 & 255) + 28 * (255 & s)) < n && (o = s, n = l), (u = 77 * (i >> 16 & 255) + 151 * (i >> 8 & 255) + 28 * (255 & i)) < n && (o = i, n = u), h[d++] = o;
                    V._setPixels(c, h);
                }, V.blur = function(e, t) {
                    o(e, t);
                }, r.default = V;
            },
            {
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.typed-array.copy-within": 197,
                "core-js/modules/es.typed-array.every": 198,
                "core-js/modules/es.typed-array.fill": 199,
                "core-js/modules/es.typed-array.filter": 200,
                "core-js/modules/es.typed-array.find": 202,
                "core-js/modules/es.typed-array.find-index": 201,
                "core-js/modules/es.typed-array.for-each": 205,
                "core-js/modules/es.typed-array.includes": 206,
                "core-js/modules/es.typed-array.index-of": 207,
                "core-js/modules/es.typed-array.int32-array": 209,
                "core-js/modules/es.typed-array.iterator": 210,
                "core-js/modules/es.typed-array.join": 211,
                "core-js/modules/es.typed-array.last-index-of": 212,
                "core-js/modules/es.typed-array.map": 213,
                "core-js/modules/es.typed-array.reduce": 215,
                "core-js/modules/es.typed-array.reduce-right": 214,
                "core-js/modules/es.typed-array.reverse": 216,
                "core-js/modules/es.typed-array.set": 217,
                "core-js/modules/es.typed-array.slice": 218,
                "core-js/modules/es.typed-array.some": 219,
                "core-js/modules/es.typed-array.sort": 220,
                "core-js/modules/es.typed-array.subarray": 221,
                "core-js/modules/es.typed-array.to-locale-string": 222,
                "core-js/modules/es.typed-array.to-string": 223,
                "core-js/modules/es.typed-array.uint8-array": 226
            }
        ],
        289: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.set"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.uint32-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.set"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.uint32-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var O = o(e("../core/main")), L = o(e("omggif"));
                function o(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                function k(e) {
                    return function(e) {
                        if (Array.isArray(e)) {
                            for(var t = 0, r = new Array(e.length); t < e.length; t++)r[t] = e[t];
                            return r;
                        }
                    }(e) || function(e) {
                        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
                    }(e) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                O.default.prototype.createImage = function(e, t) {
                    return O.default._validateParameters("createImage", arguments), new O.default.Image(e, t);
                }, O.default.prototype.saveCanvas = function() {
                    O.default._validateParameters("saveCanvas", arguments);
                    var e, t, r, o, n = [].slice.call(arguments);
                    switch(arguments[0] instanceof HTMLCanvasElement ? (e = arguments[0], n.shift()) : arguments[0] instanceof O.default.Element ? (e = arguments[0].elt, n.shift()) : e = this._curElement && this._curElement.elt, 1 <= n.length && (t = n[0]), r = (r = 2 <= n.length ? n[1] : r) || O.default.prototype._checkFileExtension(t, r)[1] || "png"){
                        default:
                            o = "image/png";
                            break;
                        case "jpeg":
                        case "jpg":
                            o = "image/jpeg";
                    }
                    e.toBlob(function(e) {
                        O.default.prototype.downloadFile(e, t, r);
                    }, o);
                }, O.default.prototype.encodeAndDownloadGif = function(h, e) {
                    for(var p = h.gifProperties, t = p.loopLimit, r = (1 === t ? t = null : null === t && (t = 0), new Uint8Array(h.width * h.height * p.numFrames)), m = [], o = {}, n = 0; n < p.numFrames; n++){
                        for(var s = new Set, i = p.frames[n].image.data, a = i.length, l = new Uint32Array(h.width * h.height), u = 0, c = 0; u < a; u += 4, c++){
                            var d = i[u + 0] << 16 | i[u + 1] << 8 | i[u + 2] << 0;
                            s.add(d), l[c] = d;
                        }
                        var f = k(s).sort().toString();
                        void 0 === o[f] ? o[f] = {
                            freq: 1,
                            frames: [
                                n
                            ]
                        } : (o[f].freq += 1, o[f].frames.push(n)), m.push(l);
                    }
                    for(var y = [], g = Object.keys(o).sort(function(e, t) {
                        return o[t].freq - o[e].freq;
                    }), v = g[0].split(",").map(function(e) {
                        return parseInt(e);
                    }), y = y.concat(o[v].frames), b = new Set(v), j = 1; j < g.length; j++){
                        var _ = g[j].split(",").map(function(e) {
                            return parseInt(e);
                        }).filter(function(e) {
                            return !b.has(e);
                        });
                        if (v.length + _.length <= 256) {
                            for(var x = 0; x < _.length; x++)v.push(_[x]), b.add(_[x]);
                            y = y.concat(o[g[j]].frames);
                        }
                    }
                    y = new Set(y);
                    for(var w = {}, S = 0; S < v.length; S++)w[v[S]] || (w[v[S]] = S);
                    for(var M = 1; M < v.length;)M <<= 1;
                    v.length = M;
                    for(var t = {
                        loop: t,
                        palette: new Uint32Array(v)
                    }, E = new L.default.GifWriter(r, h.width, h.height, t), T = {}, C = 0; C < p.numFrames; C++)!function(e) {
                        for(var t = !y.has(e), r = t ? [] : v, o = new Uint8Array(h.width * h.height), n = {}, s = new Set, i = 0; i < m[e].length; i++){
                            var a = m[e][i];
                            t ? (void 0 === n[a] && (n[a] = r.length, r.push(a)), o[i] = n[a]) : o[i] = w[a], 0 < e && m[e - 1][i] !== a && s.add(a);
                        }
                        var l = {}, u = r.filter(function(e) {
                            return !s.has(e);
                        });
                        if (0 < u.length) {
                            var u = u[0], c = (t ? n : w)[u];
                            if (0 < e) {
                                for(var d = 0; d < m[e].length; d++)m[e - 1][d] === m[e][d] && (o[d] = c);
                                l.transparent = c, T.frameOpts.disposal = 1;
                            }
                        }
                        if (l.delay = p.frames[e].delay / 10, t) {
                            for(var f = 1; f < r.length;)f <<= 1;
                            r.length = f, l.palette = new Uint32Array(r);
                        }
                        0 < e && E.addFrame(0, 0, h.width, h.height, T.pixelPaletteIndex, T.frameOpts), T = {
                            pixelPaletteIndex: o,
                            frameOpts: l
                        };
                    }(C);
                    T.frameOpts.disposal = 1, E.addFrame(0, 0, h.width, h.height, T.pixelPaletteIndex, T.frameOpts);
                    t = new Blob([
                        r.slice(0, E.end())
                    ], {
                        type: "image/gif"
                    });
                    O.default.prototype.downloadFile(t, e, "gif");
                }, O.default.prototype.saveFrames = function(e, t, r, o, i) {
                    O.default._validateParameters("saveFrames", arguments);
                    r = O.default.prototype.constrain(r = r || 3, 0, 15);
                    r *= 1e3;
                    var o = O.default.prototype.constrain(o || 15, 0, 22), n = 0, s = O.default.prototype._makeFrame, a = this._curElement.elt, l = [], u = setInterval(function() {
                        l.push(s(e + n, t, a)), n++;
                    }, 1e3 / o);
                    setTimeout(function() {
                        if (clearInterval(u), i) i(l);
                        else {
                            var e = !0, t = !1, r = void 0;
                            try {
                                for(var o, n = l[Symbol.iterator](); !(e = (o = n.next()).done); e = !0){
                                    var s = o.value;
                                    O.default.prototype.downloadFile(s.imageData, s.filename, s.ext);
                                }
                            } catch (e) {
                                t = !0, r = e;
                            } finally{
                                try {
                                    e || null == n.return || n.return();
                                } finally{
                                    if (t) throw r;
                                }
                            }
                        }
                        l = [];
                    }, .01 + r);
                }, O.default.prototype._makeFrame = function(e, t, r) {
                    var o, r = this ? this._curElement.elt : r;
                    if (t) switch(t.toLowerCase()){
                        case "png":
                            o = "image/png";
                            break;
                        case "jpeg":
                        case "jpg":
                            o = "image/jpeg";
                            break;
                        default:
                            o = "image/png";
                    }
                    else t = "png", o = "image/png";
                    var r = (r = r.toDataURL(o)).replace(o, "image/octet-stream"), n = {};
                    return n.imageData = r, n.filename = e, n.ext = t, n;
                };
                e = O.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.from": 155,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.keys": 176,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.set": 183,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.replace": 189,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.typed-array.copy-within": 197,
                "core-js/modules/es.typed-array.every": 198,
                "core-js/modules/es.typed-array.fill": 199,
                "core-js/modules/es.typed-array.filter": 200,
                "core-js/modules/es.typed-array.find": 202,
                "core-js/modules/es.typed-array.find-index": 201,
                "core-js/modules/es.typed-array.for-each": 205,
                "core-js/modules/es.typed-array.includes": 206,
                "core-js/modules/es.typed-array.index-of": 207,
                "core-js/modules/es.typed-array.iterator": 210,
                "core-js/modules/es.typed-array.join": 211,
                "core-js/modules/es.typed-array.last-index-of": 212,
                "core-js/modules/es.typed-array.map": 213,
                "core-js/modules/es.typed-array.reduce": 215,
                "core-js/modules/es.typed-array.reduce-right": 214,
                "core-js/modules/es.typed-array.reverse": 216,
                "core-js/modules/es.typed-array.set": 217,
                "core-js/modules/es.typed-array.slice": 218,
                "core-js/modules/es.typed-array.some": 219,
                "core-js/modules/es.typed-array.sort": 220,
                "core-js/modules/es.typed-array.subarray": 221,
                "core-js/modules/es.typed-array.to-locale-string": 222,
                "core-js/modules/es.typed-array.to-string": 223,
                "core-js/modules/es.typed-array.uint32-array": 225,
                "core-js/modules/es.typed-array.uint8-array": 226,
                "core-js/modules/web.dom-collections.iterator": 230,
                omggif: 240
            }
        ],
        290: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.copy-within"), e("core-js/modules/es.array.every"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.uint8-clamped-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.copy-within"), e("core-js/modules/es.array.every"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.uint8-clamped-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0, e("regenerator-runtime/runtime");
                var O = n(e("../core/main")), m = n(e("../core/helpers")), j = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants")), g = n(e("omggif")), L = e("gifenc");
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                function n(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                function l(e, t, r, o, n, s, i) {
                    try {
                        var a = e[s](i), l = a.value;
                    } catch (e) {
                        return void r(e);
                    }
                    a.done ? t(l) : Promise.resolve(l).then(o, n);
                }
                function y(e, t, r, o, n, s, i, a, l, u, c) {
                    var d, f, h, p, m, y, g, v, b;
                    return e === j.COVER && (d = t, h = r, g = s, v = i, y = a, b = l, f = u, p = c, m = Math.max(g / f, v / p), g /= m, v /= m, m = y, y = b, d === j.CENTER ? m += (f - g) / 2 : d === j.RIGHT && (m += f - g), h === j.CENTER ? y += (p - v) / 2 : h === j.BOTTOM && (y += p - v), a = (b = {
                        x: m,
                        y: y,
                        w: g,
                        h: v
                    }).x, l = b.y, u = b.w, c = b.h), e === j.CONTAIN && (d = t, f = r, h = o, p = n, m = s, y = i, g = u, v = c, b = Math.max(g / m, v / y), g /= b, v /= b, b = h, h = p, d === j.CENTER ? b += (m - g) / 2 : d === j.RIGHT && (b += m - g), f === j.CENTER ? h += (y - v) / 2 : f === j.BOTTOM && (h += y - v), o = (e = {
                        x: b,
                        y: h,
                        w: g,
                        h: v
                    }).x, n = e.y, s = e.w, i = e.h), {
                        sx: a,
                        sy: l,
                        sw: u,
                        sh: c,
                        dx: o,
                        dy: n,
                        dw: s,
                        dh: i
                    };
                }
                function v(e, t) {
                    return 0 < e && e < t ? e : t;
                }
                e("../core/friendly_errors/validate_params"), e("../core/friendly_errors/file_errors"), e("../core/friendly_errors/fes_core"), O.default.prototype.loadImage = function(o, h, p) {
                    O.default._validateParameters("loadImage", arguments);
                    var m = new O.default.Image(1, 1, this), y = this, e = new Request(o, {
                        method: "GET",
                        mode: "cors"
                    });
                    return fetch(o, e).then(function(e) {
                        var t, r = e.headers.get("content-type");
                        null === r && console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."), r && r.includes("image/gif") ? e.arrayBuffer().then(function(e) {
                            if (e) {
                                var e = new Uint8Array(e), r = m, t = h, o = p, n = (function(e) {
                                    y._decrementPreload();
                                }).bind(y), s = new g.default.GifReader(e), i = (r.width = r.canvas.width = s.width, r.height = r.canvas.height = s.height, []), a = s.numFrames(), l = new Uint8ClampedArray(r.width * r.height * 4);
                                if (1 < a) {
                                    for(var u = 0; u < a; u++){
                                        var c = s.frameInfo(u), d = r.drawingContext.getImageData(0, 0, r.width, r.height), f = (l = d.data.slice(), !function(e, t) {
                                            try {
                                                t.decodeAndBlitFrameRGBA(e, l);
                                            } catch (e) {
                                                O.default._friendlyFileLoadError(8, r.src), "function" == typeof o ? o(e) : console.error(e);
                                            }
                                        }(u, s), new ImageData(l, r.width, r.height)), f = (r.drawingContext.putImageData(f, 0, 0), c.delay);
                                        0 === f && (f = 10), i.push({
                                            image: r.drawingContext.getImageData(0, 0, r.width, r.height),
                                            delay: 10 * f
                                        }), 2 === c.disposal ? r.drawingContext.clearRect(c.x, c.y, c.width, c.height) : 3 === c.disposal && r.drawingContext.putImageData(d, 0, 0, c.x, c.y, c.width, c.height);
                                    }
                                    e = s.loopCount();
                                    null === e ? e = 1 : 0 === e && (e = null), r.drawingContext.putImageData(i[0].image, 0, 0), r.gifProperties = {
                                        displayIndex: 0,
                                        loopLimit: e,
                                        loopCount: 0,
                                        frames: i,
                                        numFrames: a,
                                        playing: !0,
                                        timeDisplayed: 0,
                                        lastChangeTime: 0
                                    };
                                }
                                "function" == typeof t && t(r), n();
                            }
                        }, function(e) {
                            "function" == typeof p ? p(e) : console.error(e);
                        }) : ((t = new Image).onload = function() {
                            m.width = m.canvas.width = t.width, m.height = m.canvas.height = t.height, m.drawingContext.drawImage(t, 0, 0), m.modified = !0, "function" == typeof h && h(m), y._decrementPreload();
                        }, t.onerror = function(e) {
                            O.default._friendlyFileLoadError(0, t.src), "function" == typeof p ? p(e) : console.error(e);
                        }, 0 !== o.indexOf("data:image/") && (t.crossOrigin = "Anonymous"), t.src = o), m.modified = !0;
                    }).catch(function(e) {
                        O.default._friendlyFileLoadError(0, o), "function" == typeof p ? p(e) : console.error(e);
                    }), m;
                }, O.default.prototype.saveGif = function() {
                    a = regeneratorRuntime.mark(function e(t, r) {
                        var o, n, s, i, a, l, u, c, d, f, h, p, m, y, g, v, b, j, _, x, w, S, M, E, T, C = arguments;
                        return regeneratorRuntime.wrap(function(e) {
                            for(;;)switch(e.prev = e.next){
                                case 0:
                                    if (o = 2 < C.length && void 0 !== C[2] ? C[2] : {
                                        delay: 0,
                                        units: "seconds"
                                    }, "string" != typeof t) throw TypeError("fileName parameter must be a string");
                                    e.next = 3;
                                    break;
                                case 3:
                                    if ("number" != typeof r) throw TypeError("Duration parameter must be a number");
                                    e.next = 5;
                                    break;
                                case 5:
                                    if ("number" != typeof o.delay) throw TypeError("Delay parameter must be a number");
                                    e.next = 7;
                                    break;
                                case 7:
                                    if ("seconds" !== o.units && "frames" !== o.units) throw TypeError('Units parameter must be either "frames" or "seconds"');
                                    e.next = 9;
                                    break;
                                case 9:
                                    l = o.units, a = o.delay, i = this._targetFrameRate, n = (n = 1 / (i = i !== 1 / 0 && void 0 !== i && 0 !== i ? i : 60) * 1e3) < 20 ? 20 : n, i = (s = "seconds" === l ? r * i : r) + (l = "seconds" === l ? a * i : a), a = l, this.frameCount = a, l = this._pixelDensity, this.pixelDensity(1), u = [], c = "p5.gif.progressBar", null !== document.getElementById(c) && document.getElementById(c).remove(), (c = this.createP("")).id("progressBar"), c.style("font-size", "16px"), c.style("font-family", "Montserrat"), c.style("background-color", "#ffffffa0"), c.style("padding", "8px"), c.style("border-radius", "10px"), c.position(0, 0), this.drawingContext instanceof WebGLRenderingContext && (f = document.getElementById("defaultCanvas0").getContext("webgl"), d = new Uint8Array(f.drawingBufferWidth * f.drawingBufferHeight * 4)), this.noLoop();
                                case 35:
                                    if (a < i) return this.redraw(), g = void 0, g = this.drawingContext instanceof WebGLRenderingContext ? (d = new Uint8Array(f.drawingBufferWidth * f.drawingBufferHeight * 4), f.readPixels(0, 0, f.drawingBufferWidth, f.drawingBufferHeight, f.RGBA, f.UNSIGNED_BYTE, d), function(e) {
                                        for(var t = parseInt(height / 2), r = 4 * width, o = new Uint8Array(4 * width), n = 0; n < t; ++n){
                                            var s = n * r, i = (height - n - 1) * r;
                                            o.set(e.subarray(s, s + r)), e.copyWithin(s, i, i + r), e.set(o, i);
                                        }
                                        return e;
                                    }(d)) : this.drawingContext.getImageData(0, 0, this.width, this.height).data, u.push(g), a++, c.html("Saved frame <b>" + u.length.toString() + "</b> out of " + s.toString()), e.next = 44, new Promise(function(e) {
                                        return setTimeout(e, 0);
                                    });
                                    e.next = 46;
                                    break;
                                case 44:
                                    e.next = 35;
                                    break;
                                case 46:
                                    c.html("Frames processed, generating color palette..."), this.loop(), this.pixelDensity(l), h = (0, L.GIFEncoder)(), p = function(e) {
                                        for(var t = new Uint8Array(e.length * e[0].length), r = 0; r < e.length; r++)t.set(e[0], r * e[0].length);
                                        var o = (0, L.quantize)(t, 256, {
                                            format: "rgba444",
                                            oneBitAlpha: !0
                                        });
                                        256 === o.length ? o[o.length - 1] = [
                                            255 * Math.random(),
                                            255 * Math.random(),
                                            255 * Math.random(),
                                            0
                                        ] : o.push([
                                            255 * Math.random(),
                                            255 * Math.random(),
                                            255 * Math.random(),
                                            0
                                        ]);
                                        return o;
                                    }(u), m = p.length - 1, y = 0;
                                case 53:
                                    if (y < u.length) {
                                        if (0 === y) return g = (0, L.applyPalette)(u[y], p, {
                                            format: "rgba4444"
                                        }), h.writeFrame(g, this.width, this.height, {
                                            palette: p,
                                            delay: n,
                                            dispose: 1
                                        }), e.abrupt("continue", 68);
                                        e.next = 58;
                                    } else e.next = 71;
                                    break;
                                case 58:
                                    for(v = u[y], b = u[y - 1], j = [], _ = 0; _ < v.length; _ += 4)x = [
                                        v[_],
                                        v[_ + 1],
                                        v[_ + 2],
                                        v[_ + 3]
                                    ], w = [
                                        b[_],
                                        b[_ + 1],
                                        b[_ + 2],
                                        b[_ + 3]
                                    ], !function(e, r) {
                                        return Array.isArray(e) && Array.isArray(r) && e.length === r.length && e.every(function(e, t) {
                                            return e === r[t];
                                        });
                                    }(x, w) || j.push(_ / 4);
                                    for(S = (0, L.applyPalette)(v, p, {
                                        format: "rgba4444"
                                    }), M = 0; M < j.length; M++)E = j[M], S[E] = m;
                                    return h.writeFrame(S, this.width, this.height, {
                                        delay: n,
                                        transparent: !0,
                                        transparentIndex: m,
                                        dispose: 1
                                    }), c.html("Rendered frame <b>" + y.toString() + "</b> out of " + s.toString()), e.next = 68, new Promise(function(e) {
                                        return setTimeout(e, 0);
                                    });
                                case 68:
                                    y++, e.next = 53;
                                    break;
                                case 71:
                                    h.finish(), T = h.bytesView(), T = new Blob([
                                        T
                                    ], {
                                        type: "image/gif"
                                    }), u = [], this.loop(), c.html("Done. Downloading your gif!\uD83C\uDF38"), O.default.prototype.downloadFile(T, t, "gif");
                                case 79:
                                case "end":
                                    return e.stop();
                            }
                        }, e, this);
                    });
                    var a, r = function() {
                        var e = this, i = arguments;
                        return new Promise(function(t, r) {
                            var o = a.apply(e, i);
                            function n(e) {
                                l(o, t, r, n, s, "next", e);
                            }
                            function s(e) {
                                l(o, t, r, n, s, "throw", e);
                            }
                            n(void 0);
                        });
                    };
                    return function(e, t) {
                        return r.apply(this, arguments);
                    };
                }(), O.default.prototype.image = function(e, t, r, o, n, s, i, a, l, u, c, d) {
                    O.default._validateParameters("image", arguments);
                    var f = e.width, h = e.height, p = (d = d || j.CENTER, c = c || j.CENTER, e.elt && e.elt.videoWidth && !e.canvas && (f = e.elt.videoWidth, h = e.elt.videoHeight), o || f), n = n || h, s = s || 0, i = i || 0, a = v(a || f, f), f = v(l || h, h), l = 1;
                    e.elt && !e.canvas && e.elt.style.width && (l = e.elt.videoWidth && !o ? e.elt.videoWidth : e.elt.width, l /= parseInt(e.elt.style.width, 10)), s *= l, i *= l, f *= l, a *= l;
                    h = y(u, c, d, (h = m.default.modeAdjust(t, r, p, n, this._renderer._imageMode)).x, h.y, h.w, h.h, s, i, a, f);
                    this._renderer.image(e, h.sx, h.sy, h.sw, h.sh, h.dx, h.dy, h.dw, h.dh);
                }, O.default.prototype.tint = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    O.default._validateParameters("tint", t);
                    var o = this.color.apply(this, t);
                    this._renderer._tint = o.levels;
                }, O.default.prototype.noTint = function() {
                    this._renderer._tint = null;
                }, O.default.prototype._getTintedImageCanvas = O.default.Renderer2D.prototype._getTintedImageCanvas, O.default.prototype.imageMode = function(e) {
                    O.default._validateParameters("imageMode", arguments), e !== j.CORNER && e !== j.CORNERS && e !== j.CENTER || (this._renderer._imageMode = e);
                };
                e = O.default;
                r.default = e;
            },
            {
                "../core/constants": 256,
                "../core/friendly_errors/fes_core": 258,
                "../core/friendly_errors/file_errors": 259,
                "../core/friendly_errors/validate_params": 262,
                "../core/helpers": 263,
                "../core/main": 267,
                "core-js/modules/es.array.copy-within": 150,
                "core-js/modules/es.array.every": 151,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.promise": 178,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.includes": 185,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.typed-array.copy-within": 197,
                "core-js/modules/es.typed-array.every": 198,
                "core-js/modules/es.typed-array.fill": 199,
                "core-js/modules/es.typed-array.filter": 200,
                "core-js/modules/es.typed-array.find": 202,
                "core-js/modules/es.typed-array.find-index": 201,
                "core-js/modules/es.typed-array.for-each": 205,
                "core-js/modules/es.typed-array.includes": 206,
                "core-js/modules/es.typed-array.index-of": 207,
                "core-js/modules/es.typed-array.iterator": 210,
                "core-js/modules/es.typed-array.join": 211,
                "core-js/modules/es.typed-array.last-index-of": 212,
                "core-js/modules/es.typed-array.map": 213,
                "core-js/modules/es.typed-array.reduce": 215,
                "core-js/modules/es.typed-array.reduce-right": 214,
                "core-js/modules/es.typed-array.reverse": 216,
                "core-js/modules/es.typed-array.set": 217,
                "core-js/modules/es.typed-array.slice": 218,
                "core-js/modules/es.typed-array.some": 219,
                "core-js/modules/es.typed-array.sort": 220,
                "core-js/modules/es.typed-array.subarray": 221,
                "core-js/modules/es.typed-array.to-locale-string": 222,
                "core-js/modules/es.typed-array.to-string": 223,
                "core-js/modules/es.typed-array.uint8-array": 226,
                "core-js/modules/es.typed-array.uint8-clamped-array": 227,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230,
                gifenc: 237,
                omggif: 240,
                "regenerator-runtime/runtime": 244
            }
        ],
        291: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = n(e("../core/main")), o = n(e("./filters"));
                function n(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                s.default.Image = function(e, t) {
                    this.width = e, this.height = t, this.canvas = document.createElement("canvas"), this.canvas.width = this.width, this.canvas.height = this.height, this.drawingContext = this.canvas.getContext("2d"), (this._pixelsState = this)._pixelDensity = 1, this.gifProperties = null, this._modified = !1, this.pixels = [];
                }, s.default.Image.prototype._animateGif = function(e) {
                    var t, r = this.gifProperties, e = e._lastFrameTime;
                    0 === r.lastChangeTime && (r.lastChangeTime = e), r.playing && (r.timeDisplayed = e - r.lastChangeTime, t = r.frames[r.displayIndex].delay, r.timeDisplayed >= t && (t = Math.floor(r.timeDisplayed / t), r.timeDisplayed = 0, r.lastChangeTime = e, r.displayIndex += t, r.loopCount = Math.floor(r.displayIndex / r.numFrames), null !== r.loopLimit && r.loopCount >= r.loopLimit ? r.playing = !1 : (e = r.displayIndex % r.numFrames, this.drawingContext.putImageData(r.frames[e].image, 0, 0), r.displayIndex = e, this.setModified(!0))));
                }, s.default.Image.prototype._setProperty = function(e, t) {
                    this[e] = t, this.setModified(!0);
                }, s.default.Image.prototype.loadPixels = function() {
                    s.default.Renderer2D.prototype.loadPixels.call(this), this.setModified(!0);
                }, s.default.Image.prototype.updatePixels = function(e, t, r, o) {
                    s.default.Renderer2D.prototype.updatePixels.call(this, e, t, r, o), this.setModified(!0);
                }, s.default.Image.prototype.get = function(e, t, r, o) {
                    return s.default._validateParameters("p5.Image.get", arguments), s.default.Renderer2D.prototype.get.apply(this, arguments);
                }, s.default.Image.prototype._getPixel = s.default.Renderer2D.prototype._getPixel, s.default.Image.prototype.set = function(e, t, r) {
                    s.default.Renderer2D.prototype.set.call(this, e, t, r), this.setModified(!0);
                }, s.default.Image.prototype.resize = function(e, t) {
                    0 === e && 0 === t ? (e = this.canvas.width, t = this.canvas.height) : 0 === e ? e = this.canvas.width * t / this.canvas.height : 0 === t && (t = this.canvas.height * e / this.canvas.width), e = Math.floor(e), t = Math.floor(t);
                    var r = document.createElement("canvas");
                    if (r.width = e, r.height = t, this.gifProperties) for(var o = this.gifProperties, n = 0; n < o.numFrames; n++){
                        for(var s = this.drawingContext.createImageData(e, t), i = (d = d = c = u = l = void 0, o.frames[n].image), a = s, l = 0, u = 0; u < a.height; u++)for(var c = 0; c < a.width; c++){
                            var d = Math.floor(c * i.width / a.width), d = 4 * (Math.floor(u * i.height / a.height) * i.width + d);
                            a.data[l++] = i.data[d++], a.data[l++] = i.data[d++], a.data[l++] = i.data[d++], a.data[l++] = i.data[+d];
                        }
                        o.frames[n].image = s;
                    }
                    r.getContext("2d").drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, r.width, r.height), this.canvas.width = this.width = e, this.canvas.height = this.height = t, this.drawingContext.drawImage(r, 0, 0, e, t, 0, 0, e, t), 0 < this.pixels.length && this.loadPixels(), this.setModified(!0);
                }, s.default.Image.prototype.copy = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    s.default.prototype.copy.apply(this, t);
                }, s.default.Image.prototype.mask = function(e) {
                    var t = this.drawingContext.globalCompositeOperation, r = 1, o = [
                        e = void 0 === e ? this : e,
                        0,
                        0,
                        (r = e instanceof s.default.Renderer ? e._pInst._pixelDensity : r) * e.width,
                        r * e.height,
                        0,
                        0,
                        this.width,
                        this.height
                    ];
                    if (this.drawingContext.globalCompositeOperation = "destination-in", this.gifProperties) {
                        for(var n = 0; n < this.gifProperties.frames.length; n++)this.drawingContext.putImageData(this.gifProperties.frames[n].image, 0, 0), s.default.Image.prototype.copy.apply(this, o), this.gifProperties.frames[n].image = this.drawingContext.getImageData(0, 0, this.width, this.height);
                        this.drawingContext.putImageData(this.gifProperties.frames[this.gifProperties.displayIndex].image, 0, 0);
                    } else s.default.Image.prototype.copy.apply(this, o);
                    this.drawingContext.globalCompositeOperation = t, this.setModified(!0);
                }, s.default.Image.prototype.filter = function(e, t) {
                    o.default.apply(this.canvas, o.default[e], t), this.setModified(!0);
                }, s.default.Image.prototype.blend = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    s.default._validateParameters("p5.Image.blend", arguments), s.default.prototype.blend.apply(this, t), this.setModified(!0);
                }, s.default.Image.prototype.setModified = function(e) {
                    this._modified = e;
                }, s.default.Image.prototype.isModified = function() {
                    return this._modified;
                }, s.default.Image.prototype.save = function(e, t) {
                    this.gifProperties ? s.default.prototype.encodeAndDownloadGif(this, e) : s.default.prototype.saveCanvas(this.canvas, e, t);
                }, s.default.Image.prototype.reset = function() {
                    var e;
                    this.gifProperties && ((e = this.gifProperties).playing = !0, e.timeSinceStart = 0, e.timeDisplayed = 0, e.lastChangeTime = 0, e.loopCount = 0, e.displayIndex = 0, this.drawingContext.putImageData(e.frames[0].image, 0, 0));
                }, s.default.Image.prototype.getCurrentFrame = function() {
                    var e;
                    if (this.gifProperties) return (e = this.gifProperties).displayIndex % e.numFrames;
                }, s.default.Image.prototype.setFrame = function(e) {
                    var t;
                    this.gifProperties && (e < (t = this.gifProperties).numFrames && 0 <= e ? (t.timeDisplayed = 0, t.lastChangeTime = 0, t.displayIndex = e, this.drawingContext.putImageData(t.frames[e].image, 0, 0)) : console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero."));
                }, s.default.Image.prototype.numFrames = function() {
                    if (this.gifProperties) return this.gifProperties.numFrames;
                }, s.default.Image.prototype.play = function() {
                    this.gifProperties && (this.gifProperties.playing = !0);
                }, s.default.Image.prototype.pause = function() {
                    this.gifProperties && (this.gifProperties.playing = !1);
                }, s.default.Image.prototype.delay = function(e, t) {
                    if (this.gifProperties) {
                        var r = this.gifProperties;
                        if (t < r.numFrames && 0 <= t) r.frames[t].delay = e;
                        else {
                            var o = !0, t = !1, n = void 0;
                            try {
                                for(var s, i = r.frames[Symbol.iterator](); !(o = (s = i.next()).done); o = !0)s.value.delay = e;
                            } catch (e) {
                                t = !0, n = e;
                            } finally{
                                try {
                                    o || null == i.return || i.return();
                                } finally{
                                    if (t) throw n;
                                }
                            }
                        }
                    }
                };
                e = s.default.Image;
                r.default = e;
            },
            {
                "../core/main": 267,
                "./filters": 288,
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        292: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.filter"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var h = n(e("../core/main")), o = n(e("./filters"));
                function n(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                e("../color/p5.Color"), h.default.prototype.pixels = [], h.default.prototype.blend = function() {
                    for(var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    h.default._validateParameters("blend", r), this._renderer ? (e = this._renderer).blend.apply(e, r) : h.default.Renderer2D.prototype.blend.apply(this, r);
                }, h.default.prototype.copy = function() {
                    for(var e, t, r, o, n, s, i, a, l, u = arguments.length, c = new Array(u), d = 0; d < u; d++)c[d] = arguments[d];
                    if (h.default._validateParameters("copy", c), 9 === c.length) e = c[0], t = c[1], r = c[2], o = c[3], n = c[4], s = c[5], i = c[6], a = c[7], l = c[8];
                    else {
                        if (8 !== c.length) throw new Error("Signature not supported");
                        e = this, t = c[0], r = c[1], o = c[2], n = c[3], s = c[4], i = c[5], a = c[6], l = c[7];
                    }
                    h.default.prototype._copyHelper(this, e, t, r, o, n, s, i, a, l);
                }, h.default.prototype._copyHelper = function(e, t, r, o, n, s, i, a, l, u) {
                    t.loadPixels();
                    var c = t.canvas.width / t.width, d = 0, f = 0;
                    t._renderer && t._renderer.isP3D && (d = t.width / 2, f = t.height / 2), e._renderer && e._renderer.isP3D ? h.default.RendererGL.prototype.image.call(e._renderer, t, r + d, o + f, n, s, i, a, l, u) : e.drawingContext.drawImage(t.canvas, c * (r + d), c * (o + f), c * n, c * s, i, a, l, u);
                }, h.default.prototype.filter = function(e, t) {
                    h.default._validateParameters("filter", arguments), void 0 !== this.canvas ? o.default.apply(this.canvas, o.default[e], t) : o.default.apply(this.elt, o.default[e], t);
                }, h.default.prototype.get = function(e, t, r, o) {
                    var n;
                    return h.default._validateParameters("get", arguments), (n = this._renderer).get.apply(n, arguments);
                }, h.default.prototype.loadPixels = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    h.default._validateParameters("loadPixels", t), this._renderer.loadPixels();
                }, h.default.prototype.set = function(e, t, r) {
                    this._renderer.set(e, t, r);
                }, h.default.prototype.updatePixels = function(e, t, r, o) {
                    h.default._validateParameters("updatePixels", arguments), 0 !== this.pixels.length && this._renderer.updatePixels(e, t, r, o);
                };
                e = h.default;
                r.default = e;
            },
            {
                "../color/p5.Color": 254,
                "../core/main": 267,
                "./filters": 288,
                "core-js/modules/es.array.filter": 153
            }
        ],
        293: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.last-index-of"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/web.url"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.last-index-of"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.promise"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/web.url"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var v = s(e("../core/main")), m = (e("whatwg-fetch"), e("es6-promise/auto"), s(e("fetch-jsonp"))), n = s(e("file-saver"));
                function s(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                function y(e) {
                    return (y = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                function g(e) {
                    return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
                }
                function i(e, t) {
                    t && !0 !== t && "true" !== t || (t = "");
                    var r = "";
                    return (e = e || "untitled", e.includes(".")) && (r = e.split(".").pop()), t && r !== t && (r = t, e = "".concat(e, ".").concat(r)), [
                        e,
                        r
                    ];
                }
                e("../core/friendly_errors/validate_params"), e("../core/friendly_errors/file_errors"), e("../core/friendly_errors/fes_core"), v.default.prototype.loadJSON = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    v.default._validateParameters("loadJSON", t);
                    for(var o, n, s, i = t[0], a = {}, l = "json", u = 1; u < t.length; u++){
                        var c = t[u];
                        "string" == typeof c ? "jsonp" !== c && "json" !== c || (l = c) : "function" == typeof c ? o ? n = c : o = c : "object" === y(c) && (c.hasOwnProperty("jsonpCallback") || c.hasOwnProperty("jsonpCallbackFunction")) && (l = "jsonp", s = c);
                    }
                    var d = this;
                    return this.httpDo(i, "GET", s, l, function(e) {
                        for(var t in e)a[t] = e[t];
                        void 0 !== o && o(e), d._decrementPreload();
                    }, function(e) {
                        if (v.default._friendlyFileLoadError(5, i), !n) throw e;
                        n(e);
                    }), a;
                }, v.default.prototype.loadStrings = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    v.default._validateParameters("loadStrings", t);
                    for(var n, o, s = [], i = 1; i < t.length; i++){
                        var a = t[i];
                        "function" == typeof a && (void 0 === n ? n = a : void 0 === o && (o = a));
                    }
                    var l = this;
                    return v.default.prototype.httpDo.call(this, t[0], "GET", "text", function(e) {
                        for(var t = e.replace(/\r\n/g, "\r").replace(/\n/g, "\r").split(/\r/), r = 0, o = t.length; r < o; r += 32768)Array.prototype.push.apply(s, t.slice(r, Math.min(r + 32768, o)));
                        void 0 !== n && n(s), l._decrementPreload();
                    }, function(e) {
                        if (v.default._friendlyFileLoadError(3, e), !o) throw e;
                        o(e);
                    }), s;
                }, v.default.prototype.loadTable = function(t) {
                    var h, r, p, e = [], m = !1, o = t.substring(t.lastIndexOf(".") + 1, t.length);
                    "csv" === o ? p = "," : "ssv" === o ? p = ";" : "tsv" === o && (p = "	");
                    for(var n = 1; n < arguments.length; n++)"function" == typeof arguments[n] ? void 0 === h ? h = arguments[n] : void 0 === r && (r = arguments[n]) : "string" == typeof arguments[n] && (e.push(arguments[n]), "header" === arguments[n] && (m = !0), "csv" === arguments[n] ? p = "," : "ssv" === arguments[n] ? p = ";" : "tsv" === arguments[n] && (p = "	"));
                    var y = new v.default.Table, g = this;
                    return this.httpDo(t, "GET", "table", function(e) {
                        for(var t, r, o = {}, n = 0, s = [], i = 0, a = null, l = function() {
                            o.currentState = n, o.token = "";
                        }, u = function() {
                            a.push(o.token), l();
                        }, c = function() {
                            o.currentState = 4, s.push(a), a = null;
                        };;){
                            if (null == (t = e[i++])) {
                                if (o.escaped) throw new Error("Unclosed quote in file.");
                                if (a) {
                                    u(), c();
                                    break;
                                }
                            }
                            if (null === a && (o.escaped = !1, a = [], l()), o.currentState === n) {
                                if ('"' === t) {
                                    o.escaped = !0, o.currentState = 1;
                                    continue;
                                }
                                o.currentState = 1;
                            }
                            if (1 === o.currentState && o.escaped) {
                                if ('"' === t) '"' === e[i] ? (o.token += '"', i++) : (o.escaped = !1, o.currentState = 2);
                                else {
                                    if ("\r" === t) continue;
                                    o.token += t;
                                }
                            } else "\r" === t ? ("\n" === e[i] && i++, u(), c()) : "\n" === t ? (u(), c()) : t === p ? u() : 1 === o.currentState && (o.token += t);
                        }
                        if (m) y.columns = s.shift();
                        else for(var d = 0; d < s[0].length; d++)y.columns[d] = "null";
                        for(var f = 0; f < s.length; f++)(1 !== s[f].length || "undefined" !== s[f][0] && "" !== s[f][0]) && ((r = new v.default.TableRow).arr = s[f], r.obj = function(e, t) {
                            var r = {};
                            if (void 0 === (t = t || [])) for(var o = 0; o < e.length; o++)t[o.toString()] = o;
                            for(var n = 0; n < t.length; n++){
                                var s = t[n], i = e[n];
                                r[s] = i;
                            }
                            return r;
                        }(s[f], y.columns), y.addRow(r));
                        "function" == typeof h && h(y), g._decrementPreload();
                    }, function(e) {
                        v.default._friendlyFileLoadError(2, t), r ? r(e) : console.error(e);
                    }), y;
                }, v.default.prototype.loadXML = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    for(var o, n, s = new v.default.XML, i = 1; i < t.length; i++){
                        var a = t[i];
                        "function" == typeof a && (void 0 === o ? o = a : void 0 === n && (n = a));
                    }
                    var l = this;
                    return this.httpDo(t[0], "GET", "xml", function(e) {
                        for(var t in e)s[t] = e[t];
                        void 0 !== o && o(s), l._decrementPreload();
                    }, function(e) {
                        if (v.default._friendlyFileLoadError(1, e), !n) throw e;
                        n(e);
                    }), s;
                }, v.default.prototype.loadBytes = function(t, r, o) {
                    var n = {}, s = this;
                    return this.httpDo(t, "GET", "arrayBuffer", function(e) {
                        n.bytes = new Uint8Array(e), "function" == typeof r && r(n), s._decrementPreload();
                    }, function(e) {
                        if (v.default._friendlyFileLoadError(6, t), !o) throw e;
                        o(e);
                    }), n;
                }, v.default.prototype.httpGet = function() {
                    v.default._validateParameters("httpGet", arguments);
                    var e = Array.prototype.slice.call(arguments);
                    return e.splice(1, 0, "GET"), v.default.prototype.httpDo.apply(this, e);
                }, v.default.prototype.httpPost = function() {
                    v.default._validateParameters("httpPost", arguments);
                    var e = Array.prototype.slice.call(arguments);
                    return e.splice(1, 0, "POST"), v.default.prototype.httpDo.apply(this, e);
                }, v.default.prototype.httpDo = function() {
                    for(var r, e, t, o = {}, n = 0, s = "text/plain", i = arguments.length - 1; 0 < i && "function" == typeof (i < 0 || arguments.length <= i ? void 0 : arguments[i]); i--)n++;
                    var a = arguments.length - n, l = arguments.length <= 0 ? void 0 : arguments[0];
                    if (2 == a && "string" == typeof l && "object" === y(arguments.length <= 1 ? void 0 : arguments[1])) p = new Request(l, arguments.length <= 1 ? void 0 : arguments[1]), e = arguments.length <= 2 ? void 0 : arguments[2], t = arguments.length <= 3 ? void 0 : arguments[3];
                    else {
                        for(var u, c = "GET", d = 1; d < arguments.length; d++){
                            var f = d < 0 || arguments.length <= d ? void 0 : arguments[d];
                            if ("string" == typeof f) "GET" === f || "POST" === f || "PUT" === f || "DELETE" === f ? c = f : "json" === f || "jsonp" === f || "binary" === f || "arrayBuffer" === f || "xml" === f || "text" === f || "table" === f ? r = f : u = f;
                            else if ("number" == typeof f) u = f.toString();
                            else if ("object" === y(f)) {
                                if (f.hasOwnProperty("jsonpCallback") || f.hasOwnProperty("jsonpCallbackFunction")) for(var h in f)o[h] = f[h];
                                else s = f instanceof v.default.XML ? (u = f.serialize(), "application/xml") : (u = JSON.stringify(f), "application/json");
                            } else "function" == typeof f && (e ? t = f : e = f);
                        }
                        var a = "GET" === c ? new Headers : new Headers({
                            "Content-Type": s
                        }), p = new Request(l, {
                            method: c,
                            mode: "cors",
                            body: u,
                            headers: a
                        });
                    }
                    return (a = (a = "jsonp" === (r = r || (l.includes("json") ? "json" : l.includes("xml") ? "xml" : "text")) ? (0, m.default)(l, o) : fetch(p)).then(function(e) {
                        if (!e.ok) throw (t = new Error(e.body)).status = e.status, t.ok = !1, t;
                        var t = 0;
                        switch((t = "jsonp" !== r ? e.headers.get("content-length") : t) && 64e6 < t && v.default._friendlyFileLoadError(7, l), r){
                            case "json":
                            case "jsonp":
                                return e.json();
                            case "binary":
                                return e.blob();
                            case "arrayBuffer":
                                return e.arrayBuffer();
                            case "xml":
                                return e.text().then(function(e) {
                                    e = (new DOMParser).parseFromString(e, "text/xml");
                                    return new v.default.XML(e.documentElement);
                                });
                            default:
                                return e.text();
                        }
                    })).then(e || function() {}), a.catch(t || console.error), a;
                }, window.URL = window.URL || window.webkitURL, v.default.prototype._pWriters = [], v.default.prototype.createWriter = function(e, t) {
                    var r, o;
                    for(o in v.default.prototype._pWriters)if (v.default.prototype._pWriters[o].name === e) return r = new v.default.PrintWriter(e + this.millis(), t), v.default.prototype._pWriters.push(r), r;
                    return r = new v.default.PrintWriter(e, t), v.default.prototype._pWriters.push(r), r;
                }, v.default.PrintWriter = function(r, o) {
                    var n = this;
                    this.name = r, this.content = "", this.write = function(e) {
                        this.content += e;
                    }, this.print = function(e) {
                        this.content += "".concat(e, "\n");
                    }, this.clear = function() {
                        this.content = "";
                    }, this.close = function() {
                        var e, t = [];
                        for(e in t.push(this.content), v.default.prototype.writeFile(t, r, o), v.default.prototype._pWriters)v.default.prototype._pWriters[e].name === this.name && v.default.prototype._pWriters.splice(e, 1);
                        n.clear(), n = {};
                    };
                }, v.default.prototype.save = function(e, t, r) {
                    var o = arguments, n = (this._curElement || this).elt;
                    if (0 === o.length) v.default.prototype.saveCanvas(n);
                    else if (o[0] instanceof v.default.Renderer || o[0] instanceof v.default.Graphics) v.default.prototype.saveCanvas(o[0].elt, o[1], o[2]);
                    else if (1 === o.length && "string" == typeof o[0]) v.default.prototype.saveCanvas(n, o[0]);
                    else switch(i(o[1], o[2])[1]){
                        case "json":
                            return void v.default.prototype.saveJSON(o[0], o[1], o[2]);
                        case "txt":
                            return void v.default.prototype.saveStrings(o[0], o[1], o[2]);
                        default:
                            o[0] instanceof Array ? v.default.prototype.saveStrings(o[0], o[1], o[2]) : o[0] instanceof v.default.Table ? v.default.prototype.saveTable(o[0], o[1], o[2]) : o[0] instanceof v.default.Image ? v.default.prototype.saveCanvas(o[0].canvas, o[1]) : o[0] instanceof v.default.SoundFile && v.default.prototype.saveSound(o[0], o[1], o[2], o[3]);
                    }
                }, v.default.prototype.saveJSON = function(e, t, r) {
                    v.default._validateParameters("saveJSON", arguments), r = r ? JSON.stringify(e) : JSON.stringify(e, void 0, 2), this.saveStrings(r.split("\n"), t, "json");
                }, v.default.prototype.saveJSONObject = v.default.prototype.saveJSON, v.default.prototype.saveJSONArray = v.default.prototype.saveJSON, v.default.prototype.saveStrings = function(e, t, r, o) {
                    v.default._validateParameters("saveStrings", arguments);
                    for(var n = this.createWriter(t, r || "txt"), s = 0; s < e.length; s++)o ? n.write(e[s] + "\r\n") : n.write(e[s] + "\n");
                    n.close(), n.clear();
                }, v.default.prototype.saveTable = function(e, t, r) {
                    v.default._validateParameters("saveTable", arguments), o = void 0 === r ? t.substring(t.lastIndexOf(".") + 1, t.length) : r;
                    var o, n = this.createWriter(t, o), s = e.columns, i = "tsv" === o ? "	" : ",";
                    if ("html" !== o) {
                        if ("0" !== s[0]) {
                            for(var a = 0; a < s.length; a++)a < s.length - 1 ? n.write(s[a] + i) : n.write(s[a]);
                            n.write("\n");
                        }
                        for(var l = 0; l < e.rows.length; l++){
                            for(var u = void 0, u = 0; u < e.rows[l].arr.length; u++)u < e.rows[l].arr.length - 1 ? "csv" === o && String(e.rows[l].arr[u]).includes(",") ? n.write('"' + e.rows[l].arr[u] + '"' + i) : n.write(e.rows[l].arr[u] + i) : "csv" === o && String(e.rows[l].arr[u]).includes(",") ? n.write('"' + e.rows[l].arr[u] + '"') : n.write(e.rows[l].arr[u]);
                            n.write("\n");
                        }
                    } else {
                        n.print("<html>"), n.print("<head>");
                        if (n.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'), n.print("</head>"), n.print("<body>"), n.print("  <table>"), "0" !== s[0]) {
                            n.print("    <tr>");
                            for(var c = 0; c < s.length; c++){
                                var d = g(s[c]);
                                n.print("      <td>".concat(d)), n.print("      </td>");
                            }
                            n.print("    </tr>");
                        }
                        for(var f = 0; f < e.rows.length; f++){
                            n.print("    <tr>");
                            for(var h = 0; h < e.columns.length; h++){
                                var p = g(e.rows[f].getString(h));
                                n.print("      <td>".concat(p)), n.print("      </td>");
                            }
                            n.print("    </tr>");
                        }
                        n.print("  </table>"), n.print("</body>"), n.print("</html>");
                    }
                    n.close(), n.clear();
                }, v.default.prototype.writeFile = function(e, t, r) {
                    var o = "application/octet-stream", e = (v.default.prototype._isSafari() && (o = "text/plain"), new Blob(e, {
                        type: o
                    }));
                    v.default.prototype.downloadFile(e, t, r);
                }, v.default.prototype.downloadFile = function(e, t, r) {
                    var o, t = i(t, r), r = t[0];
                    e instanceof Blob ? n.default.saveAs(e, r) : ((o = document.createElement("a")).href = e, o.download = r, o.onclick = function(e) {
                        document.body.removeChild(e.target), e.stopPropagation();
                    }, o.style.display = "none", document.body.appendChild(o), v.default.prototype._isSafari() && (e = (e = 'Hello, Safari user! To download this file...\n1. Go to File --> Save As.\n2. Choose "Page Source" as the Format.\n') + '3. Name it with this extension: ."'.concat(t[1], '"'), alert(e)), o.click());
                }, v.default.prototype._checkFileExtension = i, v.default.prototype._isSafari = function() {
                    return 0 < Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor");
                };
                e = v.default;
                r.default = e;
            },
            {
                "../core/friendly_errors/fes_core": 258,
                "../core/friendly_errors/file_errors": 259,
                "../core/friendly_errors/validate_params": 262,
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.last-index-of": 160,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.array.splice": 164,
                "core-js/modules/es.function.name": 165,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.promise": 178,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.includes": 185,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.replace": 189,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.typed-array.copy-within": 197,
                "core-js/modules/es.typed-array.every": 198,
                "core-js/modules/es.typed-array.fill": 199,
                "core-js/modules/es.typed-array.filter": 200,
                "core-js/modules/es.typed-array.find": 202,
                "core-js/modules/es.typed-array.find-index": 201,
                "core-js/modules/es.typed-array.for-each": 205,
                "core-js/modules/es.typed-array.includes": 206,
                "core-js/modules/es.typed-array.index-of": 207,
                "core-js/modules/es.typed-array.iterator": 210,
                "core-js/modules/es.typed-array.join": 211,
                "core-js/modules/es.typed-array.last-index-of": 212,
                "core-js/modules/es.typed-array.map": 213,
                "core-js/modules/es.typed-array.reduce": 215,
                "core-js/modules/es.typed-array.reduce-right": 214,
                "core-js/modules/es.typed-array.reverse": 216,
                "core-js/modules/es.typed-array.set": 217,
                "core-js/modules/es.typed-array.slice": 218,
                "core-js/modules/es.typed-array.some": 219,
                "core-js/modules/es.typed-array.sort": 220,
                "core-js/modules/es.typed-array.subarray": 221,
                "core-js/modules/es.typed-array.to-locale-string": 222,
                "core-js/modules/es.typed-array.to-string": 223,
                "core-js/modules/es.typed-array.uint8-array": 226,
                "core-js/modules/web.dom-collections.iterator": 230,
                "core-js/modules/web.url": 232,
                "es6-promise/auto": 233,
                "fetch-jsonp": 235,
                "file-saver": 236,
                "whatwg-fetch": 245
            }
        ],
        294: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.regexp.constructor"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.match"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.trim"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.regexp.constructor"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.match"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.trim"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                o.default.Table = function(e) {
                    this.columns = [], this.rows = [];
                }, o.default.Table.prototype.addRow = function(e) {
                    e = e || new o.default.TableRow;
                    if (void 0 === e.arr || void 0 === e.obj) throw new Error("invalid TableRow: ".concat(e));
                    return (e.table = this).rows.push(e), e;
                }, o.default.Table.prototype.removeRow = function(e) {
                    this.rows[e].table = null;
                    e = this.rows.splice(e + 1, this.rows.length);
                    this.rows.pop(), this.rows = this.rows.concat(e);
                }, o.default.Table.prototype.getRow = function(e) {
                    return this.rows[e];
                }, o.default.Table.prototype.getRows = function() {
                    return this.rows;
                }, o.default.Table.prototype.findRow = function(e, t) {
                    if ("string" == typeof t) {
                        for(var r = 0; r < this.rows.length; r++)if (this.rows[r].obj[t] === e) return this.rows[r];
                    } else for(var o = 0; o < this.rows.length; o++)if (this.rows[o].arr[t] === e) return this.rows[o];
                    return null;
                }, o.default.Table.prototype.findRows = function(e, t) {
                    var r = [];
                    if ("string" == typeof t) for(var o = 0; o < this.rows.length; o++)this.rows[o].obj[t] === e && r.push(this.rows[o]);
                    else for(var n = 0; n < this.rows.length; n++)this.rows[n].arr[t] === e && r.push(this.rows[n]);
                    return r;
                }, o.default.Table.prototype.matchRow = function(e, t) {
                    if ("number" == typeof t) {
                        for(var r = 0; r < this.rows.length; r++)if (this.rows[r].arr[t].match(e)) return this.rows[r];
                    } else for(var o = 0; o < this.rows.length; o++)if (this.rows[o].obj[t].match(e)) return this.rows[o];
                    return null;
                }, o.default.Table.prototype.matchRows = function(e, t) {
                    var r = [];
                    if ("number" == typeof t) for(var o = 0; o < this.rows.length; o++)this.rows[o].arr[t].match(e) && r.push(this.rows[o]);
                    else for(var n = 0; n < this.rows.length; n++)this.rows[n].obj[t].match(e) && r.push(this.rows[n]);
                    return r;
                }, o.default.Table.prototype.getColumn = function(e) {
                    var t = [];
                    if ("string" == typeof e) for(var r = 0; r < this.rows.length; r++)t.push(this.rows[r].obj[e]);
                    else for(var o = 0; o < this.rows.length; o++)t.push(this.rows[o].arr[e]);
                    return t;
                }, o.default.Table.prototype.clearRows = function() {
                    delete this.rows, this.rows = [];
                }, o.default.Table.prototype.addColumn = function(e) {
                    this.columns.push(e || null);
                }, o.default.Table.prototype.getColumnCount = function() {
                    return this.columns.length;
                }, o.default.Table.prototype.getRowCount = function() {
                    return this.rows.length;
                }, o.default.Table.prototype.removeTokens = function(e, t) {
                    for(var r = [], o = 0; o < e.length; o++)r.push(e.charAt(o).replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&"));
                    var n = new RegExp(r.join("|"), "g");
                    if (void 0 === t) for(var s = 0; s < this.columns.length; s++)for(var i = 0; i < this.rows.length; i++){
                        var a = (a = this.rows[i].arr[s]).replace(n, "");
                        this.rows[i].arr[s] = a, this.rows[i].obj[this.columns[s]] = a;
                    }
                    else if ("string" == typeof t) for(var l = 0; l < this.rows.length; l++){
                        var u = (u = this.rows[l].obj[t]).replace(n, ""), c = (this.rows[l].obj[t] = u, this.columns.indexOf(t));
                        this.rows[l].arr[c] = u;
                    }
                    else for(var d = 0; d < this.rows.length; d++){
                        var f = (f = this.rows[d].arr[t]).replace(n, "");
                        this.rows[d].arr[t] = f, this.rows[d].obj[this.columns[t]] = f;
                    }
                }, o.default.Table.prototype.trim = function(e) {
                    var t = new RegExp(" ", "g");
                    if (void 0 === e) for(var r = 0; r < this.columns.length; r++)for(var o = 0; o < this.rows.length; o++){
                        var n = (n = this.rows[o].arr[r]).replace(t, "");
                        this.rows[o].arr[r] = n, this.rows[o].obj[this.columns[r]] = n;
                    }
                    else if ("string" == typeof e) for(var s = 0; s < this.rows.length; s++){
                        var i = (i = this.rows[s].obj[e]).replace(t, ""), a = (this.rows[s].obj[e] = i, this.columns.indexOf(e));
                        this.rows[s].arr[a] = i;
                    }
                    else for(var l = 0; l < this.rows.length; l++){
                        var u = (u = this.rows[l].arr[e]).replace(t, "");
                        this.rows[l].arr[e] = u, this.rows[l].obj[this.columns[e]] = u;
                    }
                }, o.default.Table.prototype.removeColumn = function(e) {
                    "string" == typeof e ? r = this.columns.indexOf(t = e) : t = this.columns[r = e];
                    var t, r, e = this.columns.splice(r + 1, this.columns.length);
                    this.columns.pop(), this.columns = this.columns.concat(e);
                    for(var o = 0; o < this.rows.length; o++){
                        var n = this.rows[o].arr, s = n.splice(r + 1, n.length);
                        n.pop(), this.rows[o].arr = n.concat(s), delete this.rows[o].obj[t];
                    }
                }, o.default.Table.prototype.set = function(e, t, r) {
                    this.rows[e].set(t, r);
                }, o.default.Table.prototype.setNum = function(e, t, r) {
                    this.rows[e].setNum(t, r);
                }, o.default.Table.prototype.setString = function(e, t, r) {
                    this.rows[e].setString(t, r);
                }, o.default.Table.prototype.get = function(e, t) {
                    return this.rows[e].get(t);
                }, o.default.Table.prototype.getNum = function(e, t) {
                    return this.rows[e].getNum(t);
                }, o.default.Table.prototype.getString = function(e, t) {
                    return this.rows[e].getString(t);
                }, o.default.Table.prototype.getObject = function(e) {
                    for(var t, r = {}, o = 0; o < this.rows.length; o++)if (t = this.rows[o].obj, "string" == typeof e) {
                        if (!(0 <= this.columns.indexOf(e))) throw new Error('This table has no column named "'.concat(e, '"'));
                        r[t[e]] = t;
                    } else r[o] = this.rows[o].obj;
                    return r;
                }, o.default.Table.prototype.getArray = function() {
                    for(var e = [], t = 0; t < this.rows.length; t++)e.push(this.rows[t].arr);
                    return e;
                };
                e = o.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.array.splice": 164,
                "core-js/modules/es.regexp.constructor": 180,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.match": 187,
                "core-js/modules/es.string.replace": 189,
                "core-js/modules/es.string.trim": 193
            }
        ],
        295: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.index-of"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.split"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                e.default.TableRow = function(e, t) {
                    var r = [], o = {};
                    e && (r = e.split(t = t || ","));
                    for(var n = 0; n < r.length; n++){
                        var s = n, i = r[n];
                        o[s] = i;
                    }
                    this.arr = r, this.obj = o, this.table = null;
                }, e.default.TableRow.prototype.set = function(e, t) {
                    if ("string" == typeof e) {
                        var r = this.table.columns.indexOf(e);
                        if (!(0 <= r)) throw new Error('This table has no column named "'.concat(e, '"'));
                        this.obj[e] = t, this.arr[r] = t;
                    } else {
                        if (!(e < this.table.columns.length)) throw new Error("Column #".concat(e, " is out of the range of this table"));
                        this.arr[e] = t;
                        r = this.table.columns[e];
                        this.obj[r] = t;
                    }
                }, e.default.TableRow.prototype.setNum = function(e, t) {
                    t = parseFloat(t);
                    this.set(e, t);
                }, e.default.TableRow.prototype.setString = function(e, t) {
                    t = t.toString();
                    this.set(e, t);
                }, e.default.TableRow.prototype.get = function(e) {
                    return ("string" == typeof e ? this.obj : this.arr)[e];
                }, e.default.TableRow.prototype.getNum = function(e) {
                    var t = "string" == typeof e ? parseFloat(this.obj[e]) : parseFloat(this.arr[e]);
                    if ("NaN" === t.toString()) throw "Error: ".concat(this.obj[e], " is NaN (Not a Number)");
                    return t;
                }, e.default.TableRow.prototype.getString = function(e) {
                    return ("string" == typeof e ? this.obj : this.arr)[e].toString();
                };
                e = e.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.split": 191
            }
        ],
        296: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.replace"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.replace"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                function o(e) {
                    for(var t = [], r = 0; r < e.length; r++)t.push(new a.default.XML(e[r]));
                    return t;
                }
                a.default.XML = function(e) {
                    e ? this.DOM = e : (e = document.implementation.createDocument(null, "doc"), this.DOM = e.createElement("root"));
                }, a.default.XML.prototype.getParent = function() {
                    return new a.default.XML(this.DOM.parentElement);
                }, a.default.XML.prototype.getName = function() {
                    return this.DOM.tagName;
                }, a.default.XML.prototype.setName = function(e) {
                    var t = this.DOM.innerHTML, r = this.DOM.attributes, o = document.implementation.createDocument(null, "default").createElement(e);
                    o.innerHTML = t;
                    for(var n = 0; n < r.length; n++)o.setAttribute(r[n].nodeName, r.nodeValue);
                    this.DOM = o;
                }, a.default.XML.prototype.hasChildren = function() {
                    return 0 < this.DOM.children.length;
                }, a.default.XML.prototype.listChildren = function() {
                    for(var e = [], t = 0; t < this.DOM.childNodes.length; t++)e.push(this.DOM.childNodes[t].nodeName);
                    return e;
                }, a.default.XML.prototype.getChildren = function(e) {
                    return o(e ? this.DOM.getElementsByTagName(e) : this.DOM.children);
                }, a.default.XML.prototype.getChild = function(e) {
                    if ("string" != typeof e) return new a.default.XML(this.DOM.children[e]);
                    var t = !0, r = !1, o = void 0;
                    try {
                        for(var n, s = this.DOM.children[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                            var i = n.value;
                            if (i.tagName === e) return new a.default.XML(i);
                        }
                    } catch (e) {
                        r = !0, o = e;
                    } finally{
                        try {
                            t || null == s.return || s.return();
                        } finally{
                            if (r) throw o;
                        }
                    }
                }, a.default.XML.prototype.addChild = function(e) {
                    e instanceof a.default.XML && this.DOM.appendChild(e.DOM);
                }, a.default.XML.prototype.removeChild = function(e) {
                    var t = -1;
                    if ("string" == typeof e) {
                        for(var r = 0; r < this.DOM.children.length; r++)if (this.DOM.children[r].tagName === e) {
                            t = r;
                            break;
                        }
                    } else t = e;
                    -1 !== t && this.DOM.removeChild(this.DOM.children[t]);
                }, a.default.XML.prototype.getAttributeCount = function() {
                    return this.DOM.attributes.length;
                }, a.default.XML.prototype.listAttributes = function() {
                    var e = [], t = !0, r = !1, o = void 0;
                    try {
                        for(var n, s = this.DOM.attributes[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                            var i = n.value;
                            e.push(i.nodeName);
                        }
                    } catch (e) {
                        r = !0, o = e;
                    } finally{
                        try {
                            t || null == s.return || s.return();
                        } finally{
                            if (r) throw o;
                        }
                    }
                    return e;
                }, a.default.XML.prototype.hasAttribute = function(e) {
                    var t = {}, r = !0, o = !1, n = void 0;
                    try {
                        for(var s, i = this.DOM.attributes[Symbol.iterator](); !(r = (s = i.next()).done); r = !0){
                            var a = s.value;
                            t[a.nodeName] = a.nodeValue;
                        }
                    } catch (e) {
                        o = !0, n = e;
                    } finally{
                        try {
                            r || null == i.return || i.return();
                        } finally{
                            if (o) throw n;
                        }
                    }
                    return !!t[e];
                }, a.default.XML.prototype.getNum = function(e, t) {
                    var r = {}, o = !0, n = !1, s = void 0;
                    try {
                        for(var i, a = this.DOM.attributes[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                            var l = i.value;
                            r[l.nodeName] = l.nodeValue;
                        }
                    } catch (e) {
                        n = !0, s = e;
                    } finally{
                        try {
                            o || null == a.return || a.return();
                        } finally{
                            if (n) throw s;
                        }
                    }
                    return Number(r[e]) || t || 0;
                }, a.default.XML.prototype.getString = function(e, t) {
                    var r = {}, o = !0, n = !1, s = void 0;
                    try {
                        for(var i, a = this.DOM.attributes[Symbol.iterator](); !(o = (i = a.next()).done); o = !0){
                            var l = i.value;
                            r[l.nodeName] = l.nodeValue;
                        }
                    } catch (e) {
                        n = !0, s = e;
                    } finally{
                        try {
                            o || null == a.return || a.return();
                        } finally{
                            if (n) throw s;
                        }
                    }
                    return r[e] ? String(r[e]) : t || null;
                }, a.default.XML.prototype.setAttribute = function(e, t) {
                    this.DOM.setAttribute(e, t);
                }, a.default.XML.prototype.getContent = function(e) {
                    var t = this.DOM.textContent;
                    return (t = t.replace(/\s\s+/g, ",")) || e || null;
                }, a.default.XML.prototype.setContent = function(e) {
                    this.DOM.children.length || (this.DOM.textContent = e);
                }, a.default.XML.prototype.serialize = function() {
                    return (new XMLSerializer).serializeToString(this.DOM);
                };
                e = a.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.number.constructor": 169,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.replace": 189,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        297: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.math.hypot"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.math.hypot"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.string.includes"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var i = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                function o() {
                    if ("function" == typeof Math.hypot) return Math.hypot.apply(null, arguments);
                    for(var e = arguments.length, t = [], r = 0, o = 0; o < e; o++){
                        var n = arguments[o];
                        if ((n = +n) === 1 / 0 || n === -1 / 0) return 1 / 0;
                        r < (n = Math.abs(n)) && (r = n), t[o] = n;
                    }
                    0 === r && (r = 1);
                    for(var s = 0, i = 0, a = 0; a < e; a++)var l = t[a] / r, l = l * l - i, u = s + l, i = u - s - l, s = u;
                    return Math.sqrt(s) * r;
                }
                i.default.prototype.abs = Math.abs, i.default.prototype.ceil = Math.ceil, i.default.prototype.constrain = function(e, t, r) {
                    return i.default._validateParameters("constrain", arguments), Math.max(Math.min(e, r), t);
                }, i.default.prototype.dist = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    return i.default._validateParameters("dist", t), 4 === t.length ? o(t[2] - t[0], t[3] - t[1]) : 6 === t.length ? o(t[3] - t[0], t[4] - t[1], t[5] - t[2]) : void 0;
                }, i.default.prototype.exp = Math.exp, i.default.prototype.floor = Math.floor, i.default.prototype.lerp = function(e, t, r) {
                    return i.default._validateParameters("lerp", arguments), r * (t - e) + e;
                }, i.default.prototype.log = Math.log, i.default.prototype.mag = function(e, t) {
                    return i.default._validateParameters("mag", arguments), o(e, t);
                }, i.default.prototype.map = function(e, t, r, o, n, s) {
                    i.default._validateParameters("map", arguments);
                    e = (e - t) / (r - t) * (n - o) + o;
                    return s ? o < n ? this.constrain(e, o, n) : this.constrain(e, n, o) : e;
                }, i.default.prototype.max = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    return t[0] instanceof Array ? Math.max.apply(null, t[0]) : Math.max.apply(null, t);
                }, i.default.prototype.min = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    return t[0] instanceof Array ? Math.min.apply(null, t[0]) : Math.min.apply(null, t);
                }, i.default.prototype.norm = function(e, t, r) {
                    return i.default._validateParameters("norm", arguments), this.map(e, t, r, 0, 1);
                }, i.default.prototype.pow = Math.pow, i.default.prototype.round = function(e, t) {
                    return t ? (t = Math.pow(10, t), Math.round(e * t) / t) : Math.round(e);
                }, i.default.prototype.sq = function(e) {
                    return e * e;
                }, i.default.prototype.sqrt = Math.sqrt, i.default.prototype.fract = function(e) {
                    i.default._validateParameters("fract", arguments);
                    var t, r = 0, e = Number(e);
                    return isNaN(e) || Math.abs(e) === 1 / 0 ? e : (e < 0 && (e = -e, r = 1), String(e).includes(".") && !String(e).includes("e") ? (t = String(e), t = Number("0" + t.slice(t.indexOf("."))), Math.abs(r - t)) : e < 1 ? Math.abs(r - e) : 0);
                };
                e = i.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.math.hypot": 167,
                "core-js/modules/es.number.constructor": 169,
                "core-js/modules/es.string.includes": 185
            }
        ],
        298: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.reflect.construct"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.reflect.construct"), e("core-js/modules/es.regexp.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                function n(e, t, r) {
                    return (n = function() {
                        if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                            if ("function" == typeof Proxy) return 1;
                            try {
                                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), 1;
                            } catch (e) {}
                        }
                    }() ? Reflect.construct : function(e, t, r) {
                        var o = [
                            null
                        ];
                        o.push.apply(o, t);
                        t = new (Function.bind.apply(e, o));
                        return r && s(t, r.prototype), t;
                    }).apply(null, arguments);
                }
                function s(e, t) {
                    return (s = Object.setPrototypeOf || function(e, t) {
                        return e.__proto__ = t, e;
                    })(e, t);
                }
                o.default.prototype.createVector = function(e, t, r) {
                    return this instanceof o.default ? n(o.default.Vector, [
                        this._fromRadians.bind(this),
                        this._toRadians.bind(this)
                    ].concat(Array.prototype.slice.call(arguments))) : new o.default.Vector(e, t, r);
                };
                e = o.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.reflect.construct": 179,
                "core-js/modules/es.regexp.to-string": 182
            }
        ],
        299: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                function b(e) {
                    return .5 * (1 - Math.cos(e * Math.PI));
                }
                var j, _ = 4095, x = 4, w = .5, e = (e.default.prototype.noise = function(e) {
                    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0;
                    if (null == j) {
                        j = new Array(4096);
                        for(var o = 0; o < 4096; o++)j[o] = Math.random();
                    }
                    e < 0 && (e = -e), t < 0 && (t = -t), r < 0 && (r = -r);
                    for(var n, s, i = Math.floor(e), a = Math.floor(t), l = Math.floor(r), u = e - i, c = t - a, d = r - l, f = 0, h = .5, p = 0; p < x; p++){
                        var m = i + (a << 4) + (l << 8), y = b(u), g = b(c), v = j[m & _];
                        v += y * (j[m + 1 & _] - v), n = j[m + 16 & _], v += g * ((n += y * (j[m + 16 + 1 & _] - n)) - v), n = j[(m += 256) & _], n += y * (j[m + 1 & _] - n), s = j[m + 16 & _], n += g * ((s += y * (j[m + 16 + 1 & _] - s)) - n), f += (v += b(d) * (n - v)) * h, h *= w, i <<= 1, a <<= 1, l <<= 1, 1 <= (u *= 2) && (i++, u--), 1 <= (c *= 2) && (a++, c--), 1 <= (d *= 2) && (l++, d--);
                    }
                    return f;
                }, e.default.prototype.noiseDetail = function(e, t) {
                    0 < e && (x = e), 0 < t && (w = t);
                }, e.default.prototype.noiseSeed = function(e) {
                    o = 4294967296;
                    var t, r, o, n = {
                        setSeed: function(e) {
                            r = t = (null == e ? Math.random() * o : e) >>> 0;
                        },
                        getSeed: function() {
                            return t;
                        },
                        rand: function() {
                            return (r = (1664525 * r + 1013904223) % o) / o;
                        }
                    };
                    n.setSeed(e), j = new Array(4096);
                    for(var s = 0; s < 4096; s++)j[s] = n.rand();
                }, e.default);
                r.default = e;
            },
            {
                "../core/main": 267
            }
        ],
        300: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.every"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.some"), e("core-js/modules/es.math.sign"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.number.is-finite"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.sub"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.every"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.some"), e("core-js/modules/es.math.sign"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.number.is-finite"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.sub"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (s = e("../core/main")) && s.__esModule ? s : {
                    default: s
                }, n = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = l();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function l() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, l = function() {
                        return e;
                    }, e);
                }
                a.default.Vector = function() {
                    var e, t, r = "[object Function]" === ({}).toString.call(arguments[0]) ? (this.isPInst = !0, this._fromRadians = arguments[0], this._toRadians = arguments[1], e = arguments[2] || 0, t = arguments[3] || 0, arguments[4] || 0) : (e = arguments[0] || 0, t = arguments[1] || 0, arguments[2] || 0);
                    this.x = e, this.y = t, this.z = r;
                }, a.default.Vector.prototype.toString = function() {
                    return "p5.Vector Object : [".concat(this.x, ", ").concat(this.y, ", ").concat(this.z, "]");
                }, a.default.Vector.prototype.set = function(e, t, r) {
                    return e instanceof a.default.Vector ? (this.x = e.x || 0, this.y = e.y || 0, this.z = e.z || 0) : e instanceof Array ? (this.x = e[0] || 0, this.y = e[1] || 0, this.z = e[2] || 0) : (this.x = e || 0, this.y = t || 0, this.z = r || 0), this;
                }, a.default.Vector.prototype.copy = function() {
                    return this.isPInst ? new a.default.Vector(this._fromRadians, this._toRadians, this.x, this.y, this.z) : new a.default.Vector(this.x, this.y, this.z);
                }, a.default.Vector.prototype.add = function(e, t, r) {
                    return e instanceof a.default.Vector ? (this.x += e.x || 0, this.y += e.y || 0, this.z += e.z || 0) : e instanceof Array ? (this.x += e[0] || 0, this.y += e[1] || 0, this.z += e[2] || 0) : (this.x += e || 0, this.y += t || 0, this.z += r || 0), this;
                };
                function u(e, t) {
                    return 0 !== e && (this.x = this.x % e), 0 !== t && (this.y = this.y % t), this;
                }
                function c(e, t, r) {
                    return 0 !== e && (this.x = this.x % e), 0 !== t && (this.y = this.y % t), 0 !== r && (this.z = this.z % r), this;
                }
                a.default.Vector.prototype.rem = function(e, t, r) {
                    var o;
                    if (e instanceof a.default.Vector) {
                        if (Number.isFinite(e.x) && Number.isFinite(e.y) && Number.isFinite(e.z)) return n = parseFloat(e.x), s = parseFloat(e.y), o = parseFloat(e.z), c.call(this, n, s, o);
                    } else if (e instanceof Array) {
                        if (e.every(function(e) {
                            return Number.isFinite(e);
                        })) return 2 === e.length ? u.call(this, e[0], e[1]) : 3 === e.length ? c.call(this, e[0], e[1], e[2]) : void 0;
                    } else if (1 === arguments.length) {
                        if (Number.isFinite(e) && 0 !== e) return this.x = this.x % e, this.y = this.y % e, this.z = this.z % e, this;
                    } else if (2 === arguments.length) {
                        var n = Array.prototype.slice.call(arguments);
                        if (n.every(function(e) {
                            return Number.isFinite(e);
                        }) && 2 === n.length) return u.call(this, n[0], n[1]);
                    } else if (3 === arguments.length) {
                        var s = Array.prototype.slice.call(arguments);
                        if (s.every(function(e) {
                            return Number.isFinite(e);
                        }) && 3 === s.length) return c.call(this, s[0], s[1], s[2]);
                    }
                }, a.default.Vector.prototype.sub = function(e, t, r) {
                    return e instanceof a.default.Vector ? (this.x -= e.x || 0, this.y -= e.y || 0, this.z -= e.z || 0) : e instanceof Array ? (this.x -= e[0] || 0, this.y -= e[1] || 0, this.z -= e[2] || 0) : (this.x -= e || 0, this.y -= t || 0, this.z -= r || 0), this;
                }, a.default.Vector.prototype.mult = function(e, t, r) {
                    var o;
                    return e instanceof a.default.Vector ? Number.isFinite(e.x) && Number.isFinite(e.y) && Number.isFinite(e.z) && "number" == typeof e.x && "number" == typeof e.y && "number" == typeof e.z ? (this.x *= e.x, this.y *= e.y, this.z *= e.z) : console.warn("p5.Vector.prototype.mult:", "x contains components that are either undefined or not finite numbers") : e instanceof Array ? e.every(function(e) {
                        return Number.isFinite(e);
                    }) && e.every(function(e) {
                        return "number" == typeof e;
                    }) ? 1 === e.length ? (this.x *= e[0], this.y *= e[0], this.z *= e[0]) : 2 === e.length ? (this.x *= e[0], this.y *= e[1]) : 3 === e.length && (this.x *= e[0], this.y *= e[1], this.z *= e[2]) : console.warn("p5.Vector.prototype.mult:", "x contains elements that are either undefined or not finite numbers") : (o = Array.prototype.slice.call(arguments)).every(function(e) {
                        return Number.isFinite(e);
                    }) && o.every(function(e) {
                        return "number" == typeof e;
                    }) ? (1 === arguments.length && (this.x *= e, this.y *= e, this.z *= e), 2 === arguments.length && (this.x *= e, this.y *= t), 3 === arguments.length && (this.x *= e, this.y *= t, this.z *= r)) : console.warn("p5.Vector.prototype.mult:", "x, y, or z arguments are either undefined or not a finite number"), this;
                }, a.default.Vector.prototype.div = function(e, t, r) {
                    if (e instanceof a.default.Vector) {
                        if (Number.isFinite(e.x) && Number.isFinite(e.y) && Number.isFinite(e.z) && "number" == typeof e.x && "number" == typeof e.y && "number" == typeof e.z) {
                            if (0 === e.x || 0 === e.y || 0 === e.z) return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
                            this.x /= e.x, this.y /= e.y, this.z /= e.z;
                        } else console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
                    } else if (e instanceof Array) {
                        if (e.every(function(e) {
                            return Number.isFinite(e);
                        }) && e.every(function(e) {
                            return "number" == typeof e;
                        })) {
                            if (e.some(function(e) {
                                return 0 === e;
                            })) return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
                            1 === e.length ? (this.x /= e[0], this.y /= e[0], this.z /= e[0]) : 2 === e.length ? (this.x /= e[0], this.y /= e[1]) : 3 === e.length && (this.x /= e[0], this.y /= e[1], this.z /= e[2]);
                        } else console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
                    } else {
                        var o = Array.prototype.slice.call(arguments);
                        if (o.every(function(e) {
                            return Number.isFinite(e);
                        }) && o.every(function(e) {
                            return "number" == typeof e;
                        })) {
                            if (o.some(function(e) {
                                return 0 === e;
                            })) return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
                            1 === arguments.length && (this.x /= e, this.y /= e, this.z /= e), 2 === arguments.length && (this.x /= e, this.y /= t), 3 === arguments.length && (this.x /= e, this.y /= t, this.z /= r);
                        } else console.warn("p5.Vector.prototype.div:", "x, y, or z arguments are either undefined or not a finite number");
                    }
                    return this;
                }, a.default.Vector.prototype.mag = function() {
                    return Math.sqrt(this.magSq());
                }, a.default.Vector.prototype.magSq = function() {
                    var e = this.x, t = this.y, r = this.z;
                    return e * e + t * t + r * r;
                }, a.default.Vector.prototype.dot = function(e, t, r) {
                    return e instanceof a.default.Vector ? this.dot(e.x, e.y, e.z) : this.x * (e || 0) + this.y * (t || 0) + this.z * (r || 0);
                }, a.default.Vector.prototype.cross = function(e) {
                    var t = this.y * e.z - this.z * e.y, r = this.z * e.x - this.x * e.z, e = this.x * e.y - this.y * e.x;
                    return this.isPInst ? new a.default.Vector(this._fromRadians, this._toRadians, t, r, e) : new a.default.Vector(t, r, e);
                }, a.default.Vector.prototype.dist = function(e) {
                    return e.copy().sub(this).mag();
                }, a.default.Vector.prototype.normalize = function() {
                    var e = this.mag();
                    return 0 !== e && this.mult(1 / e), this;
                }, a.default.Vector.prototype.limit = function(e) {
                    var t = this.magSq();
                    return e * e < t && this.div(Math.sqrt(t)).mult(e), this;
                }, a.default.Vector.prototype.setMag = function(e) {
                    return this.normalize().mult(e);
                }, a.default.Vector.prototype.heading = function() {
                    var e = Math.atan2(this.y, this.x);
                    return this.isPInst ? this._fromRadians(e) : e;
                }, a.default.Vector.prototype.setHeading = function(e) {
                    this.isPInst && (e = this._toRadians(e));
                    var t = this.mag();
                    return this.x = t * Math.cos(e), this.y = t * Math.sin(e), this;
                }, a.default.Vector.prototype.rotate = function(e) {
                    var e = this.heading() + e, t = (this.isPInst && (e = this._toRadians(e)), this.mag());
                    return this.x = Math.cos(e) * t, this.y = Math.sin(e) * t, this;
                }, a.default.Vector.prototype.angleBetween = function(e) {
                    var t = this.dot(e) / (this.mag() * e.mag()), t = Math.acos(Math.min(1, Math.max(-1, t)));
                    return t *= Math.sign(this.cross(e).z || 1), t = this.isPInst ? this._fromRadians(t) : t;
                }, a.default.Vector.prototype.lerp = function(e, t, r, o) {
                    return e instanceof a.default.Vector ? this.lerp(e.x, e.y, e.z, t) : (this.x += (e - this.x) * o || 0, this.y += (t - this.y) * o || 0, this.z += (r - this.z) * o || 0, this);
                }, a.default.Vector.prototype.reflect = function(e) {
                    return e.normalize(), this.sub(e.mult(2 * this.dot(e)));
                }, a.default.Vector.prototype.array = function() {
                    return [
                        this.x || 0,
                        this.y || 0,
                        this.z || 0
                    ];
                }, a.default.Vector.prototype.equals = function(e, t, r) {
                    var o, n, e = e instanceof a.default.Vector ? (o = e.x || 0, n = e.y || 0, e.z || 0) : e instanceof Array ? (o = e[0] || 0, n = e[1] || 0, e[2] || 0) : (o = e || 0, n = t || 0, r || 0);
                    return this.x === o && this.y === n && this.z === e;
                }, a.default.Vector.fromAngle = function(e, t) {
                    return new a.default.Vector((t = void 0 === t ? 1 : t) * Math.cos(e), t * Math.sin(e), 0);
                }, a.default.Vector.fromAngles = function(e, t, r) {
                    void 0 === r && (r = 1);
                    var o = Math.cos(t), t = Math.sin(t), n = Math.cos(e), e = Math.sin(e);
                    return new a.default.Vector(r * e * t, -r * n, r * e * o);
                }, a.default.Vector.random2D = function() {
                    return this.fromAngle(Math.random() * n.TWO_PI);
                }, a.default.Vector.random3D = function() {
                    var e = Math.random() * n.TWO_PI, t = 2 * Math.random() - 1, r = Math.sqrt(1 - t * t), o = r * Math.cos(e), r = r * Math.sin(e);
                    return new a.default.Vector(o, r, t);
                }, a.default.Vector.add = function(e, t, r) {
                    return r ? r.set(e) : (r = e.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.add")), r.add(t), r;
                }, a.default.Vector.rem = function(e, t) {
                    if (e instanceof a.default.Vector && t instanceof a.default.Vector) return (e = e.copy()).rem(t), e;
                }, a.default.Vector.sub = function(e, t, r) {
                    return r ? r.set(e) : (r = e.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.sub")), r.sub(t), r;
                }, a.default.Vector.mult = function(e, t, r) {
                    return r ? r.set(e) : (r = e.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.mult")), r.mult(t), r;
                }, a.default.Vector.rotate = function(e, t, r) {
                    return 2 === arguments.length ? r = e.copy() : (r instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.rotate"), r.set(e)), r.rotate(t), r;
                }, a.default.Vector.div = function(e, t, r) {
                    return r ? r.set(e) : (r = e.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.div")), r.div(t), r;
                }, a.default.Vector.dot = function(e, t) {
                    return e.dot(t);
                }, a.default.Vector.cross = function(e, t) {
                    return e.cross(t);
                }, a.default.Vector.dist = function(e, t) {
                    return e.dist(t);
                }, a.default.Vector.lerp = function(e, t, r, o) {
                    return o ? o.set(e) : (o = e.copy(), 4 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.lerp")), o.lerp(t, r), o;
                }, a.default.Vector.mag = function(e) {
                    var t = e.x, r = e.y, e = e.z;
                    return Math.sqrt(t * t + r * r + e * e);
                }, a.default.Vector.normalize = function(e, t) {
                    return arguments.length < 2 ? t = e.copy() : (t instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.normalize"), t.set(e)), t.normalize();
                };
                var s = a.default.Vector;
                r.default = s;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.every": 151,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.array.some": 163,
                "core-js/modules/es.math.sign": 168,
                "core-js/modules/es.number.constructor": 169,
                "core-js/modules/es.number.is-finite": 170,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.sub": 192,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        301: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                var s = "_lcg_random_state", o = 4294967296, i = 0, e = (n.default.prototype._lcg = function(e) {
                    return this[e] = (1664525 * this[e] + 1013904223) % o, this[e] / o;
                }, n.default.prototype._lcgSetSeed = function(e, t) {
                    this[e] = (null == t ? Math.random() * o : t) >>> 0;
                }, n.default.prototype.randomSeed = function(e) {
                    this._lcgSetSeed(s, e), this._gaussian_previous = !1;
                }, n.default.prototype.random = function(e, t) {
                    var r, o;
                    return n.default._validateParameters("random", arguments), r = null != this[s] ? this._lcg(s) : Math.random(), void 0 === e ? r : void 0 === t ? e instanceof Array ? e[Math.floor(r * e.length)] : r * e : (t < e && (o = e, e = t, t = o), r * (t - e) + e);
                }, n.default.prototype.randomGaussian = function(e) {
                    var t, r, o, n, s = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 1;
                    if (this._gaussian_previous) t = i, this._gaussian_previous = !1;
                    else {
                        for(; 1 <= (n = (r = this.random(2) - 1) * r + (o = this.random(2) - 1) * o););
                        t = r * (n = Math.sqrt(-2 * Math.log(n) / n)), i = o * n, this._gaussian_previous = !0;
                    }
                    return t * s + (e || 0);
                }, n.default);
                r.default = e;
            },
            {
                "../core/main": 267
            }
        ],
        302: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (l = e("../core/main")) && l.__esModule ? l : {
                    default: l
                }, s = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                n.default.prototype._angleMode = s.RADIANS, n.default.prototype.acos = function(e) {
                    return this._fromRadians(Math.acos(e));
                }, n.default.prototype.asin = function(e) {
                    return this._fromRadians(Math.asin(e));
                }, n.default.prototype.atan = function(e) {
                    return this._fromRadians(Math.atan(e));
                }, n.default.prototype.atan2 = function(e, t) {
                    return this._fromRadians(Math.atan2(e, t));
                }, n.default.prototype.cos = function(e) {
                    return Math.cos(this._toRadians(e));
                }, n.default.prototype.sin = function(e) {
                    return Math.sin(this._toRadians(e));
                }, n.default.prototype.tan = function(e) {
                    return Math.tan(this._toRadians(e));
                }, n.default.prototype.degrees = function(e) {
                    return e * s.RAD_TO_DEG;
                }, n.default.prototype.radians = function(e) {
                    return e * s.DEG_TO_RAD;
                }, n.default.prototype.angleMode = function(e) {
                    if (n.default._validateParameters("angleMode", arguments), void 0 === e) return this._angleMode;
                    e !== s.DEGREES && e !== s.RADIANS || (this._angleMode = e);
                }, n.default.prototype._toRadians = function(e) {
                    return this._angleMode === s.DEGREES ? e * s.DEG_TO_RAD : e;
                }, n.default.prototype._toDegrees = function(e) {
                    return this._angleMode === s.RADIANS ? e * s.RAD_TO_DEG : e;
                }, n.default.prototype._fromRadians = function(e) {
                    return this._angleMode === s.DEGREES ? e * s.RAD_TO_DEG : e;
                };
                var l = n.default;
                r.default = l;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        303: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                n.default.prototype.textAlign = function(e, t) {
                    var r;
                    return n.default._validateParameters("textAlign", arguments), (r = this._renderer).textAlign.apply(r, arguments);
                }, n.default.prototype.textLeading = function(e) {
                    var t;
                    return n.default._validateParameters("textLeading", arguments), (t = this._renderer).textLeading.apply(t, arguments);
                }, n.default.prototype.textSize = function(e) {
                    var t;
                    return n.default._validateParameters("textSize", arguments), (t = this._renderer).textSize.apply(t, arguments);
                }, n.default.prototype.textStyle = function(e) {
                    var t;
                    return n.default._validateParameters("textStyle", arguments), (t = this._renderer).textStyle.apply(t, arguments);
                }, n.default.prototype.textWidth = function() {
                    for(var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return r[0] += "", n.default._validateParameters("textWidth", r), 0 === r[0].length ? 0 : (e = this._renderer).textWidth.apply(e, r);
                }, n.default.prototype.textAscent = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    return n.default._validateParameters("textAscent", t), this._renderer.textAscent();
                }, n.default.prototype.textDescent = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    return n.default._validateParameters("textDescent", t), this._renderer.textDescent();
                }, n.default.prototype._updateTextMetrics = function() {
                    return this._renderer._updateTextMetrics();
                }, n.default.prototype.textWrap = function(e) {
                    if ("WORD" !== e && "CHAR" !== e) throw "Error: textWrap accepts only WORD or CHAR";
                    return this._renderer.textWrap(e);
                };
                e = n.default;
                r.default = e;
            },
            {
                "../core/main": 267
            }
        ],
        304: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.last-index-of"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.split"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.last-index-of"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = (c = e("../core/main")) && c.__esModule ? c : {
                    default: c
                }, n = s(e("../core/constants")), u = s(e("opentype.js"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                function s(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o, n = {}, s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e)Object.prototype.hasOwnProperty.call(e, r) && ((o = s ? Object.getOwnPropertyDescriptor(e, r) : null) && (o.get || o.set) ? Object.defineProperty(n, r, o) : n[r] = e[r]);
                    return n.default = e, t && t.set(e, n), n;
                }
                e("../core/friendly_errors/validate_params"), e("../core/friendly_errors/file_errors"), e("../core/friendly_errors/fes_core"), l.default.prototype.loadFont = function(o, n, s) {
                    l.default._validateParameters("loadFont", arguments);
                    var i = new l.default.Font(this), a = this;
                    return u.load(o, function(e, t) {
                        if (e) return l.default._friendlyFileLoadError(4, o), void 0 !== s ? s(e) : void console.error(e, o);
                        i.font = t, void 0 !== n && n(i), a._decrementPreload();
                        var e = o.split("\\").pop().split("/").pop(), t = e.lastIndexOf("."), r = t < 1 ? null : e.slice(t + 1);
                        [
                            "ttf",
                            "otf",
                            "woff",
                            "woff2"
                        ].includes(r) && (r = e.slice(0, -1 !== t ? t : 0), (e = document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(r, ";\nsrc: url(").concat(o, ");\n}\n"))), document.head.appendChild(e));
                    }), i;
                }, l.default.prototype.text = function(e, t, r, o, n) {
                    var s;
                    return l.default._validateParameters("text", arguments), this._renderer._doFill || this._renderer._doStroke ? (s = this._renderer).text.apply(s, arguments) : this;
                }, l.default.prototype.textFont = function(e, t) {
                    if (l.default._validateParameters("textFont", arguments), arguments.length) {
                        if (e) return this._renderer._setProperty("_textFont", e), t && (this._renderer._setProperty("_textSize", t), this._renderer._leadingSet || this._renderer._setProperty("_textLeading", t * n._DEFAULT_LEADMULT)), this._renderer._applyTextProperties();
                        throw new Error("null font passed to textFont");
                    }
                    return this._renderer._textFont;
                };
                var c = l.default;
                r.default = c;
            },
            {
                "../core/constants": 256,
                "../core/friendly_errors/fes_core": 258,
                "../core/friendly_errors/file_errors": 259,
                "../core/friendly_errors/validate_params": 262,
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.last-index-of": 160,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230,
                "opentype.js": 241
            }
        ],
        305: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.number.to-fixed"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.split"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.number.to-fixed"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.split"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (n = e("../core/main")) && n.__esModule ? n : {
                    default: n
                }, v = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== p(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = i();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function i() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, i = function() {
                        return e;
                    }, e);
                }
                function p(e) {
                    return (p = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                function m(e, t) {
                    var r = e.length;
                    return e[t < 0 ? t % r + r : t % r];
                }
                function y(e, t, r, o) {
                    var n, s, i;
                    return o ? (void 0 === y.tmpPoint1 && (y.tmpPoint1 = [], y.tmpPoint2 = []), s = y.tmpPoint1, i = y.tmpPoint2, s.x = t.x - e.x, s.y = t.y - e.y, i.x = r.x - t.x, i.y = r.y - t.y, n = s.x * i.x + s.y * i.y, s = Math.sqrt(s.x * s.x + s.y * s.y), i = Math.sqrt(i.x * i.x + i.y * i.y), Math.acos(n / (s * i)) < o) : 0 == (t[0] - e[0]) * (r[1] - e[1]) - (r[0] - e[0]) * (t[1] - e[1]);
                }
                function d(e, t, r, o, n, s, i, a, l) {
                    var u = 1 - l, c = Math.pow(u, 3), d = Math.pow(u, 2), f = l * l, h = f * l, p = c * e + 3 * d * l * r + 3 * u * l * l * n + h * i, c = c * t + 3 * d * l * o + 3 * u * l * l * s + h * a, d = e + 2 * l * (r - e) + f * (n - 2 * r + e), h = t + 2 * l * (o - t) + f * (s - 2 * o + t), m = r + 2 * l * (n - r) + f * (i - 2 * n + r), f = o + 2 * l * (s - o) + f * (a - 2 * s + o), e = u * e + l * r, r = u * t + l * o, t = u * n + l * i, o = u * s + l * a, n = 90 - 180 * Math.atan2(d - m, h - f) / Math.PI;
                    return (m < d || h < f) && (n += 180), {
                        x: p,
                        y: c,
                        m: {
                            x: d,
                            y: h
                        },
                        n: {
                            x: m,
                            y: f
                        },
                        start: {
                            x: e,
                            y: r
                        },
                        end: {
                            x: t,
                            y: o
                        },
                        alpha: n
                    };
                }
                function f(e, t, r, o, n, s, i, a, l) {
                    return null == l ? h(e, t, r, o, n, s, i, a) : d(e, t, r, o, n, s, i, a, function(e, t, r, o, n, s, i, a, l) {
                        if (!(l < 0 || h(e, t, r, o, n, s, i, a) < l)) {
                            var u, c = .5, d = 1 - c;
                            for(u = h(e, t, r, o, n, s, i, a, d); .01 < Math.abs(u - l);)u = h(e, t, r, o, n, s, i, a, d += (u < l ? 1 : -1) * (c /= 2));
                            return d;
                        }
                    }(e, t, r, o, n, s, i, a, l));
                }
                function g(e, t, r) {
                    for(var o, n, s, i, a, l = 0, u = 0, c = (e = function(e, t) {
                        function r(e, t, r) {
                            var o, n;
                            if (!e) return [
                                "C",
                                t.x,
                                t.y,
                                t.x,
                                t.y,
                                t.x,
                                t.y
                            ];
                            switch((e[0] in {
                                T: 1,
                                Q: 1
                            }) || (t.qx = t.qy = null), e[0]){
                                case "M":
                                    t.X = e[1], t.Y = e[2];
                                    break;
                                case "A":
                                    e = [
                                        "C"
                                    ].concat(E.apply(0, [
                                        t.x,
                                        t.y
                                    ].concat(e.slice(1))));
                                    break;
                                case "S":
                                    n = "C" === r || "S" === r ? (o = 2 * t.x - t.bx, 2 * t.y - t.by) : (o = t.x, t.y), e = [
                                        "C",
                                        o,
                                        n
                                    ].concat(e.slice(1));
                                    break;
                                case "T":
                                    "Q" === r || "T" === r ? (t.qx = 2 * t.x - t.qx, t.qy = 2 * t.y - t.qy) : (t.qx = t.x, t.qy = t.y), e = [
                                        "C"
                                    ].concat(x(t.x, t.y, t.qx, t.qy, e[1], e[2]));
                                    break;
                                case "Q":
                                    t.qx = e[1], t.qy = e[2], e = [
                                        "C"
                                    ].concat(x(t.x, t.y, e[1], e[2], e[3], e[4]));
                                    break;
                                case "L":
                                    e = [
                                        "C"
                                    ].concat(_(t.x, t.y, e[1], e[2]));
                                    break;
                                case "H":
                                    e = [
                                        "C"
                                    ].concat(_(t.x, t.y, e[1], t.y));
                                    break;
                                case "V":
                                    e = [
                                        "C"
                                    ].concat(_(t.x, t.y, t.x, e[1]));
                                    break;
                                case "Z":
                                    e = [
                                        "C"
                                    ].concat(_(t.x, t.y, t.X, t.Y));
                            }
                            return e;
                        }
                        function o(e, t) {
                            if (7 < e[t].length) {
                                e[t].shift();
                                for(var r = e[t]; r.length;)c[t] = "A", a && (d[t] = "A"), e.splice(t++, 0, [
                                    "C"
                                ].concat(r.splice(0, 6)));
                                e.splice(t, 1), s = Math.max(i.length, a && a.length || 0);
                            }
                        }
                        function n(e, t, r, o, n) {
                            e && t && "M" === e[n][0] && "M" !== t[n][0] && (t.splice(n, 0, [
                                "M",
                                o.x,
                                o.y
                            ]), r.bx = 0, r.by = 0, r.x = e[n][1], r.y = e[n][2], s = Math.max(i.length, a && a.length || 0));
                        }
                        var s, i = b(e), a = t && b(t), l = {
                            x: 0,
                            y: 0,
                            bx: 0,
                            by: 0,
                            X: 0,
                            Y: 0,
                            qx: null,
                            qy: null
                        }, u = {
                            x: 0,
                            y: 0,
                            bx: 0,
                            by: 0,
                            X: 0,
                            Y: 0,
                            qx: null,
                            qy: null
                        }, c = [], d = [], f = "", h = "";
                        s = Math.max(i.length, a && a.length || 0);
                        for(var p = 0; p < s; p++){
                            "C" !== (f = i[p] ? i[p][0] : f) && (c[p] = f, p && (h = c[p - 1])), i[p] = r(i[p], l, h), "A" !== c[p] && "C" === f && (c[p] = "C"), o(i, p), a && ("C" !== (f = a[p] ? a[p][0] : f) && (d[p] = f, p && (h = d[p - 1])), a[p] = r(a[p], u, h), "A" !== d[p] && "C" === f && (d[p] = "C"), o(a, p)), n(i, a, l, u, p), n(a, i, u, l, p);
                            var m = i[p], y = a && a[p], g = m.length, v = a && y.length;
                            l.x = m[g - 2], l.y = m[g - 1], l.bx = parseFloat(m[g - 4]) || l.x, l.by = parseFloat(m[g - 3]) || l.y, u.bx = a && (parseFloat(y[v - 4]) || u.x), u.by = a && (parseFloat(y[v - 3]) || u.y), u.x = a && y[v - 2], u.y = a && y[v - 1];
                        }
                        return a ? [
                            i,
                            a
                        ] : i;
                    }(e)).length; u < c; u++){
                        if ("M" === (s = e[u])[0]) o = +s[1], n = +s[2];
                        else {
                            if (t < l + (i = f(o, n, s[1], s[2], s[3], s[4], s[5], s[6])) && !r) return {
                                x: (a = f(o, n, s[1], s[2], s[3], s[4], s[5], s[6], t - l)).x,
                                y: a.y,
                                alpha: a.alpha
                            };
                            l += i, o = +s[5], n = +s[6];
                        }
                        s.shift();
                    }
                    return a = (a = r ? l : d(o, n, s[0], s[1], s[2], s[3], s[4], s[5], 1)).alpha ? {
                        x: a.x,
                        y: a.y,
                        alpha: a.alpha
                    } : a;
                }
                function b(e) {
                    var t = [], r = 0, o = 0, n = 0, s = 0, i = 0;
                    if (e) {
                        "M" === e[0][0] && (n = r = +e[0][1], s = o = +e[0][2], i++, t[0] = [
                            "M",
                            r,
                            o
                        ]);
                        for(var a, l, u = 3 === e.length && "M" === e[0][0] && "R" === e[1][0].toUpperCase() && "Z" === e[2][0].toUpperCase(), c = i, d = e.length; c < d; c++){
                            if (t.push(a = []), (l = e[c])[0] !== String.prototype.toUpperCase.call(l[0])) switch(a[0] = String.prototype.toUpperCase.call(l[0]), a[0]){
                                case "A":
                                    a[1] = l[1], a[2] = l[2], a[3] = l[3], a[4] = l[4], a[5] = l[5], a[6] = +(l[6] + r), a[7] = +(l[7] + o);
                                    break;
                                case "V":
                                    a[1] = +l[1] + o;
                                    break;
                                case "H":
                                    a[1] = +l[1] + r;
                                    break;
                                case "R":
                                    for(var f, h = 2, p = (f = [
                                        r,
                                        o
                                    ].concat(l.slice(1))).length; h < p; h++)f[h] = +f[h] + r, f[++h] = +f[h] + o;
                                    t.pop(), t = t.concat(j(f, u));
                                    break;
                                case "M":
                                    n = +l[1] + r, s = +l[2] + o;
                                    break;
                                default:
                                    for(var m = 1, y = l.length; m < y; m++)a[m] = +l[m] + (m % 2 ? r : o);
                            }
                            else if ("R" === l[0]) f = [
                                r,
                                o
                            ].concat(l.slice(1)), t.pop(), t = t.concat(j(f, u)), a = [
                                "R"
                            ].concat(l.slice(-2));
                            else for(var g = 0, v = l.length; g < v; g++)a[g] = l[g];
                            switch(a[0]){
                                case "Z":
                                    r = n, o = s;
                                    break;
                                case "H":
                                    r = a[1];
                                    break;
                                case "V":
                                    o = a[1];
                                    break;
                                case "M":
                                    n = a[a.length - 2], s = a[a.length - 1];
                                    break;
                                default:
                                    r = a[a.length - 2], o = a[a.length - 1];
                            }
                        }
                    }
                    return t;
                }
                function E(e, t, r, o, n, s, i, a, l, u) {
                    function c(e, t, r) {
                        return {
                            x: e * Math.cos(r) - t * Math.sin(r),
                            y: e * Math.sin(r) + t * Math.cos(r)
                        };
                    }
                    var d, f = Math.PI, h = 120 * f / 180, p = f / 180 * (+n || 0), m = [], y = (u ? (x = u[0], d = u[1], j = u[2], _ = u[3]) : (e = (v = c(e, t, -p)).x, t = v.y, 1 < (y = (g = (e - (a = (v = c(a, l, -p)).x)) / 2) * g / (r * r) + (v = (t - (l = v.y)) / 2) * v / (o * o)) && (r *= y = Math.sqrt(y), o *= y), y = r * r, b = o * o, j = (s = (s === i ? -1 : 1) * Math.sqrt(Math.abs((y * b - y * v * v - b * g * g) / (y * v * v + b * g * g)))) * r * v / o + (e + a) / 2, _ = s * -o * g / r + (t + l) / 2, x = Math.asin(((t - _) / o).toFixed(9)), d = Math.asin(((l - _) / o).toFixed(9)), (x = e < j ? f - x : x) < 0 && (x = 2 * f + x), (d = a < j ? f - d : d) < 0 && (d = 2 * f + d), i && d < x && (x -= 2 * f), !i && x < d && (d -= 2 * f)), d - x), g = (Math.abs(y) > h && (b = d, v = a, s = l, d = x + h * (i && x < d ? 1 : -1), m = E(a = j + r * Math.cos(d), l = _ + o * Math.sin(d), r, o, n, 0, i, v, s, [
                        d,
                        b,
                        j,
                        _
                    ])), y = d - x, Math.cos(x)), f = Math.sin(x), h = Math.cos(d), n = Math.sin(d), i = Math.tan(y / 4), v = 4 / 3 * r * i, s = 4 / 3 * o * i, b = [
                        e,
                        t
                    ], j = [
                        e + v * f,
                        t - s * g
                    ], _ = [
                        a + v * n,
                        l - s * h
                    ], x = [
                        a,
                        l
                    ];
                    if (j[0] = 2 * b[0] - j[0], j[1] = 2 * b[1] - j[1], u) return [
                        j,
                        _,
                        x
                    ].concat(m);
                    for(var w = [], S = 0, M = (m = [
                        j,
                        _,
                        x
                    ].concat(m).join().split(",")).length; S < M; S++)w[S] = S % 2 ? c(m[S - 1], m[S], p).y : c(m[S], m[S + 1], p).x;
                    return w;
                }
                function j(e, t) {
                    for(var r = [], o = 0, n = e.length; o < n - 2 * !t; o += 2){
                        var s = [
                            {
                                x: +e[o - 2],
                                y: +e[o - 1]
                            },
                            {
                                x: +e[o],
                                y: +e[o + 1]
                            },
                            {
                                x: +e[o + 2],
                                y: +e[o + 3]
                            },
                            {
                                x: +e[o + 4],
                                y: +e[o + 5]
                            }
                        ];
                        t ? o ? n - 4 === o ? s[3] = {
                            x: +e[0],
                            y: +e[1]
                        } : n - 2 === o && (s[2] = {
                            x: +e[0],
                            y: +e[1]
                        }, s[3] = {
                            x: +e[2],
                            y: +e[3]
                        }) : s[0] = {
                            x: +e[n - 2],
                            y: +e[n - 1]
                        } : n - 4 === o ? s[3] = s[2] : o || (s[0] = {
                            x: +e[o],
                            y: +e[o + 1]
                        }), r.push([
                            "C",
                            (-s[0].x + 6 * s[1].x + s[2].x) / 6,
                            (-s[0].y + 6 * s[1].y + s[2].y) / 6,
                            (s[1].x + 6 * s[2].x - s[3].x) / 6,
                            (s[1].y + 6 * s[2].y - s[3].y) / 6,
                            s[2].x,
                            s[2].y
                        ]);
                    }
                    return r;
                }
                function _(e, t, r, o) {
                    return [
                        e,
                        t,
                        r,
                        o,
                        r,
                        o
                    ];
                }
                function x(e, t, r, o, n, s) {
                    return [
                        1 / 3 * e + 2 / 3 * r,
                        1 / 3 * t + 2 / 3 * o,
                        1 / 3 * n + 2 / 3 * r,
                        1 / 3 * s + 2 / 3 * o,
                        n,
                        s
                    ];
                }
                function h(e, t, r, o, n, s, i, a, l) {
                    for(var u = (l = 1 < (l = null == l ? 1 : l) ? 1 : l < 0 ? 0 : l) / 2, c = [
                        -0.1252,
                        .1252,
                        -0.3678,
                        .3678,
                        -0.5873,
                        .5873,
                        -0.7699,
                        .7699,
                        -0.9041,
                        .9041,
                        -0.9816,
                        .9816
                    ], d = 0, f = [
                        .2491,
                        .2491,
                        .2335,
                        .2335,
                        .2032,
                        .2032,
                        .1601,
                        .1601,
                        .1069,
                        .1069,
                        .0472,
                        .0472
                    ], h = 0; h < 12; h++){
                        var p = u * c[h] + u, m = w(p, e, r, n, i), p = w(p, t, o, s, a);
                        d += f[h] * Math.sqrt(m * m + p * p);
                    }
                    return u * d;
                }
                function w(e, t, r, o, n) {
                    return e * (e * (-3 * t + 9 * r - 9 * o + 3 * n) + 6 * t - 12 * r + 6 * o) - 3 * t + 3 * r;
                }
                n.default.Font = function(e) {
                    this.parent = e, this.cache = {}, this.font = void 0;
                }, n.default.Font.prototype.textBounds = function(e) {
                    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0, o = 3 < arguments.length ? arguments[3] : void 0, n = 4 < arguments.length ? arguments[4] : void 0, s = n && n.renderer && n.renderer._pInst || this.parent, i = s._renderer.drawingContext, o = (i.textAlign || v.LEFT, i.textBaseline || v.BASELINE, o || s._renderer._textSize);
                    if (!g) {
                        for(var a = [], l = [], u = [], c = (u[0] = [], []), d = this._scale(o), f = s._renderer.textLeading(), h = 0, p = (this.font.forEachGlyph(e, t, r, o, n, function(e, t, r, o) {
                            var n = e.getMetrics();
                            0 === e.index || 10 === e.index ? u[h += 1] = [] : (u[h].push(t + n.xMin * d), u[h].push(t + n.xMax * d), c.push(r + h * f + -n.yMin * d), c.push(r + h * f + -n.yMax * d));
                        }), 0 < u[h].length && (a[h] = Math.min.apply(null, u[h]), l[h] = Math.max.apply(null, u[h])), 0), m = 0; m <= h; m++){
                            a[m] = Math.min.apply(null, u[m]), l[m] = Math.max.apply(null, u[m]);
                            var y = l[m] - a[m];
                            p < y && (p = y);
                        }
                        var i = Math.min.apply(null, a), g = {
                            x: i,
                            y: r = Math.min.apply(null, c),
                            h: Math.max.apply(null, c) - r,
                            w: p,
                            advance: i - t
                        }, o = this._handleAlignment(s._renderer, e, g.x, g.y, g.w + g.advance);
                        g.x = o.x, g.y = o.y;
                    }
                    return g;
                }, n.default.Font.prototype.textToPoints = function(e, t, r, o, n) {
                    var s = 0, i = [], a = this._getGlyphs(e);
                    o = o || this.parent._renderer._textSize;
                    for(var l, u = 0; u < a.length; u++){
                        if (!(a[l = u].name && "space" === a[l].name || e.length === a.length && " " === e[l])) for(var c = function(e) {
                            for(var t, r = [], o = 0; o < e.length; o++)"M" === e[o].type && (t && r.push(t), t = []), t.push(function(e) {
                                var t = [
                                    e.type
                                ];
                                "M" === e.type || "L" === e.type ? t.push(e.x, e.y) : "C" === e.type ? t.push(e.x1, e.y1, e.x2, e.y2, e.x, e.y) : "Q" === e.type && t.push(e.x1, e.y1, e.x, e.y);
                                return t;
                            }(e[o]));
                            return r.push(t), r;
                        }(a[u].getPath(t, r, o).commands), d = 0; d < c.length; d++)for(var f = function(e, t) {
                            for(var t = function(e, t) {
                                if ("object" !== p(e)) e = t;
                                else for(var r in t)void 0 === e[r] && (e[r] = t[r]);
                                return e;
                            }(t, {
                                sampleFactor: .1,
                                simplifyThreshold: 0
                            }), r = g(e, 0, 1), o = r / (r * t.sampleFactor), n = [], s = 0; s < r; s += o)n.push(g(e, s));
                            t.simplifyThreshold && !function(e) {
                                for(var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r = 0, o = e.length - 1; 3 < e.length && 0 <= o; --o)y(m(e, o - 1), m(e, o), m(e, o + 1), t) && (e.splice(o % e.length, 1), r++);
                            }(n, t.simplifyThreshold);
                            return n;
                        }(c[d], n), h = 0; h < f.length; h++)f[h].x += s, i.push(f[h]);
                        s += a[u].advanceWidth * this._scale(o);
                    }
                    return i;
                }, n.default.Font.prototype._getGlyphs = function(e) {
                    return this.font.stringToGlyphs(e);
                }, n.default.Font.prototype._getPath = function(e, t, r, o) {
                    var n = (o && o.renderer && o.renderer._pInst || this.parent)._renderer, t = this._handleAlignment(n, e, t, r);
                    return this.font.getPath(e, t.x, t.y, n._textSize, o);
                }, n.default.Font.prototype._getPathData = function(e, t, r, o) {
                    var n = 3;
                    return "string" == typeof e && 2 < arguments.length ? e = this._getPath(e, t, r, o) : "object" === p(t) && (o = t), o && "number" == typeof o.decimals && (n = o.decimals), e.toPathData(n);
                }, n.default.Font.prototype._getSVG = function(e, t, r, o) {
                    var n = 3;
                    return "string" == typeof e && 2 < arguments.length ? e = this._getPath(e, t, r, o) : "object" === p(t) && (o = t), o && ("number" == typeof o.decimals && (n = o.decimals), "number" == typeof o.strokeWidth && (e.strokeWidth = o.strokeWidth), void 0 !== o.fill && (e.fill = o.fill), void 0 !== o.stroke && (e.stroke = o.stroke)), e.toSVG(n);
                }, n.default.Font.prototype._renderPath = function(e, t, r, o) {
                    var n = o && o.renderer || this.parent._renderer, s = n.drawingContext, e = ("object" === p(e) && e.commands ? e : this._getPath(e, t, r, o)).commands, i = (s.beginPath(), !0), t = !1, r = void 0;
                    try {
                        for(var a, l = e[Symbol.iterator](); !(i = (a = l.next()).done); i = !0){
                            var u = a.value;
                            "M" === u.type ? s.moveTo(u.x, u.y) : "L" === u.type ? s.lineTo(u.x, u.y) : "C" === u.type ? s.bezierCurveTo(u.x1, u.y1, u.x2, u.y2, u.x, u.y) : "Q" === u.type ? s.quadraticCurveTo(u.x1, u.y1, u.x, u.y) : "Z" === u.type && s.closePath();
                        }
                    } catch (e) {
                        t = !0, r = e;
                    } finally{
                        try {
                            i || null == l.return || l.return();
                        } finally{
                            if (t) throw r;
                        }
                    }
                    return n._doStroke && n._strokeSet && s.stroke(), n._doFill && (n._fillSet || n._setFill(v._DEFAULT_TEXT_FILL), s.fill()), this;
                }, n.default.Font.prototype._textWidth = function(e, t) {
                    return this.font.getAdvanceWidth(e, t);
                }, n.default.Font.prototype._textAscent = function(e) {
                    return this.font.ascender * this._scale(e);
                }, n.default.Font.prototype._textDescent = function(e) {
                    return -this.font.descender * this._scale(e);
                }, n.default.Font.prototype._scale = function(e) {
                    return 1 / this.font.unitsPerEm * (e || this.parent._renderer._textSize);
                }, n.default.Font.prototype._handleAlignment = function(e, t, r, o, n) {
                    var s = e._textSize;
                    switch(void 0 === n && (n = this._textWidth(t, s)), e._textAlign){
                        case v.CENTER:
                            r -= n / 2;
                            break;
                        case v.RIGHT:
                            r -= n;
                    }
                    switch(e._textBaseline){
                        case v.TOP:
                            o += this._textAscent(s);
                            break;
                        case v.CENTER:
                            o += this._textAscent(s) / 2;
                            break;
                        case v.BOTTOM:
                            o -= this._textDescent(s);
                    }
                    return {
                        x: r,
                        y: o
                    };
                };
                e = n.default;
                r.default = e;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.fill": 152,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.array.splice": 164,
                "core-js/modules/es.function.name": 165,
                "core-js/modules/es.number.to-fixed": 171,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        306: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.array-buffer.constructor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.array-buffer.constructor"), e("core-js/modules/es.object.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                e.default.prototype.append = function(e, t) {
                    return e.push(t), e;
                }, e.default.prototype.arrayCopy = function(e, t, r, o, n) {
                    var s, i;
                    e = void 0 !== n ? (i = Math.min(n, e.length), s = o, e.slice(t, i + t)) : (i = void 0 !== r ? (i = r, Math.min(i, e.length)) : e.length, r = t, e.slice(s = 0, i)), Array.prototype.splice.apply(r, [
                        s,
                        i
                    ].concat(e));
                }, e.default.prototype.concat = function(e, t) {
                    return e.concat(t);
                }, e.default.prototype.reverse = function(e) {
                    return e.reverse();
                }, e.default.prototype.shorten = function(e) {
                    return e.pop(), e;
                }, e.default.prototype.shuffle = function(e, t) {
                    for(var r, o, n = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(e), s = (e = t || n ? e : e.slice()).length; 1 < s;)r = this.random(0, 1) * s | 0, o = e[--s], e[s] = e[r], e[r] = o;
                    return e;
                }, e.default.prototype.sort = function(e, t) {
                    var r = t ? e.slice(0, Math.min(t, e.length)) : e, t = t ? e.slice(Math.min(t, e.length)) : [];
                    return (r = "string" == typeof r[0] ? r.sort() : r.sort(function(e, t) {
                        return e - t;
                    })).concat(t);
                }, e.default.prototype.splice = function(e, t, r) {
                    return Array.prototype.splice.apply(e, [
                        r,
                        0
                    ].concat(t)), e;
                }, e.default.prototype.subset = function(e, t, r) {
                    return void 0 !== r ? e.slice(t, t + r) : e.slice(t, e.length);
                };
                e = e.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array-buffer.constructor": 148,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.array.splice": 164,
                "core-js/modules/es.object.to-string": 177
            }
        ],
        307: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.map"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.repeat"), e("core-js/modules/es.array.map"), e("core-js/modules/es.number.constructor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.repeat"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var o = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                o.default.prototype.float = function(e) {
                    return e instanceof Array ? e.map(parseFloat) : parseFloat(e);
                }, o.default.prototype.int = function(e) {
                    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 10;
                    return e === 1 / 0 || "Infinity" === e ? 1 / 0 : e === -1 / 0 || "-Infinity" === e ? -1 / 0 : "string" == typeof e ? parseInt(e, t) : "number" == typeof e ? 0 | e : "boolean" == typeof e ? e ? 1 : 0 : e instanceof Array ? e.map(function(e) {
                        return o.default.prototype.int(e, t);
                    }) : void 0;
                }, o.default.prototype.str = function(e) {
                    return e instanceof Array ? e.map(o.default.prototype.str) : String(e);
                }, o.default.prototype.boolean = function(e) {
                    return "number" == typeof e ? 0 !== e : "string" == typeof e ? "true" === e.toLowerCase() : "boolean" == typeof e ? e : e instanceof Array ? e.map(o.default.prototype.boolean) : void 0;
                }, o.default.prototype.byte = function(e) {
                    e = o.default.prototype.int(e, 10);
                    return "number" == typeof e ? (e + 128) % 256 - 128 : e instanceof Array ? e.map(o.default.prototype.byte) : void 0;
                }, o.default.prototype.char = function(e) {
                    return "number" != typeof e || isNaN(e) ? e instanceof Array ? e.map(o.default.prototype.char) : "string" == typeof e ? o.default.prototype.char(parseInt(e, 10)) : void 0 : String.fromCharCode(e);
                }, o.default.prototype.unchar = function(e) {
                    return "string" == typeof e && 1 === e.length ? e.charCodeAt(0) : e instanceof Array ? e.map(o.default.prototype.unchar) : void 0;
                }, o.default.prototype.hex = function(e, t) {
                    if (t = null == t ? 8 : t, e instanceof Array) return e.map(function(e) {
                        return o.default.prototype.hex(e, t);
                    });
                    if (e === 1 / 0 || e === -1 / 0) return (e === 1 / 0 ? "F" : "0").repeat(t);
                    if ("number" == typeof e) {
                        e < 0 && (e = 4294967295 + e + 1);
                        for(var r = Number(e).toString(16).toUpperCase(); r.length < t;)r = "0".concat(r);
                        return r = r.length >= t ? r.substring(r.length - t, r.length) : r;
                    }
                }, o.default.prototype.unhex = function(e) {
                    return e instanceof Array ? e.map(o.default.prototype.unhex) : parseInt("0x".concat(e), 16);
                };
                e = o.default;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.number.constructor": 169,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.repeat": 188
            }
        ],
        308: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.constructor"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.match"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.trim"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.join"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.constructor"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.match"), e("core-js/modules/es.string.replace"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.trim"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (l = e("../core/main")) && l.__esModule ? l : {
                    default: l
                };
                function o(e, t, r) {
                    var o = e < 0, e = o ? e.toString().substring(1) : e.toString(), n = e.indexOf("."), s = -1 !== n ? e.substring(0, n) : e, i = -1 !== n ? e.substring(n + 1) : "", a = o ? "-" : "";
                    if (void 0 !== r) {
                        o = "";
                        (-1 !== n || 0 < r - i.length) && (o = "."), i.length > r && (i = i.substring(0, r));
                        for(var l = 0; l < t - s.length; l++)a += "0";
                        for(var a = (a += s) + o + i, u = 0; u < r - i.length; u++)a += "0";
                        return a;
                    }
                    for(var c = 0; c < Math.max(t - s.length, 0); c++)a += "0";
                    return a += e;
                }
                function n(e, t) {
                    var r = (e = e.toString()).indexOf("."), o = -1 !== r ? e.substring(r) : "", e = (e = -1 !== r ? e.substring(0, r) : e).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    if (0 === t) o = "";
                    else if (void 0 !== t) {
                        if (t > o.length) for(var n = t - (o += -1 === r ? "." : "").length + 1, s = 0; s < n; s++)o += "0";
                        else o = o.substring(0, t + 1);
                    }
                    return e + o;
                }
                function i(e) {
                    return 0 < parseFloat(e) ? "+".concat(e.toString()) : e.toString();
                }
                function a(e) {
                    return 0 <= parseFloat(e) ? " ".concat(e.toString()) : e.toString();
                }
                e("../core/friendly_errors/validate_params"), e("../core/friendly_errors/file_errors"), e("../core/friendly_errors/fes_core"), s.default.prototype.join = function(e, t) {
                    return s.default._validateParameters("join", arguments), e.join(t);
                }, s.default.prototype.match = function(e, t) {
                    return s.default._validateParameters("match", arguments), e.match(t);
                }, s.default.prototype.matchAll = function(e, t) {
                    s.default._validateParameters("matchAll", arguments);
                    for(var r = new RegExp(t, "g"), o = r.exec(e), n = []; null !== o;)n.push(o), o = r.exec(e);
                    return n;
                }, s.default.prototype.nf = function(e, t, r) {
                    return s.default._validateParameters("nf", arguments), e instanceof Array ? e.map(function(e) {
                        return o(e, t, r);
                    }) : "[object Arguments]" === Object.prototype.toString.call(e) ? 3 === e.length ? this.nf(e[0], e[1], e[2]) : 2 === e.length ? this.nf(e[0], e[1]) : this.nf(e[0]) : o(e, t, r);
                }, s.default.prototype.nfc = function(e, t) {
                    return s.default._validateParameters("nfc", arguments), e instanceof Array ? e.map(function(e) {
                        return n(e, t);
                    }) : n(e, t);
                }, s.default.prototype.nfp = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    s.default._validateParameters("nfp", t);
                    var o = s.default.prototype.nf.apply(this, t);
                    return o instanceof Array ? o.map(i) : i(o);
                }, s.default.prototype.nfs = function() {
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    s.default._validateParameters("nfs", t);
                    var o = s.default.prototype.nf.apply(this, t);
                    return o instanceof Array ? o.map(a) : a(o);
                }, s.default.prototype.split = function(e, t) {
                    return s.default._validateParameters("split", arguments), e.split(t);
                }, s.default.prototype.splitTokens = function(e, t) {
                    var r, o;
                    return s.default._validateParameters("splitTokens", arguments), o = void 0 !== t ? (o = /\]/g.exec(t), (r = /\[/g.exec(t)) && o ? (t = t.slice(0, o.index) + t.slice(o.index + 1), r = /\[/g.exec(t), t = t.slice(0, r.index) + t.slice(r.index + 1), new RegExp("[\\[".concat(t, "\\]]"), "g")) : o ? (t = t.slice(0, o.index) + t.slice(o.index + 1), new RegExp("[".concat(t, "\\]]"), "g")) : r ? (t = t.slice(0, r.index) + t.slice(r.index + 1), new RegExp("[".concat(t, "\\[]"), "g")) : new RegExp("[".concat(t, "]"), "g")) : /\s/g, e.split(o).filter(function(e) {
                        return e;
                    });
                }, s.default.prototype.trim = function(e) {
                    return s.default._validateParameters("trim", arguments), e instanceof Array ? e.map(this.trim) : e.trim();
                };
                var l = s.default;
                r.default = l;
            },
            {
                "../core/friendly_errors/fes_core": 258,
                "../core/friendly_errors/file_errors": 259,
                "../core/friendly_errors/validate_params": 262,
                "../core/main": 267,
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.constructor": 180,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.match": 187,
                "core-js/modules/es.string.replace": 189,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.string.trim": 193
            }
        ],
        309: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                e.default.prototype.day = function() {
                    return (new Date).getDate();
                }, e.default.prototype.hour = function() {
                    return (new Date).getHours();
                }, e.default.prototype.minute = function() {
                    return (new Date).getMinutes();
                }, e.default.prototype.millis = function() {
                    return -1 === this._millisStart ? 0 : window.performance.now() - this._millisStart;
                }, e.default.prototype.month = function() {
                    return (new Date).getMonth() + 1;
                }, e.default.prototype.second = function() {
                    return (new Date).getSeconds();
                }, e.default.prototype.year = function() {
                    return (new Date).getFullYear();
                };
                e = e.default;
                r.default = e;
            },
            {
                "../core/main": 267
            }
        ],
        310: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.number.to-fixed"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.number.to-fixed"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var S = (n = e("../core/main")) && n.__esModule ? n : {
                    default: n
                }, _ = (e("./p5.Geometry"), function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants")));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                S.default.prototype.plane = function(e, t, r, o) {
                    this._assert3d("plane"), S.default._validateParameters("plane", arguments), void 0 === e && (e = 50), void 0 === t && (t = e), void 0 === o && (o = 1);
                    var n, s = "plane|".concat(r = void 0 === r ? 1 : r, "|").concat(o);
                    return this._renderer.geometryInHash(s) || ((n = new S.default.Geometry(r, o, function() {
                        for(var e, t, r = 0; r <= this.detailY; r++)for(var o = r / this.detailY, n = 0; n <= this.detailX; n++)e = n / this.detailX, t = new S.default.Vector(e - .5, o - .5, 0), this.vertices.push(t), this.uvs.push(e, o);
                    })).computeFaces().computeNormals(), r <= 1 && o <= 1 ? n._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"), this._renderer.createBuffers(s, n)), this._renderer.drawBuffersScaled(s, e, t, 1), this;
                }, S.default.prototype.box = function(e, t, r, o, n) {
                    this._assert3d("box"), S.default._validateParameters("box", arguments), void 0 === e && (e = 50), void 0 === t && (t = e), void 0 === r && (r = t);
                    var s, i = this._renderer.attributes && this._renderer.attributes.perPixelLighting, i = (void 0 === n && (n = i ? 1 : 4), "box|".concat(o = void 0 === o ? i ? 1 : 4 : o, "|").concat(n));
                    return this._renderer.geometryInHash(i) || ((s = new S.default.Geometry(o, n, function() {
                        var e = [
                            [
                                0,
                                4,
                                2,
                                6
                            ],
                            [
                                1,
                                3,
                                5,
                                7
                            ],
                            [
                                0,
                                1,
                                4,
                                5
                            ],
                            [
                                2,
                                6,
                                3,
                                7
                            ],
                            [
                                0,
                                2,
                                1,
                                3
                            ],
                            [
                                4,
                                5,
                                6,
                                7
                            ]
                        ];
                        this.strokeIndices = [
                            [
                                0,
                                1
                            ],
                            [
                                1,
                                3
                            ],
                            [
                                3,
                                2
                            ],
                            [
                                6,
                                7
                            ],
                            [
                                8,
                                9
                            ],
                            [
                                9,
                                11
                            ],
                            [
                                14,
                                15
                            ],
                            [
                                16,
                                17
                            ],
                            [
                                17,
                                19
                            ],
                            [
                                18,
                                19
                            ],
                            [
                                20,
                                21
                            ],
                            [
                                22,
                                23
                            ]
                        ];
                        for(var t = 0; t < e.length; t++){
                            for(var r = e[t], o = 4 * t, n = 0; n < 4; n++){
                                var s = r[n], s = new S.default.Vector((2 * (1 & s) - 1) / 2, ((2 & s) - 1) / 2, ((4 & s) / 2 - 1) / 2);
                                this.vertices.push(s), this.uvs.push(1 & n, (2 & n) / 2);
                            }
                            this.faces.push([
                                o,
                                1 + o,
                                2 + o
                            ]), this.faces.push([
                                2 + o,
                                1 + o,
                                3 + o
                            ]);
                        }
                    })).computeNormals(), o <= 4 && n <= 4 ? s._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"), this._renderer.createBuffers(i, s)), this._renderer.drawBuffersScaled(i, e, t, r), this;
                }, S.default.prototype.sphere = function(e, t, r) {
                    return this._assert3d("sphere"), S.default._validateParameters("sphere", arguments), this.ellipsoid(e = void 0 === e ? 50 : e, e, e, t = void 0 === t ? 24 : t, r = void 0 === r ? 16 : r), this;
                };
                function l(e, t, r, o, n, s, i) {
                    e = e <= 0 ? 1 : e, t = t < 0 ? 0 : t, r = r <= 0 ? e : r, o = o < 3 ? 3 : o;
                    for(var a, l, u = (s = void 0 === s || s) ? -2 : 0, c = (n = n < 1 ? 1 : n) + ((i = void 0 === i ? 0 !== t : i) ? 2 : 0), d = Math.atan2(e - t, r), f = Math.sin(d), h = Math.cos(d), p = u; p <= c; ++p){
                        var m = p / n, y = r * m, g = void 0, g = p < 0 ? (m = y = 0, e) : n < p ? (y = r, m = 1, t) : e + (t - e) * m;
                        for(-2 !== p && p !== n + 2 || (g = 0), y -= r / 2, a = 0; a < o; ++a){
                            var v = a / (o - 1), b = 2 * Math.PI * v, j = Math.sin(b), b = Math.cos(b), _ = (this.vertices.push(new S.default.Vector(j * g, y, b * g)), void 0), _ = p < 0 ? new S.default.Vector(0, -1, 0) : n < p && t ? new S.default.Vector(0, 1, 0) : new S.default.Vector(j * h, f, b * h);
                            this.vertexNormals.push(_), this.uvs.push(v, m);
                        }
                    }
                    var x = 0;
                    if (s) {
                        for(l = 0; l < o; ++l)this.faces.push([
                            x + l,
                            x + o + (l + 1) % o,
                            x + o + l
                        ]);
                        x += 2 * o;
                    }
                    for(p = 0; p < n; ++p){
                        for(a = 0; a < o; ++a){
                            var w = (a + 1) % o;
                            this.faces.push([
                                x + a,
                                x + w,
                                x + o + w
                            ]), this.faces.push([
                                x + a,
                                x + o + w,
                                x + o + a
                            ]);
                        }
                        x += o;
                    }
                    if (i) for(x += o, a = 0; a < o; ++a)this.faces.push([
                        x + a,
                        x + (a + 1) % o,
                        x + o
                    ]);
                }
                S.default.prototype.cylinder = function(e, t, r, o, n, s) {
                    this._assert3d("cylinder"), S.default._validateParameters("cylinder", arguments), void 0 === e && (e = 50), void 0 === t && (t = e), void 0 === o && (o = 1), void 0 === s && (s = !0), void 0 === n && (n = !0);
                    var i, a = "cylinder|".concat(r = void 0 === r ? 24 : r, "|").concat(o, "|").concat(n, "|").concat(s);
                    return this._renderer.geometryInHash(a) || (i = new S.default.Geometry(r, o), l.call(i, 1, 1, 1, r, o, n, s), r <= 24 && o <= 16 ? i._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(a, i)), this._renderer.drawBuffersScaled(a, e, t, e), this;
                }, S.default.prototype.cone = function(e, t, r, o, n) {
                    this._assert3d("cone"), S.default._validateParameters("cone", arguments), void 0 === e && (e = 50), void 0 === t && (t = e), void 0 === o && (o = 1), void 0 === n && (n = !0);
                    var s, i = "cone|".concat(r = void 0 === r ? 24 : r, "|").concat(o, "|").concat(n);
                    return this._renderer.geometryInHash(i) || (s = new S.default.Geometry(r, o), l.call(s, 1, 0, 1, r, o, n, !1), r <= 24 && o <= 16 ? s._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(i, s)), this._renderer.drawBuffersScaled(i, e, t, e), this;
                }, S.default.prototype.ellipsoid = function(e, t, r, o, n) {
                    this._assert3d("ellipsoid"), S.default._validateParameters("ellipsoid", arguments), void 0 === e && (e = 50), void 0 === t && (t = e), void 0 === r && (r = e), void 0 === n && (n = 16);
                    var s, i = "ellipsoid|".concat(o = void 0 === o ? 24 : o, "|").concat(n);
                    return this._renderer.geometryInHash(i) || ((s = new S.default.Geometry(o, n, function() {
                        for(var e = 0; e <= this.detailY; e++)for(var t = e / this.detailY, r = Math.PI * t - Math.PI / 2, o = Math.cos(r), n = Math.sin(r), s = 0; s <= this.detailX; s++){
                            var i = s / this.detailX, a = 2 * Math.PI * i, l = Math.cos(a), a = Math.sin(a), a = new S.default.Vector(o * a, n, o * l);
                            this.vertices.push(a), this.vertexNormals.push(a), this.uvs.push(i, t);
                        }
                    })).computeFaces(), o <= 24 && n <= 24 ? s._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"), this._renderer.createBuffers(i, s)), this._renderer.drawBuffersScaled(i, e, t, r), this;
                }, S.default.prototype.torus = function(e, t, r, o) {
                    if (this._assert3d("torus"), S.default._validateParameters("torus", arguments), void 0 === e) e = 50;
                    else if (!e) return;
                    if (void 0 === t) t = 10;
                    else if (!t) return;
                    void 0 === r && (r = 24), void 0 === o && (o = 16);
                    var n, d = (t / e).toPrecision(4), t = "torus|".concat(d, "|").concat(r, "|").concat(o);
                    return this._renderer.geometryInHash(t) || ((n = new S.default.Geometry(r, o, function() {
                        for(var e = 0; e <= this.detailY; e++)for(var t = e / this.detailY, r = 2 * Math.PI * t, o = Math.cos(r), n = Math.sin(r), s = 1 + d * o, i = 0; i <= this.detailX; i++){
                            var a = i / this.detailX, l = 2 * Math.PI * a, u = Math.cos(l), l = Math.sin(l), c = new S.default.Vector(s * u, s * l, d * n), u = new S.default.Vector(o * u, o * l, n);
                            this.vertices.push(c), this.vertexNormals.push(u), this.uvs.push(a, t);
                        }
                    })).computeFaces(), r <= 24 && o <= 16 ? n._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(t, n)), this._renderer.drawBuffersScaled(t, e, e, e), this;
                }, S.default.RendererGL.prototype.point = function(e, t, r) {
                    var o = [];
                    return o.push(new S.default.Vector(e, t, r = void 0 === r ? 0 : r)), this._drawPoints(o, this.immediateMode.buffers.point), this;
                }, S.default.RendererGL.prototype.triangle = function(e) {
                    var t = e[0], r = e[1], o = e[2], n = e[3], s = e[4], e = e[5], i = (this.geometryInHash("tri") || ((i = new S.default.Geometry(1, 1, function() {
                        var e = [];
                        e.push(new S.default.Vector(0, 0, 0)), e.push(new S.default.Vector(0, 1, 0)), e.push(new S.default.Vector(1, 0, 0)), this.strokeIndices = [
                            [
                                0,
                                1
                            ],
                            [
                                1,
                                2
                            ],
                            [
                                2,
                                0
                            ]
                        ], this.vertices = e, this.faces = [
                            [
                                0,
                                1,
                                2
                            ]
                        ], this.uvs = [
                            0,
                            0,
                            0,
                            1,
                            1,
                            1
                        ];
                    }))._makeTriangleEdges()._edgesToVertices(), i.computeNormals(), this.createBuffers("tri", i)), this.uMVMatrix.copy());
                    try {
                        var a = new S.default.Matrix([
                            o - t,
                            n - r,
                            0,
                            0,
                            s - t,
                            e - r,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            t,
                            r,
                            0,
                            1
                        ]).mult(this.uMVMatrix);
                        this.uMVMatrix = a, this.drawBuffers("tri");
                    } finally{
                        this.uMVMatrix = i;
                    }
                    return this;
                }, S.default.RendererGL.prototype.ellipse = function(e) {
                    this.arc(e[0], e[1], e[2], e[3], 0, _.TWO_PI, _.OPEN, e[4]);
                }, S.default.RendererGL.prototype.arc = function(e) {
                    var t, r = arguments[1], o = arguments[2], n = arguments[3], s = arguments[4], i = arguments[5], a = arguments[6], l = arguments[7] || 25, u = (Math.abs(i - s) >= _.TWO_PI ? "".concat(c = "ellipse", "|") : "".concat(c = "arc", "|").concat(s, "|").concat(i, "|").concat(a, "|")).concat(l, "|"), c = (this.geometryInHash(u) || ((t = new S.default.Geometry(l, 1, function() {
                        if (this.strokeIndices = [], s.toFixed(10) !== i.toFixed(10)) {
                            a !== _.PIE && void 0 !== a || (this.vertices.push(new S.default.Vector(.5, .5, 0)), this.uvs.push([
                                .5,
                                .5
                            ]));
                            for(var e = 0; e <= l; e++){
                                var t = (i - s) * (e / l) + s, r = .5 + Math.cos(t) / 2, t = .5 + Math.sin(t) / 2;
                                this.vertices.push(new S.default.Vector(r, t, 0)), this.uvs.push([
                                    r,
                                    t
                                ]), e < l - 1 && (this.faces.push([
                                    0,
                                    e + 1,
                                    e + 2
                                ]), this.strokeIndices.push([
                                    e + 1,
                                    e + 2
                                ]));
                            }
                            switch(a){
                                case _.PIE:
                                    this.faces.push([
                                        0,
                                        this.vertices.length - 2,
                                        this.vertices.length - 1
                                    ]), this.strokeIndices.push([
                                        0,
                                        1
                                    ]), this.strokeIndices.push([
                                        this.vertices.length - 2,
                                        this.vertices.length - 1
                                    ]), this.strokeIndices.push([
                                        0,
                                        this.vertices.length - 1
                                    ]);
                                    break;
                                case _.CHORD:
                                    this.strokeIndices.push([
                                        0,
                                        1
                                    ]), this.strokeIndices.push([
                                        0,
                                        this.vertices.length - 1
                                    ]);
                                    break;
                                case _.OPEN:
                                    this.strokeIndices.push([
                                        0,
                                        1
                                    ]);
                                    break;
                                default:
                                    this.faces.push([
                                        0,
                                        this.vertices.length - 2,
                                        this.vertices.length - 1
                                    ]), this.strokeIndices.push([
                                        this.vertices.length - 2,
                                        this.vertices.length - 1
                                    ]);
                            }
                        }
                    })).computeNormals(), l <= 50 ? t._makeTriangleEdges()._edgesToVertices(t) : this._doStroke && console.log("Cannot apply a stroke to an ".concat(c, " with more than 50 detail")), this.createBuffers(u, t)), this.uMVMatrix.copy());
                    try {
                        this.uMVMatrix.translate([
                            e,
                            r,
                            0
                        ]), this.uMVMatrix.scale(o, n, 1), this.drawBuffers(u);
                    } finally{
                        this.uMVMatrix = c;
                    }
                    return this;
                }, S.default.RendererGL.prototype.rect = function(e) {
                    var t = e[0], r = e[1], o = e[2], n = e[3];
                    if (void 0 === e[4]) {
                        var s = this._pInst._glAttributes.perPixelLighting, i = e[4] || (s ? 1 : 24), a = e[5] || (s ? 1 : 16), s = "rect|".concat(i, "|").concat(a), l = (this.geometryInHash(s) || ((l = new S.default.Geometry(i, a, function() {
                            for(var e = 0; e <= this.detailY; e++)for(var t = e / this.detailY, r = 0; r <= this.detailX; r++){
                                var o = r / this.detailX, n = new S.default.Vector(o, t, 0);
                                this.vertices.push(n), this.uvs.push(o, t);
                            }
                            0 < i && 0 < a && (this.strokeIndices = [
                                [
                                    0,
                                    i
                                ],
                                [
                                    i,
                                    (i + 1) * (a + 1) - 1
                                ],
                                [
                                    (i + 1) * (a + 1) - 1,
                                    (i + 1) * a
                                ],
                                [
                                    (i + 1) * a,
                                    0
                                ]
                            ]);
                        })).computeFaces().computeNormals()._makeTriangleEdges()._edgesToVertices(), this.createBuffers(s, l)), this.uMVMatrix.copy());
                        try {
                            this.uMVMatrix.translate([
                                t,
                                r,
                                0
                            ]), this.uMVMatrix.scale(o, n, 1), this.drawBuffers(s);
                        } finally{
                            this.uMVMatrix = l;
                        }
                    } else {
                        var s = e[4], l = void 0 === e[5] ? s : e[5], u = void 0 === e[6] ? l : e[6], e = void 0 === e[7] ? u : e[7], c = o, d = n, f = ((c += t) < t && (f = t, t = c, c = f), (d += r) < r && (f = r, r = d, d = f), Math.min((c - t) / 2, (d - r) / 2)), h = (f < s && (s = f), f < l && (l = f), f < u && (u = f), f < e && (e = f), t), p = r, f = c, t = d, m = (this.beginShape(), 0 !== l ? (this.vertex(f - l, p), this.quadraticVertex(f, p, f, p + l)) : this.vertex(f, p), 0 !== u ? (this.vertex(f, t - u), this.quadraticVertex(f, t, f - u, t)) : this.vertex(f, t), 0 !== e ? (this.vertex(h + e, t), this.quadraticVertex(h, t, h, t - e)) : this.vertex(h, t), 0 !== s ? (this.vertex(h, p + s), this.quadraticVertex(h, p, h + s, p)) : this.vertex(h, p), this.immediateMode.geometry.uvs.length = 0, true), r = !1, c = void 0;
                        try {
                            for(var y, g = this.immediateMode.geometry.vertices[Symbol.iterator](); !(m = (y = g.next()).done); m = !0){
                                var v = y.value, b = (v.x - h) / o, j = (v.y - p) / n;
                                this.immediateMode.geometry.uvs.push(b, j);
                            }
                        } catch (e) {
                            r = !0, c = e;
                        } finally{
                            try {
                                m || null == g.return || g.return();
                            } finally{
                                if (r) throw c;
                            }
                        }
                        this.endShape(_.CLOSE);
                    }
                    return this;
                }, S.default.RendererGL.prototype.quad = function(i, a, l, u, c, d, f, h, p, m, y, g, e, t) {
                    void 0 === e && (e = 2), void 0 === t && (t = 2);
                    var r = "quad|".concat(i, "|").concat(a, "|").concat(l, "|").concat(u, "|").concat(c, "|").concat(d, "|").concat(f, "|").concat(h, "|").concat(p, "|").concat(m, "|").concat(y, "|").concat(g, "|").concat(e, "|").concat(t);
                    if (!this.geometryInHash(r)) {
                        var o = new S.default.Geometry(e, t, function() {
                            for(var e = 1 / (this.detailX - 1), t = 1 / (this.detailY - 1), r = 0; r < this.detailY; r++)for(var o = 0; o < this.detailX; o++){
                                var n = o * e, s = r * t;
                                this.vertices.push(new S.default.Vector((1 - n) * ((1 - s) * i + s * m) + n * ((1 - s) * u + s * f), (1 - n) * ((1 - s) * a + s * y) + n * ((1 - s) * c + s * h), (1 - n) * ((1 - s) * l + s * g) + n * ((1 - s) * d + s * p))), this.uvs.push([
                                    n,
                                    s
                                ]);
                            }
                        });
                        o.faces = [];
                        for(var n = 0; n < t - 1; n++)for(var s = 0; s < e - 1; s++){
                            var v = s + n * e, b = s + 1 + (n + 1) * e, j = s + (n + 1) * e;
                            o.faces.push([
                                v,
                                s + 1 + n * e,
                                b
                            ]), o.faces.push([
                                v,
                                b,
                                j
                            ]);
                        }
                        o.computeNormals()._makeTriangleEdges()._edgesToVertices(), this.createBuffers(r, o);
                    }
                    return this.drawBuffers(r), this;
                }, S.default.RendererGL.prototype.bezier = function(e, t, r, o, n, s, i, a, l, u, c, d) {
                    8 === arguments.length && (c = a, u = i, a = s, i = n, n = o, o = r, r = s = l = d = 0);
                    var f = this._pInst._bezierDetail || 20;
                    this.beginShape();
                    for(var h = 0; h <= f; h++){
                        var p = Math.pow(1 - h / f, 3), m = h / f * 3 * Math.pow(1 - h / f, 2), y = 3 * Math.pow(h / f, 2) * (1 - h / f), g = Math.pow(h / f, 3);
                        this.vertex(e * p + o * m + i * y + u * g, t * p + n * m + a * y + c * g, r * p + s * m + l * y + d * g);
                    }
                    return this.endShape(), this;
                }, S.default.RendererGL.prototype.curve = function(e, t, r, o, n, s, i, a, l, u, c, d) {
                    8 === arguments.length && (u = i, c = a, i = n, a = o, n = o = r, r = s = l = d = 0);
                    var f = this._pInst._curveDetail;
                    this.beginShape();
                    for(var h = 0; h <= f; h++){
                        var p = .5 * Math.pow(h / f, 3), m = .5 * Math.pow(h / f, 2), y = h / f * .5;
                        this.vertex(p * (3 * o - e - 3 * i + u) + m * (2 * e - 5 * o + 4 * i - u) + y * (-e + i) + 2 * o * .5, p * (3 * n - t - 3 * a + c) + m * (2 * t - 5 * n + 4 * a - c) + y * (-t + a) + 2 * n * .5, p * (3 * s - r - 3 * l + d) + m * (2 * r - 5 * s + 4 * l - d) + y * (-r + l) + 2 * s * .5);
                    }
                    return this.endShape(), this;
                }, S.default.RendererGL.prototype.line = function() {
                    return 6 === arguments.length ? (this.beginShape(_.LINES), this.vertex(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 2 ? void 0 : arguments[2]), this.vertex(arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 4 ? void 0 : arguments[4], arguments.length <= 5 ? void 0 : arguments[5]), this.endShape()) : 4 === arguments.length && (this.beginShape(_.LINES), this.vertex(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], 0), this.vertex(arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 3 ? void 0 : arguments[3], 0), this.endShape()), this;
                }, S.default.RendererGL.prototype.bezierVertex = function() {
                    if (0 === this.immediateMode._bezierVertex.length) throw Error("vertex() must be used once before calling bezierVertex()");
                    var e, t, r, o, n, s, i = [], a = [], l = arguments.length;
                    if (0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
                        this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
                        for(var u = 1 / this._lutBezierDetail, c = 0, d = 1, f = 0; c < 1;){
                            if (s = parseFloat(c.toFixed(6)), this._lookUpTableBezier[f] = this._bezierCoefficients(s), d.toFixed(6) === u.toFixed(6)) {
                                s = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++f, this._lookUpTableBezier[f] = this._bezierCoefficients(s);
                                break;
                            }
                            c += u, d -= u, ++f;
                        }
                    }
                    var h = this._lookUpTableBezier.length;
                    if (6 === l) {
                        for(this.isBezier = !0, i = [
                            this.immediateMode._bezierVertex[0],
                            arguments.length <= 0 ? void 0 : arguments[0],
                            arguments.length <= 2 ? void 0 : arguments[2],
                            arguments.length <= 4 ? void 0 : arguments[4]
                        ], a = [
                            this.immediateMode._bezierVertex[1],
                            arguments.length <= 1 ? void 0 : arguments[1],
                            arguments.length <= 3 ? void 0 : arguments[3],
                            arguments.length <= 5 ? void 0 : arguments[5]
                        ], n = 0; n < h; n++)t = i[0] * this._lookUpTableBezier[n][0] + i[1] * this._lookUpTableBezier[n][1] + i[2] * this._lookUpTableBezier[n][2] + i[3] * this._lookUpTableBezier[n][3], r = a[0] * this._lookUpTableBezier[n][0] + a[1] * this._lookUpTableBezier[n][1] + a[2] * this._lookUpTableBezier[n][2] + a[3] * this._lookUpTableBezier[n][3], this.vertex(t, r);
                        this.immediateMode._bezierVertex[0] = arguments.length <= 4 ? void 0 : arguments[4], this.immediateMode._bezierVertex[1] = arguments.length <= 5 ? void 0 : arguments[5];
                    } else if (9 === l) {
                        for(this.isBezier = !0, i = [
                            this.immediateMode._bezierVertex[0],
                            arguments.length <= 0 ? void 0 : arguments[0],
                            arguments.length <= 3 ? void 0 : arguments[3],
                            arguments.length <= 6 ? void 0 : arguments[6]
                        ], a = [
                            this.immediateMode._bezierVertex[1],
                            arguments.length <= 1 ? void 0 : arguments[1],
                            arguments.length <= 4 ? void 0 : arguments[4],
                            arguments.length <= 7 ? void 0 : arguments[7]
                        ], e = [
                            this.immediateMode._bezierVertex[2],
                            arguments.length <= 2 ? void 0 : arguments[2],
                            arguments.length <= 5 ? void 0 : arguments[5],
                            arguments.length <= 8 ? void 0 : arguments[8]
                        ], n = 0; n < h; n++)t = i[0] * this._lookUpTableBezier[n][0] + i[1] * this._lookUpTableBezier[n][1] + i[2] * this._lookUpTableBezier[n][2] + i[3] * this._lookUpTableBezier[n][3], r = a[0] * this._lookUpTableBezier[n][0] + a[1] * this._lookUpTableBezier[n][1] + a[2] * this._lookUpTableBezier[n][2] + a[3] * this._lookUpTableBezier[n][3], o = e[0] * this._lookUpTableBezier[n][0] + e[1] * this._lookUpTableBezier[n][1] + e[2] * this._lookUpTableBezier[n][2] + e[3] * this._lookUpTableBezier[n][3], this.vertex(t, r, o);
                        this.immediateMode._bezierVertex[0] = arguments.length <= 6 ? void 0 : arguments[6], this.immediateMode._bezierVertex[1] = arguments.length <= 7 ? void 0 : arguments[7], this.immediateMode._bezierVertex[2] = arguments.length <= 8 ? void 0 : arguments[8];
                    }
                }, S.default.RendererGL.prototype.quadraticVertex = function() {
                    if (0 === this.immediateMode._quadraticVertex.length) throw Error("vertex() must be used once before calling quadraticVertex()");
                    var e, t, r, o, n, s, i = [], a = [], l = arguments.length;
                    if (0 === this._lookUpTableQuadratic.length || this._lutQuadraticDetail !== this._pInst._curveDetail) {
                        this._lookUpTableQuadratic = [], this._lutQuadraticDetail = this._pInst._curveDetail;
                        for(var u = 1 / this._lutQuadraticDetail, c = 0, d = 1, f = 0; c < 1;){
                            if (s = parseFloat(c.toFixed(6)), this._lookUpTableQuadratic[f] = this._quadraticCoefficients(s), d.toFixed(6) === u.toFixed(6)) {
                                s = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++f, this._lookUpTableQuadratic[f] = this._quadraticCoefficients(s);
                                break;
                            }
                            c += u, d -= u, ++f;
                        }
                    }
                    var h = this._lookUpTableQuadratic.length;
                    if (4 === l) {
                        for(this.isQuadratic = !0, i = [
                            this.immediateMode._quadraticVertex[0],
                            arguments.length <= 0 ? void 0 : arguments[0],
                            arguments.length <= 2 ? void 0 : arguments[2]
                        ], a = [
                            this.immediateMode._quadraticVertex[1],
                            arguments.length <= 1 ? void 0 : arguments[1],
                            arguments.length <= 3 ? void 0 : arguments[3]
                        ], n = 0; n < h; n++)t = i[0] * this._lookUpTableQuadratic[n][0] + i[1] * this._lookUpTableQuadratic[n][1] + i[2] * this._lookUpTableQuadratic[n][2], r = a[0] * this._lookUpTableQuadratic[n][0] + a[1] * this._lookUpTableQuadratic[n][1] + a[2] * this._lookUpTableQuadratic[n][2], this.vertex(t, r);
                        this.immediateMode._quadraticVertex[0] = arguments.length <= 2 ? void 0 : arguments[2], this.immediateMode._quadraticVertex[1] = arguments.length <= 3 ? void 0 : arguments[3];
                    } else if (6 === l) {
                        for(this.isQuadratic = !0, i = [
                            this.immediateMode._quadraticVertex[0],
                            arguments.length <= 0 ? void 0 : arguments[0],
                            arguments.length <= 3 ? void 0 : arguments[3]
                        ], a = [
                            this.immediateMode._quadraticVertex[1],
                            arguments.length <= 1 ? void 0 : arguments[1],
                            arguments.length <= 4 ? void 0 : arguments[4]
                        ], e = [
                            this.immediateMode._quadraticVertex[2],
                            arguments.length <= 2 ? void 0 : arguments[2],
                            arguments.length <= 5 ? void 0 : arguments[5]
                        ], n = 0; n < h; n++)t = i[0] * this._lookUpTableQuadratic[n][0] + i[1] * this._lookUpTableQuadratic[n][1] + i[2] * this._lookUpTableQuadratic[n][2], r = a[0] * this._lookUpTableQuadratic[n][0] + a[1] * this._lookUpTableQuadratic[n][1] + a[2] * this._lookUpTableQuadratic[n][2], o = e[0] * this._lookUpTableQuadratic[n][0] + e[1] * this._lookUpTableQuadratic[n][1] + e[2] * this._lookUpTableQuadratic[n][2], this.vertex(t, r, o);
                        this.immediateMode._quadraticVertex[0] = arguments.length <= 3 ? void 0 : arguments[3], this.immediateMode._quadraticVertex[1] = arguments.length <= 4 ? void 0 : arguments[4], this.immediateMode._quadraticVertex[2] = arguments.length <= 5 ? void 0 : arguments[5];
                    }
                }, S.default.RendererGL.prototype.curveVertex = function() {
                    var e, t, r, o, n, s, i = [], a = [], l = arguments.length;
                    if (0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
                        this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
                        for(var u = 1 / this._lutBezierDetail, c = 0, d = 1, f = 0; c < 1;){
                            if (s = parseFloat(c.toFixed(6)), this._lookUpTableBezier[f] = this._bezierCoefficients(s), d.toFixed(6) === u.toFixed(6)) {
                                s = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++f, this._lookUpTableBezier[f] = this._bezierCoefficients(s);
                                break;
                            }
                            c += u, d -= u, ++f;
                        }
                    }
                    var h = this._lookUpTableBezier.length;
                    if (2 === l) {
                        if (this.immediateMode._curveVertex.push(arguments.length <= 0 ? void 0 : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? void 0 : arguments[1]), 8 === this.immediateMode._curveVertex.length) {
                            for(this.isCurve = !0, i = this._bezierToCatmull([
                                this.immediateMode._curveVertex[0],
                                this.immediateMode._curveVertex[2],
                                this.immediateMode._curveVertex[4],
                                this.immediateMode._curveVertex[6]
                            ]), a = this._bezierToCatmull([
                                this.immediateMode._curveVertex[1],
                                this.immediateMode._curveVertex[3],
                                this.immediateMode._curveVertex[5],
                                this.immediateMode._curveVertex[7]
                            ]), n = 0; n < h; n++)t = i[0] * this._lookUpTableBezier[n][0] + i[1] * this._lookUpTableBezier[n][1] + i[2] * this._lookUpTableBezier[n][2] + i[3] * this._lookUpTableBezier[n][3], r = a[0] * this._lookUpTableBezier[n][0] + a[1] * this._lookUpTableBezier[n][1] + a[2] * this._lookUpTableBezier[n][2] + a[3] * this._lookUpTableBezier[n][3], this.vertex(t, r);
                            for(n = 0; n < l; n++)this.immediateMode._curveVertex.shift();
                        }
                    } else if (3 === l && (this.immediateMode._curveVertex.push(arguments.length <= 0 ? void 0 : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? void 0 : arguments[1]), this.immediateMode._curveVertex.push(arguments.length <= 2 ? void 0 : arguments[2]), 12 === this.immediateMode._curveVertex.length)) {
                        for(this.isCurve = !0, i = this._bezierToCatmull([
                            this.immediateMode._curveVertex[0],
                            this.immediateMode._curveVertex[3],
                            this.immediateMode._curveVertex[6],
                            this.immediateMode._curveVertex[9]
                        ]), a = this._bezierToCatmull([
                            this.immediateMode._curveVertex[1],
                            this.immediateMode._curveVertex[4],
                            this.immediateMode._curveVertex[7],
                            this.immediateMode._curveVertex[10]
                        ]), e = this._bezierToCatmull([
                            this.immediateMode._curveVertex[2],
                            this.immediateMode._curveVertex[5],
                            this.immediateMode._curveVertex[8],
                            this.immediateMode._curveVertex[11]
                        ]), n = 0; n < h; n++)t = i[0] * this._lookUpTableBezier[n][0] + i[1] * this._lookUpTableBezier[n][1] + i[2] * this._lookUpTableBezier[n][2] + i[3] * this._lookUpTableBezier[n][3], r = a[0] * this._lookUpTableBezier[n][0] + a[1] * this._lookUpTableBezier[n][1] + a[2] * this._lookUpTableBezier[n][2] + a[3] * this._lookUpTableBezier[n][3], o = e[0] * this._lookUpTableBezier[n][0] + e[1] * this._lookUpTableBezier[n][1] + e[2] * this._lookUpTableBezier[n][2] + e[3] * this._lookUpTableBezier[n][3], this.vertex(t, r, o);
                        for(n = 0; n < l; n++)this.immediateMode._curveVertex.shift();
                    }
                }, S.default.RendererGL.prototype.image = function(e, t, r, o, n, s, i, a, l) {
                    this._isErasing && this.blendMode(this._cachedBlendMode), this._pInst.push(), this._pInst.noLights(), this._pInst.texture(e), this._pInst.textureMode(_.NORMAL);
                    var u = 0, c = (t <= e.width && (u = t / e.width), 1), t = (t + o <= e.width && (c = (t + o) / e.width), 0), o = (r <= e.height && (t = r / e.height), 1);
                    r + n <= e.height && (o = (r + n) / e.height), this.beginShape(), this.vertex(s, i, 0, u, t), this.vertex(s + a, i, 0, c, t), this.vertex(s + a, i + l, 0, c, o), this.vertex(s, i + l, 0, u, o), this.endShape(_.CLOSE), this._pInst.pop(), this._isErasing && this.blendMode(_.REMOVE);
                };
                var n = S.default;
                r.default = n;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "./p5.Geometry": 316,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.number.to-fixed": 171,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        311: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (l = e("../core/main")) && l.__esModule ? l : {
                    default: l
                }, n = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                s.default.prototype.orbitControl = function(e, t, r) {
                    var o, n;
                    if (this._assert3d("orbitControl"), s.default._validateParameters("orbitControl", arguments), this.mouseX < this.width && 0 < this.mouseX && this.mouseY < this.height && 0 < this.mouseY) return o = this._renderer._curCamera, void 0 === e && (e = 1), void 0 === t && (t = e), void 0 === r && (r = .5), !0 !== this.contextMenuDisabled && (this.canvas.oncontextmenu = function() {
                        return !1;
                    }, this._setProperty("contextMenuDisabled", !0)), !0 !== this.wheelDefaultDisabled && (this.canvas.onwheel = function() {
                        return !1;
                    }, this._setProperty("wheelDefaultDisabled", !0)), n = this.height < this.width ? this.height : this.width, this._mouseWheelDeltaY !== this._pmouseWheelDeltaY && (0 < this._mouseWheelDeltaY ? this._renderer._curCamera._orbit(0, 0, r * n) : this._renderer._curCamera._orbit(0, 0, -r * n)), this.mouseIsPressed && (this.mouseButton === this.LEFT ? (r = -e * (this.mouseX - this.pmouseX) / n, n = t * (this.mouseY - this.pmouseY) / n, this._renderer._curCamera._orbit(r, n, 0)) : this.mouseButton === this.RIGHT && (r = o._getLocalAxes(), 0 !== (n = Math.sqrt(r.x[0] * r.x[0] + r.x[2] * r.x[2])) && (r.x[0] /= n, r.x[2] /= n), 0 !== (n = Math.sqrt(r.y[0] * r.y[0] + r.y[2] * r.y[2])) && (r.y[0] /= n, r.y[2] /= n), n = -1 * e * (this.mouseX - this.pmouseX), e = -1 * t * (this.mouseY - this.pmouseY), o.setPosition(o.eyeX + n * r.x[0] + e * r.z[0], o.eyeY, o.eyeZ + n * r.x[2] + e * r.z[2]))), this;
                }, s.default.prototype.debugMode = function() {
                    this._assert3d("debugMode");
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    s.default._validateParameters("debugMode", t);
                    for(var o = this._registeredMethods.post.length - 1; 0 <= o; o--)this._registeredMethods.post[o].toString() !== this._grid().toString() && this._registeredMethods.post[o].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(o, 1);
                    t[0] === n.GRID ? this.registerMethod("post", this._grid.call(this, t[1], t[2], t[3], t[4], t[5])) : t[0] === n.AXES ? this.registerMethod("post", this._axesIcon.call(this, t[1], t[2], t[3], t[4])) : (this.registerMethod("post", this._grid.call(this, t[0], t[1], t[2], t[3], t[4])), this.registerMethod("post", this._axesIcon.call(this, t[5], t[6], t[7], t[8])));
                }, s.default.prototype.noDebugMode = function() {
                    this._assert3d("noDebugMode");
                    for(var e = this._registeredMethods.post.length - 1; 0 <= e; e--)this._registeredMethods.post[e].toString() !== this._grid().toString() && this._registeredMethods.post[e].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(e, 1);
                }, s.default.prototype._grid = function(e, r, o, n, s) {
                    void 0 === e && (e = this.width / 2), void 0 === r && (r = Math.round(e / 30) < 4 ? 4 : Math.round(e / 30)), void 0 === o && (o = 0), void 0 === n && (n = 0), void 0 === s && (s = 0);
                    var i = e / r, a = e / 2;
                    return function() {
                        this.push(), this.stroke(255 * this._renderer.curStrokeColor[0], 255 * this._renderer.curStrokeColor[1], 255 * this._renderer.curStrokeColor[2]), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]);
                        for(var e = 0; e <= r; e++)this.beginShape(this.LINES), this.vertex(-a + o, n, e * i - a + s), this.vertex(a + o, n, e * i - a + s), this.endShape();
                        for(var t = 0; t <= r; t++)this.beginShape(this.LINES), this.vertex(t * i - a + o, n, -a + s), this.vertex(t * i - a + o, n, a + s), this.endShape();
                        this.pop();
                    };
                }, s.default.prototype._axesIcon = function(e, t, r, o) {
                    return void 0 === e && (e = 40 < this.width / 20 ? this.width / 20 : 40), void 0 === t && (t = -this.width / 4), void 0 === r && (r = t), void 0 === o && (o = t), function() {
                        this.push(), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]), this.strokeWeight(2), this.stroke(255, 0, 0), this.beginShape(this.LINES), this.vertex(t, r, o), this.vertex(t + e, r, o), this.endShape(), this.stroke(0, 255, 0), this.beginShape(this.LINES), this.vertex(t, r, o), this.vertex(t, r + e, o), this.endShape(), this.stroke(0, 0, 255), this.beginShape(this.LINES), this.vertex(t, r, o), this.vertex(t, r, o + e), this.endShape(), this.pop();
                    };
                };
                var l = s.default;
                r.default = l;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.splice": 164,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        312: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var m = (s = e("../core/main")) && s.__esModule ? s : {
                    default: s
                }, n = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                m.default.prototype.ambientLight = function(e, t, r, o) {
                    this._assert3d("ambientLight"), m.default._validateParameters("ambientLight", arguments);
                    var n = this.color.apply(this, arguments);
                    return this._renderer.ambientLightColors.push(n._array[0], n._array[1], n._array[2]), this._renderer._enableLighting = !0, this;
                }, m.default.prototype.specularColor = function(e, t, r) {
                    this._assert3d("specularColor"), m.default._validateParameters("specularColor", arguments);
                    var o = this.color.apply(this, arguments);
                    return this._renderer.specularColors = [
                        o._array[0],
                        o._array[1],
                        o._array[2]
                    ], this;
                }, m.default.prototype.directionalLight = function(e, t, r, o, n, s) {
                    this._assert3d("directionalLight"), m.default._validateParameters("directionalLight", arguments), e = e instanceof m.default.Color ? e : this.color(e, t, r);
                    var i, a, t = arguments[arguments.length - 1], r = "number" == typeof t ? (i = arguments[arguments.length - 3], a = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (i = t.x, a = t.y, t.z), t = Math.sqrt(i * i + a * a + r * r);
                    return this._renderer.directionalLightDirections.push(i / t, a / t, r / t), this._renderer.directionalLightDiffuseColors.push(e._array[0], e._array[1], e._array[2]), Array.prototype.push.apply(this._renderer.directionalLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = !0, this;
                }, m.default.prototype.pointLight = function(e, t, r, o, n, s) {
                    this._assert3d("pointLight"), m.default._validateParameters("pointLight", arguments), e = e instanceof m.default.Color ? e : this.color(e, t, r);
                    var i, a, t = arguments[arguments.length - 1], r = "number" == typeof t ? (i = arguments[arguments.length - 3], a = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (i = t.x, a = t.y, t.z);
                    return this._renderer.pointLightPositions.push(i, a, r), this._renderer.pointLightDiffuseColors.push(e._array[0], e._array[1], e._array[2]), Array.prototype.push.apply(this._renderer.pointLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = !0, this;
                }, m.default.prototype.lights = function() {
                    var e;
                    return this._assert3d("lights"), this._colorMode === n.RGB ? (this.ambientLight(128, 128, 128), this.directionalLight(128, 128, 128, 0, 0, -1)) : (e = this._colorMaxes[this._colorMode][2], this.ambientLight(0, 0, e), this.directionalLight(0, 0, e, 0, 0, -1)), this;
                }, m.default.prototype.lightFalloff = function(e, t, r) {
                    return this._assert3d("lightFalloff"), m.default._validateParameters("lightFalloff", arguments), e < 0 && (e = 0, console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")), t < 0 && (t = 0, console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")), r < 0 && (r = 0, console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")), 0 === e && 0 === t && 0 === r && (e = 1, console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")), this._renderer.constantAttenuation = e, this._renderer.linearAttenuation = t, this._renderer.quadraticAttenuation = r, this;
                }, m.default.prototype.spotLight = function(e, t, r, o, n, s, i, a, l, u, c) {
                    this._assert3d("spotLight"), m.default._validateParameters("spotLight", arguments);
                    var d, f, h, p = arguments.length;
                    switch(p){
                        case 11:
                        case 10:
                            d = this.color(e, t, r), f = new m.default.Vector(o, n, s), h = new m.default.Vector(i, a, l);
                            break;
                        case 9:
                            e instanceof m.default.Color ? (d = e, f = new m.default.Vector(t, r, o), h = new m.default.Vector(n, s, i), u = a, c = l) : o instanceof m.default.Vector ? (d = this.color(e, t, r), f = o, h = new m.default.Vector(n, s, i), u = a, c = l) : i instanceof m.default.Vector ? (d = this.color(e, t, r), f = new m.default.Vector(o, n, s), h = i, u = a, c = l) : (d = this.color(e, t, r), f = new m.default.Vector(o, n, s), h = new m.default.Vector(i, a, l));
                            break;
                        case 8:
                            u = (h = e instanceof m.default.Color ? (d = e, f = new m.default.Vector(t, r, o), new m.default.Vector(n, s, i)) : o instanceof m.default.Vector ? (d = this.color(e, t, r), f = o, new m.default.Vector(n, s, i)) : (d = this.color(e, t, r), f = new m.default.Vector(o, n, s), i), a);
                            break;
                        case 7:
                            e instanceof m.default.Color && t instanceof m.default.Vector ? (d = e, f = t, h = new m.default.Vector(r, o, n), u = s, c = i) : e instanceof m.default.Color && n instanceof m.default.Vector ? (d = e, f = new m.default.Vector(t, r, o), h = n, u = s, c = i) : o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e, t, r), f = o, h = n, u = s, c = i) : h = e instanceof m.default.Color ? (d = e, f = new m.default.Vector(t, r, o), new m.default.Vector(n, s, i)) : o instanceof m.default.Vector ? (d = this.color(e, t, r), f = o, new m.default.Vector(n, s, i)) : (d = this.color(e, t, r), f = new m.default.Vector(o, n, s), i);
                            break;
                        case 6:
                            o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e, t, r), f = o, h = n, u = s) : e instanceof m.default.Color && n instanceof m.default.Vector ? (d = e, f = new m.default.Vector(t, r, o), h = n, u = s) : e instanceof m.default.Color && t instanceof m.default.Vector && (d = e, f = t, h = new m.default.Vector(r, o, n), u = s);
                            break;
                        case 5:
                            e instanceof m.default.Color && t instanceof m.default.Vector && r instanceof m.default.Vector ? (d = e, f = t, h = r, u = o, c = n) : o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e, t, r), f = o, h = n) : e instanceof m.default.Color && n instanceof m.default.Vector ? (d = e, f = new m.default.Vector(t, r, o), h = n) : e instanceof m.default.Color && t instanceof m.default.Vector && (d = e, f = t, h = new m.default.Vector(r, o, n));
                            break;
                        case 4:
                            d = e, f = t, h = r, u = o;
                            break;
                        case 3:
                            d = e, f = t, h = r;
                            break;
                        default:
                            return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(p < 3 ? "few" : "many", " arguments were provided")), this;
                    }
                    return this._renderer.spotLightDiffuseColors.push(d._array[0], d._array[1], d._array[2]), Array.prototype.push.apply(this._renderer.spotLightSpecularColors, this._renderer.specularColors), this._renderer.spotLightPositions.push(f.x, f.y, f.z), h.normalize(), this._renderer.spotLightDirections.push(h.x, h.y, h.z), void 0 === u && (u = Math.PI / 3), void 0 !== c && c < 1 ? (c = 1, console.warn("Value of concentration needs to be greater than 1. Setting it to 1")) : void 0 === c && (c = 100), u = this._renderer._pInst._toRadians(u), this._renderer.spotLightAngle.push(Math.cos(u)), this._renderer.spotLightConc.push(c), this._renderer._enableLighting = !0, this;
                }, m.default.prototype.noLights = function() {
                    return this._assert3d("noLights"), m.default._validateParameters("noLights", arguments), this._renderer._enableLighting = !1, this._renderer.ambientLightColors.length = 0, this._renderer.specularColors = [
                        1,
                        1,
                        1
                    ], this._renderer.directionalLightDirections.length = 0, this._renderer.directionalLightDiffuseColors.length = 0, this._renderer.directionalLightSpecularColors.length = 0, this._renderer.pointLightPositions.length = 0, this._renderer.pointLightDiffuseColors.length = 0, this._renderer.pointLightSpecularColors.length = 0, this._renderer.spotLightPositions.length = 0, this._renderer.spotLightDirections.length = 0, this._renderer.spotLightDiffuseColors.length = 0, this._renderer.spotLightSpecularColors.length = 0, this._renderer.spotLightAngle.length = 0, this._renderer.spotLightConc.length = 0, this._renderer.constantAttenuation = 1, this._renderer.linearAttenuation = 0, this._renderer.quadraticAttenuation = 0, this._renderer._useShininess = 1, this;
                };
                var s = m.default;
                r.default = s;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        313: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.match"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.trim"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.array.splice"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.match"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.trim"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var x = (o = e("../core/main")) && o.__esModule ? o : {
                    default: o
                };
                e("./p5.Geometry"), x.default.prototype.loadModel = function(e) {
                    x.default._validateParameters("loadModel", arguments);
                    var y, g, t, r = e.slice(-4), v = ("boolean" == typeof arguments[1] ? (y = arguments[1], g = arguments[2], t = arguments[3], void 0 !== arguments[4] && (r = arguments[4])) : (y = !1, g = arguments[1], t = arguments[2], void 0 !== arguments[3] && (r = arguments[3])), new x.default.Geometry), b = (v.gid = "".concat(e, "|").concat(y), this);
                    return r.match(/\.stl$/i) ? this.httpDo(e, "GET", "arrayBuffer", function(e) {
                        !function(e, t) {
                            if (function(e) {
                                for(var t = new DataView(e), r = [
                                    115,
                                    111,
                                    108,
                                    105,
                                    100
                                ], o = 0; o < 5; o++)if (function(e, t, r) {
                                    for(var o = 0, n = e.length; o < n; o++)if (e[o] !== t.getUint8(r + o, !1)) return;
                                    return 1;
                                }(r, t, o)) return;
                                return 1;
                            }(t)) !function(e, t) {
                                for(var r, o, n, s, i, a, l, u = new DataView(t), c = u.getUint32(80, !0), d = !1, f = 0; f < 70; f++)1129270351 === u.getUint32(f, !1) && 82 === u.getUint8(f + 4) && 61 === u.getUint8(f + 5) && (d = !0, s = [], i = u.getUint8(f + 6) / 255, a = u.getUint8(f + 7) / 255, l = u.getUint8(f + 8) / 255);
                                for(var h = 0; h < c; h++){
                                    for(var p, m = 84 + 50 * h, y = u.getFloat32(m, !0), g = u.getFloat32(4 + m, !0), v = u.getFloat32(8 + m, !0), b = (d && (p = u.getUint16(48 + m, !0), n = 0 == (32768 & p) ? (r = (31 & p) / 31, o = (p >> 5 & 31) / 31, (p >> 10 & 31) / 31) : (r = i, o = a, l)), new x.default.Vector(y, g, v)), j = 1; j <= 3; j++){
                                        var _ = m + 12 * j, _ = new x.default.Vector(u.getFloat32(_, !0), u.getFloat32(4 + _, !0), u.getFloat32(8 + _, !0));
                                        e.vertices.push(_), e.vertexNormals.push(b), d && s.push(r, o, n);
                                    }
                                    e.faces.push([
                                        3 * h,
                                        3 * h + 1,
                                        3 * h + 2
                                    ]), e.uvs.push([
                                        0,
                                        0
                                    ], [
                                        0,
                                        0
                                    ], [
                                        0,
                                        0
                                    ]);
                                }
                            }(e, t);
                            else {
                                t = new DataView(t);
                                if (!("TextDecoder" in window)) return console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)");
                                t = new TextDecoder("utf-8").decode(t).split("\n");
                                !function(e, t) {
                                    for(var r, o, n = "", s = [], i = 0; i < t.length; ++i){
                                        for(var a = t[i].trim(), l = a.split(" "), u = 0; u < l.length; ++u)"" === l[u] && l.splice(u, 1);
                                        if (0 !== l.length) switch(n){
                                            case "":
                                                if ("solid" !== l[0]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "solid"'));
                                                n = "solid";
                                                break;
                                            case "solid":
                                                if ("facet" !== l[0] || "normal" !== l[1]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "facet normal"'));
                                                r = new x.default.Vector(parseFloat(l[2]), parseFloat(l[3]), parseFloat(l[4])), e.vertexNormals.push(r, r, r), n = "facet normal";
                                                break;
                                            case "facet normal":
                                                if ("outer" !== l[0] || "loop" !== l[1]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "outer loop"'));
                                                n = "vertex";
                                                break;
                                            case "vertex":
                                                if ("vertex" === l[0]) o = new x.default.Vector(parseFloat(l[1]), parseFloat(l[2]), parseFloat(l[3])), e.vertices.push(o), e.uvs.push([
                                                    0,
                                                    0
                                                ]), s.push(e.vertices.indexOf(o));
                                                else {
                                                    if ("endloop" !== l[0]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "vertex" or "endloop"'));
                                                    e.faces.push(s), s = [], n = "endloop";
                                                }
                                                break;
                                            case "endloop":
                                                if ("endfacet" !== l[0]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "endfacet"'));
                                                n = "endfacet";
                                                break;
                                            case "endfacet":
                                                if ("endsolid" !== l[0]) {
                                                    if ("facet" !== l[0] || "normal" !== l[1]) return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "endsolid" or "facet normal"'));
                                                    r = new x.default.Vector(parseFloat(l[2]), parseFloat(l[3]), parseFloat(l[4])), e.vertexNormals.push(r, r, r), n = "facet normal";
                                                }
                                                break;
                                            default:
                                                console.error('Invalid state "'.concat(n, '"'));
                                        }
                                    }
                                }(e, t);
                            }
                        }(v, e), y && v.normalize(), b._decrementPreload(), "function" == typeof g && g(v);
                    }, t) : r.match(/\.obj$/i) ? this.loadStrings(e, function(e) {
                        for(var t = v, r = e, o = {
                            v: [],
                            vt: [],
                            vn: []
                        }, n = {}, s = 0; s < r.length; ++s){
                            var i = r[s].trim().split(/\b\s+/);
                            if (0 < i.length) {
                                if ("v" === i[0] || "vn" === i[0]) {
                                    var a = new x.default.Vector(parseFloat(i[1]), parseFloat(i[2]), parseFloat(i[3]));
                                    o[i[0]].push(a);
                                } else if ("vt" === i[0]) {
                                    a = [
                                        parseFloat(i[1]),
                                        1 - parseFloat(i[2])
                                    ];
                                    o[i[0]].push(a);
                                } else if ("f" === i[0]) for(var l = 3; l < i.length; ++l){
                                    for(var u = [], c = [
                                        1,
                                        l - 1,
                                        l
                                    ], d = 0; d < c.length; ++d){
                                        var f = i[c[d]], h = 0;
                                        if (void 0 !== n[f]) h = n[f];
                                        else {
                                            for(var p = f.split("/"), m = 0; m < p.length; m++)p[m] = parseInt(p[m]) - 1;
                                            h = n[f] = t.vertices.length, t.vertices.push(o.v[p[0]].copy()), o.vt[p[1]] ? t.uvs.push(o.vt[p[1]].slice()) : t.uvs.push([
                                                0,
                                                0
                                            ]), o.vn[p[2]] && t.vertexNormals.push(o.vn[p[2]].copy());
                                        }
                                        u.push(h);
                                    }
                                    u[0] !== u[1] && u[0] !== u[2] && u[1] !== u[2] && t.faces.push(u);
                                }
                            }
                        }
                        0 === t.vertexNormals.length && t.computeNormals(), y && v.normalize(), b._decrementPreload(), "function" == typeof g && g(v);
                    }, t) : (x.default._friendlyFileLoadError(3, e), t ? t() : console.error("Sorry, the file type is invalid. Only OBJ and STL files are supported.")), v;
                }, x.default.prototype.model = function(e) {
                    this._assert3d("model"), x.default._validateParameters("model", arguments), 0 < e.vertices.length && (this._renderer.geometryInHash(e.gid) || (e._makeTriangleEdges()._edgesToVertices(), this._renderer.createBuffers(e.gid, e)), this._renderer.drawBuffers(e.gid));
                };
                var o = x.default;
                r.default = o;
            },
            {
                "../core/main": 267,
                "./p5.Geometry": 316,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.array.splice": 164,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.string.match": 187,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.string.trim": 193
            }
        ],
        314: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.join"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.join"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var u = (s = e("../core/main")) && s.__esModule ? s : {
                    default: s
                }, n = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                e("./p5.Texture"), u.default.prototype.loadShader = function(e, t, r, o) {
                    u.default._validateParameters("loadShader", arguments), o = o || console.error;
                    function n() {
                        i._decrementPreload(), r && r(s);
                    }
                    var s = new u.default.Shader, i = this, a = !1, l = !1;
                    return this.loadStrings(e, function(e) {
                        s._vertSrc = e.join("\n"), l = !0, a && n();
                    }, o), this.loadStrings(t, function(e) {
                        s._fragSrc = e.join("\n"), a = !0, l && n();
                    }, o), s;
                }, u.default.prototype.createShader = function(e, t) {
                    return this._assert3d("createShader"), u.default._validateParameters("createShader", arguments), new u.default.Shader(this._renderer, e, t);
                }, u.default.prototype.shader = function(e) {
                    return this._assert3d("shader"), u.default._validateParameters("shader", arguments), void 0 === e._renderer && (e._renderer = this._renderer), e.init(), e.isStrokeShader() ? this._renderer.userStrokeShader = e : (this._renderer.userFillShader = e, this._renderer._useNormalMaterial = !1), this;
                }, u.default.prototype.resetShader = function() {
                    return this._renderer.userFillShader = this._renderer.userStrokeShader = null, this;
                }, u.default.prototype.texture = function(e) {
                    return this._assert3d("texture"), u.default._validateParameters("texture", arguments), e.gifProperties && e._animateGif(this), this._renderer.drawMode = n.TEXTURE, this._renderer._useSpecularMaterial = !1, this._renderer._useEmissiveMaterial = !1, this._renderer._useNormalMaterial = !1, this._renderer._tex = e, this._renderer._setProperty("_doFill", !0), this;
                }, u.default.prototype.textureMode = function(e) {
                    e !== n.IMAGE && e !== n.NORMAL ? console.warn("You tried to set ".concat(e, " textureMode only supports IMAGE & NORMAL ")) : this._renderer.textureMode = e;
                }, u.default.prototype.textureWrap = function(e) {
                    for(var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : e, r = (this._renderer.textureWrapX = e, this._renderer.textureWrapY = t, this._renderer.textures), o = 0; o < r.length; o++)r[o].setWrapMode(e, t);
                }, u.default.prototype.normalMaterial = function() {
                    this._assert3d("normalMaterial");
                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];
                    return u.default._validateParameters("normalMaterial", t), this._renderer.drawMode = n.FILL, this._renderer._useSpecularMaterial = !1, this._renderer._useEmissiveMaterial = !1, this._renderer._useNormalMaterial = !0, this._renderer.curFillColor = [
                        1,
                        1,
                        1,
                        1
                    ], this._renderer._setProperty("_doFill", !0), this.noStroke(), this;
                }, u.default.prototype.ambientMaterial = function(e, t, r) {
                    this._assert3d("ambientMaterial"), u.default._validateParameters("ambientMaterial", arguments);
                    var o = u.default.prototype.color.apply(this, arguments);
                    return this._renderer.curAmbientColor = o._array, this._renderer._useNormalMaterial = !1, this._renderer._enableLighting = !0, this._renderer._tex = null, this._renderer._setProperty("_doFill", !0), this;
                }, u.default.prototype.emissiveMaterial = function(e, t, r, o) {
                    this._assert3d("emissiveMaterial"), u.default._validateParameters("emissiveMaterial", arguments);
                    var n = u.default.prototype.color.apply(this, arguments);
                    return this._renderer.curEmissiveColor = n._array, this._renderer._useEmissiveMaterial = !0, this._renderer._useNormalMaterial = !1, this._renderer._enableLighting = !0, this._renderer._tex = null, this;
                }, u.default.prototype.specularMaterial = function(e, t, r, o) {
                    this._assert3d("specularMaterial"), u.default._validateParameters("specularMaterial", arguments);
                    var n = u.default.prototype.color.apply(this, arguments);
                    return this._renderer.curSpecularColor = n._array, this._renderer._useSpecularMaterial = !0, this._renderer._useNormalMaterial = !1, this._renderer._enableLighting = !0, this._renderer._tex = null, this;
                }, u.default.prototype.shininess = function(e) {
                    return this._assert3d("shininess"), u.default._validateParameters("shininess", arguments), this._renderer._useShininess = e = e < 1 ? 1 : e, this;
                }, u.default.RendererGL.prototype._applyColorBlend = function(e) {
                    var t = this.GL, r = this.drawMode === n.TEXTURE || this.curBlendMode !== n.BLEND || e[e.length - 1] < 1 || this._isErasing;
                    return r !== this._isBlending && (r || this.curBlendMode !== n.BLEND && this.curBlendMode !== n.ADD ? t.enable(t.BLEND) : t.disable(t.BLEND), t.depthMask(!0), this._isBlending = r), this._applyBlendMode(), e;
                }, u.default.RendererGL.prototype._applyBlendMode = function() {
                    if (this._cachedBlendMode !== this.curBlendMode) {
                        var e = this.GL;
                        switch(this.curBlendMode){
                            case n.BLEND:
                                e.blendEquation(e.FUNC_ADD), e.blendFunc(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA);
                                break;
                            case n.ADD:
                                e.blendEquation(e.FUNC_ADD), e.blendFunc(e.SRC_ALPHA, e.ONE);
                                break;
                            case n.REMOVE:
                                e.blendEquation(e.FUNC_REVERSE_SUBTRACT), e.blendFunc(e.SRC_ALPHA, e.DST_ALPHA);
                                break;
                            case n.MULTIPLY:
                                e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ZERO, e.SRC_COLOR, e.ONE, e.ONE);
                                break;
                            case n.SCREEN:
                                e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR, e.ONE, e.ONE, e.ONE);
                                break;
                            case n.EXCLUSION:
                                e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR, e.ONE_MINUS_SRC_COLOR, e.ONE, e.ONE);
                                break;
                            case n.REPLACE:
                                e.blendEquation(e.FUNC_ADD), e.blendFunc(e.ONE, e.ZERO);
                                break;
                            case n.SUBTRACT:
                                e.blendEquationSeparate(e.FUNC_REVERSE_SUBTRACT, e.FUNC_ADD), e.blendFuncSeparate(e.SRC_ALPHA, e.ONE, e.ONE, e.ONE);
                                break;
                            case n.DARKEST:
                                this.blendExt ? (e.blendEquationSeparate(this.blendExt.MIN_EXT, e.FUNC_ADD), e.blendFuncSeparate(e.ONE, e.ONE, e.ONE, e.ONE)) : console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");
                                break;
                            case n.LIGHTEST:
                                this.blendExt ? (e.blendEquationSeparate(this.blendExt.MAX_EXT, e.FUNC_ADD), e.blendFuncSeparate(e.ONE, e.ONE, e.ONE, e.ONE)) : console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");
                                break;
                            default:
                                console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.");
                        }
                        this._isErasing || (this._cachedBlendMode = this.curBlendMode);
                    }
                };
                var s = u.default;
                r.default = s;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "./p5.Texture": 323,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.join": 159,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        315: [
            function(e, t, r) {
                "use strict";
                Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var f = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                f.default.prototype.camera = function() {
                    var e;
                    this._assert3d("camera");
                    for(var t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return f.default._validateParameters("camera", r), (e = this._renderer._curCamera).camera.apply(e, r), this;
                }, f.default.prototype.perspective = function() {
                    var e;
                    this._assert3d("perspective");
                    for(var t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return f.default._validateParameters("perspective", r), (e = this._renderer._curCamera).perspective.apply(e, r), this;
                }, f.default.prototype.ortho = function() {
                    var e;
                    this._assert3d("ortho");
                    for(var t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return f.default._validateParameters("ortho", r), (e = this._renderer._curCamera).ortho.apply(e, r), this;
                }, f.default.prototype.frustum = function() {
                    var e;
                    this._assert3d("frustum");
                    for(var t = arguments.length, r = new Array(t), o = 0; o < t; o++)r[o] = arguments[o];
                    return f.default._validateParameters("frustum", r), (e = this._renderer._curCamera).frustum.apply(e, r), this;
                }, f.default.prototype.createCamera = function() {
                    this._assert3d("createCamera");
                    var e = new f.default.Camera(this._renderer);
                    return e._computeCameraDefaultSettings(), e._setDefaultCamera(), this._renderer._curCamera = e;
                }, f.default.Camera = function(e) {
                    this._renderer = e, this.cameraType = "default", this.cameraMatrix = new f.default.Matrix, this.projMatrix = new f.default.Matrix;
                }, f.default.Camera.prototype.perspective = function(e, t, r, o) {
                    this.cameraType = 0 < arguments.length ? "custom" : "default", void 0 === e ? (e = this.defaultCameraFOV, this.cameraFOV = e) : this.cameraFOV = this._renderer._pInst._toRadians(e), void 0 === t && (t = this.defaultAspectRatio), void 0 === r && (r = this.defaultCameraNear), void 0 === o && (o = this.defaultCameraFar), r <= 1e-4 && (r = .01, console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")), o < r && console.log("Perspective far plane value is less than near plane value. Nothing will be shown."), this.aspectRatio = t, this.cameraNear = r, this.cameraFar = o, this.projMatrix = f.default.Matrix.identity();
                    var e = 1 / Math.tan(this.cameraFOV / 2), n = 1 / (this.cameraNear - this.cameraFar);
                    this.projMatrix.set(e / t, 0, 0, 0, 0, -e, 0, 0, 0, 0, (o + r) * n, -1, 0, 0, 2 * o * r * n, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]);
                }, f.default.Camera.prototype.ortho = function(e, t, r, o, n, s) {
                    void 0 === e && (e = -this._renderer.width / 2), void 0 === t && (t = +this._renderer.width / 2), void 0 === r && (r = -this._renderer.height / 2), void 0 === n && (n = 0);
                    var i = t - e, a = (o = void 0 === o ? +this._renderer.height / 2 : o) - r, l = (s = void 0 === s ? Math.max(this._renderer.width, this._renderer.height) : s) - n, u = 2 / i, c = 2 / a, d = -2 / l, t = -(t + e) / i, e = -(o + r) / a, i = -(s + n) / l;
                    this.projMatrix = f.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -c, 0, 0, 0, 0, d, 0, t, e, i, 1), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
                }, f.default.Camera.prototype.frustum = function(e, t, r, o, n, s) {
                    void 0 === e && (e = -this._renderer.width / 2), void 0 === t && (t = +this._renderer.width / 2), void 0 === r && (r = -this._renderer.height / 2), void 0 === n && (n = 0);
                    var i = t - e, a = (o = void 0 === o ? +this._renderer.height / 2 : o) - r, l = (s = void 0 === s ? Math.max(this._renderer.width, this._renderer.height) : s) - n, u = 2 * n / i, c = 2 * n / a, d = -2 * s * n / l, t = (t + e) / i, e = (o + r) / a, i = -(s + n) / l;
                    this.projMatrix = f.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, c, 0, 0, t, e, i, -1, 0, 0, d, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
                }, f.default.Camera.prototype._rotateView = function(e, t, r, o) {
                    var n = this.centerX, s = this.centerY, i = this.centerZ, a = (n -= this.eyeX, s -= this.eyeY, i -= this.eyeZ, f.default.Matrix.identity(this._renderer._pInst)), e = (a.rotate(this._renderer._pInst._toRadians(e), t, r, o), [
                        n * a.mat4[0] + s * a.mat4[4] + i * a.mat4[8],
                        n * a.mat4[1] + s * a.mat4[5] + i * a.mat4[9],
                        n * a.mat4[2] + s * a.mat4[6] + i * a.mat4[10]
                    ]);
                    e[0] += this.eyeX, e[1] += this.eyeY, e[2] += this.eyeZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, e[0], e[1], e[2], this.upX, this.upY, this.upZ);
                }, f.default.Camera.prototype.pan = function(e) {
                    var t = this._getLocalAxes();
                    this._rotateView(e, t.y[0], t.y[1], t.y[2]);
                }, f.default.Camera.prototype.tilt = function(e) {
                    var t = this._getLocalAxes();
                    this._rotateView(e, t.x[0], t.x[1], t.x[2]);
                }, f.default.Camera.prototype.lookAt = function(e, t, r) {
                    this.camera(this.eyeX, this.eyeY, this.eyeZ, e, t, r, this.upX, this.upY, this.upZ);
                }, f.default.Camera.prototype.camera = function(e, t, r, o, n, s, i, a, l) {
                    void 0 === e && (e = this.defaultEyeX, t = this.defaultEyeY, r = this.defaultEyeZ, o = e, n = t, a = 1, l = i = s = 0), this.eyeX = e, this.eyeY = t, this.eyeZ = r, void 0 !== o && (this.centerX = o, this.centerY = n, this.centerZ = s), void 0 !== i && (this.upX = i, this.upY = a, this.upZ = l);
                    o = this._getLocalAxes(), this.cameraMatrix.set(o.x[0], o.y[0], o.z[0], 0, o.x[1], o.y[1], o.z[1], 0, o.x[2], o.y[2], o.z[2], 0, 0, 0, 0, 1), n = -e;
                    return this.cameraMatrix.translate([
                        n,
                        -t,
                        -r
                    ]), this._isActive() && this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0], this.cameraMatrix.mat4[1], this.cameraMatrix.mat4[2], this.cameraMatrix.mat4[3], this.cameraMatrix.mat4[4], this.cameraMatrix.mat4[5], this.cameraMatrix.mat4[6], this.cameraMatrix.mat4[7], this.cameraMatrix.mat4[8], this.cameraMatrix.mat4[9], this.cameraMatrix.mat4[10], this.cameraMatrix.mat4[11], this.cameraMatrix.mat4[12], this.cameraMatrix.mat4[13], this.cameraMatrix.mat4[14], this.cameraMatrix.mat4[15]), this;
                }, f.default.Camera.prototype.move = function(e, t, r) {
                    var o = this._getLocalAxes(), e = [
                        o.x[0] * e,
                        o.x[1] * e,
                        o.x[2] * e
                    ], t = [
                        o.y[0] * t,
                        o.y[1] * t,
                        o.y[2] * t
                    ], o = [
                        o.z[0] * r,
                        o.z[1] * r,
                        o.z[2] * r
                    ];
                    this.camera(this.eyeX + e[0] + t[0] + o[0], this.eyeY + e[1] + t[1] + o[1], this.eyeZ + e[2] + t[2] + o[2], this.centerX + e[0] + t[0] + o[0], this.centerY + e[1] + t[1] + o[1], this.centerZ + e[2] + t[2] + o[2], 0, 1, 0);
                }, f.default.Camera.prototype.setPosition = function(e, t, r) {
                    var o = e - this.eyeX, n = t - this.eyeY, s = r - this.eyeZ;
                    this.camera(e, t, r, this.centerX + o, this.centerY + n, this.centerZ + s, 0, 1, 0);
                }, f.default.Camera.prototype._computeCameraDefaultSettings = function() {
                    this.defaultCameraFOV = 60 / 180 * Math.PI, this.defaultAspectRatio = this._renderer.width / this._renderer.height, this.defaultEyeX = 0, this.defaultEyeY = 0, this.defaultEyeZ = this._renderer.height / 2 / Math.tan(this.defaultCameraFOV / 2), this.defaultCenterX = 0, this.defaultCenterY = 0, this.defaultCenterZ = 0, this.defaultCameraNear = .1 * this.defaultEyeZ, this.defaultCameraFar = 10 * this.defaultEyeZ;
                }, f.default.Camera.prototype._setDefaultCamera = function() {
                    this.cameraFOV = this.defaultCameraFOV, this.aspectRatio = this.defaultAspectRatio, this.eyeX = this.defaultEyeX, this.eyeY = this.defaultEyeY, this.eyeZ = this.defaultEyeZ, this.centerX = this.defaultCenterX, this.centerY = this.defaultCenterY, this.centerZ = this.defaultCenterZ, this.upX = 0, this.upY = 1, this.upZ = 0, this.cameraNear = this.defaultCameraNear, this.cameraFar = this.defaultCameraFar, this.perspective(), this.camera(), this.cameraType = "default";
                }, f.default.Camera.prototype._resize = function() {
                    "default" === this.cameraType ? (this._computeCameraDefaultSettings(), this._setDefaultCamera()) : this.perspective(this.cameraFOV, this._renderer.width / this._renderer.height);
                }, f.default.Camera.prototype.copy = function() {
                    var e = new f.default.Camera(this._renderer);
                    return e.cameraFOV = this.cameraFOV, e.aspectRatio = this.aspectRatio, e.eyeX = this.eyeX, e.eyeY = this.eyeY, e.eyeZ = this.eyeZ, e.centerX = this.centerX, e.centerY = this.centerY, e.centerZ = this.centerZ, e.cameraNear = this.cameraNear, e.cameraFar = this.cameraFar, e.cameraType = this.cameraType, e.cameraMatrix = this.cameraMatrix.copy(), e.projMatrix = this.projMatrix.copy(), e;
                }, f.default.Camera.prototype._getLocalAxes = function() {
                    var e = this.eyeX - this.centerX, t = this.eyeY - this.centerY, r = this.eyeZ - this.centerZ, o = Math.sqrt(e * e + t * t + r * r), o = (0 !== o && (e /= o, t /= o, r /= o), this.upX), n = (a = this.upY) * r - (l = this.upZ) * t, s = -o * r + l * e, i = o * t - a * e, o = t * i - r * s, a = -e * i + r * n, l = e * s - t * n, u = Math.sqrt(n * n + s * s + i * i), u = (0 !== u && (n /= u, s /= u, i /= u), Math.sqrt(o * o + a * a + l * l));
                    return 0 !== u && (o /= u, a /= u, l /= u), {
                        x: [
                            n,
                            s,
                            i
                        ],
                        y: [
                            o,
                            a,
                            l
                        ],
                        z: [
                            e,
                            t,
                            r
                        ]
                    };
                }, f.default.Camera.prototype._orbit = function(e, t, r) {
                    var o = this.eyeX - this.centerX, n = this.eyeY - this.centerY, s = this.eyeZ - this.centerZ, i = Math.sqrt(o * o + n * n + s * s), o = Math.atan2(o, s), s = Math.acos(Math.max(-1, Math.min(1, n / i))), n = (o += e, (i += r) < 0 && (i = .1), (s += t) > Math.PI ? s = Math.PI : s <= 0 && (s = .001), Math.sin(s) * i * Math.sin(o)), e = Math.cos(s) * i, r = Math.sin(s) * i * Math.cos(o);
                    this.camera(n + this.centerX, e + this.centerY, r + this.centerZ, this.centerX, this.centerY, this.centerZ, 0, 1, 0);
                }, f.default.Camera.prototype._isActive = function() {
                    return this === this._renderer._curCamera;
                }, f.default.prototype.setCamera = function(e) {
                    this._renderer._curCamera = e, this._renderer.uPMatrix.set(e.projMatrix.mat4[0], e.projMatrix.mat4[1], e.projMatrix.mat4[2], e.projMatrix.mat4[3], e.projMatrix.mat4[4], e.projMatrix.mat4[5], e.projMatrix.mat4[6], e.projMatrix.mat4[7], e.projMatrix.mat4[8], e.projMatrix.mat4[9], e.projMatrix.mat4[10], e.projMatrix.mat4[11], e.projMatrix.mat4[12], e.projMatrix.mat4[13], e.projMatrix.mat4[14], e.projMatrix.mat4[15]);
                };
                e = f.default.Camera;
                r.default = e;
            },
            {
                "../core/main": 267
            }
        ],
        316: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.string.sub"), e("core-js/modules/es.string.sub"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                l.default.Geometry = function(e, t, r) {
                    return this.vertices = [], this.lineVertices = [], this.lineNormals = [], this.vertexNormals = [], this.faces = [], this.uvs = [], this.edges = [], this.vertexColors = [], this.detailX = void 0 !== e ? e : 1, this.detailY = void 0 !== t ? t : 1, this.dirtyFlags = {}, r instanceof Function && r.call(this), this;
                }, l.default.Geometry.prototype.reset = function() {
                    this.lineVertices.length = 0, this.lineNormals.length = 0, this.vertices.length = 0, this.edges.length = 0, this.vertexColors.length = 0, this.vertexNormals.length = 0, this.uvs.length = 0, this.dirtyFlags = {};
                }, l.default.Geometry.prototype.computeFaces = function() {
                    this.faces.length = 0;
                    for(var e, t, r, o = this.detailX + 1, n = 0; n < this.detailY; n++)for(var s = 0; s < this.detailX; s++)t = (n + 1) * o + s + 1, this.faces.push([
                        n * o + s,
                        e = n * o + s + 1,
                        r = (n + 1) * o + s
                    ]), this.faces.push([
                        r,
                        e,
                        t
                    ]);
                    return this;
                }, l.default.Geometry.prototype._getFaceNormal = function(e) {
                    var e = this.faces[e], t = this.vertices[e[0]], r = this.vertices[e[1]], e = this.vertices[e[2]], r = l.default.Vector.sub(r, t), e = l.default.Vector.sub(e, t), t = l.default.Vector.cross(r, e), o = l.default.Vector.mag(t), r = o / (l.default.Vector.mag(r) * l.default.Vector.mag(e));
                    return 0 === r || isNaN(r) ? (console.warn("p5.Geometry.prototype._getFaceNormal:", "face has colinear sides or a repeated vertex"), t) : (1 < r && (r = 1), t.mult(Math.asin(r) / o));
                }, l.default.Geometry.prototype.computeNormals = function() {
                    for(var e = this.vertexNormals, t = this.vertices, r = this.faces, o = e.length = 0; o < t.length; ++o)e.push(new l.default.Vector);
                    for(var n = 0; n < r.length; ++n)for(var s = r[n], i = this._getFaceNormal(n), a = 0; a < 3; ++a)e[s[a]].add(i);
                    for(o = 0; o < t.length; ++o)e[o].normalize();
                    return this;
                }, l.default.Geometry.prototype.averageNormals = function() {
                    for(var e = 0; e <= this.detailY; e++){
                        var t = this.detailX + 1, r = l.default.Vector.add(this.vertexNormals[e * t], this.vertexNormals[e * t + this.detailX]), r = l.default.Vector.div(r, 2);
                        this.vertexNormals[e * t] = r, this.vertexNormals[e * t + this.detailX] = r;
                    }
                    return this;
                }, l.default.Geometry.prototype.averagePoleNormals = function() {
                    for(var e = new l.default.Vector(0, 0, 0), t = 0; t < this.detailX; t++)e.add(this.vertexNormals[t]);
                    for(var e = l.default.Vector.div(e, this.detailX), r = 0; r < this.detailX; r++)this.vertexNormals[r] = e;
                    e = new l.default.Vector(0, 0, 0);
                    for(var o = this.vertices.length - 1; o > this.vertices.length - 1 - this.detailX; o--)e.add(this.vertexNormals[o]);
                    e = l.default.Vector.div(e, this.detailX);
                    for(var n = this.vertices.length - 1; n > this.vertices.length - 1 - this.detailX; n--)this.vertexNormals[n] = e;
                    return this;
                }, l.default.Geometry.prototype._makeTriangleEdges = function() {
                    if (this.edges.length = 0, Array.isArray(this.strokeIndices)) for(var e = 0, t = this.strokeIndices.length; e < t; e++)this.edges.push(this.strokeIndices[e]);
                    else for(var r = 0; r < this.faces.length; r++)this.edges.push([
                        this.faces[r][0],
                        this.faces[r][1]
                    ]), this.edges.push([
                        this.faces[r][1],
                        this.faces[r][2]
                    ]), this.edges.push([
                        this.faces[r][2],
                        this.faces[r][0]
                    ]);
                    return this;
                }, l.default.Geometry.prototype._edgesToVertices = function() {
                    this.lineVertices.length = 0;
                    for(var e = this.lineNormals.length = 0; e < this.edges.length; e++){
                        var t = this.vertices[this.edges[e][0]], r = this.vertices[this.edges[e][1]], o = r.copy().sub(t).normalize(), n = t.array(), t = t.array(), s = r.array(), r = r.array(), i = o.array(), o = o.array();
                        i.push(1), o.push(-1), this.lineNormals.push(i, o, i, i, o, o), this.lineVertices.push(n, t, s, s, t, r);
                    }
                    return this;
                }, l.default.Geometry.prototype.normalize = function() {
                    if (0 < this.vertices.length) {
                        for(var e = this.vertices[0].copy(), t = this.vertices[0].copy(), r = 0; r < this.vertices.length; r++)e.x = Math.max(e.x, this.vertices[r].x), t.x = Math.min(t.x, this.vertices[r].x), e.y = Math.max(e.y, this.vertices[r].y), t.y = Math.min(t.y, this.vertices[r].y), e.z = Math.max(e.z, this.vertices[r].z), t.z = Math.min(t.z, this.vertices[r].z);
                        for(var o = l.default.Vector.lerp(e, t, .5), n = l.default.Vector.sub(e, t), s = 200 / Math.max(Math.max(n.x, n.y), n.z), i = 0; i < this.vertices.length; i++)this.vertices[i].sub(o), this.vertices[i].mult(s);
                    }
                    return this;
                };
                e = l.default.Geometry;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.string.sub": 192
            }
        ],
        317: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.typed-array.float32-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.typed-array.float32-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var O = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                var o = Array, L = function(e) {
                    return e instanceof Array;
                }, e = ("undefined" != typeof Float32Array && (o = Float32Array, L = function(e) {
                    return e instanceof Array || e instanceof Float32Array;
                }), O.default.Matrix = function() {
                    for(var e = new Array(arguments.length), t = 0; t < e.length; ++t)e[t] = arguments[t];
                    return e.length && e[e.length - 1] instanceof O.default && (this.p5 = e[e.length - 1]), "mat3" === e[0] ? this.mat3 = Array.isArray(e[1]) ? e[1] : new o([
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]) : this.mat4 = Array.isArray(e[0]) ? e[0] : new o([
                        1,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        1
                    ]), this;
                }, O.default.Matrix.prototype.set = function(e) {
                    return e instanceof O.default.Matrix ? this.mat4 = e.mat4 : L(e) ? this.mat4 = e : 16 === arguments.length && (this.mat4[0] = e, this.mat4[1] = arguments[1], this.mat4[2] = arguments[2], this.mat4[3] = arguments[3], this.mat4[4] = arguments[4], this.mat4[5] = arguments[5], this.mat4[6] = arguments[6], this.mat4[7] = arguments[7], this.mat4[8] = arguments[8], this.mat4[9] = arguments[9], this.mat4[10] = arguments[10], this.mat4[11] = arguments[11], this.mat4[12] = arguments[12], this.mat4[13] = arguments[13], this.mat4[14] = arguments[14], this.mat4[15] = arguments[15]), this;
                }, O.default.Matrix.prototype.get = function() {
                    return new O.default.Matrix(this.mat4, this.p5);
                }, O.default.Matrix.prototype.copy = function() {
                    var e = new O.default.Matrix(this.p5);
                    return e.mat4[0] = this.mat4[0], e.mat4[1] = this.mat4[1], e.mat4[2] = this.mat4[2], e.mat4[3] = this.mat4[3], e.mat4[4] = this.mat4[4], e.mat4[5] = this.mat4[5], e.mat4[6] = this.mat4[6], e.mat4[7] = this.mat4[7], e.mat4[8] = this.mat4[8], e.mat4[9] = this.mat4[9], e.mat4[10] = this.mat4[10], e.mat4[11] = this.mat4[11], e.mat4[12] = this.mat4[12], e.mat4[13] = this.mat4[13], e.mat4[14] = this.mat4[14], e.mat4[15] = this.mat4[15], e;
                }, O.default.Matrix.identity = function(e) {
                    return new O.default.Matrix(e);
                }, O.default.Matrix.prototype.transpose = function(e) {
                    var t, r, o, n, s, i;
                    return e instanceof O.default.Matrix ? (t = e.mat4[1], r = e.mat4[2], o = e.mat4[3], n = e.mat4[6], s = e.mat4[7], i = e.mat4[11], this.mat4[0] = e.mat4[0], this.mat4[1] = e.mat4[4], this.mat4[2] = e.mat4[8], this.mat4[3] = e.mat4[12], this.mat4[4] = t, this.mat4[5] = e.mat4[5], this.mat4[6] = e.mat4[9], this.mat4[7] = e.mat4[13], this.mat4[8] = r, this.mat4[9] = n, this.mat4[10] = e.mat4[10], this.mat4[11] = e.mat4[14], this.mat4[12] = o, this.mat4[13] = s, this.mat4[14] = i, this.mat4[15] = e.mat4[15]) : L(e) && (t = e[1], r = e[2], o = e[3], n = e[6], s = e[7], i = e[11], this.mat4[0] = e[0], this.mat4[1] = e[4], this.mat4[2] = e[8], this.mat4[3] = e[12], this.mat4[4] = t, this.mat4[5] = e[5], this.mat4[6] = e[9], this.mat4[7] = e[13], this.mat4[8] = r, this.mat4[9] = n, this.mat4[10] = e[10], this.mat4[11] = e[14], this.mat4[12] = o, this.mat4[13] = s, this.mat4[14] = i, this.mat4[15] = e[15]), this;
                }, O.default.Matrix.prototype.invert = function(e) {
                    e instanceof O.default.Matrix ? (t = e.mat4[0], r = e.mat4[1], o = e.mat4[2], n = e.mat4[3], s = e.mat4[4], i = e.mat4[5], a = e.mat4[6], l = e.mat4[7], u = e.mat4[8], c = e.mat4[9], d = e.mat4[10], f = e.mat4[11], h = e.mat4[12], p = e.mat4[13], m = e.mat4[14], y = e.mat4[15]) : L(e) && (t = e[0], r = e[1], o = e[2], n = e[3], s = e[4], i = e[5], a = e[6], l = e[7], u = e[8], c = e[9], d = e[10], f = e[11], h = e[12], p = e[13], m = e[14], y = e[15]);
                    var t, r, o, n, s, i, a, l, u, c, d, f, h, p, m, y, e = t * i - r * s, g = t * a - o * s, v = t * l - n * s, b = r * a - o * i, j = r * l - n * i, _ = o * l - n * a, x = u * p - c * h, w = u * m - d * h, S = u * y - f * h, M = c * m - d * p, E = c * y - f * p, T = d * y - f * m, C = e * T - g * E + v * M + b * S - j * w + _ * x;
                    return C ? (this.mat4[0] = (i * T - a * E + l * M) * (C = 1 / C), this.mat4[1] = (o * E - r * T - n * M) * C, this.mat4[2] = (p * _ - m * j + y * b) * C, this.mat4[3] = (d * j - c * _ - f * b) * C, this.mat4[4] = (a * S - s * T - l * w) * C, this.mat4[5] = (t * T - o * S + n * w) * C, this.mat4[6] = (m * v - h * _ - y * g) * C, this.mat4[7] = (u * _ - d * v + f * g) * C, this.mat4[8] = (s * E - i * S + l * x) * C, this.mat4[9] = (r * S - t * E - n * x) * C, this.mat4[10] = (h * j - p * v + y * e) * C, this.mat4[11] = (c * v - u * j - f * e) * C, this.mat4[12] = (i * w - s * M - a * x) * C, this.mat4[13] = (t * M - r * w + o * x) * C, this.mat4[14] = (p * g - h * b - m * e) * C, this.mat4[15] = (u * b - c * g + d * e) * C, this) : null;
                }, O.default.Matrix.prototype.invert3x3 = function() {
                    var e = this.mat3[0], t = this.mat3[1], r = this.mat3[2], o = this.mat3[3], n = this.mat3[4], s = this.mat3[5], i = this.mat3[6], a = this.mat3[7], l = this.mat3[8], u = l * n - s * a, c = -l * o + s * i, d = a * o - n * i, f = e * u + t * c + r * d;
                    return f ? (this.mat3[0] = u * (f = 1 / f), this.mat3[1] = (-l * t + r * a) * f, this.mat3[2] = (s * t - r * n) * f, this.mat3[3] = c * f, this.mat3[4] = (l * e - r * i) * f, this.mat3[5] = (-s * e + r * o) * f, this.mat3[6] = d * f, this.mat3[7] = (-a * e + t * i) * f, this.mat3[8] = (n * e - t * o) * f, this) : null;
                }, O.default.Matrix.prototype.transpose3x3 = function(e) {
                    var t = e[1], r = e[2], o = e[5];
                    return this.mat3[1] = e[3], this.mat3[2] = e[6], this.mat3[3] = t, this.mat3[5] = e[7], this.mat3[6] = r, this.mat3[7] = o, this;
                }, O.default.Matrix.prototype.inverseTranspose = function(e) {
                    void 0 === this.mat3 ? console.error("sorry, this function only works with mat3") : (this.mat3[0] = e.mat4[0], this.mat3[1] = e.mat4[1], this.mat3[2] = e.mat4[2], this.mat3[3] = e.mat4[4], this.mat3[4] = e.mat4[5], this.mat3[5] = e.mat4[6], this.mat3[6] = e.mat4[8], this.mat3[7] = e.mat4[9], this.mat3[8] = e.mat4[10]);
                    e = this.invert3x3();
                    if (e) e.transpose3x3(this.mat3);
                    else for(var t = 0; t < 9; t++)this.mat3[t] = 0;
                    return this;
                }, O.default.Matrix.prototype.determinant = function() {
                    var e = this.mat4[0] * this.mat4[5] - this.mat4[1] * this.mat4[4], t = this.mat4[0] * this.mat4[6] - this.mat4[2] * this.mat4[4], r = this.mat4[0] * this.mat4[7] - this.mat4[3] * this.mat4[4], o = this.mat4[1] * this.mat4[6] - this.mat4[2] * this.mat4[5], n = this.mat4[1] * this.mat4[7] - this.mat4[3] * this.mat4[5], s = this.mat4[2] * this.mat4[7] - this.mat4[3] * this.mat4[6], i = this.mat4[8] * this.mat4[13] - this.mat4[9] * this.mat4[12], a = this.mat4[8] * this.mat4[14] - this.mat4[10] * this.mat4[12], l = this.mat4[8] * this.mat4[15] - this.mat4[11] * this.mat4[12], u = this.mat4[9] * this.mat4[14] - this.mat4[10] * this.mat4[13], c = this.mat4[9] * this.mat4[15] - this.mat4[11] * this.mat4[13];
                    return e * (this.mat4[10] * this.mat4[15] - this.mat4[11] * this.mat4[14]) - t * c + r * u + o * l - n * a + s * i;
                }, O.default.Matrix.prototype.mult = function(e) {
                    var t;
                    if (e === this || e === this.mat4) t = this.copy().mat4;
                    else if (e instanceof O.default.Matrix) t = e.mat4;
                    else if (L(e)) t = e;
                    else {
                        if (16 !== arguments.length) return;
                        t = arguments;
                    }
                    var e = this.mat4[0], r = this.mat4[1], o = this.mat4[2], n = this.mat4[3];
                    return this.mat4[0] = e * t[0] + r * t[4] + o * t[8] + n * t[12], this.mat4[1] = e * t[1] + r * t[5] + o * t[9] + n * t[13], this.mat4[2] = e * t[2] + r * t[6] + o * t[10] + n * t[14], this.mat4[3] = e * t[3] + r * t[7] + o * t[11] + n * t[15], e = this.mat4[4], r = this.mat4[5], o = this.mat4[6], n = this.mat4[7], this.mat4[4] = e * t[0] + r * t[4] + o * t[8] + n * t[12], this.mat4[5] = e * t[1] + r * t[5] + o * t[9] + n * t[13], this.mat4[6] = e * t[2] + r * t[6] + o * t[10] + n * t[14], this.mat4[7] = e * t[3] + r * t[7] + o * t[11] + n * t[15], e = this.mat4[8], r = this.mat4[9], o = this.mat4[10], n = this.mat4[11], this.mat4[8] = e * t[0] + r * t[4] + o * t[8] + n * t[12], this.mat4[9] = e * t[1] + r * t[5] + o * t[9] + n * t[13], this.mat4[10] = e * t[2] + r * t[6] + o * t[10] + n * t[14], this.mat4[11] = e * t[3] + r * t[7] + o * t[11] + n * t[15], e = this.mat4[12], r = this.mat4[13], o = this.mat4[14], n = this.mat4[15], this.mat4[12] = e * t[0] + r * t[4] + o * t[8] + n * t[12], this.mat4[13] = e * t[1] + r * t[5] + o * t[9] + n * t[13], this.mat4[14] = e * t[2] + r * t[6] + o * t[10] + n * t[14], this.mat4[15] = e * t[3] + r * t[7] + o * t[11] + n * t[15], this;
                }, O.default.Matrix.prototype.apply = function(e) {
                    var t;
                    if (e === this || e === this.mat4) t = this.copy().mat4;
                    else if (e instanceof O.default.Matrix) t = e.mat4;
                    else if (L(e)) t = e;
                    else {
                        if (16 !== arguments.length) return;
                        t = arguments;
                    }
                    var e = this.mat4, r = e[0], o = e[4], n = e[8], s = e[12], r = (e[0] = t[0] * r + t[1] * o + t[2] * n + t[3] * s, e[4] = t[4] * r + t[5] * o + t[6] * n + t[7] * s, e[8] = t[8] * r + t[9] * o + t[10] * n + t[11] * s, e[12] = t[12] * r + t[13] * o + t[14] * n + t[15] * s, e[1]), o = e[5], n = e[9], s = e[13], r = (e[1] = t[0] * r + t[1] * o + t[2] * n + t[3] * s, e[5] = t[4] * r + t[5] * o + t[6] * n + t[7] * s, e[9] = t[8] * r + t[9] * o + t[10] * n + t[11] * s, e[13] = t[12] * r + t[13] * o + t[14] * n + t[15] * s, e[2]), o = e[6], n = e[10], s = e[14], r = (e[2] = t[0] * r + t[1] * o + t[2] * n + t[3] * s, e[6] = t[4] * r + t[5] * o + t[6] * n + t[7] * s, e[10] = t[8] * r + t[9] * o + t[10] * n + t[11] * s, e[14] = t[12] * r + t[13] * o + t[14] * n + t[15] * s, e[3]), o = e[7], n = e[11], s = e[15];
                    return e[3] = t[0] * r + t[1] * o + t[2] * n + t[3] * s, e[7] = t[4] * r + t[5] * o + t[6] * n + t[7] * s, e[11] = t[8] * r + t[9] * o + t[10] * n + t[11] * s, e[15] = t[12] * r + t[13] * o + t[14] * n + t[15] * s, this;
                }, O.default.Matrix.prototype.scale = function(e, t, r) {
                    return e instanceof O.default.Vector ? (t = e.y, r = e.z, e = e.x) : e instanceof Array && (t = e[1], r = e[2], e = e[0]), this.mat4[0] *= e, this.mat4[1] *= e, this.mat4[2] *= e, this.mat4[3] *= e, this.mat4[4] *= t, this.mat4[5] *= t, this.mat4[6] *= t, this.mat4[7] *= t, this.mat4[8] *= r, this.mat4[9] *= r, this.mat4[10] *= r, this.mat4[11] *= r, this;
                }, O.default.Matrix.prototype.rotate = function(e, t, r, o) {
                    t instanceof O.default.Vector ? (r = t.y, o = t.z, t = t.x) : t instanceof Array && (r = t[1], o = t[2], t = t[0]);
                    var n = Math.sqrt(t * t + r * r + o * o), n = (t *= 1 / n, r *= 1 / n, o *= 1 / n, this.mat4[0]), s = this.mat4[1], i = this.mat4[2], a = this.mat4[3], l = this.mat4[4], u = this.mat4[5], c = this.mat4[6], d = this.mat4[7], f = this.mat4[8], h = this.mat4[9], p = this.mat4[10], m = this.mat4[11], y = Math.sin(e), e = Math.cos(e), g = 1 - e, v = t * t * g + e, b = r * t * g + o * y, j = o * t * g - r * y, _ = t * r * g - o * y, x = r * r * g + e, w = o * r * g + t * y, S = t * o * g + r * y, r = r * o * g - t * y, t = o * o * g + e;
                    return this.mat4[0] = n * v + l * b + f * j, this.mat4[1] = s * v + u * b + h * j, this.mat4[2] = i * v + c * b + p * j, this.mat4[3] = a * v + d * b + m * j, this.mat4[4] = n * _ + l * x + f * w, this.mat4[5] = s * _ + u * x + h * w, this.mat4[6] = i * _ + c * x + p * w, this.mat4[7] = a * _ + d * x + m * w, this.mat4[8] = n * S + l * r + f * t, this.mat4[9] = s * S + u * r + h * t, this.mat4[10] = i * S + c * r + p * t, this.mat4[11] = a * S + d * r + m * t, this;
                }, O.default.Matrix.prototype.translate = function(e) {
                    var t = e[0], r = e[1], e = e[2] || 0;
                    this.mat4[12] += this.mat4[0] * t + this.mat4[4] * r + this.mat4[8] * e, this.mat4[13] += this.mat4[1] * t + this.mat4[5] * r + this.mat4[9] * e, this.mat4[14] += this.mat4[2] * t + this.mat4[6] * r + this.mat4[10] * e, this.mat4[15] += this.mat4[3] * t + this.mat4[7] * r + this.mat4[11] * e;
                }, O.default.Matrix.prototype.rotateX = function(e) {
                    this.rotate(e, 1, 0, 0);
                }, O.default.Matrix.prototype.rotateY = function(e) {
                    this.rotate(e, 0, 1, 0);
                }, O.default.Matrix.prototype.rotateZ = function(e) {
                    this.rotate(e, 0, 0, 1);
                }, O.default.Matrix.prototype.perspective = function(e, t, r, o) {
                    var e = 1 / Math.tan(e / 2), n = 1 / (r - o);
                    return this.mat4[0] = e / t, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = e, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = (o + r) * n, this.mat4[11] = -1, this.mat4[12] = 0, this.mat4[13] = 0, this.mat4[14] = 2 * o * r * n, this.mat4[15] = 0, this;
                }, O.default.Matrix.prototype.ortho = function(e, t, r, o, n, s) {
                    var i = 1 / (e - t), a = 1 / (r - o), l = 1 / (n - s);
                    return this.mat4[0] = -2 * i, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = -2 * a, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = 2 * l, this.mat4[11] = 0, this.mat4[12] = (e + t) * i, this.mat4[13] = (o + r) * a, this.mat4[14] = (s + n) * l, this.mat4[15] = 1, this;
                }, O.default.Matrix);
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.typed-array.copy-within": 197,
                "core-js/modules/es.typed-array.every": 198,
                "core-js/modules/es.typed-array.fill": 199,
                "core-js/modules/es.typed-array.filter": 200,
                "core-js/modules/es.typed-array.find": 202,
                "core-js/modules/es.typed-array.find-index": 201,
                "core-js/modules/es.typed-array.float32-array": 203,
                "core-js/modules/es.typed-array.for-each": 205,
                "core-js/modules/es.typed-array.includes": 206,
                "core-js/modules/es.typed-array.index-of": 207,
                "core-js/modules/es.typed-array.iterator": 210,
                "core-js/modules/es.typed-array.join": 211,
                "core-js/modules/es.typed-array.last-index-of": 212,
                "core-js/modules/es.typed-array.map": 213,
                "core-js/modules/es.typed-array.reduce": 215,
                "core-js/modules/es.typed-array.reduce-right": 214,
                "core-js/modules/es.typed-array.reverse": 216,
                "core-js/modules/es.typed-array.set": 217,
                "core-js/modules/es.typed-array.slice": 218,
                "core-js/modules/es.typed-array.some": 219,
                "core-js/modules/es.typed-array.sort": 220,
                "core-js/modules/es.typed-array.subarray": 221,
                "core-js/modules/es.typed-array.to-locale-string": 222,
                "core-js/modules/es.typed-array.to-string": 223
            }
        ],
        318: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.array.map"), e("core-js/modules/es.array.map"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                e = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                e.default.RenderBuffer = function(e, t, r, o, n, s) {
                    this.size = e, this.src = t, this.dst = r, this.attr = o, this._renderer = n, this.map = s;
                }, e.default.RenderBuffer.prototype._prepareBuffer = function(e, t) {
                    var r, o, n, s = t.attributes, i = this._renderer.GL, a = e.model || e, s = s[this.attr];
                    s && (r = e[this.dst], 0 < (o = a[this.src]).length && ((n = !r) && (e[this.dst] = r = i.createBuffer()), i.bindBuffer(i.ARRAY_BUFFER, r), !n && !1 === a.dirtyFlags[this.src] || (n = (e = this.map) ? e(o) : o, this._renderer._bindBuffer(r, i.ARRAY_BUFFER, n), a.dirtyFlags[this.src] = !1), t.enableAttrib(s, this.size)));
                };
                e = e.default.RenderBuffer;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.map": 161
            }
        ],
        319: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.map"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = (n = e("../core/main")) && n.__esModule ? n : {
                    default: n
                }, u = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                function c(e) {
                    return function(e) {
                        if (Array.isArray(e)) {
                            for(var t = 0, r = new Array(e.length); t < e.length; t++)r[t] = e[t];
                            return r;
                        }
                    }(e) || function(e) {
                        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
                    }(e) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                e("./p5.RenderBuffer"), l.default.RendererGL.prototype.beginShape = function(e) {
                    return this.immediateMode.shapeMode = void 0 !== e ? e : u.TRIANGLE_FAN, this.immediateMode.geometry.reset(), this;
                };
                var d = {
                    vertices: 1,
                    vertexNormals: 1,
                    vertexColors: 4,
                    uvs: 2
                }, n = (l.default.RendererGL.prototype.vertex = function(e, t) {
                    if (this.immediateMode.shapeMode === u.QUADS && this.immediateMode.geometry.vertices.length % 6 == 3) for(var r in d){
                        var o = d[r], r = this.immediateMode.geometry[r];
                        r.push.apply(r, c(r.slice(r.length - 3 * o, r.length - 2 * o)).concat(c(r.slice(r.length - o, r.length))));
                    }
                    var n, s, i = n = s = 0, a = (3 === arguments.length ? i = arguments[2] : 4 === arguments.length ? (n = arguments[2], s = arguments[3]) : 5 === arguments.length && (i = arguments[2], n = arguments[3], s = arguments[4]), new l.default.Vector(e, t, i)), a = (this.immediateMode.geometry.vertices.push(a), this.immediateMode.geometry.vertexNormals.push(this._currentNormal), this.curFillColor || [
                        .5,
                        .5,
                        .5,
                        1
                    ]);
                    return this.immediateMode.geometry.vertexColors.push(a[0], a[1], a[2], a[3]), this.textureMode === u.IMAGE && (null !== this._tex ? 0 < this._tex.width && 0 < this._tex.height && (n /= this._tex.width, s /= this._tex.height) : null === this._tex && 4 <= arguments.length && console.warn("You must first call texture() before using vertex() with image based u and v coordinates")), this.immediateMode.geometry.uvs.push(n, s), this.immediateMode._bezierVertex[0] = e, this.immediateMode._bezierVertex[1] = t, this.immediateMode._bezierVertex[2] = i, this.immediateMode._quadraticVertex[0] = e, this.immediateMode._quadraticVertex[1] = t, this.immediateMode._quadraticVertex[2] = i, this;
                }, l.default.RendererGL.prototype.normal = function(e, t, r) {
                    return e instanceof l.default.Vector ? this._currentNormal = e : this._currentNormal = new l.default.Vector(e, t, r), this;
                }, l.default.RendererGL.prototype.endShape = function(e, t, r, o, n, s) {
                    return this.immediateMode.shapeMode === u.POINTS ? this._drawPoints(this.immediateMode.geometry.vertices, this.immediateMode.buffers.point) : (this._processVertices.apply(this, arguments), this._doFill && 1 < this.immediateMode.geometry.vertices.length && this._drawImmediateFill(), this._doStroke && 1 < this.immediateMode.geometry.lineVertices.length && this._drawImmediateStroke(), this.isBezier = !1, this.isQuadratic = !1, this.isCurve = !1, this.immediateMode._bezierVertex.length = 0, this.immediateMode._quadraticVertex.length = 0, this.immediateMode._curveVertex.length = 0), this;
                }, l.default.RendererGL.prototype._processVertices = function(e) {
                    var t;
                    0 !== this.immediateMode.geometry.vertices.length && (t = this._doStroke && this.drawMode !== u.TEXTURE, e = e === u.CLOSE, t && (this.immediateMode.geometry.edges = this._calculateEdges(this.immediateMode.shapeMode, this.immediateMode.geometry.vertices, e), this.immediateMode.geometry._edgesToVertices()), t = this.immediateMode.shapeMode === u.TESS, (this.isBezier || this.isQuadratic || this.isCurve || t) && this.immediateMode.shapeMode !== u.LINES && this._tesselateShape());
                }, l.default.RendererGL.prototype._calculateEdges = function(e, t, r) {
                    var o = [], n = 0;
                    switch(e){
                        case u.TRIANGLE_STRIP:
                            for(n = 0; n < t.length - 2; n++)o.push([
                                n,
                                n + 1
                            ]), o.push([
                                n,
                                n + 2
                            ]);
                            o.push([
                                n,
                                n + 1
                            ]);
                            break;
                        case u.TRIANGLES:
                            for(n = 0; n < t.length - 2; n += 3)o.push([
                                n,
                                n + 1
                            ]), o.push([
                                n + 1,
                                n + 2
                            ]), o.push([
                                n + 2,
                                n
                            ]);
                            break;
                        case u.LINES:
                            for(n = 0; n < t.length - 1; n += 2)o.push([
                                n,
                                n + 1
                            ]);
                            break;
                        case u.QUADS:
                            for(n = 0; n < t.length - 5; n += 6)o.push([
                                n,
                                n + 1
                            ]), o.push([
                                n + 1,
                                n + 2
                            ]), o.push([
                                n + 3,
                                n + 5
                            ]), o.push([
                                n + 4,
                                n + 5
                            ]);
                            break;
                        case u.QUAD_STRIP:
                            for(n = 0; n < t.length - 2; n += 2)o.push([
                                n,
                                n + 1
                            ]), o.push([
                                n,
                                n + 2
                            ]), o.push([
                                n + 1,
                                n + 3
                            ]);
                            o.push([
                                n,
                                n + 1
                            ]);
                            break;
                        default:
                            for(n = 0; n < t.length - 1; n++)o.push([
                                n,
                                n + 1
                            ]);
                    }
                    return r && o.push([
                        t.length - 1,
                        0
                    ]), o;
                }, l.default.RendererGL.prototype._tesselateShape = function() {
                    for(var r = this, e = (this.immediateMode.shapeMode = u.TRIANGLES, [
                        this._flatten(this.immediateMode.geometry.vertices.map(function(e, t) {
                            return [
                                e.x,
                                e.y,
                                e.z,
                                r.immediateMode.geometry.uvs[2 * t],
                                r.immediateMode.geometry.uvs[2 * t + 1],
                                r.immediateMode.geometry.vertexColors[4 * t],
                                r.immediateMode.geometry.vertexColors[4 * t + 1],
                                r.immediateMode.geometry.vertexColors[4 * t + 2],
                                r.immediateMode.geometry.vertexColors[4 * t + 3],
                                r.immediateMode.geometry.vertexNormals[t].x,
                                r.immediateMode.geometry.vertexNormals[t].y,
                                r.immediateMode.geometry.vertexNormals[t].z
                            ];
                        }))
                    ]), t = this._triangulate(e), o = (this.immediateMode.geometry.vertices = [], this.immediateMode.geometry.vertexNormals = [], this.immediateMode.geometry.uvs = [], []), n = 0, s = t.length; n < s; n += 12)o.push.apply(o, c(t.slice(n + 5, n + 9))), this.normal.apply(this, c(t.slice(n + 9, n + 12))), this.vertex.apply(this, c(t.slice(n, n + 5)));
                    this.immediateMode.geometry.vertexColors = o;
                }, l.default.RendererGL.prototype._drawImmediateFill = function() {
                    var e = this.GL, t = this._getImmediateFillShader(), r = (this._setFillUniforms(t), !0), o = !1, n = void 0;
                    try {
                        for(var s, i = this.immediateMode.buffers.fill[Symbol.iterator](); !(r = (s = i.next()).done); r = !0)s.value._prepareBuffer(this.immediateMode.geometry, t);
                    } catch (e) {
                        o = !0, n = e;
                    } finally{
                        try {
                            r || null == i.return || i.return();
                        } finally{
                            if (o) throw n;
                        }
                    }
                    this.immediateMode.shapeMode !== u.LINE_STRIP && this.immediateMode.shapeMode !== u.LINES || (this.immediateMode.shapeMode = u.TRIANGLE_FAN), this.immediateMode.shapeMode === u.QUADS ? this.immediateMode.shapeMode = u.TRIANGLES : this.immediateMode.shapeMode === u.QUAD_STRIP && (this.immediateMode.shapeMode = u.TRIANGLE_STRIP), this._applyColorBlend(this.curFillColor), e.drawArrays(this.immediateMode.shapeMode, 0, this.immediateMode.geometry.vertices.length), t.unbindShader();
                }, l.default.RendererGL.prototype._drawImmediateStroke = function() {
                    var e = this.GL, t = this._getImmediateStrokeShader(), r = (this._setStrokeUniforms(t), !0), o = !1, n = void 0;
                    try {
                        for(var s, i = this.immediateMode.buffers.stroke[Symbol.iterator](); !(r = (s = i.next()).done); r = !0)s.value._prepareBuffer(this.immediateMode.geometry, t);
                    } catch (e) {
                        o = !0, n = e;
                    } finally{
                        try {
                            r || null == i.return || i.return();
                        } finally{
                            if (o) throw n;
                        }
                    }
                    this._applyColorBlend(this.curStrokeColor), e.drawArrays(e.TRIANGLES, 0, this.immediateMode.geometry.lineVertices.length), t.unbindShader();
                }, l.default.RendererGL);
                r.default = n;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "./p5.RenderBuffer": 318,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.fill": 152,
                "core-js/modules/es.array.from": 155,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.map": 161,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        320: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.some"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.typed-array.float32-array"), e("core-js/modules/es.typed-array.uint16-array"), e("core-js/modules/es.typed-array.uint32-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.some"), e("core-js/modules/es.object.keys"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.typed-array.float32-array"), e("core-js/modules/es.typed-array.uint16-array"), e("core-js/modules/es.typed-array.uint32-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var a = (n = e("../core/main")) && n.__esModule ? n : {
                    default: n
                };
                e("./p5.RendererGL"), e("./p5.RenderBuffer");
                var o = 0, n = (a.default.RendererGL.prototype._initBufferDefaults = function(e) {
                    var t;
                    return this._freeBuffers(e), 1e3 < ++o && (t = Object.keys(this.retainedMode.geometry)[0], delete this.retainedMode.geometry[t], o--), this.retainedMode.geometry[e] = {};
                }, a.default.RendererGL.prototype._freeBuffers = function(e) {
                    var a, l = this.retainedMode.geometry[e];
                    function t(e) {
                        var t = !0, r = !1, o = void 0;
                        try {
                            for(var n, s = e[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                                var i = n.value;
                                l[i.dst] && (a.deleteBuffer(l[i.dst]), l[i.dst] = null);
                            }
                        } catch (e) {
                            r = !0, o = e;
                        } finally{
                            try {
                                t || null == s.return || s.return();
                            } finally{
                                if (r) throw o;
                            }
                        }
                    }
                    l && (delete this.retainedMode.geometry[e], o--, a = this.GL, l.indexBuffer && a.deleteBuffer(l.indexBuffer), t(this.retainedMode.buffers.stroke), t(this.retainedMode.buffers.fill));
                }, a.default.RendererGL.prototype.createBuffers = function(e, t) {
                    var r, o, n, s = this.GL, e = this._initBufferDefaults(e), i = (e.model = t, e.indexBuffer);
                    return t.faces.length ? (i = i || (e.indexBuffer = s.createBuffer()), n = (o = (r = a.default.RendererGL.prototype._flatten(t.faces)).some(function(e) {
                        return 65535 < e;
                    })) ? Uint32Array : Uint16Array, this._bindBuffer(i, s.ELEMENT_ARRAY_BUFFER, r, n), e.indexBufferType = o ? s.UNSIGNED_INT : s.UNSIGNED_SHORT, e.vertexCount = 3 * t.faces.length) : (i && (s.deleteBuffer(i), e.indexBuffer = null), e.vertexCount = t.vertices ? t.vertices.length : 0), e.lineVertexCount = t.lineVertices ? t.lineVertices.length : 0, e;
                }, a.default.RendererGL.prototype.drawBuffers = function(e) {
                    var t = this.GL, r = this.retainedMode.geometry[e];
                    if (this._doStroke && 0 < r.lineVertexCount) {
                        var o = this._getRetainedStrokeShader(), n = (this._setStrokeUniforms(o), !0), s = !1, i = void 0;
                        try {
                            for(var a, l = this.retainedMode.buffers.stroke[Symbol.iterator](); !(n = (a = l.next()).done); n = !0)a.value._prepareBuffer(r, o);
                        } catch (e) {
                            s = !0, i = e;
                        } finally{
                            try {
                                n || null == l.return || l.return();
                            } finally{
                                if (s) throw i;
                            }
                        }
                        this._applyColorBlend(this.curStrokeColor), this._drawArrays(t.TRIANGLES, e), o.unbindShader();
                    }
                    if (this._doFill) {
                        var u = this._getRetainedFillShader(), c = (this._setFillUniforms(u), !0), s = !1, i = void 0;
                        try {
                            for(var d, f = this.retainedMode.buffers.fill[Symbol.iterator](); !(c = (d = f.next()).done); c = !0)d.value._prepareBuffer(r, u);
                        } catch (e) {
                            s = !0, i = e;
                        } finally{
                            try {
                                c || null == f.return || f.return();
                            } finally{
                                if (s) throw i;
                            }
                        }
                        r.indexBuffer && this._bindBuffer(r.indexBuffer, t.ELEMENT_ARRAY_BUFFER), this._applyColorBlend(this.curFillColor), this._drawElements(t.TRIANGLES, e), u.unbindShader();
                    }
                    return this;
                }, a.default.RendererGL.prototype.drawBuffersScaled = function(e, t, r, o) {
                    var n = this.uMVMatrix.copy();
                    try {
                        this.uMVMatrix.scale(t, r, o), this.drawBuffers(e);
                    } finally{
                        this.uMVMatrix = n;
                    }
                }, a.default.RendererGL.prototype._drawArrays = function(e, t) {
                    return this.GL.drawArrays(e, 0, this.retainedMode.geometry[t].lineVertexCount), this;
                }, a.default.RendererGL.prototype._drawElements = function(e, t) {
                    var t = this.retainedMode.geometry[t], r = this.GL;
                    if (t.indexBuffer) {
                        if (t.indexBufferType === r.UNSIGNED_INT && !r.getExtension("OES_element_index_uint")) throw new Error("Unable to render a 3d model with > 65535 triangles. Your web browser does not support the WebGL Extension OES_element_index_uint.");
                        r.drawElements(r.TRIANGLES, t.vertexCount, t.indexBufferType, 0);
                    } else r.drawArrays(e || r.TRIANGLES, 0, t.vertexCount);
                }, a.default.RendererGL.prototype._drawPoints = function(e, t) {
                    var r = this.GL, o = this._getImmediatePointShader();
                    this._setPointUniforms(o), this._bindBuffer(t, r.ARRAY_BUFFER, this._vToNArray(e), Float32Array, r.STATIC_DRAW), o.enableAttrib(o.attributes.aPosition, 3), r.drawArrays(r.Points, 0, e.length), o.unbindShader();
                }, a.default.RendererGL);
                r.default = n;
            },
            {
                "../core/main": 267,
                "./p5.RenderBuffer": 318,
                "./p5.RendererGL": 321,
                "core-js/modules/es.array.fill": 152,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.some": 163,
                "core-js/modules/es.object.keys": 176,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.typed-array.copy-within": 197,
                "core-js/modules/es.typed-array.every": 198,
                "core-js/modules/es.typed-array.fill": 199,
                "core-js/modules/es.typed-array.filter": 200,
                "core-js/modules/es.typed-array.find": 202,
                "core-js/modules/es.typed-array.find-index": 201,
                "core-js/modules/es.typed-array.float32-array": 203,
                "core-js/modules/es.typed-array.for-each": 205,
                "core-js/modules/es.typed-array.includes": 206,
                "core-js/modules/es.typed-array.index-of": 207,
                "core-js/modules/es.typed-array.iterator": 210,
                "core-js/modules/es.typed-array.join": 211,
                "core-js/modules/es.typed-array.last-index-of": 212,
                "core-js/modules/es.typed-array.map": 213,
                "core-js/modules/es.typed-array.reduce": 215,
                "core-js/modules/es.typed-array.reduce-right": 214,
                "core-js/modules/es.typed-array.reverse": 216,
                "core-js/modules/es.typed-array.set": 217,
                "core-js/modules/es.typed-array.slice": 218,
                "core-js/modules/es.typed-array.some": 219,
                "core-js/modules/es.typed-array.sort": 220,
                "core-js/modules/es.typed-array.subarray": 221,
                "core-js/modules/es.typed-array.to-locale-string": 222,
                "core-js/modules/es.typed-array.to-string": 223,
                "core-js/modules/es.typed-array.uint16-array": 224,
                "core-js/modules/es.typed-array.uint32-array": 225,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        321: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.assign"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.typed-array.float32-array"), e("core-js/modules/es.typed-array.float64-array"), e("core-js/modules/es.typed-array.int16-array"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.uint16-array"), e("core-js/modules/es.typed-array.uint32-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.concat"), e("core-js/modules/es.array.fill"), e("core-js/modules/es.array.filter"), e("core-js/modules/es.array.from"), e("core-js/modules/es.array.includes"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.object.assign"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.to-string"), e("core-js/modules/es.string.includes"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.typed-array.float32-array"), e("core-js/modules/es.typed-array.float64-array"), e("core-js/modules/es.typed-array.int16-array"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.uint16-array"), e("core-js/modules/es.typed-array.uint32-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var l = u(e("../core/main")), s = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants")), n = u(e("libtess"));
                e("./p5.Shader"), e("./p5.Camera"), e("../core/p5.Renderer"), e("./p5.Matrix"), e("path");
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                function u(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                function c(e) {
                    return function(e) {
                        if (Array.isArray(e)) {
                            for(var t = 0, r = new Array(e.length); t < e.length; t++)r[t] = e[t];
                            return r;
                        }
                    }(e) || function(e) {
                        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
                    }(e) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance");
                    }();
                }
                var e = "precision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\n\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];	\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);\n  lr.diffuse = _lambertDiffuse(lightDir, normal);\n  return lr;\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n", d = {
                    immediateVert: "attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n",
                    vertexColorVert: "attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n}\n",
                    vertexColorFrag: "precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vColor;\n}",
                    normalVert: "attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n}\n",
                    normalFrag: "precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}",
                    basicFrag: "precision mediump float;\nuniform vec4 uMaterialColor;\nvoid main(void) {\n  gl_FragColor = uMaterialColor;\n}",
                    lightVert: e + "// include lighting.glgl\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n}\n",
                    lightTextureFrag: "precision highp float;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vVertTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * vDiffuseColor + vSpecularColor;\n  }\n}",
                    phongVert: "precision highp float;\nprecision highp int;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = uNormalMatrix * aNormal;\n  vTexCoord = aTexCoord;\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n}\n",
                    phongFrag: e + "// include lighting.glsl\nprecision highp float;\nprecision highp int;\n\nuniform vec4 uSpecularMatColor;\nuniform vec4 uAmbientMatColor;\nuniform vec4 uEmissiveMatColor;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);\n\n  // Calculating final color as result of all lights (plus emissive term).\n\n  gl_FragColor = isTexture ? texture2D(uSampler, vTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n  gl_FragColor.rgb = diffuse * gl_FragColor.rgb + \n                    vAmbientColor * uAmbientMatColor.rgb + \n                    specular * uSpecularMatColor.rgb + \n                    uEmissiveMatColor.rgb;\n}",
                    fontVert: "precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nvarying vec2 vTexCoord;\nvarying float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord;\n  w = gl_Position.w;\n}\n",
                    fontFrag: "#extension GL_OES_standard_derivatives : enable\nprecision mediump float;\n\n#if 0\n  // simulate integer math using floats\n	#define int float\n	#define ivec2 vec2\n	#define INT(x) float(x)\n\n	int ifloor(float v) { return floor(v); }\n	ivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n	precision highp int;\n	#define INT(x) x\n\n	int ifloor(float v) { return int(v); }\n	int ifloor(int v) { return v; }\n	ivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nvarying vec2 vTexCoord;\n\n// some helper functions\nint round(float v) { return ifloor(v + 0.5); }\nivec2 round(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = round(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  gl_FragColor = uMaterialColor;\n  gl_FragColor.a *= saturate(max(antialias, cover));\n}",
                    lineVert: "/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\n\nattribute vec4 aPosition;\nattribute vec4 aDirection;\n  \nvoid main() {\n  // using a scale <1 moves the lines towards the camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  vec3 scale = vec3(0.9995);\n\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posq = uModelViewMatrix * (aPosition + vec4(aDirection.xyz, 0));\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posq.xyz = posq.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 q = uProjectionMatrix * posq;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangent = normalize((q.xy*p.w - p.xy*q.w) * uViewport.zw);\n\n  // flip tangent to normal (it's already normalized)\n  vec2 normal = vec2(-tangent.y, tangent.x);\n\n  float thickness = aDirection.w * uStrokeWeight;\n  vec2 offset = normal * thickness / 2.0;\n\n  vec2 curPerspScale;\n\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n    // invert Y, projections in Processing invert Y\n    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  gl_Position.xy = p.xy + offset.xy * curPerspScale;\n  gl_Position.zw = p.zw;\n}\n",
                    lineFrag: "precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\n\nvoid main() {\n  gl_FragColor = uMaterialColor;\n}",
                    pointVert: "attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n	vec4 positionVec4 =  vec4(aPosition, 1.0);\n	gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n	gl_PointSize = uPointSize;\n	vStrokeWeight = uPointSize;\n}",
                    pointFrag: "precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n	float mask = 0.0;\n\n	// make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n    // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n	mask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n	// if strokeWeight is 1 or less lets just draw a square\n	// this prevents weird artifacting from carving circles when our points are really small\n	// if strokeWeight is larger than 1, we just use it as is\n\n	mask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n	// throw away the borders of the mask\n    // otherwise we get weird alpha blending issues\n\n	if(mask > 0.98){\n      discard;\n  	}\n\n  	gl_FragColor = vec4(uMaterialColor.rgb * (1.0 - mask), uMaterialColor.a) ;\n}"
                }, e = (l.default.RendererGL = function(e, t, r, o) {
                    return l.default.Renderer.call(this, e, t, r), this._setAttributeDefaults(t), this._initContext(), this.isP3D = !0, this.GL = this.drawingContext, this._pInst._setProperty("drawingContext", this.drawingContext), this._isErasing = !1, this._enableLighting = !1, this.ambientLightColors = [], this.specularColors = [
                        1,
                        1,
                        1
                    ], this.directionalLightDirections = [], this.directionalLightDiffuseColors = [], this.directionalLightSpecularColors = [], this.pointLightPositions = [], this.pointLightDiffuseColors = [], this.pointLightSpecularColors = [], this.spotLightPositions = [], this.spotLightDirections = [], this.spotLightDiffuseColors = [], this.spotLightSpecularColors = [], this.spotLightAngle = [], this.spotLightConc = [], this.drawMode = s.FILL, this.curFillColor = this._cachedFillStyle = [
                        1,
                        1,
                        1,
                        1
                    ], this.curAmbientColor = this._cachedFillStyle = [
                        0,
                        0,
                        0,
                        0
                    ], this.curSpecularColor = this._cachedFillStyle = [
                        0,
                        0,
                        0,
                        0
                    ], this.curEmissiveColor = this._cachedFillStyle = [
                        0,
                        0,
                        0,
                        0
                    ], this.curStrokeColor = this._cachedStrokeStyle = [
                        0,
                        0,
                        0,
                        1
                    ], this.curBlendMode = s.BLEND, this._cachedBlendMode = void 0, this.blendExt = this.GL.getExtension("EXT_blend_minmax"), this._isBlending = !1, this._useSpecularMaterial = !1, this._useEmissiveMaterial = !1, this._useNormalMaterial = !1, this._useShininess = 1, this._tint = [
                        255,
                        255,
                        255,
                        255
                    ], this.constantAttenuation = 1, this.linearAttenuation = 0, this.quadraticAttenuation = 0, this.uMVMatrix = new l.default.Matrix, this.uPMatrix = new l.default.Matrix, this.uNMatrix = new l.default.Matrix("mat3"), this._currentNormal = new l.default.Vector(0, 0, 1), this._curCamera = new l.default.Camera(this), this._curCamera._computeCameraDefaultSettings(), this._curCamera._setDefaultCamera(), this._defaultLightShader = void 0, this._defaultImmediateModeShader = void 0, this._defaultNormalShader = void 0, this._defaultColorShader = void 0, this._defaultPointShader = void 0, this.userFillShader = void 0, this.userStrokeShader = void 0, this.userPointShader = void 0, this.retainedMode = {
                        geometry: {},
                        buffers: {
                            stroke: [
                                new l.default.RenderBuffer(3, "lineVertices", "lineVertexBuffer", "aPosition", this, this._flatten),
                                new l.default.RenderBuffer(4, "lineNormals", "lineNormalBuffer", "aDirection", this, this._flatten)
                            ],
                            fill: [
                                new l.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", this, this._vToNArray),
                                new l.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", this, this._vToNArray),
                                new l.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", this),
                                new l.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", this),
                                new l.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", this, this._flatten)
                            ],
                            text: [
                                new l.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", this, this._vToNArray),
                                new l.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", this, this._flatten)
                            ]
                        }
                    }, this.immediateMode = {
                        geometry: new l.default.Geometry,
                        shapeMode: s.TRIANGLE_FAN,
                        _bezierVertex: [],
                        _quadraticVertex: [],
                        _curveVertex: [],
                        buffers: {
                            fill: [
                                new l.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", this, this._vToNArray),
                                new l.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", this, this._vToNArray),
                                new l.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", this),
                                new l.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", this),
                                new l.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", this, this._flatten)
                            ],
                            stroke: [
                                new l.default.RenderBuffer(3, "lineVertices", "lineVertexBuffer", "aPosition", this, this._flatten),
                                new l.default.RenderBuffer(4, "lineNormals", "lineNormalBuffer", "aDirection", this, this._flatten)
                            ],
                            point: this.GL.createBuffer()
                        }
                    }, this.pointSize = 5, this.curStrokeWeight = 1, this.textures = [], this.textureMode = s.IMAGE, this.textureWrapX = s.CLAMP, this.textureWrapY = s.CLAMP, this._tex = null, this._curveTightness = 6, this._lookUpTableBezier = [], this._lookUpTableQuadratic = [], this._lutBezierDetail = 0, this._lutQuadraticDetail = 0, this._tessy = this._initTessy(), this.fontInfos = {}, this._curShader = void 0, this;
                }, l.default.RendererGL.prototype = Object.create(l.default.Renderer.prototype), l.default.RendererGL.prototype._setAttributeDefaults = function(e) {
                    var t = {
                        alpha: !1,
                        depth: !0,
                        stencil: !0,
                        antialias: navigator.userAgent.toLowerCase().includes("safari"),
                        premultipliedAlpha: !1,
                        preserveDrawingBuffer: !0,
                        perPixelLighting: !0
                    };
                    null === e._glAttributes ? e._glAttributes = t : e._glAttributes = Object.assign(t, e._glAttributes);
                }, l.default.RendererGL.prototype._initContext = function() {
                    if (this.drawingContext = this.canvas.getContext("webgl", this._pInst._glAttributes) || this.canvas.getContext("experimental-webgl", this._pInst._glAttributes), null === this.drawingContext) throw new Error("Error creating webgl context");
                    var e = this.drawingContext;
                    e.enable(e.DEPTH_TEST), e.depthFunc(e.LEQUAL), e.viewport(0, 0, e.drawingBufferWidth, e.drawingBufferHeight), this._viewport = this.drawingContext.getParameter(this.drawingContext.VIEWPORT);
                }, l.default.RendererGL.prototype._resetContext = function(e, t) {
                    var r, o = this.width, n = this.height, s = this.canvas.id, i = this._pInst instanceof l.default.Graphics, s = (i ? ((r = this._pInst).canvas.parentNode.removeChild(r.canvas), r.canvas = document.createElement("canvas"), (r._pInst._userNode || document.body).appendChild(r.canvas), l.default.Element.call(r, r.canvas, r._pInst), r.width = o, r.height = n) : ((r = this.canvas) && r.parentNode.removeChild(r), (r = document.createElement("canvas")).id = s, (this._pInst._userNode || document.body).appendChild(r), this._pInst.canvas = r, this.canvas = r), new l.default.RendererGL(this._pInst.canvas, this._pInst, !i));
                    this._pInst._setProperty("_renderer", s), s.resize(o, n), s._applyDefaults(), i || this._pInst._elements.push(s), "function" == typeof t && setTimeout(function() {
                        t.apply(window._renderer, e);
                    }, 0);
                }, l.default.prototype.setAttributes = function(e, t) {
                    if (void 0 === this._glAttributes) console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.");
                    else {
                        var r = !0;
                        if (void 0 !== t ? (null === this._glAttributes && (this._glAttributes = {}), this._glAttributes[e] !== t && (this._glAttributes[e] = t, r = !1)) : e instanceof Object && this._glAttributes !== e && (this._glAttributes = e, r = !1), this._renderer.isP3D && !r) {
                            if (!this._setupDone) {
                                for(var o in this._renderer.retainedMode.geometry)if (this._renderer.retainedMode.geometry.hasOwnProperty(o)) return void console.error("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");
                            }
                            this.push(), this._renderer._resetContext(), this.pop(), this._renderer._curCamera && (this._renderer._curCamera._renderer = this._renderer);
                        }
                    }
                }, l.default.RendererGL.prototype._update = function() {
                    this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0], this._curCamera.cameraMatrix.mat4[1], this._curCamera.cameraMatrix.mat4[2], this._curCamera.cameraMatrix.mat4[3], this._curCamera.cameraMatrix.mat4[4], this._curCamera.cameraMatrix.mat4[5], this._curCamera.cameraMatrix.mat4[6], this._curCamera.cameraMatrix.mat4[7], this._curCamera.cameraMatrix.mat4[8], this._curCamera.cameraMatrix.mat4[9], this._curCamera.cameraMatrix.mat4[10], this._curCamera.cameraMatrix.mat4[11], this._curCamera.cameraMatrix.mat4[12], this._curCamera.cameraMatrix.mat4[13], this._curCamera.cameraMatrix.mat4[14], this._curCamera.cameraMatrix.mat4[15]), this.ambientLightColors.length = 0, this.specularColors = [
                        1,
                        1,
                        1
                    ], this.directionalLightDirections.length = 0, this.directionalLightDiffuseColors.length = 0, this.directionalLightSpecularColors.length = 0, this.pointLightPositions.length = 0, this.pointLightDiffuseColors.length = 0, this.pointLightSpecularColors.length = 0, this.spotLightPositions.length = 0, this.spotLightDirections.length = 0, this.spotLightDiffuseColors.length = 0, this.spotLightSpecularColors.length = 0, this.spotLightAngle.length = 0, this.spotLightConc.length = 0, this._enableLighting = !1, this._tint = [
                        255,
                        255,
                        255,
                        255
                    ], this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
                }, l.default.RendererGL.prototype.background = function() {
                    var e = (e = this._pInst).color.apply(e, arguments), t = e.levels[0] / 255, r = e.levels[1] / 255, o = e.levels[2] / 255, e = e.levels[3] / 255;
                    this.GL.clearColor(t, r, o, e), this.GL.clear(this.GL.COLOR_BUFFER_BIT);
                }, l.default.RendererGL.prototype.fill = function(e, t, r, o) {
                    var n = l.default.prototype.color.apply(this._pInst, arguments);
                    this.curFillColor = n._array, this.drawMode = s.FILL, this._useNormalMaterial = !1, this._tex = null;
                }, l.default.RendererGL.prototype.stroke = function(e, t, r, o) {
                    arguments[3] = 255;
                    var n = l.default.prototype.color.apply(this._pInst, arguments);
                    this.curStrokeColor = n._array;
                }, l.default.RendererGL.prototype.strokeCap = function(e) {
                    console.error("Sorry, strokeCap() is not yet implemented in WEBGL mode");
                }, l.default.RendererGL.prototype.strokeJoin = function(e) {
                    console.error("Sorry, strokeJoin() is not yet implemented in WEBGL mode");
                }, l.default.RendererGL.prototype.filter = function(e) {
                    console.error("filter() does not work in WEBGL mode");
                }, l.default.RendererGL.prototype.blendMode = function(e) {
                    e === s.DARKEST || e === s.LIGHTEST || e === s.ADD || e === s.BLEND || e === s.SUBTRACT || e === s.SCREEN || e === s.EXCLUSION || e === s.REPLACE || e === s.MULTIPLY || e === s.REMOVE ? this.curBlendMode = e : e !== s.BURN && e !== s.OVERLAY && e !== s.HARD_LIGHT && e !== s.SOFT_LIGHT && e !== s.DODGE || console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.");
                }, l.default.RendererGL.prototype.erase = function(e, t) {
                    this._isErasing || (this._applyBlendMode(s.REMOVE), this._isErasing = !0, this._cachedFillStyle = this.curFillColor.slice(), this.curFillColor = [
                        1,
                        1,
                        1,
                        e / 255
                    ], this._cachedStrokeStyle = this.curStrokeColor.slice(), this.curStrokeColor = [
                        1,
                        1,
                        1,
                        t / 255
                    ]);
                }, l.default.RendererGL.prototype.noErase = function() {
                    this._isErasing && (this._isErasing = !1, this.curFillColor = this._cachedFillStyle.slice(), this.curStrokeColor = this._cachedStrokeStyle.slice(), this.blendMode(this._cachedBlendMode));
                }, l.default.RendererGL.prototype.strokeWeight = function(e) {
                    this.curStrokeWeight !== e && (this.pointSize = e, this.curStrokeWeight = e);
                }, l.default.RendererGL.prototype._getPixel = function(e, t) {
                    var r = new Uint8Array(4);
                    return this.drawingContext.readPixels(e, t, 1, 1, this.drawingContext.RGBA, this.drawingContext.UNSIGNED_BYTE, r), [
                        r[0],
                        r[1],
                        r[2],
                        r[3]
                    ];
                }, l.default.RendererGL.prototype.loadPixels = function() {
                    var e, t = this._pixelsState;
                    !0 !== this._pInst._glAttributes.preserveDrawingBuffer ? console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.") : (t = t.pixels, e = this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4, t instanceof Uint8Array && t.length === e || (t = new Uint8Array(e), this._pixelsState._setProperty("pixels", t)), e = this._pInst._pixelDensity, this.GL.readPixels(0, 0, this.width * e, this.height * e, this.GL.RGBA, this.GL.UNSIGNED_BYTE, t));
                }, l.default.RendererGL.prototype.geometryInHash = function(e) {
                    return void 0 !== this.retainedMode.geometry[e];
                }, l.default.RendererGL.prototype.resize = function(e, t) {
                    l.default.Renderer.prototype.resize.call(this, e, t), this.GL.viewport(0, 0, this.GL.drawingBufferWidth, this.GL.drawingBufferHeight), this._viewport = this.GL.getParameter(this.GL.VIEWPORT), this._curCamera._resize();
                    e = this._pixelsState;
                    void 0 !== e.pixels && e._setProperty("pixels", new Uint8Array(this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4));
                }, l.default.RendererGL.prototype.clear = function() {
                    this.GL.clearColor((arguments.length <= 0 ? void 0 : arguments[0]) || 0, (arguments.length <= 1 ? void 0 : arguments[1]) || 0, (arguments.length <= 2 ? void 0 : arguments[2]) || 0, (arguments.length <= 3 ? void 0 : arguments[3]) || 0), this.GL.clearDepth(1), this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);
                }, l.default.RendererGL.prototype.applyMatrix = function(e, t, r, o, n, s) {
                    16 === arguments.length ? l.default.Matrix.prototype.apply.apply(this.uMVMatrix, arguments) : this.uMVMatrix.apply([
                        e,
                        t,
                        0,
                        0,
                        r,
                        o,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        n,
                        s,
                        0,
                        1
                    ]);
                }, l.default.RendererGL.prototype.translate = function(e, t, r) {
                    return e instanceof l.default.Vector && (r = e.z, t = e.y, e = e.x), this.uMVMatrix.translate([
                        e,
                        t,
                        r
                    ]), this;
                }, l.default.RendererGL.prototype.scale = function(e, t, r) {
                    return this.uMVMatrix.scale(e, t, r), this;
                }, l.default.RendererGL.prototype.rotate = function(e, t) {
                    return void 0 === t ? this.rotateZ(e) : (l.default.Matrix.prototype.rotate.apply(this.uMVMatrix, arguments), this);
                }, l.default.RendererGL.prototype.rotateX = function(e) {
                    return this.rotate(e, 1, 0, 0), this;
                }, l.default.RendererGL.prototype.rotateY = function(e) {
                    return this.rotate(e, 0, 1, 0), this;
                }, l.default.RendererGL.prototype.rotateZ = function(e) {
                    return this.rotate(e, 0, 0, 1), this;
                }, l.default.RendererGL.prototype.push = function() {
                    var e = l.default.Renderer.prototype.push.apply(this), t = e.properties;
                    return t.uMVMatrix = this.uMVMatrix.copy(), t.uPMatrix = this.uPMatrix.copy(), t._curCamera = this._curCamera, this._curCamera = this._curCamera.copy(), t.ambientLightColors = this.ambientLightColors.slice(), t.specularColors = this.specularColors.slice(), t.directionalLightDirections = this.directionalLightDirections.slice(), t.directionalLightDiffuseColors = this.directionalLightDiffuseColors.slice(), t.directionalLightSpecularColors = this.directionalLightSpecularColors.slice(), t.pointLightPositions = this.pointLightPositions.slice(), t.pointLightDiffuseColors = this.pointLightDiffuseColors.slice(), t.pointLightSpecularColors = this.pointLightSpecularColors.slice(), t.spotLightPositions = this.spotLightPositions.slice(), t.spotLightDirections = this.spotLightDirections.slice(), t.spotLightDiffuseColors = this.spotLightDiffuseColors.slice(), t.spotLightSpecularColors = this.spotLightSpecularColors.slice(), t.spotLightAngle = this.spotLightAngle.slice(), t.spotLightConc = this.spotLightConc.slice(), t.userFillShader = this.userFillShader, t.userStrokeShader = this.userStrokeShader, t.userPointShader = this.userPointShader, t.pointSize = this.pointSize, t.curStrokeWeight = this.curStrokeWeight, t.curStrokeColor = this.curStrokeColor, t.curFillColor = this.curFillColor, t.curAmbientColor = this.curAmbientColor, t.curSpecularColor = this.curSpecularColor, t.curEmissiveColor = this.curEmissiveColor, t._useSpecularMaterial = this._useSpecularMaterial, t._useEmissiveMaterial = this._useEmissiveMaterial, t._useShininess = this._useShininess, t.constantAttenuation = this.constantAttenuation, t.linearAttenuation = this.linearAttenuation, t.quadraticAttenuation = this.quadraticAttenuation, t._enableLighting = this._enableLighting, t._useNormalMaterial = this._useNormalMaterial, t._tex = this._tex, t.drawMode = this.drawMode, t._currentNormal = this._currentNormal, t.curBlendMode = this.curBlendMode, e;
                }, l.default.RendererGL.prototype.resetMatrix = function() {
                    return this.uMVMatrix = l.default.Matrix.identity(this._pInst), this;
                }, l.default.RendererGL.prototype._getImmediateStrokeShader = function() {
                    var e = this.userStrokeShader;
                    return e && e.isStrokeShader() ? e : this._getLineShader();
                }, l.default.RendererGL.prototype._getRetainedStrokeShader = l.default.RendererGL.prototype._getImmediateStrokeShader, l.default.RendererGL.prototype._getImmediateFillShader = function() {
                    var e = this.userFillShader;
                    if (this._useNormalMaterial && (!e || !e.isNormalShader())) return this._getNormalShader();
                    if (this._enableLighting) {
                        if (!e || !e.isLightShader()) return this._getLightShader();
                    } else if (this._tex) {
                        if (!e || !e.isTextureShader()) return this._getLightShader();
                    } else if (!e) return this._getImmediateModeShader();
                    return e;
                }, l.default.RendererGL.prototype._getRetainedFillShader = function() {
                    if (this._useNormalMaterial) return this._getNormalShader();
                    var e = this.userFillShader;
                    if (this._enableLighting) {
                        if (!e || !e.isLightShader()) return this._getLightShader();
                    } else if (this._tex) {
                        if (!e || !e.isTextureShader()) return this._getLightShader();
                    } else if (!e) return this._getColorShader();
                    return e;
                }, l.default.RendererGL.prototype._getImmediatePointShader = function() {
                    var e = this.userPointShader;
                    return e && e.isPointShader() ? e : this._getPointShader();
                }, l.default.RendererGL.prototype._getRetainedLineShader = l.default.RendererGL.prototype._getImmediateLineShader, l.default.RendererGL.prototype._getLightShader = function() {
                    return this._defaultLightShader || (this._pInst._glAttributes.perPixelLighting ? this._defaultLightShader = new l.default.Shader(this, d.phongVert, d.phongFrag) : this._defaultLightShader = new l.default.Shader(this, d.lightVert, d.lightTextureFrag)), this._defaultLightShader;
                }, l.default.RendererGL.prototype._getImmediateModeShader = function() {
                    return this._defaultImmediateModeShader || (this._defaultImmediateModeShader = new l.default.Shader(this, d.immediateVert, d.vertexColorFrag)), this._defaultImmediateModeShader;
                }, l.default.RendererGL.prototype._getNormalShader = function() {
                    return this._defaultNormalShader || (this._defaultNormalShader = new l.default.Shader(this, d.normalVert, d.normalFrag)), this._defaultNormalShader;
                }, l.default.RendererGL.prototype._getColorShader = function() {
                    return this._defaultColorShader || (this._defaultColorShader = new l.default.Shader(this, d.normalVert, d.basicFrag)), this._defaultColorShader;
                }, l.default.RendererGL.prototype._getPointShader = function() {
                    return this._defaultPointShader || (this._defaultPointShader = new l.default.Shader(this, d.pointVert, d.pointFrag)), this._defaultPointShader;
                }, l.default.RendererGL.prototype._getLineShader = function() {
                    return this._defaultLineShader || (this._defaultLineShader = new l.default.Shader(this, d.lineVert, d.lineFrag)), this._defaultLineShader;
                }, l.default.RendererGL.prototype._getFontShader = function() {
                    return this._defaultFontShader || (this.GL.getExtension("OES_standard_derivatives"), this._defaultFontShader = new l.default.Shader(this, d.fontVert, d.fontFrag)), this._defaultFontShader;
                }, l.default.RendererGL.prototype._getEmptyTexture = function() {
                    var e;
                    return this._emptyTexture || ((e = new l.default.Image(1, 1)).set(0, 0, 255), this._emptyTexture = new l.default.Texture(this, e)), this._emptyTexture;
                }, l.default.RendererGL.prototype.getTexture = function(e) {
                    var t = this.textures, r = !0, o = !1, n = void 0;
                    try {
                        for(var s, i = t[Symbol.iterator](); !(r = (s = i.next()).done); r = !0){
                            var a = s.value;
                            if (a.src === e) return a;
                        }
                    } catch (e) {
                        o = !0, n = e;
                    } finally{
                        try {
                            r || null == i.return || i.return();
                        } finally{
                            if (o) throw n;
                        }
                    }
                    o = new l.default.Texture(this, e);
                    return t.push(o), o;
                }, l.default.RendererGL.prototype._setStrokeUniforms = function(e) {
                    e.bindShader(), e.setUniform("uMaterialColor", this.curStrokeColor), e.setUniform("uStrokeWeight", this.curStrokeWeight);
                }, l.default.RendererGL.prototype._setFillUniforms = function(e) {
                    e.bindShader(), e.setUniform("uMaterialColor", this.curFillColor), e.setUniform("isTexture", !!this._tex), this._tex && e.setUniform("uSampler", this._tex), e.setUniform("uTint", this._tint), e.setUniform("uAmbientMatColor", this.curAmbientColor), e.setUniform("uSpecularMatColor", this.curSpecularColor), e.setUniform("uEmissiveMatColor", this.curEmissiveColor), e.setUniform("uSpecular", this._useSpecularMaterial), e.setUniform("uEmissive", this._useEmissiveMaterial), e.setUniform("uShininess", this._useShininess), e.setUniform("uUseLighting", this._enableLighting);
                    var t = this.pointLightDiffuseColors.length / 3, t = (e.setUniform("uPointLightCount", t), e.setUniform("uPointLightLocation", this.pointLightPositions), e.setUniform("uPointLightDiffuseColors", this.pointLightDiffuseColors), e.setUniform("uPointLightSpecularColors", this.pointLightSpecularColors), this.directionalLightDiffuseColors.length / 3), t = (e.setUniform("uDirectionalLightCount", t), e.setUniform("uLightingDirection", this.directionalLightDirections), e.setUniform("uDirectionalDiffuseColors", this.directionalLightDiffuseColors), e.setUniform("uDirectionalSpecularColors", this.directionalLightSpecularColors), this.ambientLightColors.length / 3), t = (e.setUniform("uAmbientLightCount", t), e.setUniform("uAmbientColor", this.ambientLightColors), this.spotLightDiffuseColors.length / 3);
                    e.setUniform("uSpotLightCount", t), e.setUniform("uSpotLightAngle", this.spotLightAngle), e.setUniform("uSpotLightConc", this.spotLightConc), e.setUniform("uSpotLightDiffuseColors", this.spotLightDiffuseColors), e.setUniform("uSpotLightSpecularColors", this.spotLightSpecularColors), e.setUniform("uSpotLightLocation", this.spotLightPositions), e.setUniform("uSpotLightDirection", this.spotLightDirections), e.setUniform("uConstantAttenuation", this.constantAttenuation), e.setUniform("uLinearAttenuation", this.linearAttenuation), e.setUniform("uQuadraticAttenuation", this.quadraticAttenuation), e.bindTextures();
                }, l.default.RendererGL.prototype._setPointUniforms = function(e) {
                    e.bindShader(), e.setUniform("uMaterialColor", this.curStrokeColor), e.setUniform("uPointSize", this.pointSize * this._pInst._pixelDensity);
                }, l.default.RendererGL.prototype._bindBuffer = function(e, t, r, o, n) {
                    t = t || this.GL.ARRAY_BUFFER, this.GL.bindBuffer(t, e), void 0 !== r && (e = new (o || Float32Array)(r), this.GL.bufferData(t, e, n || this.GL.STATIC_DRAW));
                }, l.default.RendererGL.prototype._arraysEqual = function(e, t) {
                    var r = e.length;
                    if (r !== t.length) return !1;
                    for(var o = 0; o < r; o++)if (e[o] !== t[o]) return !1;
                    return !0;
                }, l.default.RendererGL.prototype._isTypedArray = function(e) {
                    Float32Array;
                    return Float64Array, Int16Array, Uint16Array, e instanceof Uint32Array;
                }, l.default.RendererGL.prototype._flatten = function(e) {
                    if (0 === e.length) return [];
                    var t;
                    if (2e4 < e.length) {
                        for(var r = Object.prototype.toString, o = [], n = e.slice(), s = n.pop(); "[object Array]" === r.call(s) ? n.push.apply(n, c(s)) : o.push(s), n.length && void 0 !== (s = n.pop()););
                        return o.reverse(), o;
                    }
                    return (t = []).concat.apply(t, c(e));
                }, l.default.RendererGL.prototype._vToNArray = function(e) {
                    var t = [], r = !0, o = !1, n = void 0;
                    try {
                        for(var s, i = e[Symbol.iterator](); !(r = (s = i.next()).done); r = !0){
                            var a = s.value;
                            t.push(a.x, a.y, a.z);
                        }
                    } catch (e) {
                        o = !0, n = e;
                    } finally{
                        try {
                            r || null == i.return || i.return();
                        } finally{
                            if (o) throw n;
                        }
                    }
                    return t;
                }, l.default.prototype._assert3d = function(e) {
                    if (!this._renderer.isP3D) throw new Error("".concat(e, "() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."));
                }, l.default.RendererGL.prototype._initTessy = function() {
                    var e = new n.default.GluTesselator;
                    return e.gluTessCallback(n.default.gluEnum.GLU_TESS_VERTEX_DATA, function(e, t) {
                        for(var r = 0; r < e.length; r++)t[t.length] = e[r];
                    }), e.gluTessCallback(n.default.gluEnum.GLU_TESS_BEGIN, function(e) {
                        e !== n.default.primitiveType.GL_TRIANGLES && console.log("expected TRIANGLES but got type: ".concat(e));
                    }), e.gluTessCallback(n.default.gluEnum.GLU_TESS_ERROR, function(e) {
                        console.log("error callback"), console.log("error number: ".concat(e));
                    }), e.gluTessCallback(n.default.gluEnum.GLU_TESS_COMBINE, function(e, t, r) {
                        for(var o = [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ], n = 0; n < r.length; n++)for(var s = 0; s < o.length; s++)0 !== r[n] && t[n] && (o[s] += t[n][s] * r[n]);
                        return o;
                    }), e.gluTessCallback(n.default.gluEnum.GLU_TESS_EDGE_FLAG, function(e) {}), e;
                }, l.default.RendererGL.prototype._triangulate = function(e) {
                    this._tessy.gluTessNormal(0, 0, 1);
                    var t = [];
                    this._tessy.gluTessBeginPolygon(t);
                    for(var r = 0; r < e.length; r++){
                        this._tessy.gluTessBeginContour();
                        for(var o = e[r], n = 0; n < o.length; n += 12){
                            var s = o.slice(n, n + 12);
                            this._tessy.gluTessVertex(s, s);
                        }
                        this._tessy.gluTessEndContour();
                    }
                    return this._tessy.gluTessEndPolygon(), t;
                }, l.default.RendererGL.prototype._bezierCoefficients = function(e) {
                    var t = e * e, r = 1 - e, o = r * r;
                    return [
                        o * r,
                        3 * o * e,
                        3 * r * t,
                        t * e
                    ];
                }, l.default.RendererGL.prototype._quadraticCoefficients = function(e) {
                    var t = 1 - e;
                    return [
                        t * t,
                        2 * t * e,
                        e * e
                    ];
                }, l.default.RendererGL.prototype._bezierToCatmull = function(e) {
                    return [
                        e[1],
                        e[1] + (e[2] - e[0]) / this._curveTightness,
                        e[2] - (e[3] - e[1]) / this._curveTightness,
                        e[2]
                    ];
                }, l.default.RendererGL);
                r.default = e;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "../core/p5.Renderer": 270,
                "./p5.Camera": 315,
                "./p5.Matrix": 317,
                "./p5.Shader": 322,
                "core-js/modules/es.array.concat": 149,
                "core-js/modules/es.array.fill": 152,
                "core-js/modules/es.array.filter": 153,
                "core-js/modules/es.array.from": 155,
                "core-js/modules/es.array.includes": 156,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.object.assign": 172,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.to-string": 182,
                "core-js/modules/es.string.includes": 185,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.typed-array.copy-within": 197,
                "core-js/modules/es.typed-array.every": 198,
                "core-js/modules/es.typed-array.fill": 199,
                "core-js/modules/es.typed-array.filter": 200,
                "core-js/modules/es.typed-array.find": 202,
                "core-js/modules/es.typed-array.find-index": 201,
                "core-js/modules/es.typed-array.float32-array": 203,
                "core-js/modules/es.typed-array.float64-array": 204,
                "core-js/modules/es.typed-array.for-each": 205,
                "core-js/modules/es.typed-array.includes": 206,
                "core-js/modules/es.typed-array.index-of": 207,
                "core-js/modules/es.typed-array.int16-array": 208,
                "core-js/modules/es.typed-array.iterator": 210,
                "core-js/modules/es.typed-array.join": 211,
                "core-js/modules/es.typed-array.last-index-of": 212,
                "core-js/modules/es.typed-array.map": 213,
                "core-js/modules/es.typed-array.reduce": 215,
                "core-js/modules/es.typed-array.reduce-right": 214,
                "core-js/modules/es.typed-array.reverse": 216,
                "core-js/modules/es.typed-array.set": 217,
                "core-js/modules/es.typed-array.slice": 218,
                "core-js/modules/es.typed-array.some": 219,
                "core-js/modules/es.typed-array.sort": 220,
                "core-js/modules/es.typed-array.subarray": 221,
                "core-js/modules/es.typed-array.to-locale-string": 222,
                "core-js/modules/es.typed-array.to-string": 223,
                "core-js/modules/es.typed-array.uint16-array": 224,
                "core-js/modules/es.typed-array.uint32-array": 225,
                "core-js/modules/es.typed-array.uint8-array": 226,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230,
                libtess: 239,
                path: 242
            }
        ],
        322: [
            function(e, t, r) {
                "use strict";
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.index-of"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.array.slice"), e("core-js/modules/es.function.name"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var s = (e = e("../core/main")) && e.__esModule ? e : {
                    default: e
                };
                s.default.Shader = function(e, t, r) {
                    this._renderer = e, this._vertSrc = t, this._fragSrc = r, this._vertShader = -1, this._fragShader = -1, this._glProgram = 0, this._loadedAttributes = !1, this.attributes = {}, this._loadedUniforms = !1, this.uniforms = {}, this._bound = !1, this.samplers = [];
                }, s.default.Shader.prototype.init = function() {
                    if (0 === this._glProgram) {
                        var e = this._renderer.GL;
                        if (this._vertShader = e.createShader(e.VERTEX_SHADER), e.shaderSource(this._vertShader, this._vertSrc), e.compileShader(this._vertShader), !e.getShaderParameter(this._vertShader, e.COMPILE_STATUS)) return console.error("Yikes! An error occurred compiling the vertex shader:".concat(e.getShaderInfoLog(this._vertShader))), null;
                        if (this._fragShader = e.createShader(e.FRAGMENT_SHADER), e.shaderSource(this._fragShader, this._fragSrc), e.compileShader(this._fragShader), !e.getShaderParameter(this._fragShader, e.COMPILE_STATUS)) return console.error("Darn! An error occurred compiling the fragment shader:".concat(e.getShaderInfoLog(this._fragShader))), null;
                        this._glProgram = e.createProgram(), e.attachShader(this._glProgram, this._vertShader), e.attachShader(this._glProgram, this._fragShader), e.linkProgram(this._glProgram), e.getProgramParameter(this._glProgram, e.LINK_STATUS) || console.error("Snap! Error linking shader program: ".concat(e.getProgramInfoLog(this._glProgram))), this._loadAttributes(), this._loadUniforms();
                    }
                    return this;
                }, s.default.Shader.prototype._loadAttributes = function() {
                    if (!this._loadedAttributes) {
                        this.attributes = {};
                        for(var e = this._renderer.GL, t = e.getProgramParameter(this._glProgram, e.ACTIVE_ATTRIBUTES), r = 0; r < t; ++r){
                            var o = e.getActiveAttrib(this._glProgram, r), n = o.name, s = e.getAttribLocation(this._glProgram, n), i = {};
                            i.name = n, i.location = s, i.index = r, i.type = o.type, i.size = o.size, this.attributes[n] = i;
                        }
                        this._loadedAttributes = !0;
                    }
                }, s.default.Shader.prototype._loadUniforms = function() {
                    if (!this._loadedUniforms) {
                        for(var e = this._renderer.GL, t = e.getProgramParameter(this._glProgram, e.ACTIVE_UNIFORMS), r = 0, o = 0; o < t; ++o){
                            var n = e.getActiveUniform(this._glProgram, o), s = {}, i = (s.location = e.getUniformLocation(this._glProgram, n.name), s.size = n.size, n.name);
                            1 < n.size && (i = i.substring(0, i.indexOf("[0]"))), s.name = i, s.type = n.type, s._cachedData = void 0, s.type === e.SAMPLER_2D && (s.samplerIndex = r, r++, this.samplers.push(s)), s.isArray = 1 < n.size || s.type === e.FLOAT_MAT3 || s.type === e.FLOAT_MAT4 || s.type === e.FLOAT_VEC2 || s.type === e.FLOAT_VEC3 || s.type === e.FLOAT_VEC4 || s.type === e.INT_VEC2 || s.type === e.INT_VEC4 || s.type === e.INT_VEC3, this.uniforms[i] = s;
                        }
                        this._loadedUniforms = !0;
                    }
                }, s.default.Shader.prototype.compile = function() {}, s.default.Shader.prototype.bindShader = function() {
                    this.init(), this._bound || (this.useProgram(), this._bound = !0, this._setMatrixUniforms(), this.setUniform("uViewport", this._renderer._viewport));
                }, s.default.Shader.prototype.unbindShader = function() {
                    return this._bound && (this.unbindTextures(), this._bound = !1), this;
                }, s.default.Shader.prototype.bindTextures = function() {
                    var e = this._renderer.GL, t = !0, r = !1, o = void 0;
                    try {
                        for(var n, s = this.samplers[Symbol.iterator](); !(t = (n = s.next()).done); t = !0){
                            var i = n.value, a = i.texture;
                            void 0 === a && (a = this._renderer._getEmptyTexture()), e.activeTexture(e.TEXTURE0 + i.samplerIndex), a.bindTexture(), a.update(), e.uniform1i(i.location, i.samplerIndex);
                        }
                    } catch (e) {
                        r = !0, o = e;
                    } finally{
                        try {
                            t || null == s.return || s.return();
                        } finally{
                            if (r) throw o;
                        }
                    }
                }, s.default.Shader.prototype.updateTextures = function() {
                    var e = !0, t = !1, r = void 0;
                    try {
                        for(var o, n = this.samplers[Symbol.iterator](); !(e = (o = n.next()).done); e = !0){
                            var s = o.value.texture;
                            s && s.update();
                        }
                    } catch (e) {
                        t = !0, r = e;
                    } finally{
                        try {
                            e || null == n.return || n.return();
                        } finally{
                            if (t) throw r;
                        }
                    }
                }, s.default.Shader.prototype.unbindTextures = function() {}, s.default.Shader.prototype._setMatrixUniforms = function() {
                    var e = this._renderer._curCamera.cameraMatrix, t = this._renderer.uPMatrix, r = this._renderer.uMVMatrix, o = r.copy();
                    o.mult(t), this.isStrokeShader() && ("default" === this._renderer._curCamera.cameraType ? this.setUniform("uPerspective", 1) : this.setUniform("uPerspective", 0)), this.setUniform("uViewMatrix", e.mat4), this.setUniform("uProjectionMatrix", t.mat4), this.setUniform("uModelViewMatrix", r.mat4), this.setUniform("uModelViewProjectionMatrix", o.mat4), this.uniforms.uNormalMatrix && (this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix), this.setUniform("uNormalMatrix", this._renderer.uNMatrix.mat3));
                }, s.default.Shader.prototype.useProgram = function() {
                    var e = this._renderer.GL;
                    return this._renderer._curShader !== this && (e.useProgram(this._glProgram), this._renderer._curShader = this), this;
                }, s.default.Shader.prototype.setUniform = function(e, t) {
                    var r = this.uniforms[e];
                    if (r) {
                        var o = this._renderer.GL;
                        if (r.isArray) {
                            if (r._cachedData && this._renderer._arraysEqual(r._cachedData, t)) return;
                            r._cachedData = t.slice(0);
                        } else {
                            if (r._cachedData && r._cachedData === t) return;
                            Array.isArray(t) ? r._cachedData = t.slice(0) : r._cachedData = t;
                        }
                        var n = r.location;
                        switch(this.useProgram(), r.type){
                            case o.BOOL:
                                !0 === t ? o.uniform1i(n, 1) : o.uniform1i(n, 0);
                                break;
                            case o.INT:
                                1 < r.size ? t.length && o.uniform1iv(n, t) : o.uniform1i(n, t);
                                break;
                            case o.FLOAT:
                                1 < r.size ? t.length && o.uniform1fv(n, t) : o.uniform1f(n, t);
                                break;
                            case o.FLOAT_MAT3:
                                o.uniformMatrix3fv(n, !1, t);
                                break;
                            case o.FLOAT_MAT4:
                                o.uniformMatrix4fv(n, !1, t);
                                break;
                            case o.FLOAT_VEC2:
                                1 < r.size ? t.length && o.uniform2fv(n, t) : o.uniform2f(n, t[0], t[1]);
                                break;
                            case o.FLOAT_VEC3:
                                1 < r.size ? t.length && o.uniform3fv(n, t) : o.uniform3f(n, t[0], t[1], t[2]);
                                break;
                            case o.FLOAT_VEC4:
                                1 < r.size ? t.length && o.uniform4fv(n, t) : o.uniform4f(n, t[0], t[1], t[2], t[3]);
                                break;
                            case o.INT_VEC2:
                                1 < r.size ? t.length && o.uniform2iv(n, t) : o.uniform2i(n, t[0], t[1]);
                                break;
                            case o.INT_VEC3:
                                1 < r.size ? t.length && o.uniform3iv(n, t) : o.uniform3i(n, t[0], t[1], t[2]);
                                break;
                            case o.INT_VEC4:
                                1 < r.size ? t.length && o.uniform4iv(n, t) : o.uniform4i(n, t[0], t[1], t[2], t[3]);
                                break;
                            case o.SAMPLER_2D:
                                o.activeTexture(o.TEXTURE0 + r.samplerIndex), r.texture = t instanceof s.default.Texture ? t : this._renderer.getTexture(t), o.uniform1i(n, r.samplerIndex);
                        }
                        return this;
                    }
                }, s.default.Shader.prototype.isLightShader = function() {
                    return void 0 !== this.attributes.aNormal || void 0 !== this.uniforms.uUseLighting || void 0 !== this.uniforms.uAmbientLightCount || void 0 !== this.uniforms.uDirectionalLightCount || void 0 !== this.uniforms.uPointLightCount || void 0 !== this.uniforms.uAmbientColor || void 0 !== this.uniforms.uDirectionalDiffuseColors || void 0 !== this.uniforms.uDirectionalSpecularColors || void 0 !== this.uniforms.uPointLightLocation || void 0 !== this.uniforms.uPointLightDiffuseColors || void 0 !== this.uniforms.uPointLightSpecularColors || void 0 !== this.uniforms.uLightingDirection || void 0 !== this.uniforms.uSpecular;
                }, s.default.Shader.prototype.isNormalShader = function() {
                    return void 0 !== this.attributes.aNormal;
                }, s.default.Shader.prototype.isTextureShader = function() {
                    return 0 < this.samplers.length;
                }, s.default.Shader.prototype.isColorShader = function() {
                    return void 0 !== this.attributes.aVertexColor || void 0 !== this.uniforms.uMaterialColor;
                }, s.default.Shader.prototype.isTexLightShader = function() {
                    return this.isLightShader() && this.isTextureShader();
                }, s.default.Shader.prototype.isStrokeShader = function() {
                    return void 0 !== this.uniforms.uStrokeWeight;
                }, s.default.Shader.prototype.enableAttrib = function(e, t, r, o, n, s) {
                    var i, a;
                    return e && -1 !== (i = e.location) && (a = this._renderer.GL, e.enabled || (a.enableVertexAttribArray(i), e.enabled = !0), this._renderer.GL.vertexAttribPointer(i, t, r || a.FLOAT, o || !1, n || 0, s || 0)), this;
                };
                e = s.default.Shader;
                r.default = e;
            },
            {
                "../core/main": 267,
                "core-js/modules/es.array.index-of": 157,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.array.slice": 162,
                "core-js/modules/es.function.name": 165,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        323: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.typed-array.uint8-array"), e("core-js/modules/es.typed-array.copy-within"), e("core-js/modules/es.typed-array.every"), e("core-js/modules/es.typed-array.fill"), e("core-js/modules/es.typed-array.filter"), e("core-js/modules/es.typed-array.find"), e("core-js/modules/es.typed-array.find-index"), e("core-js/modules/es.typed-array.for-each"), e("core-js/modules/es.typed-array.includes"), e("core-js/modules/es.typed-array.index-of"), e("core-js/modules/es.typed-array.iterator"), e("core-js/modules/es.typed-array.join"), e("core-js/modules/es.typed-array.last-index-of"), e("core-js/modules/es.typed-array.map"), e("core-js/modules/es.typed-array.reduce"), e("core-js/modules/es.typed-array.reduce-right"), e("core-js/modules/es.typed-array.reverse"), e("core-js/modules/es.typed-array.set"), e("core-js/modules/es.typed-array.slice"), e("core-js/modules/es.typed-array.some"), e("core-js/modules/es.typed-array.sort"), e("core-js/modules/es.typed-array.subarray"), e("core-js/modules/es.typed-array.to-locale-string"), e("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", {
                    value: !0
                }), r.default = void 0;
                var n = (s = e("../core/main")) && s.__esModule ? s : {
                    default: s
                }, a = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = l();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function l() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, l = function() {
                        return e;
                    }, e);
                }
                n.default.Texture = function(e, t, r) {
                    this._renderer = e;
                    e = this._renderer.GL, (r = r || {}).dataType === e.FLOAT && (e.getExtension("OES_texture_float") || console.log("Oh no, your device doesn't support floating point textures!"), e.getExtension("OES_texture_float_linear") || console.log("Ack! Your device doesn't support linear filtering for floating point textures")), this.src = t, this.glTex = void 0, this.glTarget = e.TEXTURE_2D, this.glFormat = r.format || e.RGBA, this.mipmaps = !1, this.glMinFilter = r.minFilter || e.LINEAR, this.glMagFilter = r.magFilter || e.LINEAR, this.glWrapS = r.wrapS || e.CLAMP_TO_EDGE, this.glWrapT = r.wrapT || e.CLAMP_TO_EDGE, this.glDataType = r.dataType || e.UNSIGNED_BYTE, this.isSrcMediaElement = void 0 !== n.default.MediaElement && t instanceof n.default.MediaElement, this._videoPrevUpdateTime = 0, this.isSrcHTMLElement = void 0 !== n.default.Element && t instanceof n.default.Element && !(t instanceof n.default.Graphics) && !(t instanceof n.default.Renderer), this.isSrcP5Image = t instanceof n.default.Image, this.isSrcP5Graphics = t instanceof n.default.Graphics, this.isSrcP5Renderer = t instanceof n.default.Renderer, this.isImageData = "undefined" != typeof ImageData && t instanceof ImageData, r = this._getTextureDataFromSource();
                    return this.width = r.width, this.height = r.height, this.init(r), this;
                }, n.default.Texture.prototype._getTextureDataFromSource = function() {
                    var e;
                    return this.isSrcP5Image ? e = this.src.canvas : this.isSrcMediaElement || this.isSrcP5Graphics || this.isSrcP5Renderer || this.isSrcHTMLElement ? e = this.src.elt : this.isImageData && (e = this.src), e;
                }, n.default.Texture.prototype.init = function(e) {
                    var t, r = this._renderer.GL;
                    this.glTex = r.createTexture(), this.glWrapS = this._renderer.textureWrapX, this.glWrapT = this._renderer.textureWrapY, this.setWrapMode(this.glWrapS, this.glWrapT), this.bindTexture(), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MAG_FILTER, this.glMagFilter), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MIN_FILTER, this.glMinFilter), 0 === this.width || 0 === this.height || this.isSrcMediaElement && !this.src.loadedmetadata ? (t = new Uint8Array([
                        1,
                        1,
                        1,
                        1
                    ]), r.texImage2D(this.glTarget, 0, r.RGBA, 1, 1, 0, this.glFormat, this.glDataType, t)) : r.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, this.glDataType, e);
                }, n.default.Texture.prototype.update = function() {
                    var e, t, r, o = this.src;
                    return 0 !== o.width && 0 !== o.height && (e = this._getTextureDataFromSource(), t = !1, r = this._renderer.GL, e.width !== this.width || e.height !== this.height ? (t = !0, this.width = e.width, this.height = e.height, this.isSrcP5Image ? o.setModified(!1) : (this.isSrcMediaElement || this.isSrcHTMLElement) && o.setModified(!0)) : this.isSrcP5Image ? o.isModified() && o.setModified((t = !0, false)) : this.isSrcMediaElement ? o.isModified() ? o.setModified((t = !0, false)) : o.loadedmetadata && this._videoPrevUpdateTime !== o.time() && (this._videoPrevUpdateTime = o.time(), t = !0) : this.isImageData ? o._dirty && (t = (o._dirty = !1, true)) : t = !0, t && (this.bindTexture(), r.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, this.glDataType, e)), t);
                }, n.default.Texture.prototype.bindTexture = function() {
                    return this._renderer.GL.bindTexture(this.glTarget, this.glTex), this;
                }, n.default.Texture.prototype.unbindTexture = function() {
                    this._renderer.GL.bindTexture(this.glTarget, null);
                }, n.default.Texture.prototype.setInterpolation = function(e, t) {
                    var r = this._renderer.GL;
                    e === a.NEAREST ? this.glMinFilter = r.NEAREST : this.glMinFilter = r.LINEAR, t === a.NEAREST ? this.glMagFilter = r.NEAREST : this.glMagFilter = r.LINEAR, this.bindTexture(), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MIN_FILTER, this.glMinFilter), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MAG_FILTER, this.glMagFilter), this.unbindTexture();
                }, n.default.Texture.prototype.setWrapMode = function(e, t) {
                    function r(e) {
                        return 0 == (e & e - 1);
                    }
                    var o = this._renderer.GL, n = r(this.width), s = r(this.height);
                    e === a.REPEAT ? n && s ? this.glWrapS = o.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = o.CLAMP_TO_EDGE) : e === a.MIRROR ? n && s ? this.glWrapS = o.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = o.CLAMP_TO_EDGE) : this.glWrapS = o.CLAMP_TO_EDGE, t === a.REPEAT ? n && s ? this.glWrapT = o.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = o.CLAMP_TO_EDGE) : t === a.MIRROR ? n && s ? this.glWrapT = o.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = o.CLAMP_TO_EDGE) : this.glWrapT = o.CLAMP_TO_EDGE, this.bindTexture(), o.texParameteri(o.TEXTURE_2D, o.TEXTURE_WRAP_S, this.glWrapS), o.texParameteri(o.TEXTURE_2D, o.TEXTURE_WRAP_T, this.glWrapT), this.unbindTexture();
                };
                var s = n.default.Texture;
                r.default = s;
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.typed-array.copy-within": 197,
                "core-js/modules/es.typed-array.every": 198,
                "core-js/modules/es.typed-array.fill": 199,
                "core-js/modules/es.typed-array.filter": 200,
                "core-js/modules/es.typed-array.find": 202,
                "core-js/modules/es.typed-array.find-index": 201,
                "core-js/modules/es.typed-array.for-each": 205,
                "core-js/modules/es.typed-array.includes": 206,
                "core-js/modules/es.typed-array.index-of": 207,
                "core-js/modules/es.typed-array.iterator": 210,
                "core-js/modules/es.typed-array.join": 211,
                "core-js/modules/es.typed-array.last-index-of": 212,
                "core-js/modules/es.typed-array.map": 213,
                "core-js/modules/es.typed-array.reduce": 215,
                "core-js/modules/es.typed-array.reduce-right": 214,
                "core-js/modules/es.typed-array.reverse": 216,
                "core-js/modules/es.typed-array.set": 217,
                "core-js/modules/es.typed-array.slice": 218,
                "core-js/modules/es.typed-array.some": 219,
                "core-js/modules/es.typed-array.sort": 220,
                "core-js/modules/es.typed-array.subarray": 221,
                "core-js/modules/es.typed-array.to-locale-string": 222,
                "core-js/modules/es.typed-array.to-string": 223,
                "core-js/modules/es.typed-array.uint8-array": 226,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ],
        324: [
            function(e, t, r) {
                "use strict";
                function o(e) {
                    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                        return typeof e;
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    })(e);
                }
                function i(e) {
                    return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e) {
                        return o(e);
                    } : function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : o(e);
                    })(e);
                }
                e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.get-own-property-descriptor"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.sub"), e("core-js/modules/es.weak-map"), e("core-js/modules/web.dom-collections.iterator"), e("core-js/modules/es.symbol"), e("core-js/modules/es.symbol.description"), e("core-js/modules/es.symbol.iterator"), e("core-js/modules/es.array.iterator"), e("core-js/modules/es.object.to-string"), e("core-js/modules/es.regexp.exec"), e("core-js/modules/es.string.iterator"), e("core-js/modules/es.string.split"), e("core-js/modules/es.string.sub"), e("core-js/modules/web.dom-collections.iterator");
                var n, B = (n = e("../core/main")) && n.__esModule ? n : {
                    default: n
                }, E = function(e) {
                    if (e && e.__esModule) return e;
                    if (null === e || "object" !== i(e) && "function" != typeof e) return {
                        default: e
                    };
                    var t = a();
                    if (t && t.has(e)) return t.get(e);
                    var r, o = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(r in e){
                        var s;
                        Object.prototype.hasOwnProperty.call(e, r) && ((s = n ? Object.getOwnPropertyDescriptor(e, r) : null) && (s.get || s.set) ? Object.defineProperty(o, r, s) : o[r] = e[r]);
                    }
                    o.default = e, t && t.set(e, o);
                    return o;
                }(e("../core/constants"));
                function a() {
                    var e;
                    return "function" != typeof WeakMap ? null : (e = new WeakMap, a = function() {
                        return e;
                    }, e);
                }
                e("./p5.Shader"), e("./p5.RendererGL.Retained"), B.default.RendererGL.prototype._applyTextProperties = function() {}, B.default.RendererGL.prototype.textWidth = function(e) {
                    return this._isOpenType() ? this._textFont._textWidth(e, this._textSize) : 0;
                };
                function s(e, t) {
                    this.width = e, this.height = t, this.infos = [], this.findImage = function(e) {
                        var t, r, o = this.width * this.height;
                        if (o < e) throw new Error("font is too complex to render in 3D");
                        for(var n = this.infos.length - 1; 0 <= n; --n){
                            var s = this.infos[n];
                            if (s.index + e < o) {
                                r = (t = s).imageData;
                                break;
                            }
                        }
                        if (!t) {
                            try {
                                r = new ImageData(this.width, this.height);
                            } catch (e) {
                                var i = document.getElementsByTagName("canvas")[0], a = !i, l = (i || ((i = document.createElement("canvas")).style.display = "none", document.body.appendChild(i)), i.getContext("2d"));
                                l && (r = l.createImageData(this.width, this.height)), a && document.body.removeChild(i);
                            }
                            this.infos.push(t = {
                                index: 0,
                                imageData: r
                            });
                        }
                        l = t.index;
                        return t.index += e, r._dirty = !0, {
                            imageData: r,
                            index: l
                        };
                    };
                }
                function G(e, t, r, o, n) {
                    var s = e.imageData.data, e = 4 * e.index++;
                    s[e++] = t, s[e++] = r, s[e++] = o, s[+e] = n;
                }
                function T(e) {
                    this.font = e, this.strokeImageInfos = new s(64, 64), this.colDimImageInfos = new s(64, 64), this.rowDimImageInfos = new s(64, 64), this.colCellImageInfos = new s(64, 64), this.rowCellImageInfos = new s(64, 64), this.glyphInfos = {}, this.getGlyphInfo = function(e) {
                        var t = this.glyphInfos[e.index];
                        if (!t) {
                            var r = e.getBoundingBox(), o = r.x1, n = r.y1, s = r.x2 - o, i = r.y2 - n, a = e.path.commands;
                            if (0 == s || 0 == i || !a.length) return this.glyphInfos[e.index] = {};
                            for(var l, u, c, d, f = [], h = [], p = [], m = 8; 0 <= m; --m)p.push([]);
                            for(m = 8; 0 <= m; --m)h.push([]);
                            var y = !0, g = !1, v = void 0;
                            try {
                                for(var b, j = a[Symbol.iterator](); !(y = (b = j.next()).done); y = !0){
                                    var _ = b.value, x = (_.x - o) / s, w = (_.y - n) / i;
                                    if (!N(l, u, x, w)) {
                                        switch(_.type){
                                            case "M":
                                                c = x, d = w;
                                                break;
                                            case "L":
                                                U(l, u, x, w);
                                                break;
                                            case "Q":
                                                var S = (_.x1 - o) / s, M = (_.y1 - n) / i;
                                                P([
                                                    l,
                                                    x,
                                                    S
                                                ], [
                                                    u,
                                                    w,
                                                    M
                                                ], {
                                                    x: l,
                                                    y: u,
                                                    cx: S,
                                                    cy: M
                                                });
                                                break;
                                            case "Z":
                                                N(l, u, c, d) ? f.push({
                                                    x: l,
                                                    y: u
                                                }) : (U(l, u, c, d), f.push({
                                                    x: c,
                                                    y: d
                                                }));
                                                break;
                                            case "C":
                                                for(var E = function(e, t, r, o, n, s, i, a) {
                                                    var e = new D(new B.default.Vector(e, t), new B.default.Vector(r, o), new B.default.Vector(n, s), new B.default.Vector(i, a)).splitInflections(), l = [], u = 30 / V, c = !0, t = !1, r = void 0;
                                                    try {
                                                        for(var d, f = e[Symbol.iterator](); !(c = (d = f.next()).done); c = !0){
                                                            for(var h = d.value, p = [], m = void 0; !(.125 <= (m = u / h.quadError()));){
                                                                var y = Math.pow(m, 1 / 3), g = h.split(y), v = h.split(1 - y / (1 - y));
                                                                l.push(g), p.push(h), h = v;
                                                            }
                                                            m < 1 && l.push(h.split(.5)), l.push(h), Array.prototype.push.apply(l, p.reverse());
                                                        }
                                                    } catch (e) {
                                                        t = !0, r = e;
                                                    } finally{
                                                        try {
                                                            c || null == f.return || f.return();
                                                        } finally{
                                                            if (t) throw r;
                                                        }
                                                    }
                                                    return l;
                                                }(l, u, (_.x1 - o) / s, (_.y1 - n) / i, (_.x2 - o) / s, (_.y2 - n) / i, x, w), T = 0; T < E.length; T++){
                                                    var C = E[T].toQuadratic();
                                                    P([
                                                        C.x,
                                                        C.x1,
                                                        C.cx
                                                    ], [
                                                        C.y,
                                                        C.y1,
                                                        C.cy
                                                    ], C);
                                                }
                                                break;
                                            default:
                                                throw new Error("unknown command type: ".concat(_.type));
                                        }
                                        l = x, u = w;
                                    }
                                }
                            } catch (e) {
                                g = !0, v = e;
                            } finally{
                                try {
                                    y || null == j.return || j.return();
                                } finally{
                                    if (g) throw v;
                                }
                            }
                            for(var O = f.length, L = this.strokeImageInfos.findImage(O), I = L.index, k = 0; k < O; ++k){
                                var A = f[k];
                                G(L, R(A.x), R(A.y), R(A.cx), R(A.cy));
                            }
                            (t = this.glyphInfos[e.index] = {
                                glyph: e,
                                uGlyphRect: [
                                    r.x1,
                                    -r.y1,
                                    r.x2,
                                    -r.y2
                                ],
                                strokeImageInfo: L,
                                strokes: f,
                                colInfo: F(p, this.colDimImageInfos, this.colCellImageInfos),
                                rowInfo: F(h, this.rowDimImageInfos, this.rowCellImageInfos)
                            }).uGridOffset = [
                                t.colInfo.dimOffset,
                                t.rowInfo.dimOffset
                            ];
                        }
                        return t;
                        function P(e, t, r) {
                            var o = f.length;
                            function n(e, t, r) {
                                for(var o = e.length; 0 < o--;){
                                    var n = e[o];
                                    n < t && (t = n), r < n && (r = n);
                                }
                                return {
                                    min: t,
                                    max: r
                                };
                            }
                            f.push(r);
                            for(var r = n(e, 1, 0), e = Math.max(Math.floor(9 * r.min), 0), s = Math.min(Math.ceil(9 * r.max), 9), i = e; i < s; ++i)p[i].push(o);
                            for(var r = n(t, 1, 0), e = Math.max(Math.floor(9 * r.min), 0), a = Math.min(Math.ceil(9 * r.max), 9), l = e; l < a; ++l)h[l].push(o);
                        }
                        function R(e) {
                            var t, r;
                            return (e = (r = 255) * e) < (t = 0) ? t : r < e ? r : e;
                        }
                        function D(e, t, r, o) {
                            this.p0 = e, this.c0 = t, this.c1 = r, this.p1 = o, this.toQuadratic = function() {
                                return {
                                    x: this.p0.x,
                                    y: this.p0.y,
                                    x1: this.p1.x,
                                    y1: this.p1.y,
                                    cx: (3 * (this.c0.x + this.c1.x) - (this.p0.x + this.p1.x)) / 4,
                                    cy: (3 * (this.c0.y + this.c1.y) - (this.p0.y + this.p1.y)) / 4
                                };
                            }, this.quadError = function() {
                                return B.default.Vector.sub(B.default.Vector.sub(this.p1, this.p0), B.default.Vector.mult(B.default.Vector.sub(this.c1, this.c0), 3)).mag() / 2;
                            }, this.split = function(e) {
                                var t = B.default.Vector.lerp(this.p0, this.c0, e), r = B.default.Vector.lerp(this.c0, this.c1, e), o = B.default.Vector.lerp(t, r, e), r = (this.c1 = B.default.Vector.lerp(this.c1, this.p1, e), this.c0 = B.default.Vector.lerp(r, this.c1, e), B.default.Vector.lerp(o, this.c0, e)), e = new D(this.p0, t, o, r);
                                return this.p0 = r, e;
                            }, this.splitInflections = function() {
                                var e = B.default.Vector.sub(this.c0, this.p0), t = B.default.Vector.sub(B.default.Vector.sub(this.c1, this.c0), e), r = B.default.Vector.sub(B.default.Vector.sub(B.default.Vector.sub(this.p1, this.c1), e), B.default.Vector.mult(t, 2)), o = [], n = t.x * r.y - t.y * r.x;
                                return 0 !== n && 0 <= (e = (r = e.x * r.y - e.y * r.x) * r - 4 * n * (e.x * t.y - e.y * t.x)) && (n < 0 && (n = -n, r = -r), e = (-r + (t = Math.sqrt(e))) / (2 * n), 0 < (r = (-r - t) / (2 * n)) && r < 1 && (o.push(this.split(r)), e = 1 - (1 - e) / (1 - r)), 0 < e && e < 1 && o.push(this.split(e))), o.push(this), o;
                            };
                        }
                        function U(e, t, r, o) {
                            P([
                                e,
                                r
                            ], [
                                t,
                                o
                            ], {
                                x: e,
                                y: t,
                                cx: (e + r) / 2,
                                cy: (t + o) / 2
                            });
                        }
                        function N(e, t, r, o) {
                            return Math.abs(r - e) < 1e-5 && Math.abs(o - t) < 1e-5;
                        }
                        function F(e, t, r) {
                            for(var o = e.length, n = t.findImage(o), t = n.index, s = 0, i = 0; i < o; ++i)s += e[i].length;
                            for(var a = r.findImage(s), l = 0; l < o; ++l){
                                var u = e[l], c = u.length, d = a.index;
                                G(n, d >> 7, 127 & d, c >> 7, 127 & c);
                                for(var f = 0; f < c; ++f){
                                    var h = u[f] + I;
                                    G(a, h >> 7, 127 & h, 0, 0);
                                }
                            }
                            return {
                                cellImageInfo: a,
                                dimOffset: t,
                                dimImageInfo: n
                            };
                        }
                    };
                }
                var V = Math.sqrt(3);
                B.default.RendererGL.prototype._renderText = function(e, t, r, o, n) {
                    if (this._textFont && "string" != typeof this._textFont) {
                        if (!(n <= o) && this._doFill) {
                            if (this._isOpenType()) {
                                e.push();
                                var n = this._doStroke, s = this.drawMode, i = (this._doStroke = !1, this.drawMode = E.TEXTURE, this._textFont.font), a = (a = this._textFont._fontInfo) || (this._textFont._fontInfo = new T(i)), r = this._textFont._handleAlignment(this, t, r, o), o = this._textSize / i.unitsPerEm, l = (this.translate(r.x, r.y, 0), this.scale(o, o, 1), this.GL), r = !this._defaultFontShader, u = this._getFontShader(), c = (u.init(), u.bindShader(), r && (u.setUniform("uGridImageSize", [
                                    64,
                                    64
                                ]), u.setUniform("uCellsImageSize", [
                                    64,
                                    64
                                ]), u.setUniform("uStrokeImageSize", [
                                    64,
                                    64
                                ]), u.setUniform("uGridSize", [
                                    9,
                                    9
                                ])), this._applyColorBlend(this.curFillColor), this.retainedMode.geometry.glyph), d = (c || ((o = this._textGeom = new B.default.Geometry(1, 1, function() {
                                    for(var e = 0; e <= 1; e++)for(var t = 0; t <= 1; t++)this.vertices.push(new B.default.Vector(t, e, 0)), this.uvs.push(t, e);
                                })).computeFaces().computeNormals(), c = this.createBuffers("glyph", o)), !0), r = !1, o = void 0;
                                try {
                                    for(var f, h = this.retainedMode.buffers.text[Symbol.iterator](); !(d = (f = h.next()).done); d = !0)f.value._prepareBuffer(c, u);
                                } catch (e) {
                                    r = !0, o = e;
                                } finally{
                                    try {
                                        d || null == h.return || h.return();
                                    } finally{
                                        if (r) throw o;
                                    }
                                }
                                this._bindBuffer(c.indexBuffer, l.ELEMENT_ARRAY_BUFFER), u.setUniform("uMaterialColor", this.curFillColor);
                                try {
                                    var p = 0, m = null, y = i.stringToGlyphs(t), g = !0, v = !1, b = void 0;
                                    try {
                                        for(var j, _ = y[Symbol.iterator](); !(g = (j = _.next()).done); g = !0){
                                            var x, w, S = j.value, M = (m && (p += i.getKerningValue(m, S)), a.getGlyphInfo(S));
                                            M.uGlyphRect && (x = M.rowInfo, w = M.colInfo, u.setUniform("uSamplerStrokes", M.strokeImageInfo.imageData), u.setUniform("uSamplerRowStrokes", x.cellImageInfo.imageData), u.setUniform("uSamplerRows", x.dimImageInfo.imageData), u.setUniform("uSamplerColStrokes", w.cellImageInfo.imageData), u.setUniform("uSamplerCols", w.dimImageInfo.imageData), u.setUniform("uGridOffset", M.uGridOffset), u.setUniform("uGlyphRect", M.uGlyphRect), u.setUniform("uGlyphOffset", p), u.bindTextures(), l.drawElements(l.TRIANGLES, 6, this.GL.UNSIGNED_SHORT, 0)), p += S.advanceWidth, m = S;
                                        }
                                    } catch (e) {
                                        v = !0, b = e;
                                    } finally{
                                        try {
                                            g || null == _.return || _.return();
                                        } finally{
                                            if (v) throw b;
                                        }
                                    }
                                } finally{
                                    u.unbindShader(), this._doStroke = n, this.drawMode = s, e.pop();
                                }
                            } else console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported");
                            return e;
                        }
                    } else console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.");
                };
            },
            {
                "../core/constants": 256,
                "../core/main": 267,
                "./p5.RendererGL.Retained": 320,
                "./p5.Shader": 322,
                "core-js/modules/es.array.iterator": 158,
                "core-js/modules/es.object.get-own-property-descriptor": 173,
                "core-js/modules/es.object.to-string": 177,
                "core-js/modules/es.regexp.exec": 181,
                "core-js/modules/es.string.iterator": 186,
                "core-js/modules/es.string.split": 191,
                "core-js/modules/es.string.sub": 192,
                "core-js/modules/es.symbol": 196,
                "core-js/modules/es.symbol.description": 194,
                "core-js/modules/es.symbol.iterator": 195,
                "core-js/modules/es.weak-map": 228,
                "core-js/modules/web.dom-collections.iterator": 230
            }
        ]
    }, {}, [
        251
    ])(251);
});

},{}],"crPa1":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"9zv4H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Circle", ()=>Circle);
var _ = require(".");
const inverse = true;
class Circle {
    constructor(offset = 0){
        this.offset = offset;
    }
    draw(p5) {
        const maxSize = Math.sqrt(p5.width ** 2 + p5.height ** 2);
        const size = (p5.millis() / 10 + this.offset) % maxSize;
        const offset = Math.sin(this.offset * p5.millis() / 2e6) * 2;
        const opacity = p5.map(size, 0, maxSize, inverse ? 0 : 255, inverse ? 255 : 0);
        p5.stroke((0, _.STROKE_COL), opacity);
        p5.circle(0, 0, size + offset);
    }
}

},{".":"h7u1C","@parcel/transformer-js/src/esmodule-helpers.js":"crPa1"}],"fAiEq":[function(require,module,exports) {
var global = arguments[3];
(function() {
    /** Used as a safe reference for `undefined` in pre-ES5 environments. */ var undefined;
    /** Used as the semantic version number. */ var VERSION = "4.17.21";
    /** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200;
    /** Error message constants. */ var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
    /** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = "__lodash_hash_undefined__";
    /** Used as the maximum memoize cache size. */ var MAX_MEMOIZE_SIZE = 500;
    /** Used as the internal argument placeholder. */ var PLACEHOLDER = "__lodash_placeholder__";
    /** Used to compose bitmasks for cloning. */ var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
    /** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
    /** Used to compose bitmasks for function metadata. */ var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
    /** Used as default options for `_.truncate`. */ var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
    /** Used to detect hot functions by number of calls within a span of milliseconds. */ var HOT_COUNT = 800, HOT_SPAN = 16;
    /** Used to indicate the type of lazy iteratees. */ var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
    /** Used as references for various `Number` constants. */ var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 1.7976931348623157e+308, NAN = 0 / 0;
    /** Used as references for the maximum length and index of an array. */ var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
    /** Used to associate wrap methods with their bit flags. */ var wrapFlags = [
        [
            "ary",
            WRAP_ARY_FLAG
        ],
        [
            "bind",
            WRAP_BIND_FLAG
        ],
        [
            "bindKey",
            WRAP_BIND_KEY_FLAG
        ],
        [
            "curry",
            WRAP_CURRY_FLAG
        ],
        [
            "curryRight",
            WRAP_CURRY_RIGHT_FLAG
        ],
        [
            "flip",
            WRAP_FLIP_FLAG
        ],
        [
            "partial",
            WRAP_PARTIAL_FLAG
        ],
        [
            "partialRight",
            WRAP_PARTIAL_RIGHT_FLAG
        ],
        [
            "rearg",
            WRAP_REARG_FLAG
        ]
    ];
    /** `Object#toString` result references. */ var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
    var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
    /** Used to match empty string literals in compiled template source. */ var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    /** Used to match HTML entities and HTML characters. */ var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
    /** Used to match template delimiters. */ var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
    /** Used to match property names within property paths. */ var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */ var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
    /** Used to match leading whitespace. */ var reTrimStart = /^\s+/;
    /** Used to match a single whitespace character. */ var reWhitespace = /\s/;
    /** Used to match wrap detail comments. */ var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
    /** Used to match words composed of alphanumeric characters. */ var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */ var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
    /** Used to match backslashes in property paths. */ var reEscapeChar = /\\(\\)?/g;
    /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */ var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    /** Used to match `RegExp` flags from their coerced string values. */ var reFlags = /\w*$/;
    /** Used to detect bad signed hexadecimal string values. */ var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    /** Used to detect binary string values. */ var reIsBinary = /^0b[01]+$/i;
    /** Used to detect host constructors (Safari). */ var reIsHostCtor = /^\[object .+?Constructor\]$/;
    /** Used to detect octal string values. */ var reIsOctal = /^0o[0-7]+$/i;
    /** Used to detect unsigned integer values. */ var reIsUint = /^(?:0|[1-9]\d*)$/;
    /** Used to match Latin Unicode letters (excluding mathematical operators). */ var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    /** Used to ensure capturing order of template delimiters. */ var reNoMatch = /($^)/;
    /** Used to match unescaped characters in compiled string literals. */ var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
    /** Used to compose unicode character classes. */ var rsAstralRange = "\ud800-\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    /** Used to compose unicode capture groups. */ var rsApos = "['\u2019]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\ud83c[\udffb-\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\ud83c[\udde6-\uddff]){2}", rsSurrPair = "[\ud800-\udbff][\udc00-\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
    /** Used to compose unicode regexes. */ var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [
        rsNonAstral,
        rsRegional,
        rsSurrPair
    ].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [
        rsDingbat,
        rsRegional,
        rsSurrPair
    ].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [
        rsNonAstral + rsCombo + "?",
        rsCombo,
        rsRegional,
        rsSurrPair,
        rsAstral
    ].join("|") + ")";
    /** Used to match apostrophes. */ var reApos = RegExp(rsApos, "g");
    /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */ var reComboMark = RegExp(rsCombo, "g");
    /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */ var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    /** Used to match complex or compound words. */ var reUnicodeWord = RegExp([
        rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [
            rsBreak,
            rsUpper,
            "$"
        ].join("|") + ")",
        rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [
            rsBreak,
            rsUpper + rsMiscLower,
            "$"
        ].join("|") + ")",
        rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
        rsUpper + "+" + rsOptContrUpper,
        rsOrdUpper,
        rsOrdLower,
        rsDigits,
        rsEmoji
    ].join("|"), "g");
    /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */ var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
    /** Used to detect strings that need a more robust regexp to match words. */ var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    /** Used to assign default `context` object properties. */ var contextProps = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
    ];
    /** Used to make template sourceURLs easier to identify. */ var templateCounter = -1;
    /** Used to identify `toStringTag` values of typed arrays. */ var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    /** Used to identify `toStringTag` values supported by `_.clone`. */ var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    /** Used to map Latin Unicode letters to basic Latin letters. */ var deburredLetters = {
        // Latin-1 Supplement block.
        "\xc0": "A",
        "\xc1": "A",
        "\xc2": "A",
        "\xc3": "A",
        "\xc4": "A",
        "\xc5": "A",
        "\xe0": "a",
        "\xe1": "a",
        "\xe2": "a",
        "\xe3": "a",
        "\xe4": "a",
        "\xe5": "a",
        "\xc7": "C",
        "\xe7": "c",
        "\xd0": "D",
        "\xf0": "d",
        "\xc8": "E",
        "\xc9": "E",
        "\xca": "E",
        "\xcb": "E",
        "\xe8": "e",
        "\xe9": "e",
        "\xea": "e",
        "\xeb": "e",
        "\xcc": "I",
        "\xcd": "I",
        "\xce": "I",
        "\xcf": "I",
        "\xec": "i",
        "\xed": "i",
        "\xee": "i",
        "\xef": "i",
        "\xd1": "N",
        "\xf1": "n",
        "\xd2": "O",
        "\xd3": "O",
        "\xd4": "O",
        "\xd5": "O",
        "\xd6": "O",
        "\xd8": "O",
        "\xf2": "o",
        "\xf3": "o",
        "\xf4": "o",
        "\xf5": "o",
        "\xf6": "o",
        "\xf8": "o",
        "\xd9": "U",
        "\xda": "U",
        "\xdb": "U",
        "\xdc": "U",
        "\xf9": "u",
        "\xfa": "u",
        "\xfb": "u",
        "\xfc": "u",
        "\xdd": "Y",
        "\xfd": "y",
        "\xff": "y",
        "\xc6": "Ae",
        "\xe6": "ae",
        "\xde": "Th",
        "\xfe": "th",
        "\xdf": "ss",
        // Latin Extended-A block.
        "\u0100": "A",
        "\u0102": "A",
        "\u0104": "A",
        "\u0101": "a",
        "\u0103": "a",
        "\u0105": "a",
        "\u0106": "C",
        "\u0108": "C",
        "\u010A": "C",
        "\u010C": "C",
        "\u0107": "c",
        "\u0109": "c",
        "\u010B": "c",
        "\u010D": "c",
        "\u010E": "D",
        "\u0110": "D",
        "\u010F": "d",
        "\u0111": "d",
        "\u0112": "E",
        "\u0114": "E",
        "\u0116": "E",
        "\u0118": "E",
        "\u011A": "E",
        "\u0113": "e",
        "\u0115": "e",
        "\u0117": "e",
        "\u0119": "e",
        "\u011B": "e",
        "\u011C": "G",
        "\u011E": "G",
        "\u0120": "G",
        "\u0122": "G",
        "\u011D": "g",
        "\u011F": "g",
        "\u0121": "g",
        "\u0123": "g",
        "\u0124": "H",
        "\u0126": "H",
        "\u0125": "h",
        "\u0127": "h",
        "\u0128": "I",
        "\u012A": "I",
        "\u012C": "I",
        "\u012E": "I",
        "\u0130": "I",
        "\u0129": "i",
        "\u012B": "i",
        "\u012D": "i",
        "\u012F": "i",
        "\u0131": "i",
        "\u0134": "J",
        "\u0135": "j",
        "\u0136": "K",
        "\u0137": "k",
        "\u0138": "k",
        "\u0139": "L",
        "\u013B": "L",
        "\u013D": "L",
        "\u013F": "L",
        "\u0141": "L",
        "\u013A": "l",
        "\u013C": "l",
        "\u013E": "l",
        "\u0140": "l",
        "\u0142": "l",
        "\u0143": "N",
        "\u0145": "N",
        "\u0147": "N",
        "\u014A": "N",
        "\u0144": "n",
        "\u0146": "n",
        "\u0148": "n",
        "\u014B": "n",
        "\u014C": "O",
        "\u014E": "O",
        "\u0150": "O",
        "\u014D": "o",
        "\u014F": "o",
        "\u0151": "o",
        "\u0154": "R",
        "\u0156": "R",
        "\u0158": "R",
        "\u0155": "r",
        "\u0157": "r",
        "\u0159": "r",
        "\u015A": "S",
        "\u015C": "S",
        "\u015E": "S",
        "\u0160": "S",
        "\u015B": "s",
        "\u015D": "s",
        "\u015F": "s",
        "\u0161": "s",
        "\u0162": "T",
        "\u0164": "T",
        "\u0166": "T",
        "\u0163": "t",
        "\u0165": "t",
        "\u0167": "t",
        "\u0168": "U",
        "\u016A": "U",
        "\u016C": "U",
        "\u016E": "U",
        "\u0170": "U",
        "\u0172": "U",
        "\u0169": "u",
        "\u016B": "u",
        "\u016D": "u",
        "\u016F": "u",
        "\u0171": "u",
        "\u0173": "u",
        "\u0174": "W",
        "\u0175": "w",
        "\u0176": "Y",
        "\u0177": "y",
        "\u0178": "Y",
        "\u0179": "Z",
        "\u017B": "Z",
        "\u017D": "Z",
        "\u017A": "z",
        "\u017C": "z",
        "\u017E": "z",
        "\u0132": "IJ",
        "\u0133": "ij",
        "\u0152": "Oe",
        "\u0153": "oe",
        "\u0149": "'n",
        "\u017F": "s"
    };
    /** Used to map characters to HTML entities. */ var htmlEscapes = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
    };
    /** Used to map HTML entities to characters. */ var htmlUnescapes = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
    };
    /** Used to escape characters for inclusion in compiled string literals. */ var stringEscapes = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
    };
    /** Built-in method references without a dependency on `root`. */ var freeParseFloat = parseFloat, freeParseInt = parseInt;
    /** Detect free variable `global` from Node.js. */ var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    /** Detect free variable `self`. */ var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    /** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function("return this")();
    /** Detect free variable `exports`. */ var freeExports = exports && !exports.nodeType && exports;
    /** Detect free variable `module`. */ var freeModule = freeExports && true && module && !module.nodeType && module;
    /** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;
    /** Detect free variable `process` from Node.js. */ var freeProcess = moduleExports && freeGlobal.process;
    /** Used to access faster Node.js helpers. */ var nodeUtil = function() {
        try {
            // Use `util.types` for Node.js 10+.
            var types = freeModule && freeModule.require && freeModule.require("util").types;
            if (types) return types;
            // Legacy `process.binding('util')` for Node.js < 10.
            return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e) {}
    }();
    /* Node.js helper references. */ var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    /*--------------------------------------------------------------------------*/ /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */ function apply(func, thisArg, args) {
        switch(args.length){
            case 0:
                return func.call(thisArg);
            case 1:
                return func.call(thisArg, args[0]);
            case 2:
                return func.call(thisArg, args[0], args[1]);
            case 3:
                return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
    }
    /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */ function arrayAggregator(array, setter, iteratee, accumulator) {
        var index = -1, length = array == null ? 0 : array.length;
        while(++index < length){
            var value = array[index];
            setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
    }
    /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */ function arrayEach(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length;
        while(++index < length){
            if (iteratee(array[index], index, array) === false) break;
        }
        return array;
    }
    /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */ function arrayEachRight(array, iteratee) {
        var length = array == null ? 0 : array.length;
        while(length--){
            if (iteratee(array[length], length, array) === false) break;
        }
        return array;
    }
    /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */ function arrayEvery(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while(++index < length){
            if (!predicate(array[index], index, array)) return false;
        }
        return true;
    }
    /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */ function arrayFilter(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while(++index < length){
            var value = array[index];
            if (predicate(value, index, array)) result[resIndex++] = value;
        }
        return result;
    }
    /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */ function arrayIncludes(array, value) {
        var length = array == null ? 0 : array.length;
        return !!length && baseIndexOf(array, value, 0) > -1;
    }
    /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */ function arrayIncludesWith(array, value, comparator) {
        var index = -1, length = array == null ? 0 : array.length;
        while(++index < length){
            if (comparator(value, array[index])) return true;
        }
        return false;
    }
    /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */ function arrayMap(array, iteratee) {
        var index = -1, length = array == null ? 0 : array.length, result = Array(length);
        while(++index < length)result[index] = iteratee(array[index], index, array);
        return result;
    }
    /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */ function arrayPush(array, values) {
        var index = -1, length = values.length, offset = array.length;
        while(++index < length)array[offset + index] = values[index];
        return array;
    }
    /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */ function arrayReduce(array, iteratee, accumulator, initAccum) {
        var index = -1, length = array == null ? 0 : array.length;
        if (initAccum && length) accumulator = array[++index];
        while(++index < length)accumulator = iteratee(accumulator, array[index], index, array);
        return accumulator;
    }
    /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */ function arrayReduceRight(array, iteratee, accumulator, initAccum) {
        var length = array == null ? 0 : array.length;
        if (initAccum && length) accumulator = array[--length];
        while(length--)accumulator = iteratee(accumulator, array[length], length, array);
        return accumulator;
    }
    /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */ function arraySome(array, predicate) {
        var index = -1, length = array == null ? 0 : array.length;
        while(++index < length){
            if (predicate(array[index], index, array)) return true;
        }
        return false;
    }
    /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */ var asciiSize = baseProperty("length");
    /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */ function asciiToArray(string) {
        return string.split("");
    }
    /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */ function asciiWords(string) {
        return string.match(reAsciiWord) || [];
    }
    /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */ function baseFindKey(collection, predicate, eachFunc) {
        var result;
        eachFunc(collection, function(value, key, collection) {
            if (predicate(value, key, collection)) {
                result = key;
                return false;
            }
        });
        return result;
    }
    /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function baseFindIndex(array, predicate, fromIndex, fromRight) {
        var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
        while(fromRight ? index-- : ++index < length){
            if (predicate(array[index], index, array)) return index;
        }
        return -1;
    }
    /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function baseIndexOfWith(array, value, fromIndex, comparator) {
        var index = fromIndex - 1, length = array.length;
        while(++index < length){
            if (comparator(array[index], value)) return index;
        }
        return -1;
    }
    /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */ function baseIsNaN(value) {
        return value !== value;
    }
    /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */ function baseMean(array, iteratee) {
        var length = array == null ? 0 : array.length;
        return length ? baseSum(array, iteratee) / length : NAN;
    }
    /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */ function baseProperty(key) {
        return function(object) {
            return object == null ? undefined : object[key];
        };
    }
    /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */ function basePropertyOf(object) {
        return function(key) {
            return object == null ? undefined : object[key];
        };
    }
    /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */ function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
        eachFunc(collection, function(value, index, collection) {
            accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
        });
        return accumulator;
    }
    /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */ function baseSortBy(array, comparer) {
        var length = array.length;
        array.sort(comparer);
        while(length--)array[length] = array[length].value;
        return array;
    }
    /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */ function baseSum(array, iteratee) {
        var result, index = -1, length = array.length;
        while(++index < length){
            var current = iteratee(array[index]);
            if (current !== undefined) result = result === undefined ? current : result + current;
        }
        return result;
    }
    /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */ function baseTimes(n, iteratee) {
        var index = -1, result = Array(n);
        while(++index < n)result[index] = iteratee(index);
        return result;
    }
    /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */ function baseToPairs(object, props) {
        return arrayMap(props, function(key) {
            return [
                key,
                object[key]
            ];
        });
    }
    /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */ function baseTrim(string) {
        return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */ function baseUnary(func) {
        return function(value) {
            return func(value);
        };
    }
    /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */ function baseValues(object, props) {
        return arrayMap(props, function(key) {
            return object[key];
        });
    }
    /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */ function cacheHas(cache, key) {
        return cache.has(key);
    }
    /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */ function charsStartIndex(strSymbols, chrSymbols) {
        var index = -1, length = strSymbols.length;
        while(++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1);
        return index;
    }
    /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */ function charsEndIndex(strSymbols, chrSymbols) {
        var index = strSymbols.length;
        while(index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1);
        return index;
    }
    /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */ function countHolders(array, placeholder) {
        var length = array.length, result = 0;
        while(length--)if (array[length] === placeholder) ++result;
        return result;
    }
    /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */ var deburrLetter = basePropertyOf(deburredLetters);
    /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */ var escapeHtmlChar = basePropertyOf(htmlEscapes);
    /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */ function escapeStringChar(chr) {
        return "\\" + stringEscapes[chr];
    }
    /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */ function getValue(object, key) {
        return object == null ? undefined : object[key];
    }
    /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */ function hasUnicode(string) {
        return reHasUnicode.test(string);
    }
    /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */ function hasUnicodeWord(string) {
        return reHasUnicodeWord.test(string);
    }
    /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */ function iteratorToArray(iterator) {
        var data, result = [];
        while(!(data = iterator.next()).done)result.push(data.value);
        return result;
    }
    /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */ function mapToArray(map) {
        var index = -1, result = Array(map.size);
        map.forEach(function(value, key) {
            result[++index] = [
                key,
                value
            ];
        });
        return result;
    }
    /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */ function overArg(func, transform) {
        return function(arg) {
            return func(transform(arg));
        };
    }
    /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */ function replaceHolders(array, placeholder) {
        var index = -1, length = array.length, resIndex = 0, result = [];
        while(++index < length){
            var value = array[index];
            if (value === placeholder || value === PLACEHOLDER) {
                array[index] = PLACEHOLDER;
                result[resIndex++] = index;
            }
        }
        return result;
    }
    /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */ function setToArray(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
            result[++index] = value;
        });
        return result;
    }
    /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */ function setToPairs(set) {
        var index = -1, result = Array(set.size);
        set.forEach(function(value) {
            result[++index] = [
                value,
                value
            ];
        });
        return result;
    }
    /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function strictIndexOf(array, value, fromIndex) {
        var index = fromIndex - 1, length = array.length;
        while(++index < length){
            if (array[index] === value) return index;
        }
        return -1;
    }
    /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */ function strictLastIndexOf(array, value, fromIndex) {
        var index = fromIndex + 1;
        while(index--){
            if (array[index] === value) return index;
        }
        return index;
    }
    /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */ function stringSize(string) {
        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
    }
    /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */ function stringToArray(string) {
        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */ function trimmedEndIndex(string) {
        var index = string.length;
        while(index-- && reWhitespace.test(string.charAt(index)));
        return index;
    }
    /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */ var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
    /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */ function unicodeSize(string) {
        var result = reUnicode.lastIndex = 0;
        while(reUnicode.test(string))++result;
        return result;
    }
    /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */ function unicodeToArray(string) {
        return string.match(reUnicode) || [];
    }
    /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */ function unicodeWords(string) {
        return string.match(reUnicodeWord) || [];
    }
    /*--------------------------------------------------------------------------*/ /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */ var runInContext = function runInContext(context) {
        context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
        /** Built-in constructor references. */ var Array1 = context.Array, Date = context.Date, Error = context.Error, Function1 = context.Function, Math = context.Math, Object1 = context.Object, RegExp1 = context.RegExp, String = context.String, TypeError = context.TypeError;
        /** Used for built-in method references. */ var arrayProto = Array1.prototype, funcProto = Function1.prototype, objectProto = Object1.prototype;
        /** Used to detect overreaching core-js shims. */ var coreJsData = context["__core-js_shared__"];
        /** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;
        /** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
        /** Used to generate unique IDs. */ var idCounter = 0;
        /** Used to detect methods masquerading as native. */ var maskSrcKey = function() {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
            return uid ? "Symbol(src)_1." + uid : "";
        }();
        /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */ var nativeObjectToString = objectProto.toString;
        /** Used to infer the `Object` constructor. */ var objectCtorString = funcToString.call(Object1);
        /** Used to restore the original `_` reference in `_.noConflict`. */ var oldDash = root._;
        /** Used to detect if a method is native. */ var reIsNative = RegExp1("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        /** Built-in value references. */ var Buffer = moduleExports ? context.Buffer : undefined, Symbol = context.Symbol, Uint8Array = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined, getPrototype = overArg(Object1.getPrototypeOf, Object1), objectCreate = Object1.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined, symIterator = Symbol ? Symbol.iterator : undefined, symToStringTag = Symbol ? Symbol.toStringTag : undefined;
        var defineProperty = function() {
            try {
                var func = getNative(Object1, "defineProperty");
                func({}, "", {});
                return func;
            } catch (e) {}
        }();
        /** Mocked built-ins. */ var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date && Date.now !== root.Date.now && Date.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
        /* Built-in method references for those with the same name as other `lodash` methods. */ var nativeCeil = Math.ceil, nativeFloor = Math.floor, nativeGetSymbols = Object1.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object1.keys, Object1), nativeMax = Math.max, nativeMin = Math.min, nativeNow = Date.now, nativeParseInt = context.parseInt, nativeRandom = Math.random, nativeReverse = arrayProto.reverse;
        /* Built-in method references that are verified to be native. */ var DataView = getNative(context, "DataView"), Map = getNative(context, "Map"), Promise = getNative(context, "Promise"), Set = getNative(context, "Set"), WeakMap = getNative(context, "WeakMap"), nativeCreate = getNative(Object1, "create");
        /** Used to store function metadata. */ var metaMap = WeakMap && new WeakMap;
        /** Used to lookup unminified function names. */ var realNames = {};
        /** Used to detect maps, sets, and weakmaps. */ var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);
        /** Used to convert symbols to primitives and strings. */ var symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined, symbolToString = symbolProto ? symbolProto.toString : undefined;
        /*------------------------------------------------------------------------*/ /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */ function lodash(value) {
            if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
                if (value instanceof LodashWrapper) return value;
                if (hasOwnProperty.call(value, "__wrapped__")) return wrapperClone(value);
            }
            return new LodashWrapper(value);
        }
        /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */ var baseCreate = function() {
            function object() {}
            return function(proto) {
                if (!isObject(proto)) return {};
                if (objectCreate) return objectCreate(proto);
                object.prototype = proto;
                var result = new object;
                object.prototype = undefined;
                return result;
            };
        }();
        /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */ function baseLodash() {
        // No operation performed.
        }
        /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */ function LodashWrapper(value, chainAll) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__chain__ = !!chainAll;
            this.__index__ = 0;
            this.__values__ = undefined;
        }
        /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */ lodash.templateSettings = {
            /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */ "escape": reEscape,
            /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */ "evaluate": reEvaluate,
            /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */ "interpolate": reInterpolate,
            /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */ "variable": "",
            /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */ "imports": {
                /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */ "_": lodash
            }
        };
        // Ensure wrappers are instances of `baseLodash`.
        lodash.prototype = baseLodash.prototype;
        lodash.prototype.constructor = lodash;
        LodashWrapper.prototype = baseCreate(baseLodash.prototype);
        LodashWrapper.prototype.constructor = LodashWrapper;
        /*------------------------------------------------------------------------*/ /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */ function LazyWrapper(value) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__dir__ = 1;
            this.__filtered__ = false;
            this.__iteratees__ = [];
            this.__takeCount__ = MAX_ARRAY_LENGTH;
            this.__views__ = [];
        }
        /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */ function lazyClone() {
            var result = new LazyWrapper(this.__wrapped__);
            result.__actions__ = copyArray(this.__actions__);
            result.__dir__ = this.__dir__;
            result.__filtered__ = this.__filtered__;
            result.__iteratees__ = copyArray(this.__iteratees__);
            result.__takeCount__ = this.__takeCount__;
            result.__views__ = copyArray(this.__views__);
            return result;
        }
        /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */ function lazyReverse() {
            if (this.__filtered__) {
                var result = new LazyWrapper(this);
                result.__dir__ = -1;
                result.__filtered__ = true;
            } else {
                result = this.clone();
                result.__dir__ *= -1;
            }
            return result;
        }
        /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */ function lazyValue() {
            var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
            if (!isArr || !isRight && arrLength == length && takeCount == length) return baseWrapperValue(array, this.__actions__);
            var result = [];
            outer: while(length-- && resIndex < takeCount){
                index += dir;
                var iterIndex = -1, value = array[index];
                while(++iterIndex < iterLength){
                    var data = iteratees[iterIndex], iteratee = data.iteratee, type = data.type, computed = iteratee(value);
                    if (type == LAZY_MAP_FLAG) value = computed;
                    else if (!computed) {
                        if (type == LAZY_FILTER_FLAG) continue outer;
                        else break outer;
                    }
                }
                result[resIndex++] = value;
            }
            return result;
        }
        // Ensure `LazyWrapper` is an instance of `baseLodash`.
        LazyWrapper.prototype = baseCreate(baseLodash.prototype);
        LazyWrapper.prototype.constructor = LazyWrapper;
        /*------------------------------------------------------------------------*/ /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function Hash(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while(++index < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */ function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
            this.size = 0;
        }
        /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function hashDelete(key) {
            var result = this.has(key) && delete this.__data__[key];
            this.size -= result ? 1 : 0;
            return result;
        }
        /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function hashGet(key) {
            var data = this.__data__;
            if (nativeCreate) {
                var result = data[key];
                return result === HASH_UNDEFINED ? undefined : result;
            }
            return hasOwnProperty.call(data, key) ? data[key] : undefined;
        }
        /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
        }
        /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */ function hashSet(key, value) {
            var data = this.__data__;
            this.size += this.has(key) ? 0 : 1;
            data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
            return this;
        }
        // Add methods to `Hash`.
        Hash.prototype.clear = hashClear;
        Hash.prototype["delete"] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        /*------------------------------------------------------------------------*/ /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function ListCache(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while(++index < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */ function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
        }
        /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function listCacheDelete(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) return false;
            var lastIndex = data.length - 1;
            if (index == lastIndex) data.pop();
            else splice.call(data, index, 1);
            --this.size;
            return true;
        }
        /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function listCacheGet(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            return index < 0 ? undefined : data[index][1];
        }
        /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
        }
        /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */ function listCacheSet(key, value) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) {
                ++this.size;
                data.push([
                    key,
                    value
                ]);
            } else data[index][1] = value;
            return this;
        }
        // Add methods to `ListCache`.
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        /*------------------------------------------------------------------------*/ /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function MapCache(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while(++index < length){
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */ function mapCacheClear() {
            this.size = 0;
            this.__data__ = {
                "hash": new Hash,
                "map": new (Map || ListCache),
                "string": new Hash
            };
        }
        /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function mapCacheDelete(key) {
            var result = getMapData(this, key)["delete"](key);
            this.size -= result ? 1 : 0;
            return result;
        }
        /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function mapCacheGet(key) {
            return getMapData(this, key).get(key);
        }
        /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function mapCacheHas(key) {
            return getMapData(this, key).has(key);
        }
        /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */ function mapCacheSet(key, value) {
            var data = getMapData(this, key), size = data.size;
            data.set(key, value);
            this.size += data.size == size ? 0 : 1;
            return this;
        }
        // Add methods to `MapCache`.
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype["delete"] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        /*------------------------------------------------------------------------*/ /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */ function SetCache(values) {
            var index = -1, length = values == null ? 0 : values.length;
            this.__data__ = new MapCache;
            while(++index < length)this.add(values[index]);
        }
        /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */ function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED);
            return this;
        }
        /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */ function setCacheHas(value) {
            return this.__data__.has(value);
        }
        // Add methods to `SetCache`.
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        /*------------------------------------------------------------------------*/ /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */ function Stack(entries) {
            var data = this.__data__ = new ListCache(entries);
            this.size = data.size;
        }
        /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */ function stackClear() {
            this.__data__ = new ListCache;
            this.size = 0;
        }
        /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */ function stackDelete(key) {
            var data = this.__data__, result = data["delete"](key);
            this.size = data.size;
            return result;
        }
        /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */ function stackGet(key) {
            return this.__data__.get(key);
        }
        /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */ function stackHas(key) {
            return this.__data__.has(key);
        }
        /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */ function stackSet(key, value) {
            var data = this.__data__;
            if (data instanceof ListCache) {
                var pairs = data.__data__;
                if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                    pairs.push([
                        key,
                        value
                    ]);
                    this.size = ++data.size;
                    return this;
                }
                data = this.__data__ = new MapCache(pairs);
            }
            data.set(key, value);
            this.size = data.size;
            return this;
        }
        // Add methods to `Stack`.
        Stack.prototype.clear = stackClear;
        Stack.prototype["delete"] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        /*------------------------------------------------------------------------*/ /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */ function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
            for(var key in value)if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
            (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
            isIndex(key, length)))) result.push(key);
            return result;
        }
        /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */ function arraySample(array) {
            var length = array.length;
            return length ? array[baseRandom(0, length - 1)] : undefined;
        }
        /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */ function arraySampleSize(array, n) {
            return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
        }
        /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */ function arrayShuffle(array) {
            return shuffleSelf(copyArray(array));
        }
        /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */ function assignMergeValue(object, key, value) {
            if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) baseAssignValue(object, key, value);
        }
        /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */ function assignValue(object, key, value) {
            var objValue = object[key];
            if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) baseAssignValue(object, key, value);
        }
        /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */ function assocIndexOf(array, key) {
            var length = array.length;
            while(length--){
                if (eq(array[length][0], key)) return length;
            }
            return -1;
        }
        /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */ function baseAggregator(collection, setter, iteratee, accumulator) {
            baseEach(collection, function(value, key, collection) {
                setter(accumulator, value, iteratee(value), collection);
            });
            return accumulator;
        }
        /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */ function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object);
        }
        /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */ function baseAssignIn(object, source) {
            return object && copyObject(source, keysIn(source), object);
        }
        /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */ function baseAssignValue(object, key, value) {
            if (key == "__proto__" && defineProperty) defineProperty(object, key, {
                "configurable": true,
                "enumerable": true,
                "value": value,
                "writable": true
            });
            else object[key] = value;
        }
        /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */ function baseAt(object, paths) {
            var index = -1, length = paths.length, result = Array1(length), skip = object == null;
            while(++index < length)result[index] = skip ? undefined : get(object, paths[index]);
            return result;
        }
        /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */ function baseClamp(number, lower, upper) {
            if (number === number) {
                if (upper !== undefined) number = number <= upper ? number : upper;
                if (lower !== undefined) number = number >= lower ? number : lower;
            }
            return number;
        }
        /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */ function baseClone(value, bitmask, customizer, key, object, stack) {
            var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
            if (customizer) result = object ? customizer(value, key, object, stack) : customizer(value);
            if (result !== undefined) return result;
            if (!isObject(value)) return value;
            var isArr = isArray(value);
            if (isArr) {
                result = initCloneArray(value);
                if (!isDeep) return copyArray(value, result);
            } else {
                var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
                if (isBuffer(value)) return cloneBuffer(value, isDeep);
                if (tag == objectTag || tag == argsTag || isFunc && !object) {
                    result = isFlat || isFunc ? {} : initCloneObject(value);
                    if (!isDeep) return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
                } else {
                    if (!cloneableTags[tag]) return object ? value : {};
                    result = initCloneByTag(value, tag, isDeep);
                }
            }
            // Check for circular references and return its corresponding clone.
            stack || (stack = new Stack);
            var stacked = stack.get(value);
            if (stacked) return stacked;
            stack.set(value, result);
            if (isSet(value)) value.forEach(function(subValue) {
                result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            });
            else if (isMap(value)) value.forEach(function(subValue, key) {
                result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
            });
            var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
            var props = isArr ? undefined : keysFunc(value);
            arrayEach(props || value, function(subValue, key) {
                if (props) {
                    key = subValue;
                    subValue = value[key];
                }
                // Recursively populate clone (susceptible to call stack limits).
                assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
            });
            return result;
        }
        /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */ function baseConforms(source) {
            var props = keys(source);
            return function(object) {
                return baseConformsTo(object, source, props);
            };
        }
        /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */ function baseConformsTo(object, source, props) {
            var length = props.length;
            if (object == null) return !length;
            object = Object1(object);
            while(length--){
                var key = props[length], predicate = source[key], value = object[key];
                if (value === undefined && !(key in object) || !predicate(value)) return false;
            }
            return true;
        }
        /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */ function baseDelay(func, wait, args) {
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            return setTimeout(function() {
                func.apply(undefined, args);
            }, wait);
        }
        /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */ function baseDifference(array, values, iteratee, comparator) {
            var index = -1, includes = arrayIncludes, isCommon = true, length = array.length, result = [], valuesLength = values.length;
            if (!length) return result;
            if (iteratee) values = arrayMap(values, baseUnary(iteratee));
            if (comparator) {
                includes = arrayIncludesWith;
                isCommon = false;
            } else if (values.length >= LARGE_ARRAY_SIZE) {
                includes = cacheHas;
                isCommon = false;
                values = new SetCache(values);
            }
            outer: while(++index < length){
                var value = array[index], computed = iteratee == null ? value : iteratee(value);
                value = comparator || value !== 0 ? value : 0;
                if (isCommon && computed === computed) {
                    var valuesIndex = valuesLength;
                    while(valuesIndex--){
                        if (values[valuesIndex] === computed) continue outer;
                    }
                    result.push(value);
                } else if (!includes(values, computed, comparator)) result.push(value);
            }
            return result;
        }
        /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */ var baseEach = createBaseEach(baseForOwn);
        /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */ var baseEachRight = createBaseEach(baseForOwnRight, true);
        /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */ function baseEvery(collection, predicate) {
            var result = true;
            baseEach(collection, function(value, index, collection) {
                result = !!predicate(value, index, collection);
                return result;
            });
            return result;
        }
        /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */ function baseExtremum(array, iteratee, comparator) {
            var index = -1, length = array.length;
            while(++index < length){
                var value = array[index], current = iteratee(value);
                if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) var computed = current, result = value;
            }
            return result;
        }
        /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */ function baseFill(array, value, start, end) {
            var length = array.length;
            start = toInteger(start);
            if (start < 0) start = -start > length ? 0 : length + start;
            end = end === undefined || end > length ? length : toInteger(end);
            if (end < 0) end += length;
            end = start > end ? 0 : toLength(end);
            while(start < end)array[start++] = value;
            return array;
        }
        /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */ function baseFilter(collection, predicate) {
            var result = [];
            baseEach(collection, function(value, index, collection) {
                if (predicate(value, index, collection)) result.push(value);
            });
            return result;
        }
        /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */ function baseFlatten(array, depth, predicate, isStrict, result) {
            var index = -1, length = array.length;
            predicate || (predicate = isFlattenable);
            result || (result = []);
            while(++index < length){
                var value = array[index];
                if (depth > 0 && predicate(value)) {
                    if (depth > 1) // Recursively flatten arrays (susceptible to call stack limits).
                    baseFlatten(value, depth - 1, predicate, isStrict, result);
                    else arrayPush(result, value);
                } else if (!isStrict) result[result.length] = value;
            }
            return result;
        }
        /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */ var baseFor = createBaseFor();
        /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */ var baseForRight = createBaseFor(true);
        /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */ function baseForOwn(object, iteratee) {
            return object && baseFor(object, iteratee, keys);
        }
        /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */ function baseForOwnRight(object, iteratee) {
            return object && baseForRight(object, iteratee, keys);
        }
        /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */ function baseFunctions(object, props) {
            return arrayFilter(props, function(key) {
                return isFunction(object[key]);
            });
        }
        /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */ function baseGet(object, path) {
            path = castPath(path, object);
            var index = 0, length = path.length;
            while(object != null && index < length)object = object[toKey(path[index++])];
            return index && index == length ? object : undefined;
        }
        /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */ function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object);
            return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
        }
        /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */ function baseGetTag(value) {
            if (value == null) return value === undefined ? undefinedTag : nullTag;
            return symToStringTag && symToStringTag in Object1(value) ? getRawTag(value) : objectToString(value);
        }
        /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */ function baseGt(value, other) {
            return value > other;
        }
        /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */ function baseHas(object, key) {
            return object != null && hasOwnProperty.call(object, key);
        }
        /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */ function baseHasIn(object, key) {
            return object != null && key in Object1(object);
        }
        /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */ function baseInRange(number, start, end) {
            return number >= nativeMin(start, end) && number < nativeMax(start, end);
        }
        /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */ function baseIntersection(arrays, iteratee, comparator) {
            var includes = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array1(othLength), maxLength = Infinity, result = [];
            while(othIndex--){
                var array = arrays[othIndex];
                if (othIndex && iteratee) array = arrayMap(array, baseUnary(iteratee));
                maxLength = nativeMin(array.length, maxLength);
                caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
            }
            array = arrays[0];
            var index = -1, seen = caches[0];
            outer: while(++index < length && result.length < maxLength){
                var value = array[index], computed = iteratee ? iteratee(value) : value;
                value = comparator || value !== 0 ? value : 0;
                if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
                    othIndex = othLength;
                    while(--othIndex){
                        var cache = caches[othIndex];
                        if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) continue outer;
                    }
                    if (seen) seen.push(computed);
                    result.push(value);
                }
            }
            return result;
        }
        /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */ function baseInverter(object, setter, iteratee, accumulator) {
            baseForOwn(object, function(value, key, object) {
                setter(accumulator, iteratee(value), key, object);
            });
            return accumulator;
        }
        /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */ function baseInvoke(object, path, args) {
            path = castPath(path, object);
            object = parent(object, path);
            var func = object == null ? object : object[toKey(last(path))];
            return func == null ? undefined : apply(func, object, args);
        }
        /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */ function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag;
        }
        /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */ function baseIsArrayBuffer(value) {
            return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
        }
        /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */ function baseIsDate(value) {
            return isObjectLike(value) && baseGetTag(value) == dateTag;
        }
        /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */ function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) return true;
            if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) return value !== value && other !== other;
            return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */ function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;
            var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
            if (isSameTag && isBuffer(object)) {
                if (!isBuffer(other)) return false;
                objIsArr = true;
                objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
                stack || (stack = new Stack);
                return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
                if (objIsWrapped || othIsWrapped) {
                    var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                    stack || (stack = new Stack);
                    return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                }
            }
            if (!isSameTag) return false;
            stack || (stack = new Stack);
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */ function baseIsMap(value) {
            return isObjectLike(value) && getTag(value) == mapTag;
        }
        /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */ function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length, length = index, noCustomizer = !customizer;
            if (object == null) return !length;
            object = Object1(object);
            while(index--){
                var data = matchData[index];
                if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return false;
            }
            while(++index < length){
                data = matchData[index];
                var key = data[0], objValue = object[key], srcValue = data[1];
                if (noCustomizer && data[2]) {
                    if (objValue === undefined && !(key in object)) return false;
                } else {
                    var stack = new Stack;
                    if (customizer) var result = customizer(objValue, srcValue, key, object, source, stack);
                    if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) return false;
                }
            }
            return true;
        }
        /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */ function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) return false;
            var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
        }
        /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */ function baseIsRegExp(value) {
            return isObjectLike(value) && baseGetTag(value) == regexpTag;
        }
        /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */ function baseIsSet(value) {
            return isObjectLike(value) && getTag(value) == setTag;
        }
        /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */ function baseIsTypedArray(value) {
            return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }
        /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */ function baseIteratee(value) {
            // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
            // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
            if (typeof value == "function") return value;
            if (value == null) return identity;
            if (typeof value == "object") return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
            return property(value);
        }
        /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */ function baseKeys(object) {
            if (!isPrototype(object)) return nativeKeys(object);
            var result = [];
            for(var key in Object1(object))if (hasOwnProperty.call(object, key) && key != "constructor") result.push(key);
            return result;
        }
        /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */ function baseKeysIn(object) {
            if (!isObject(object)) return nativeKeysIn(object);
            var isProto = isPrototype(object), result = [];
            for(var key in object)if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) result.push(key);
            return result;
        }
        /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */ function baseLt(value, other) {
            return value < other;
        }
        /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */ function baseMap(collection, iteratee) {
            var index = -1, result = isArrayLike(collection) ? Array1(collection.length) : [];
            baseEach(collection, function(value, key, collection) {
                result[++index] = iteratee(value, key, collection);
            });
            return result;
        }
        /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */ function baseMatches(source) {
            var matchData = getMatchData(source);
            if (matchData.length == 1 && matchData[0][2]) return matchesStrictComparable(matchData[0][0], matchData[0][1]);
            return function(object) {
                return object === source || baseIsMatch(object, source, matchData);
            };
        }
        /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */ function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) return matchesStrictComparable(toKey(path), srcValue);
            return function(object) {
                var objValue = get(object, path);
                return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
            };
        }
        /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */ function baseMerge(object, source, srcIndex, customizer, stack) {
            if (object === source) return;
            baseFor(source, function(srcValue, key) {
                stack || (stack = new Stack);
                if (isObject(srcValue)) baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
                else {
                    var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined;
                    if (newValue === undefined) newValue = srcValue;
                    assignMergeValue(object, key, newValue);
                }
            }, keysIn);
        }
        /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */ function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
            var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
            if (stacked) {
                assignMergeValue(object, key, stacked);
                return;
            }
            var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined;
            var isCommon = newValue === undefined;
            if (isCommon) {
                var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
                newValue = srcValue;
                if (isArr || isBuff || isTyped) {
                    if (isArray(objValue)) newValue = objValue;
                    else if (isArrayLikeObject(objValue)) newValue = copyArray(objValue);
                    else if (isBuff) {
                        isCommon = false;
                        newValue = cloneBuffer(srcValue, true);
                    } else if (isTyped) {
                        isCommon = false;
                        newValue = cloneTypedArray(srcValue, true);
                    } else newValue = [];
                } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                    newValue = objValue;
                    if (isArguments(objValue)) newValue = toPlainObject(objValue);
                    else if (!isObject(objValue) || isFunction(objValue)) newValue = initCloneObject(srcValue);
                } else isCommon = false;
            }
            if (isCommon) {
                // Recursively merge objects and arrays (susceptible to call stack limits).
                stack.set(srcValue, newValue);
                mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
                stack["delete"](srcValue);
            }
            assignMergeValue(object, key, newValue);
        }
        /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */ function baseNth(array, n) {
            var length = array.length;
            if (!length) return;
            n += n < 0 ? length : 0;
            return isIndex(n, length) ? array[n] : undefined;
        }
        /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */ function baseOrderBy(collection, iteratees, orders) {
            if (iteratees.length) iteratees = arrayMap(iteratees, function(iteratee) {
                if (isArray(iteratee)) return function(value) {
                    return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
                };
                return iteratee;
            });
            else iteratees = [
                identity
            ];
            var index = -1;
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            var result = baseMap(collection, function(value, key, collection) {
                var criteria = arrayMap(iteratees, function(iteratee) {
                    return iteratee(value);
                });
                return {
                    "criteria": criteria,
                    "index": ++index,
                    "value": value
                };
            });
            return baseSortBy(result, function(object, other) {
                return compareMultiple(object, other, orders);
            });
        }
        /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */ function basePick(object, paths) {
            return basePickBy(object, paths, function(value, path) {
                return hasIn(object, path);
            });
        }
        /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */ function basePickBy(object, paths, predicate) {
            var index = -1, length = paths.length, result = {};
            while(++index < length){
                var path = paths[index], value = baseGet(object, path);
                if (predicate(value, path)) baseSet(result, castPath(path, object), value);
            }
            return result;
        }
        /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */ function basePropertyDeep(path) {
            return function(object) {
                return baseGet(object, path);
            };
        }
        /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */ function basePullAll(array, values, iteratee, comparator) {
            var indexOf = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values.length, seen = array;
            if (array === values) values = copyArray(values);
            if (iteratee) seen = arrayMap(array, baseUnary(iteratee));
            while(++index < length){
                var fromIndex = 0, value = values[index], computed = iteratee ? iteratee(value) : value;
                while((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1){
                    if (seen !== array) splice.call(seen, fromIndex, 1);
                    splice.call(array, fromIndex, 1);
                }
            }
            return array;
        }
        /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */ function basePullAt(array, indexes) {
            var length = array ? indexes.length : 0, lastIndex = length - 1;
            while(length--){
                var index = indexes[length];
                if (length == lastIndex || index !== previous) {
                    var previous = index;
                    if (isIndex(index)) splice.call(array, index, 1);
                    else baseUnset(array, index);
                }
            }
            return array;
        }
        /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */ function baseRandom(lower, upper) {
            return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
        }
        /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */ function baseRange(start, end, step, fromRight) {
            var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array1(length);
            while(length--){
                result[fromRight ? length : ++index] = start;
                start += step;
            }
            return result;
        }
        /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */ function baseRepeat(string, n) {
            var result = "";
            if (!string || n < 1 || n > MAX_SAFE_INTEGER) return result;
            // Leverage the exponentiation by squaring algorithm for a faster repeat.
            // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
            do {
                if (n % 2) result += string;
                n = nativeFloor(n / 2);
                if (n) string += string;
            }while (n);
            return result;
        }
        /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */ function baseRest(func, start) {
            return setToString(overRest(func, start, identity), func + "");
        }
        /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */ function baseSample(collection) {
            return arraySample(values(collection));
        }
        /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */ function baseSampleSize(collection, n) {
            var array = values(collection);
            return shuffleSelf(array, baseClamp(n, 0, array.length));
        }
        /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */ function baseSet(object, path, value, customizer) {
            if (!isObject(object)) return object;
            path = castPath(path, object);
            var index = -1, length = path.length, lastIndex = length - 1, nested = object;
            while(nested != null && ++index < length){
                var key = toKey(path[index]), newValue = value;
                if (key === "__proto__" || key === "constructor" || key === "prototype") return object;
                if (index != lastIndex) {
                    var objValue = nested[key];
                    newValue = customizer ? customizer(objValue, key, nested) : undefined;
                    if (newValue === undefined) newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
                }
                assignValue(nested, key, newValue);
                nested = nested[key];
            }
            return object;
        }
        /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */ var baseSetData = !metaMap ? identity : function(func, data) {
            metaMap.set(func, data);
            return func;
        };
        /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */ var baseSetToString = !defineProperty ? identity : function(func, string) {
            return defineProperty(func, "toString", {
                "configurable": true,
                "enumerable": false,
                "value": constant(string),
                "writable": true
            });
        };
        /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */ function baseShuffle(collection) {
            return shuffleSelf(values(collection));
        }
        /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */ function baseSlice(array, start, end) {
            var index = -1, length = array.length;
            if (start < 0) start = -start > length ? 0 : length + start;
            end = end > length ? length : end;
            if (end < 0) end += length;
            length = start > end ? 0 : end - start >>> 0;
            start >>>= 0;
            var result = Array1(length);
            while(++index < length)result[index] = array[index + start];
            return result;
        }
        /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */ function baseSome(collection, predicate) {
            var result;
            baseEach(collection, function(value, index, collection) {
                result = predicate(value, index, collection);
                return !result;
            });
            return !!result;
        }
        /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */ function baseSortedIndex(array, value, retHighest) {
            var low = 0, high = array == null ? low : array.length;
            if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
                while(low < high){
                    var mid = low + high >>> 1, computed = array[mid];
                    if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) low = mid + 1;
                    else high = mid;
                }
                return high;
            }
            return baseSortedIndexBy(array, value, identity, retHighest);
        }
        /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */ function baseSortedIndexBy(array, value, iteratee, retHighest) {
            var low = 0, high = array == null ? 0 : array.length;
            if (high === 0) return 0;
            value = iteratee(value);
            var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined;
            while(low < high){
                var mid = nativeFloor((low + high) / 2), computed = iteratee(array[mid]), othIsDefined = computed !== undefined, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
                if (valIsNaN) var setLow = retHighest || othIsReflexive;
                else if (valIsUndefined) setLow = othIsReflexive && (retHighest || othIsDefined);
                else if (valIsNull) setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
                else if (valIsSymbol) setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
                else if (othIsNull || othIsSymbol) setLow = false;
                else setLow = retHighest ? computed <= value : computed < value;
                if (setLow) low = mid + 1;
                else high = mid;
            }
            return nativeMin(high, MAX_ARRAY_INDEX);
        }
        /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */ function baseSortedUniq(array, iteratee) {
            var index = -1, length = array.length, resIndex = 0, result = [];
            while(++index < length){
                var value = array[index], computed = iteratee ? iteratee(value) : value;
                if (!index || !eq(computed, seen)) {
                    var seen = computed;
                    result[resIndex++] = value === 0 ? 0 : value;
                }
            }
            return result;
        }
        /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */ function baseToNumber(value) {
            if (typeof value == "number") return value;
            if (isSymbol(value)) return NAN;
            return +value;
        }
        /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */ function baseToString(value) {
            // Exit early for strings to avoid a performance hit in some environments.
            if (typeof value == "string") return value;
            if (isArray(value)) // Recursively convert values (susceptible to call stack limits).
            return arrayMap(value, baseToString) + "";
            if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : "";
            var result = value + "";
            return result == "0" && 1 / value == -INFINITY ? "-0" : result;
        }
        /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */ function baseUniq(array, iteratee, comparator) {
            var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
            if (comparator) {
                isCommon = false;
                includes = arrayIncludesWith;
            } else if (length >= LARGE_ARRAY_SIZE) {
                var set = iteratee ? null : createSet(array);
                if (set) return setToArray(set);
                isCommon = false;
                includes = cacheHas;
                seen = new SetCache;
            } else seen = iteratee ? [] : result;
            outer: while(++index < length){
                var value = array[index], computed = iteratee ? iteratee(value) : value;
                value = comparator || value !== 0 ? value : 0;
                if (isCommon && computed === computed) {
                    var seenIndex = seen.length;
                    while(seenIndex--){
                        if (seen[seenIndex] === computed) continue outer;
                    }
                    if (iteratee) seen.push(computed);
                    result.push(value);
                } else if (!includes(seen, computed, comparator)) {
                    if (seen !== result) seen.push(computed);
                    result.push(value);
                }
            }
            return result;
        }
        /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */ function baseUnset(object, path) {
            path = castPath(path, object);
            object = parent(object, path);
            return object == null || delete object[toKey(last(path))];
        }
        /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */ function baseUpdate(object, path, updater, customizer) {
            return baseSet(object, path, updater(baseGet(object, path)), customizer);
        }
        /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */ function baseWhile(array, predicate, isDrop, fromRight) {
            var length = array.length, index = fromRight ? length : -1;
            while((fromRight ? index-- : ++index < length) && predicate(array[index], index, array));
            return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
        }
        /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */ function baseWrapperValue(value, actions) {
            var result = value;
            if (result instanceof LazyWrapper) result = result.value();
            return arrayReduce(actions, function(result, action) {
                return action.func.apply(action.thisArg, arrayPush([
                    result
                ], action.args));
            }, result);
        }
        /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */ function baseXor(arrays, iteratee, comparator) {
            var length = arrays.length;
            if (length < 2) return length ? baseUniq(arrays[0]) : [];
            var index = -1, result = Array1(length);
            while(++index < length){
                var array = arrays[index], othIndex = -1;
                while(++othIndex < length)if (othIndex != index) result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
            }
            return baseUniq(baseFlatten(result, 1), iteratee, comparator);
        }
        /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */ function baseZipObject(props, values, assignFunc) {
            var index = -1, length = props.length, valsLength = values.length, result = {};
            while(++index < length){
                var value = index < valsLength ? values[index] : undefined;
                assignFunc(result, props[index], value);
            }
            return result;
        }
        /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */ function castArrayLikeObject(value) {
            return isArrayLikeObject(value) ? value : [];
        }
        /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */ function castFunction(value) {
            return typeof value == "function" ? value : identity;
        }
        /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */ function castPath(value, object) {
            if (isArray(value)) return value;
            return isKey(value, object) ? [
                value
            ] : stringToPath(toString(value));
        }
        /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */ var castRest = baseRest;
        /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */ function castSlice(array, start, end) {
            var length = array.length;
            end = end === undefined ? length : end;
            return !start && end >= length ? array : baseSlice(array, start, end);
        }
        /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */ var clearTimeout = ctxClearTimeout || function(id) {
            return root.clearTimeout(id);
        };
        /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */ function cloneBuffer(buffer, isDeep) {
            if (isDeep) return buffer.slice();
            var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
            buffer.copy(result);
            return result;
        }
        /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */ function cloneArrayBuffer(arrayBuffer) {
            var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
            new Uint8Array(result).set(new Uint8Array(arrayBuffer));
            return result;
        }
        /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */ function cloneDataView(dataView, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
            return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }
        /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */ function cloneRegExp(regexp) {
            var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
            result.lastIndex = regexp.lastIndex;
            return result;
        }
        /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */ function cloneSymbol(symbol) {
            return symbolValueOf ? Object1(symbolValueOf.call(symbol)) : {};
        }
        /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */ function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
            return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }
        /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */ function compareAscending(value, other) {
            if (value !== other) {
                var valIsDefined = value !== undefined, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
                var othIsDefined = other !== undefined, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
                if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) return 1;
                if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) return -1;
            }
            return 0;
        }
        /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */ function compareMultiple(object, other, orders) {
            var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
            while(++index < length){
                var result = compareAscending(objCriteria[index], othCriteria[index]);
                if (result) {
                    if (index >= ordersLength) return result;
                    var order = orders[index];
                    return result * (order == "desc" ? -1 : 1);
                }
            }
            // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
            // that causes it, under certain circumstances, to provide the same value for
            // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
            // for more details.
            //
            // This also ensures a stable sort in V8 and other engines.
            // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
            return object.index - other.index;
        }
        /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */ function composeArgs(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array1(leftLength + rangeLength), isUncurried = !isCurried;
            while(++leftIndex < leftLength)result[leftIndex] = partials[leftIndex];
            while(++argsIndex < holdersLength)if (isUncurried || argsIndex < argsLength) result[holders[argsIndex]] = args[argsIndex];
            while(rangeLength--)result[leftIndex++] = args[argsIndex++];
            return result;
        }
        /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */ function composeArgsRight(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array1(rangeLength + rightLength), isUncurried = !isCurried;
            while(++argsIndex < rangeLength)result[argsIndex] = args[argsIndex];
            var offset = argsIndex;
            while(++rightIndex < rightLength)result[offset + rightIndex] = partials[rightIndex];
            while(++holdersIndex < holdersLength)if (isUncurried || argsIndex < argsLength) result[offset + holders[holdersIndex]] = args[argsIndex++];
            return result;
        }
        /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */ function copyArray(source, array) {
            var index = -1, length = source.length;
            array || (array = Array1(length));
            while(++index < length)array[index] = source[index];
            return array;
        }
        /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */ function copyObject(source, props, object, customizer) {
            var isNew = !object;
            object || (object = {});
            var index = -1, length = props.length;
            while(++index < length){
                var key = props[index];
                var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
                if (newValue === undefined) newValue = source[key];
                if (isNew) baseAssignValue(object, key, newValue);
                else assignValue(object, key, newValue);
            }
            return object;
        }
        /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */ function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object);
        }
        /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */ function copySymbolsIn(source, object) {
            return copyObject(source, getSymbolsIn(source), object);
        }
        /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */ function createAggregator(setter, initializer) {
            return function(collection, iteratee) {
                var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
                return func(collection, setter, getIteratee(iteratee, 2), accumulator);
            };
        }
        /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */ function createAssigner(assigner) {
            return baseRest(function(object, sources) {
                var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined, guard = length > 2 ? sources[2] : undefined;
                customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined;
                if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                    customizer = length < 3 ? undefined : customizer;
                    length = 1;
                }
                object = Object1(object);
                while(++index < length){
                    var source = sources[index];
                    if (source) assigner(object, source, index, customizer);
                }
                return object;
            });
        }
        /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */ function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee) {
                if (collection == null) return collection;
                if (!isArrayLike(collection)) return eachFunc(collection, iteratee);
                var length = collection.length, index = fromRight ? length : -1, iterable = Object1(collection);
                while(fromRight ? index-- : ++index < length){
                    if (iteratee(iterable[index], index, iterable) === false) break;
                }
                return collection;
            };
        }
        /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */ function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
                var index = -1, iterable = Object1(object), props = keysFunc(object), length = props.length;
                while(length--){
                    var key = props[fromRight ? length : ++index];
                    if (iteratee(iterable[key], key, iterable) === false) break;
                }
                return object;
            };
        }
        /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createBind(func, bitmask, thisArg) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
                var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                return fn.apply(isBind ? thisArg : this, arguments);
            }
            return wrapper;
        }
        /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */ function createCaseFirst(methodName) {
            return function(string) {
                string = toString(string);
                var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
                var chr = strSymbols ? strSymbols[0] : string.charAt(0);
                var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
                return chr[methodName]() + trailing;
            };
        }
        /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */ function createCompounder(callback) {
            return function(string) {
                return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
            };
        }
        /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */ function createCtor(Ctor) {
            return function() {
                // Use a `switch` statement to work with class constructors. See
                // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
                // for more details.
                var args = arguments;
                switch(args.length){
                    case 0:
                        return new Ctor;
                    case 1:
                        return new Ctor(args[0]);
                    case 2:
                        return new Ctor(args[0], args[1]);
                    case 3:
                        return new Ctor(args[0], args[1], args[2]);
                    case 4:
                        return new Ctor(args[0], args[1], args[2], args[3]);
                    case 5:
                        return new Ctor(args[0], args[1], args[2], args[3], args[4]);
                    case 6:
                        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
                    case 7:
                        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
                }
                var thisBinding = baseCreate(Ctor.prototype), result = Ctor.apply(thisBinding, args);
                // Mimic the constructor's `return` behavior.
                // See https://es5.github.io/#x13.2.2 for more details.
                return isObject(result) ? result : thisBinding;
            };
        }
        /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createCurry(func, bitmask, arity) {
            var Ctor = createCtor(func);
            function wrapper() {
                var length = arguments.length, args = Array1(length), index = length, placeholder = getHolder(wrapper);
                while(index--)args[index] = arguments[index];
                var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
                length -= holders.length;
                if (length < arity) return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
                var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                return apply(fn, this, args);
            }
            return wrapper;
        }
        /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */ function createFind(findIndexFunc) {
            return function(collection, predicate, fromIndex) {
                var iterable = Object1(collection);
                if (!isArrayLike(collection)) {
                    var iteratee = getIteratee(predicate, 3);
                    collection = keys(collection);
                    predicate = function(key) {
                        return iteratee(iterable[key], key, iterable);
                    };
                }
                var index = findIndexFunc(collection, predicate, fromIndex);
                return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
            };
        }
        /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */ function createFlow(fromRight) {
            return flatRest(function(funcs) {
                var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
                if (fromRight) funcs.reverse();
                while(index--){
                    var func = funcs[index];
                    if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
                    if (prereq && !wrapper && getFuncName(func) == "wrapper") var wrapper = new LodashWrapper([], true);
                }
                index = wrapper ? index : length;
                while(++index < length){
                    func = funcs[index];
                    var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined;
                    if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
                    else wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
                }
                return function() {
                    var args = arguments, value = args[0];
                    if (wrapper && args.length == 1 && isArray(value)) return wrapper.plant(value).value();
                    var index = 0, result = length ? funcs[index].apply(this, args) : value;
                    while(++index < length)result = funcs[index].call(this, result);
                    return result;
                };
            });
        }
        /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
            var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined : createCtor(func);
            function wrapper() {
                var length = arguments.length, args = Array1(length), index = length;
                while(index--)args[index] = arguments[index];
                if (isCurried) var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
                if (partials) args = composeArgs(args, partials, holders, isCurried);
                if (partialsRight) args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
                length -= holdersCount;
                if (isCurried && length < arity) {
                    var newHolders = replaceHolders(args, placeholder);
                    return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
                }
                var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
                length = args.length;
                if (argPos) args = reorder(args, argPos);
                else if (isFlip && length > 1) args.reverse();
                if (isAry && ary < length) args.length = ary;
                if (this && this !== root && this instanceof wrapper) fn = Ctor || createCtor(fn);
                return fn.apply(thisBinding, args);
            }
            return wrapper;
        }
        /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */ function createInverter(setter, toIteratee) {
            return function(object, iteratee) {
                return baseInverter(object, setter, toIteratee(iteratee), {});
            };
        }
        /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */ function createMathOperation(operator, defaultValue) {
            return function(value, other) {
                var result;
                if (value === undefined && other === undefined) return defaultValue;
                if (value !== undefined) result = value;
                if (other !== undefined) {
                    if (result === undefined) return other;
                    if (typeof value == "string" || typeof other == "string") {
                        value = baseToString(value);
                        other = baseToString(other);
                    } else {
                        value = baseToNumber(value);
                        other = baseToNumber(other);
                    }
                    result = operator(value, other);
                }
                return result;
            };
        }
        /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */ function createOver(arrayFunc) {
            return flatRest(function(iteratees) {
                iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
                return baseRest(function(args) {
                    var thisArg = this;
                    return arrayFunc(iteratees, function(iteratee) {
                        return apply(iteratee, thisArg, args);
                    });
                });
            });
        }
        /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */ function createPadding(length, chars) {
            chars = chars === undefined ? " " : baseToString(chars);
            var charsLength = chars.length;
            if (charsLength < 2) return charsLength ? baseRepeat(chars, length) : chars;
            var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
            return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join("") : result.slice(0, length);
        }
        /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */ function createPartial(func, bitmask, thisArg, partials) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
                var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array1(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                while(++leftIndex < leftLength)args[leftIndex] = partials[leftIndex];
                while(argsLength--)args[leftIndex++] = arguments[++argsIndex];
                return apply(fn, isBind ? thisArg : this, args);
            }
            return wrapper;
        }
        /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */ function createRange(fromRight) {
            return function(start, end, step) {
                if (step && typeof step != "number" && isIterateeCall(start, end, step)) end = step = undefined;
                // Ensure the sign of `-0` is preserved.
                start = toFinite(start);
                if (end === undefined) {
                    end = start;
                    start = 0;
                } else end = toFinite(end);
                step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
                return baseRange(start, end, step, fromRight);
            };
        }
        /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */ function createRelationalOperation(operator) {
            return function(value, other) {
                if (!(typeof value == "string" && typeof other == "string")) {
                    value = toNumber(value);
                    other = toNumber(other);
                }
                return operator(value, other);
            };
        }
        /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
            var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined, newHoldersRight = isCurry ? undefined : holders, newPartials = isCurry ? partials : undefined, newPartialsRight = isCurry ? undefined : partials;
            bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
            bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
            if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
            var newData = [
                func,
                bitmask,
                thisArg,
                newPartials,
                newHolders,
                newPartialsRight,
                newHoldersRight,
                argPos,
                ary,
                arity
            ];
            var result = wrapFunc.apply(undefined, newData);
            if (isLaziable(func)) setData(result, newData);
            result.placeholder = placeholder;
            return setWrapToString(result, func, bitmask);
        }
        /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */ function createRound(methodName) {
            var func = Math[methodName];
            return function(number, precision) {
                number = toNumber(number);
                precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
                if (precision && nativeIsFinite(number)) {
                    // Shift with exponential notation to avoid floating-point issues.
                    // See [MDN](https://mdn.io/round#Examples) for more details.
                    var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
                    pair = (toString(value) + "e").split("e");
                    return +(pair[0] + "e" + (+pair[1] - precision));
                }
                return func(number);
            };
        }
        /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */ var createSet = !(Set && 1 / setToArray(new Set([
            ,
            -0
        ]))[1] == INFINITY) ? noop : function(values) {
            return new Set(values);
        };
        /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */ function createToPairs(keysFunc) {
            return function(object) {
                var tag = getTag(object);
                if (tag == mapTag) return mapToArray(object);
                if (tag == setTag) return setToPairs(object);
                return baseToPairs(object, keysFunc(object));
            };
        }
        /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */ function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
            var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
            if (!isBindKey && typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            var length = partials ? partials.length : 0;
            if (!length) {
                bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
                partials = holders = undefined;
            }
            ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
            arity = arity === undefined ? arity : toInteger(arity);
            length -= holders ? holders.length : 0;
            if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
                var partialsRight = partials, holdersRight = holders;
                partials = holders = undefined;
            }
            var data = isBindKey ? undefined : getData(func);
            var newData = [
                func,
                bitmask,
                thisArg,
                partials,
                holders,
                partialsRight,
                holdersRight,
                argPos,
                ary,
                arity
            ];
            if (data) mergeData(newData, data);
            func = newData[0];
            bitmask = newData[1];
            thisArg = newData[2];
            partials = newData[3];
            holders = newData[4];
            arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
            if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
            if (!bitmask || bitmask == WRAP_BIND_FLAG) var result = createBind(func, bitmask, thisArg);
            else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) result = createCurry(func, bitmask, arity);
            else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) result = createPartial(func, bitmask, thisArg, partials);
            else result = createHybrid.apply(undefined, newData);
            var setter = data ? baseSetData : setData;
            return setWrapToString(setter(result, newData), func, bitmask);
        }
        /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */ function customDefaultsAssignIn(objValue, srcValue, key, object) {
            if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) return srcValue;
            return objValue;
        }
        /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */ function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
            if (isObject(objValue) && isObject(srcValue)) {
                // Recursively merge objects and arrays (susceptible to call stack limits).
                stack.set(srcValue, objValue);
                baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
                stack["delete"](srcValue);
            }
            return objValue;
        }
        /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */ function customOmitClone(value) {
            return isPlainObject(value) ? undefined : value;
        }
        /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */ function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
            if (arrLength != othLength && !(isPartial && othLength > arrLength)) return false;
            // Check that cyclic values are equal.
            var arrStacked = stack.get(array);
            var othStacked = stack.get(other);
            if (arrStacked && othStacked) return arrStacked == other && othStacked == array;
            var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache : undefined;
            stack.set(array, other);
            stack.set(other, array);
            // Ignore non-index properties.
            while(++index < arrLength){
                var arrValue = array[index], othValue = other[index];
                if (customizer) var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
                if (compared !== undefined) {
                    if (compared) continue;
                    result = false;
                    break;
                }
                // Recursively compare arrays (susceptible to call stack limits).
                if (seen) {
                    if (!arraySome(other, function(othValue, othIndex) {
                        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) return seen.push(othIndex);
                    })) {
                        result = false;
                        break;
                    }
                } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                    result = false;
                    break;
                }
            }
            stack["delete"](array);
            stack["delete"](other);
            return result;
        }
        /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */ function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
            switch(tag){
                case dataViewTag:
                    if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) return false;
                    object = object.buffer;
                    other = other.buffer;
                case arrayBufferTag:
                    if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) return false;
                    return true;
                case boolTag:
                case dateTag:
                case numberTag:
                    // Coerce booleans to `1` or `0` and dates to milliseconds.
                    // Invalid dates are coerced to `NaN`.
                    return eq(+object, +other);
                case errorTag:
                    return object.name == other.name && object.message == other.message;
                case regexpTag:
                case stringTag:
                    // Coerce regexes to strings and treat strings, primitives and objects,
                    // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
                    // for more details.
                    return object == other + "";
                case mapTag:
                    var convert = mapToArray;
                case setTag:
                    var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                    convert || (convert = setToArray);
                    if (object.size != other.size && !isPartial) return false;
                    // Assume cyclic values are equal.
                    var stacked = stack.get(object);
                    if (stacked) return stacked == other;
                    bitmask |= COMPARE_UNORDERED_FLAG;
                    // Recursively compare objects (susceptible to call stack limits).
                    stack.set(object, other);
                    var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                    stack["delete"](object);
                    return result;
                case symbolTag:
                    if (symbolValueOf) return symbolValueOf.call(object) == symbolValueOf.call(other);
            }
            return false;
        }
        /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */ function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
            if (objLength != othLength && !isPartial) return false;
            var index = objLength;
            while(index--){
                var key = objProps[index];
                if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return false;
            }
            // Check that cyclic values are equal.
            var objStacked = stack.get(object);
            var othStacked = stack.get(other);
            if (objStacked && othStacked) return objStacked == other && othStacked == object;
            var result = true;
            stack.set(object, other);
            stack.set(other, object);
            var skipCtor = isPartial;
            while(++index < objLength){
                key = objProps[index];
                var objValue = object[key], othValue = other[key];
                if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                // Recursively compare objects (susceptible to call stack limits).
                if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                    result = false;
                    break;
                }
                skipCtor || (skipCtor = key == "constructor");
            }
            if (result && !skipCtor) {
                var objCtor = object.constructor, othCtor = other.constructor;
                // Non `Object` object instances with different constructors are not equal.
                if (objCtor != othCtor && "constructor" in object && "constructor" in other && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) result = false;
            }
            stack["delete"](object);
            stack["delete"](other);
            return result;
        }
        /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */ function flatRest(func) {
            return setToString(overRest(func, undefined, flatten), func + "");
        }
        /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */ function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
        }
        /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */ function getAllKeysIn(object) {
            return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }
        /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */ var getData = !metaMap ? noop : function(func) {
            return metaMap.get(func);
        };
        /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */ function getFuncName(func) {
            var result = func.name + "", array = realNames[result], length = hasOwnProperty.call(realNames, result) ? array.length : 0;
            while(length--){
                var data = array[length], otherFunc = data.func;
                if (otherFunc == null || otherFunc == func) return data.name;
            }
            return result;
        }
        /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */ function getHolder(func) {
            var object = hasOwnProperty.call(lodash, "placeholder") ? lodash : func;
            return object.placeholder;
        }
        /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */ function getIteratee() {
            var result = lodash.iteratee || iteratee;
            result = result === iteratee ? baseIteratee : result;
            return arguments.length ? result(arguments[0], arguments[1]) : result;
        }
        /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */ function getMapData(map, key) {
            var data = map.__data__;
            return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
        }
        /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */ function getMatchData(object) {
            var result = keys(object), length = result.length;
            while(length--){
                var key = result[length], value = object[key];
                result[length] = [
                    key,
                    value,
                    isStrictComparable(value)
                ];
            }
            return result;
        }
        /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */ function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : undefined;
        }
        /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */ function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
            try {
                value[symToStringTag] = undefined;
                var unmasked = true;
            } catch (e) {}
            var result = nativeObjectToString.call(value);
            if (unmasked) {
                if (isOwn) value[symToStringTag] = tag;
                else delete value[symToStringTag];
            }
            return result;
        }
        /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */ var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
            if (object == null) return [];
            object = Object1(object);
            return arrayFilter(nativeGetSymbols(object), function(symbol) {
                return propertyIsEnumerable.call(object, symbol);
            });
        };
        /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */ var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
            var result = [];
            while(object){
                arrayPush(result, getSymbols(object));
                object = getPrototype(object);
            }
            return result;
        };
        /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */ var getTag = baseGetTag;
        // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
        if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set) != setTag || WeakMap && getTag(new WeakMap) != weakMapTag) getTag = function(value) {
            var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : "";
            if (ctorString) switch(ctorString){
                case dataViewCtorString:
                    return dataViewTag;
                case mapCtorString:
                    return mapTag;
                case promiseCtorString:
                    return promiseTag;
                case setCtorString:
                    return setTag;
                case weakMapCtorString:
                    return weakMapTag;
            }
            return result;
        };
        /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */ function getView(start, end, transforms) {
            var index = -1, length = transforms.length;
            while(++index < length){
                var data = transforms[index], size = data.size;
                switch(data.type){
                    case "drop":
                        start += size;
                        break;
                    case "dropRight":
                        end -= size;
                        break;
                    case "take":
                        end = nativeMin(end, start + size);
                        break;
                    case "takeRight":
                        start = nativeMax(start, end - size);
                        break;
                }
            }
            return {
                "start": start,
                "end": end
            };
        }
        /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */ function getWrapDetails(source) {
            var match = source.match(reWrapDetails);
            return match ? match[1].split(reSplitDetails) : [];
        }
        /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */ function hasPath(object, path, hasFunc) {
            path = castPath(path, object);
            var index = -1, length = path.length, result = false;
            while(++index < length){
                var key = toKey(path[index]);
                if (!(result = object != null && hasFunc(object, key))) break;
                object = object[key];
            }
            if (result || ++index != length) return result;
            length = object == null ? 0 : object.length;
            return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
        }
        /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */ function initCloneArray(array) {
            var length = array.length, result = new array.constructor(length);
            // Add properties assigned by `RegExp#exec`.
            if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
                result.index = array.index;
                result.input = array.input;
            }
            return result;
        }
        /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */ function initCloneObject(object) {
            return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
        }
        /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */ function initCloneByTag(object, tag, isDeep) {
            var Ctor = object.constructor;
            switch(tag){
                case arrayBufferTag:
                    return cloneArrayBuffer(object);
                case boolTag:
                case dateTag:
                    return new Ctor(+object);
                case dataViewTag:
                    return cloneDataView(object, isDeep);
                case float32Tag:
                case float64Tag:
                case int8Tag:
                case int16Tag:
                case int32Tag:
                case uint8Tag:
                case uint8ClampedTag:
                case uint16Tag:
                case uint32Tag:
                    return cloneTypedArray(object, isDeep);
                case mapTag:
                    return new Ctor;
                case numberTag:
                case stringTag:
                    return new Ctor(object);
                case regexpTag:
                    return cloneRegExp(object);
                case setTag:
                    return new Ctor;
                case symbolTag:
                    return cloneSymbol(object);
            }
        }
        /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */ function insertWrapDetails(source, details) {
            var length = details.length;
            if (!length) return source;
            var lastIndex = length - 1;
            details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
            details = details.join(length > 2 ? ", " : " ");
            return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
        }
        /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */ function isFlattenable(value) {
            return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
        }
        /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */ function isIndex(value, length) {
            var type = typeof value;
            length = length == null ? MAX_SAFE_INTEGER : length;
            return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
        }
        /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */ function isIterateeCall(value, index, object) {
            if (!isObject(object)) return false;
            var type = typeof index;
            if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) return eq(object[index], value);
            return false;
        }
        /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */ function isKey(value, object) {
            if (isArray(value)) return false;
            var type = typeof value;
            if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) return true;
            return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object1(object);
        }
        /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */ function isKeyable(value) {
            var type = typeof value;
            return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */ function isLaziable(func) {
            var funcName = getFuncName(func), other = lodash[funcName];
            if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) return false;
            if (func === other) return true;
            var data = getData(other);
            return !!data && func === data[0];
        }
        /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */ function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func;
        }
        /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */ var isMaskable = coreJsData ? isFunction : stubFalse;
        /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */ function isPrototype(value) {
            var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
            return value === proto;
        }
        /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */ function isStrictComparable(value) {
            return value === value && !isObject(value);
        }
        /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */ function matchesStrictComparable(key, srcValue) {
            return function(object) {
                if (object == null) return false;
                return object[key] === srcValue && (srcValue !== undefined || key in Object1(object));
            };
        }
        /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */ function memoizeCapped(func) {
            var result = memoize(func, function(key) {
                if (cache.size === MAX_MEMOIZE_SIZE) cache.clear();
                return key;
            });
            var cache = result.cache;
            return result;
        }
        /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */ function mergeData(data, source) {
            var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
            var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
            // Exit early if metadata can't be merged.
            if (!(isCommon || isCombo)) return data;
            // Use source `thisArg` if available.
            if (srcBitmask & WRAP_BIND_FLAG) {
                data[2] = source[2];
                // Set when currying a bound function.
                newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
            }
            // Compose partial arguments.
            var value = source[3];
            if (value) {
                var partials = data[3];
                data[3] = partials ? composeArgs(partials, value, source[4]) : value;
                data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
            }
            // Compose partial right arguments.
            value = source[5];
            if (value) {
                partials = data[5];
                data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
                data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
            }
            // Use source `argPos` if available.
            value = source[7];
            if (value) data[7] = value;
            // Use source `ary` if it's smaller.
            if (srcBitmask & WRAP_ARY_FLAG) data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
            // Use source `arity` if one is not provided.
            if (data[9] == null) data[9] = source[9];
            // Use source `func` and merge bitmasks.
            data[0] = source[0];
            data[1] = newBitmask;
            return data;
        }
        /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */ function nativeKeysIn(object) {
            var result = [];
            if (object != null) for(var key in Object1(object))result.push(key);
            return result;
        }
        /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */ function objectToString(value) {
            return nativeObjectToString.call(value);
        }
        /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */ function overRest(func, start, transform) {
            start = nativeMax(start === undefined ? func.length - 1 : start, 0);
            return function() {
                var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array1(length);
                while(++index < length)array[index] = args[start + index];
                index = -1;
                var otherArgs = Array1(start + 1);
                while(++index < start)otherArgs[index] = args[index];
                otherArgs[start] = transform(array);
                return apply(func, this, otherArgs);
            };
        }
        /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */ function parent(object, path) {
            return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
        }
        /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */ function reorder(array, indexes) {
            var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
            while(length--){
                var index = indexes[length];
                array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
            }
            return array;
        }
        /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */ function safeGet(object, key) {
            if (key === "constructor" && typeof object[key] === "function") return;
            if (key == "__proto__") return;
            return object[key];
        }
        /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */ var setData = shortOut(baseSetData);
        /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */ var setTimeout = ctxSetTimeout || function(func, wait) {
            return root.setTimeout(func, wait);
        };
        /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */ var setToString = shortOut(baseSetToString);
        /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */ function setWrapToString(wrapper, reference, bitmask) {
            var source = reference + "";
            return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
        }
        /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */ function shortOut(func) {
            var count = 0, lastCalled = 0;
            return function() {
                var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
                lastCalled = stamp;
                if (remaining > 0) {
                    if (++count >= HOT_COUNT) return arguments[0];
                } else count = 0;
                return func.apply(undefined, arguments);
            };
        }
        /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */ function shuffleSelf(array, size) {
            var index = -1, length = array.length, lastIndex = length - 1;
            size = size === undefined ? length : size;
            while(++index < size){
                var rand = baseRandom(index, lastIndex), value = array[rand];
                array[rand] = array[index];
                array[index] = value;
            }
            array.length = size;
            return array;
        }
        /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */ var stringToPath = memoizeCapped(function(string) {
            var result = [];
            if (string.charCodeAt(0) === 46 /* . */ ) result.push("");
            string.replace(rePropName, function(match, number, quote, subString) {
                result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
            });
            return result;
        });
        /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */ function toKey(value) {
            if (typeof value == "string" || isSymbol(value)) return value;
            var result = value + "";
            return result == "0" && 1 / value == -INFINITY ? "-0" : result;
        }
        /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */ function toSource(func) {
            if (func != null) {
                try {
                    return funcToString.call(func);
                } catch (e) {}
                try {
                    return func + "";
                } catch (e) {}
            }
            return "";
        }
        /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */ function updateWrapDetails(details, bitmask) {
            arrayEach(wrapFlags, function(pair) {
                var value = "_." + pair[0];
                if (bitmask & pair[1] && !arrayIncludes(details, value)) details.push(value);
            });
            return details.sort();
        }
        /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */ function wrapperClone(wrapper) {
            if (wrapper instanceof LazyWrapper) return wrapper.clone();
            var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
            result.__actions__ = copyArray(wrapper.__actions__);
            result.__index__ = wrapper.__index__;
            result.__values__ = wrapper.__values__;
            return result;
        }
        /*------------------------------------------------------------------------*/ /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */ function chunk(array, size, guard) {
            if (guard ? isIterateeCall(array, size, guard) : size === undefined) size = 1;
            else size = nativeMax(toInteger(size), 0);
            var length = array == null ? 0 : array.length;
            if (!length || size < 1) return [];
            var index = 0, resIndex = 0, result = Array1(nativeCeil(length / size));
            while(index < length)result[resIndex++] = baseSlice(array, index, index += size);
            return result;
        }
        /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */ function compact(array) {
            var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
            while(++index < length){
                var value = array[index];
                if (value) result[resIndex++] = value;
            }
            return result;
        }
        /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */ function concat() {
            var length = arguments.length;
            if (!length) return [];
            var args = Array1(length - 1), array = arguments[0], index = length;
            while(index--)args[index - 1] = arguments[index];
            return arrayPush(isArray(array) ? copyArray(array) : [
                array
            ], baseFlatten(args, 1));
        }
        /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */ var difference = baseRest(function(array, values) {
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
        });
        /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */ var differenceBy = baseRest(function(array, values) {
            var iteratee = last(values);
            if (isArrayLikeObject(iteratee)) iteratee = undefined;
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
        });
        /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */ var differenceWith = baseRest(function(array, values) {
            var comparator = last(values);
            if (isArrayLikeObject(comparator)) comparator = undefined;
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
        });
        /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */ function drop(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            return baseSlice(array, n < 0 ? 0 : n, length);
        }
        /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */ function dropRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */ function dropRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
        }
        /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */ function dropWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
        }
        /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */ function fill(array, value, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            if (start && typeof start != "number" && isIterateeCall(array, value, start)) {
                start = 0;
                end = length;
            }
            return baseFill(array, value, start, end);
        }
        /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */ function findIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) index = nativeMax(length + index, 0);
            return baseFindIndex(array, getIteratee(predicate, 3), index);
        }
        /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */ function findLastIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = length - 1;
            if (fromIndex !== undefined) {
                index = toInteger(fromIndex);
                index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return baseFindIndex(array, getIteratee(predicate, 3), index, true);
        }
        /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */ function flatten(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, 1) : [];
        }
        /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */ function flattenDeep(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, INFINITY) : [];
        }
        /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */ function flattenDepth(array, depth) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            depth = depth === undefined ? 1 : toInteger(depth);
            return baseFlatten(array, depth);
        }
        /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */ function fromPairs(pairs) {
            var index = -1, length = pairs == null ? 0 : pairs.length, result = {};
            while(++index < length){
                var pair = pairs[index];
                result[pair[0]] = pair[1];
            }
            return result;
        }
        /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */ function head(array) {
            return array && array.length ? array[0] : undefined;
        }
        /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */ function indexOf(array, value, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) index = nativeMax(length + index, 0);
            return baseIndexOf(array, value, index);
        }
        /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */ function initial(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 0, -1) : [];
        }
        /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */ var intersection = baseRest(function(arrays) {
            var mapped = arrayMap(arrays, castArrayLikeObject);
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
        });
        /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */ var intersectionBy = baseRest(function(arrays) {
            var iteratee = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            if (iteratee === last(mapped)) iteratee = undefined;
            else mapped.pop();
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
        });
        /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */ var intersectionWith = baseRest(function(arrays) {
            var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            comparator = typeof comparator == "function" ? comparator : undefined;
            if (comparator) mapped.pop();
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
        });
        /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */ function join(array, separator) {
            return array == null ? "" : nativeJoin.call(array, separator);
        }
        /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */ function last(array) {
            var length = array == null ? 0 : array.length;
            return length ? array[length - 1] : undefined;
        }
        /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */ function lastIndexOf(array, value, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) return -1;
            var index = length;
            if (fromIndex !== undefined) {
                index = toInteger(fromIndex);
                index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
        }
        /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */ function nth(array, n) {
            return array && array.length ? baseNth(array, toInteger(n)) : undefined;
        }
        /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */ var pull = baseRest(pullAll);
        /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */ function pullAll(array, values) {
            return array && array.length && values && values.length ? basePullAll(array, values) : array;
        }
        /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */ function pullAllBy(array, values, iteratee) {
            return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
        }
        /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */ function pullAllWith(array, values, comparator) {
            return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
        }
        /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */ var pullAt = flatRest(function(array, indexes) {
            var length = array == null ? 0 : array.length, result = baseAt(array, indexes);
            basePullAt(array, arrayMap(indexes, function(index) {
                return isIndex(index, length) ? +index : index;
            }).sort(compareAscending));
            return result;
        });
        /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */ function remove(array, predicate) {
            var result = [];
            if (!(array && array.length)) return result;
            var index = -1, indexes = [], length = array.length;
            predicate = getIteratee(predicate, 3);
            while(++index < length){
                var value = array[index];
                if (predicate(value, index, array)) {
                    result.push(value);
                    indexes.push(index);
                }
            }
            basePullAt(array, indexes);
            return result;
        }
        /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */ function reverse(array) {
            return array == null ? array : nativeReverse.call(array);
        }
        /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */ function slice(array, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
                start = 0;
                end = length;
            } else {
                start = start == null ? 0 : toInteger(start);
                end = end === undefined ? length : toInteger(end);
            }
            return baseSlice(array, start, end);
        }
        /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */ function sortedIndex(array, value) {
            return baseSortedIndex(array, value);
        }
        /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */ function sortedIndexBy(array, value, iteratee) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
        }
        /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */ function sortedIndexOf(array, value) {
            var length = array == null ? 0 : array.length;
            if (length) {
                var index = baseSortedIndex(array, value);
                if (index < length && eq(array[index], value)) return index;
            }
            return -1;
        }
        /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */ function sortedLastIndex(array, value) {
            return baseSortedIndex(array, value, true);
        }
        /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */ function sortedLastIndexBy(array, value, iteratee) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
        }
        /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */ function sortedLastIndexOf(array, value) {
            var length = array == null ? 0 : array.length;
            if (length) {
                var index = baseSortedIndex(array, value, true) - 1;
                if (eq(array[index], value)) return index;
            }
            return -1;
        }
        /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */ function sortedUniq(array) {
            return array && array.length ? baseSortedUniq(array) : [];
        }
        /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */ function sortedUniqBy(array, iteratee) {
            return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
        }
        /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */ function tail(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 1, length) : [];
        }
        /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */ function take(array, n, guard) {
            if (!(array && array.length)) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            return baseSlice(array, 0, n < 0 ? 0 : n);
        }
        /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */ function takeRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, n < 0 ? 0 : n, length);
        }
        /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */ function takeRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
        }
        /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */ function takeWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
        }
        /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */ var union = baseRest(function(arrays) {
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
        });
        /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */ var unionBy = baseRest(function(arrays) {
            var iteratee = last(arrays);
            if (isArrayLikeObject(iteratee)) iteratee = undefined;
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
        });
        /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */ var unionWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == "function" ? comparator : undefined;
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
        });
        /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */ function uniq(array) {
            return array && array.length ? baseUniq(array) : [];
        }
        /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */ function uniqBy(array, iteratee) {
            return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
        }
        /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */ function uniqWith(array, comparator) {
            comparator = typeof comparator == "function" ? comparator : undefined;
            return array && array.length ? baseUniq(array, undefined, comparator) : [];
        }
        /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */ function unzip(array) {
            if (!(array && array.length)) return [];
            var length = 0;
            array = arrayFilter(array, function(group) {
                if (isArrayLikeObject(group)) {
                    length = nativeMax(group.length, length);
                    return true;
                }
            });
            return baseTimes(length, function(index) {
                return arrayMap(array, baseProperty(index));
            });
        }
        /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */ function unzipWith(array, iteratee) {
            if (!(array && array.length)) return [];
            var result = unzip(array);
            if (iteratee == null) return result;
            return arrayMap(result, function(group) {
                return apply(iteratee, undefined, group);
            });
        }
        /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */ var without = baseRest(function(array, values) {
            return isArrayLikeObject(array) ? baseDifference(array, values) : [];
        });
        /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */ var xor = baseRest(function(arrays) {
            return baseXor(arrayFilter(arrays, isArrayLikeObject));
        });
        /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */ var xorBy = baseRest(function(arrays) {
            var iteratee = last(arrays);
            if (isArrayLikeObject(iteratee)) iteratee = undefined;
            return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
        });
        /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */ var xorWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == "function" ? comparator : undefined;
            return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
        });
        /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */ var zip = baseRest(unzip);
        /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */ function zipObject(props, values) {
            return baseZipObject(props || [], values || [], assignValue);
        }
        /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */ function zipObjectDeep(props, values) {
            return baseZipObject(props || [], values || [], baseSet);
        }
        /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */ var zipWith = baseRest(function(arrays) {
            var length = arrays.length, iteratee = length > 1 ? arrays[length - 1] : undefined;
            iteratee = typeof iteratee == "function" ? (arrays.pop(), iteratee) : undefined;
            return unzipWith(arrays, iteratee);
        });
        /*------------------------------------------------------------------------*/ /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */ function chain(value) {
            var result = lodash(value);
            result.__chain__ = true;
            return result;
        }
        /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */ function tap(value, interceptor) {
            interceptor(value);
            return value;
        }
        /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */ function thru(value, interceptor) {
            return interceptor(value);
        }
        /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */ var wrapperAt = flatRest(function(paths) {
            var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
                return baseAt(object, paths);
            };
            if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) return this.thru(interceptor);
            value = value.slice(start, +start + (length ? 1 : 0));
            value.__actions__.push({
                "func": thru,
                "args": [
                    interceptor
                ],
                "thisArg": undefined
            });
            return new LodashWrapper(value, this.__chain__).thru(function(array) {
                if (length && !array.length) array.push(undefined);
                return array;
            });
        });
        /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */ function wrapperChain() {
            return chain(this);
        }
        /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */ function wrapperCommit() {
            return new LodashWrapper(this.value(), this.__chain__);
        }
        /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */ function wrapperNext() {
            if (this.__values__ === undefined) this.__values__ = toArray(this.value());
            var done = this.__index__ >= this.__values__.length, value = done ? undefined : this.__values__[this.__index__++];
            return {
                "done": done,
                "value": value
            };
        }
        /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */ function wrapperToIterator() {
            return this;
        }
        /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */ function wrapperPlant(value) {
            var result, parent = this;
            while(parent instanceof baseLodash){
                var clone = wrapperClone(parent);
                clone.__index__ = 0;
                clone.__values__ = undefined;
                if (result) previous.__wrapped__ = clone;
                else result = clone;
                var previous = clone;
                parent = parent.__wrapped__;
            }
            previous.__wrapped__ = value;
            return result;
        }
        /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */ function wrapperReverse() {
            var value = this.__wrapped__;
            if (value instanceof LazyWrapper) {
                var wrapped = value;
                if (this.__actions__.length) wrapped = new LazyWrapper(this);
                wrapped = wrapped.reverse();
                wrapped.__actions__.push({
                    "func": thru,
                    "args": [
                        reverse
                    ],
                    "thisArg": undefined
                });
                return new LodashWrapper(wrapped, this.__chain__);
            }
            return this.thru(reverse);
        }
        /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */ function wrapperValue() {
            return baseWrapperValue(this.__wrapped__, this.__actions__);
        }
        /*------------------------------------------------------------------------*/ /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */ var countBy = createAggregator(function(result, value, key) {
            if (hasOwnProperty.call(result, key)) ++result[key];
            else baseAssignValue(result, key, 1);
        });
        /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */ function every(collection, predicate, guard) {
            var func = isArray(collection) ? arrayEvery : baseEvery;
            if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined;
            return func(collection, getIteratee(predicate, 3));
        }
        /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */ function filter(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, getIteratee(predicate, 3));
        }
        /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */ var find = createFind(findIndex);
        /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */ var findLast = createFind(findLastIndex);
        /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */ function flatMap(collection, iteratee) {
            return baseFlatten(map(collection, iteratee), 1);
        }
        /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */ function flatMapDeep(collection, iteratee) {
            return baseFlatten(map(collection, iteratee), INFINITY);
        }
        /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */ function flatMapDepth(collection, iteratee, depth) {
            depth = depth === undefined ? 1 : toInteger(depth);
            return baseFlatten(map(collection, iteratee), depth);
        }
        /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */ function forEach(collection, iteratee) {
            var func = isArray(collection) ? arrayEach : baseEach;
            return func(collection, getIteratee(iteratee, 3));
        }
        /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */ function forEachRight(collection, iteratee) {
            var func = isArray(collection) ? arrayEachRight : baseEachRight;
            return func(collection, getIteratee(iteratee, 3));
        }
        /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */ var groupBy = createAggregator(function(result, value, key) {
            if (hasOwnProperty.call(result, key)) result[key].push(value);
            else baseAssignValue(result, key, [
                value
            ]);
        });
        /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */ function includes(collection, value, fromIndex, guard) {
            collection = isArrayLike(collection) ? collection : values(collection);
            fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
            var length = collection.length;
            if (fromIndex < 0) fromIndex = nativeMax(length + fromIndex, 0);
            return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
        }
        /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */ var invokeMap = baseRest(function(collection, path, args) {
            var index = -1, isFunc = typeof path == "function", result = isArrayLike(collection) ? Array1(collection.length) : [];
            baseEach(collection, function(value) {
                result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
            });
            return result;
        });
        /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */ var keyBy = createAggregator(function(result, value, key) {
            baseAssignValue(result, key, value);
        });
        /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */ function map(collection, iteratee) {
            var func = isArray(collection) ? arrayMap : baseMap;
            return func(collection, getIteratee(iteratee, 3));
        }
        /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */ function orderBy(collection, iteratees, orders, guard) {
            if (collection == null) return [];
            if (!isArray(iteratees)) iteratees = iteratees == null ? [] : [
                iteratees
            ];
            orders = guard ? undefined : orders;
            if (!isArray(orders)) orders = orders == null ? [] : [
                orders
            ];
            return baseOrderBy(collection, iteratees, orders);
        }
        /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */ var partition = createAggregator(function(result, value, key) {
            result[key ? 0 : 1].push(value);
        }, function() {
            return [
                [],
                []
            ];
        });
        /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */ function reduce(collection, iteratee, accumulator) {
            var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
        }
        /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */ function reduceRight(collection, iteratee, accumulator) {
            var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
        }
        /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */ function reject(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, negate(getIteratee(predicate, 3)));
        }
        /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */ function sample(collection) {
            var func = isArray(collection) ? arraySample : baseSample;
            return func(collection);
        }
        /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */ function sampleSize(collection, n, guard) {
            if (guard ? isIterateeCall(collection, n, guard) : n === undefined) n = 1;
            else n = toInteger(n);
            var func = isArray(collection) ? arraySampleSize : baseSampleSize;
            return func(collection, n);
        }
        /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */ function shuffle(collection) {
            var func = isArray(collection) ? arrayShuffle : baseShuffle;
            return func(collection);
        }
        /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */ function size(collection) {
            if (collection == null) return 0;
            if (isArrayLike(collection)) return isString(collection) ? stringSize(collection) : collection.length;
            var tag = getTag(collection);
            if (tag == mapTag || tag == setTag) return collection.size;
            return baseKeys(collection).length;
        }
        /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */ function some(collection, predicate, guard) {
            var func = isArray(collection) ? arraySome : baseSome;
            if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined;
            return func(collection, getIteratee(predicate, 3));
        }
        /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */ var sortBy = baseRest(function(collection, iteratees) {
            if (collection == null) return [];
            var length = iteratees.length;
            if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) iteratees = [];
            else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) iteratees = [
                iteratees[0]
            ];
            return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
        });
        /*------------------------------------------------------------------------*/ /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */ var now = ctxNow || function() {
            return root.Date.now();
        };
        /*------------------------------------------------------------------------*/ /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */ function after(n, func) {
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            n = toInteger(n);
            return function() {
                if (--n < 1) return func.apply(this, arguments);
            };
        }
        /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */ function ary(func, n, guard) {
            n = guard ? undefined : n;
            n = func && n == null ? func.length : n;
            return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
        }
        /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */ function before(n, func) {
            var result;
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            n = toInteger(n);
            return function() {
                if (--n > 0) result = func.apply(this, arguments);
                if (n <= 1) func = undefined;
                return result;
            };
        }
        /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */ var bind = baseRest(function(func, thisArg, partials) {
            var bitmask = WRAP_BIND_FLAG;
            if (partials.length) {
                var holders = replaceHolders(partials, getHolder(bind));
                bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(func, bitmask, thisArg, partials, holders);
        });
        /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */ var bindKey = baseRest(function(object, key, partials) {
            var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
            if (partials.length) {
                var holders = replaceHolders(partials, getHolder(bindKey));
                bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(key, bitmask, object, partials, holders);
        });
        /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */ function curry(func, arity, guard) {
            arity = guard ? undefined : arity;
            var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
            result.placeholder = curry.placeholder;
            return result;
        }
        /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */ function curryRight(func, arity, guard) {
            arity = guard ? undefined : arity;
            var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
            result.placeholder = curryRight.placeholder;
            return result;
        }
        /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */ function debounce(func, wait, options) {
            var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            wait = toNumber(wait) || 0;
            if (isObject(options)) {
                leading = !!options.leading;
                maxing = "maxWait" in options;
                maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
                trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            function invokeFunc(time) {
                var args = lastArgs, thisArg = lastThis;
                lastArgs = lastThis = undefined;
                lastInvokeTime = time;
                result = func.apply(thisArg, args);
                return result;
            }
            function leadingEdge(time) {
                // Reset any `maxWait` timer.
                lastInvokeTime = time;
                // Start the timer for the trailing edge.
                timerId = setTimeout(timerExpired, wait);
                // Invoke the leading edge.
                return leading ? invokeFunc(time) : result;
            }
            function remainingWait(time) {
                var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
                return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
            }
            function shouldInvoke(time) {
                var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                // Either this is the first call, activity has stopped and we're at the
                // trailing edge, the system time has gone backwards and we're treating
                // it as the trailing edge, or we've hit the `maxWait` limit.
                return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
            }
            function timerExpired() {
                var time = now();
                if (shouldInvoke(time)) return trailingEdge(time);
                // Restart the timer.
                timerId = setTimeout(timerExpired, remainingWait(time));
            }
            function trailingEdge(time) {
                timerId = undefined;
                // Only invoke if we have `lastArgs` which means `func` has been
                // debounced at least once.
                if (trailing && lastArgs) return invokeFunc(time);
                lastArgs = lastThis = undefined;
                return result;
            }
            function cancel() {
                if (timerId !== undefined) clearTimeout(timerId);
                lastInvokeTime = 0;
                lastArgs = lastCallTime = lastThis = timerId = undefined;
            }
            function flush() {
                return timerId === undefined ? result : trailingEdge(now());
            }
            function debounced() {
                var time = now(), isInvoking = shouldInvoke(time);
                lastArgs = arguments;
                lastThis = this;
                lastCallTime = time;
                if (isInvoking) {
                    if (timerId === undefined) return leadingEdge(lastCallTime);
                    if (maxing) {
                        // Handle invocations in a tight loop.
                        clearTimeout(timerId);
                        timerId = setTimeout(timerExpired, wait);
                        return invokeFunc(lastCallTime);
                    }
                }
                if (timerId === undefined) timerId = setTimeout(timerExpired, wait);
                return result;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
        }
        /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */ var defer = baseRest(function(func, args) {
            return baseDelay(func, 1, args);
        });
        /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */ var delay = baseRest(function(func, wait, args) {
            return baseDelay(func, toNumber(wait) || 0, args);
        });
        /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */ function flip(func) {
            return createWrap(func, WRAP_FLIP_FLAG);
        }
        /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */ function memoize(func, resolver) {
            if (typeof func != "function" || resolver != null && typeof resolver != "function") throw new TypeError(FUNC_ERROR_TEXT);
            var memoized = function() {
                var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
                if (cache.has(key)) return cache.get(key);
                var result = func.apply(this, args);
                memoized.cache = cache.set(key, result) || cache;
                return result;
            };
            memoized.cache = new (memoize.Cache || MapCache);
            return memoized;
        }
        // Expose `MapCache`.
        memoize.Cache = MapCache;
        /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */ function negate(predicate) {
            if (typeof predicate != "function") throw new TypeError(FUNC_ERROR_TEXT);
            return function() {
                var args = arguments;
                switch(args.length){
                    case 0:
                        return !predicate.call(this);
                    case 1:
                        return !predicate.call(this, args[0]);
                    case 2:
                        return !predicate.call(this, args[0], args[1]);
                    case 3:
                        return !predicate.call(this, args[0], args[1], args[2]);
                }
                return !predicate.apply(this, args);
            };
        }
        /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */ function once(func) {
            return before(2, func);
        }
        /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */ var overArgs = castRest(function(func, transforms) {
            transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
            var funcsLength = transforms.length;
            return baseRest(function(args) {
                var index = -1, length = nativeMin(args.length, funcsLength);
                while(++index < length)args[index] = transforms[index].call(this, args[index]);
                return apply(func, this, args);
            });
        });
        /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */ var partial = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partial));
            return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
        });
        /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */ var partialRight = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partialRight));
            return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
        });
        /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */ var rearg = flatRest(function(func, indexes) {
            return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
        });
        /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */ function rest(func, start) {
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            start = start === undefined ? start : toInteger(start);
            return baseRest(func, start);
        }
        /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */ function spread(func, start) {
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            start = start == null ? 0 : nativeMax(toInteger(start), 0);
            return baseRest(function(args) {
                var array = args[start], otherArgs = castSlice(args, 0, start);
                if (array) arrayPush(otherArgs, array);
                return apply(func, this, otherArgs);
            });
        }
        /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */ function throttle(func, wait, options) {
            var leading = true, trailing = true;
            if (typeof func != "function") throw new TypeError(FUNC_ERROR_TEXT);
            if (isObject(options)) {
                leading = "leading" in options ? !!options.leading : leading;
                trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            return debounce(func, wait, {
                "leading": leading,
                "maxWait": wait,
                "trailing": trailing
            });
        }
        /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */ function unary(func) {
            return ary(func, 1);
        }
        /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */ function wrap(value, wrapper) {
            return partial(castFunction(wrapper), value);
        }
        /*------------------------------------------------------------------------*/ /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */ function castArray() {
            if (!arguments.length) return [];
            var value = arguments[0];
            return isArray(value) ? value : [
                value
            ];
        }
        /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */ function clone(value) {
            return baseClone(value, CLONE_SYMBOLS_FLAG);
        }
        /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */ function cloneWith(value, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
        }
        /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */ function cloneDeep(value) {
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }
        /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */ function cloneDeepWith(value, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
        }
        /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */ function conformsTo(object, source) {
            return source == null || baseConformsTo(object, source, keys(source));
        }
        /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */ function eq(value, other) {
            return value === other || value !== value && other !== other;
        }
        /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */ var gt = createRelationalOperation(baseGt);
        /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */ var gte = createRelationalOperation(function(value, other) {
            return value >= other;
        });
        /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */ var isArguments = baseIsArguments(function() {
            return arguments;
        }()) ? baseIsArguments : function(value) {
            return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
        };
        /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */ var isArray = Array1.isArray;
        /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */ var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
        /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */ function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value);
        }
        /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */ function isArrayLikeObject(value) {
            return isObjectLike(value) && isArrayLike(value);
        }
        /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */ function isBoolean(value) {
            return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
        }
        /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */ var isBuffer = nativeIsBuffer || stubFalse;
        /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */ var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
        /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */ function isElement(value) {
            return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
        }
        /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */ function isEmpty(value) {
            if (value == null) return true;
            if (isArrayLike(value) && (isArray(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) return !value.length;
            var tag = getTag(value);
            if (tag == mapTag || tag == setTag) return !value.size;
            if (isPrototype(value)) return !baseKeys(value).length;
            for(var key in value){
                if (hasOwnProperty.call(value, key)) return false;
            }
            return true;
        }
        /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */ function isEqual(value, other) {
            return baseIsEqual(value, other);
        }
        /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */ function isEqualWith(value, other, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            var result = customizer ? customizer(value, other) : undefined;
            return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
        }
        /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */ function isError(value) {
            if (!isObjectLike(value)) return false;
            var tag = baseGetTag(value);
            return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
        }
        /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */ function isFinite(value) {
            return typeof value == "number" && nativeIsFinite(value);
        }
        /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */ function isFunction(value) {
            if (!isObject(value)) return false;
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 9 which returns 'object' for typed arrays and other constructors.
            var tag = baseGetTag(value);
            return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }
        /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */ function isInteger(value) {
            return typeof value == "number" && value == toInteger(value);
        }
        /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */ function isLength(value) {
            return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */ function isObject(value) {
            var type = typeof value;
            return value != null && (type == "object" || type == "function");
        }
        /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */ function isObjectLike(value) {
            return value != null && typeof value == "object";
        }
        /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */ var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
        /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */ function isMatch(object, source) {
            return object === source || baseIsMatch(object, source, getMatchData(source));
        }
        /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */ function isMatchWith(object, source, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            return baseIsMatch(object, source, getMatchData(source), customizer);
        }
        /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */ function isNaN(value) {
            // An `NaN` primitive is the only value that is not equal to itself.
            // Perform the `toStringTag` check first to avoid errors with some
            // ActiveX objects in IE.
            return isNumber(value) && value != +value;
        }
        /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */ function isNative(value) {
            if (isMaskable(value)) throw new Error(CORE_ERROR_TEXT);
            return baseIsNative(value);
        }
        /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */ function isNull(value) {
            return value === null;
        }
        /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */ function isNil(value) {
            return value == null;
        }
        /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */ function isNumber(value) {
            return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
        }
        /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */ function isPlainObject(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) return false;
            var proto = getPrototype(value);
            if (proto === null) return true;
            var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
            return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */ var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
        /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */ function isSafeInteger(value) {
            return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
        }
        /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */ var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
        /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */ function isString(value) {
            return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
        }
        /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */ function isSymbol(value) {
            return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
        }
        /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */ var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */ function isUndefined(value) {
            return value === undefined;
        }
        /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */ function isWeakMap(value) {
            return isObjectLike(value) && getTag(value) == weakMapTag;
        }
        /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */ function isWeakSet(value) {
            return isObjectLike(value) && baseGetTag(value) == weakSetTag;
        }
        /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */ var lt = createRelationalOperation(baseLt);
        /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */ var lte = createRelationalOperation(function(value, other) {
            return value <= other;
        });
        /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */ function toArray(value) {
            if (!value) return [];
            if (isArrayLike(value)) return isString(value) ? stringToArray(value) : copyArray(value);
            if (symIterator && value[symIterator]) return iteratorToArray(value[symIterator]());
            var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
            return func(value);
        }
        /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */ function toFinite(value) {
            if (!value) return value === 0 ? value : 0;
            value = toNumber(value);
            if (value === INFINITY || value === -INFINITY) {
                var sign = value < 0 ? -1 : 1;
                return sign * MAX_INTEGER;
            }
            return value === value ? value : 0;
        }
        /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */ function toInteger(value) {
            var result = toFinite(value), remainder = result % 1;
            return result === result ? remainder ? result - remainder : result : 0;
        }
        /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */ function toLength(value) {
            return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
        }
        /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */ function toNumber(value) {
            if (typeof value == "number") return value;
            if (isSymbol(value)) return NAN;
            if (isObject(value)) {
                var other = typeof value.valueOf == "function" ? value.valueOf() : value;
                value = isObject(other) ? other + "" : other;
            }
            if (typeof value != "string") return value === 0 ? value : +value;
            value = baseTrim(value);
            var isBinary = reIsBinary.test(value);
            return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
        }
        /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */ function toPlainObject(value) {
            return copyObject(value, keysIn(value));
        }
        /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */ function toSafeInteger(value) {
            return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
        }
        /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */ function toString(value) {
            return value == null ? "" : baseToString(value);
        }
        /*------------------------------------------------------------------------*/ /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */ var assign = createAssigner(function(object, source) {
            if (isPrototype(source) || isArrayLike(source)) {
                copyObject(source, keys(source), object);
                return;
            }
            for(var key in source)if (hasOwnProperty.call(source, key)) assignValue(object, key, source[key]);
        });
        /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */ var assignIn = createAssigner(function(object, source) {
            copyObject(source, keysIn(source), object);
        });
        /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */ var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keysIn(source), object, customizer);
        });
        /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */ var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keys(source), object, customizer);
        });
        /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */ var at = flatRest(baseAt);
        /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */ function create(prototype, properties) {
            var result = baseCreate(prototype);
            return properties == null ? result : baseAssign(result, properties);
        }
        /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */ var defaults = baseRest(function(object, sources) {
            object = Object1(object);
            var index = -1;
            var length = sources.length;
            var guard = length > 2 ? sources[2] : undefined;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) length = 1;
            while(++index < length){
                var source = sources[index];
                var props = keysIn(source);
                var propsIndex = -1;
                var propsLength = props.length;
                while(++propsIndex < propsLength){
                    var key = props[propsIndex];
                    var value = object[key];
                    if (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) object[key] = source[key];
                }
            }
            return object;
        });
        /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */ var defaultsDeep = baseRest(function(args) {
            args.push(undefined, customDefaultsMerge);
            return apply(mergeWith, undefined, args);
        });
        /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */ function findKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
        }
        /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */ function findLastKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
        }
        /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */ function forIn(object, iteratee) {
            return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
        }
        /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */ function forInRight(object, iteratee) {
            return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
        }
        /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */ function forOwn(object, iteratee) {
            return object && baseForOwn(object, getIteratee(iteratee, 3));
        }
        /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */ function forOwnRight(object, iteratee) {
            return object && baseForOwnRight(object, getIteratee(iteratee, 3));
        }
        /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */ function functions(object) {
            return object == null ? [] : baseFunctions(object, keys(object));
        }
        /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */ function functionsIn(object) {
            return object == null ? [] : baseFunctions(object, keysIn(object));
        }
        /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */ function get(object, path, defaultValue) {
            var result = object == null ? undefined : baseGet(object, path);
            return result === undefined ? defaultValue : result;
        }
        /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */ function has(object, path) {
            return object != null && hasPath(object, path, baseHas);
        }
        /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */ function hasIn(object, path) {
            return object != null && hasPath(object, path, baseHasIn);
        }
        /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */ var invert = createInverter(function(result, value, key) {
            if (value != null && typeof value.toString != "function") value = nativeObjectToString.call(value);
            result[value] = key;
        }, constant(identity));
        /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */ var invertBy = createInverter(function(result, value, key) {
            if (value != null && typeof value.toString != "function") value = nativeObjectToString.call(value);
            if (hasOwnProperty.call(result, value)) result[value].push(key);
            else result[value] = [
                key
            ];
        }, getIteratee);
        /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */ var invoke = baseRest(baseInvoke);
        /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */ function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */ function keysIn(object) {
            return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }
        /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */ function mapKeys(object, iteratee) {
            var result = {};
            iteratee = getIteratee(iteratee, 3);
            baseForOwn(object, function(value, key, object) {
                baseAssignValue(result, iteratee(value, key, object), value);
            });
            return result;
        }
        /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */ function mapValues(object, iteratee) {
            var result = {};
            iteratee = getIteratee(iteratee, 3);
            baseForOwn(object, function(value, key, object) {
                baseAssignValue(result, key, iteratee(value, key, object));
            });
            return result;
        }
        /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */ var merge = createAssigner(function(object, source, srcIndex) {
            baseMerge(object, source, srcIndex);
        });
        /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */ var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
            baseMerge(object, source, srcIndex, customizer);
        });
        /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */ var omit = flatRest(function(object, paths) {
            var result = {};
            if (object == null) return result;
            var isDeep = false;
            paths = arrayMap(paths, function(path) {
                path = castPath(path, object);
                isDeep || (isDeep = path.length > 1);
                return path;
            });
            copyObject(object, getAllKeysIn(object), result);
            if (isDeep) result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
            var length = paths.length;
            while(length--)baseUnset(result, paths[length]);
            return result;
        });
        /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */ function omitBy(object, predicate) {
            return pickBy(object, negate(getIteratee(predicate)));
        }
        /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */ var pick = flatRest(function(object, paths) {
            return object == null ? {} : basePick(object, paths);
        });
        /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */ function pickBy(object, predicate) {
            if (object == null) return {};
            var props = arrayMap(getAllKeysIn(object), function(prop) {
                return [
                    prop
                ];
            });
            predicate = getIteratee(predicate);
            return basePickBy(object, props, function(value, path) {
                return predicate(value, path[0]);
            });
        }
        /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */ function result(object, path, defaultValue) {
            path = castPath(path, object);
            var index = -1, length = path.length;
            // Ensure the loop is entered when path is empty.
            if (!length) {
                length = 1;
                object = undefined;
            }
            while(++index < length){
                var value = object == null ? undefined : object[toKey(path[index])];
                if (value === undefined) {
                    index = length;
                    value = defaultValue;
                }
                object = isFunction(value) ? value.call(object) : value;
            }
            return object;
        }
        /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */ function set(object, path, value) {
            return object == null ? object : baseSet(object, path, value);
        }
        /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */ function setWith(object, path, value, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            return object == null ? object : baseSet(object, path, value, customizer);
        }
        /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */ var toPairs = createToPairs(keys);
        /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */ var toPairsIn = createToPairs(keysIn);
        /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */ function transform(object, iteratee, accumulator) {
            var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
            iteratee = getIteratee(iteratee, 4);
            if (accumulator == null) {
                var Ctor = object && object.constructor;
                if (isArrLike) accumulator = isArr ? new Ctor : [];
                else if (isObject(object)) accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
                else accumulator = {};
            }
            (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
                return iteratee(accumulator, value, index, object);
            });
            return accumulator;
        }
        /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */ function unset(object, path) {
            return object == null ? true : baseUnset(object, path);
        }
        /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */ function update(object, path, updater) {
            return object == null ? object : baseUpdate(object, path, castFunction(updater));
        }
        /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */ function updateWith(object, path, updater, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined;
            return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
        }
        /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */ function values(object) {
            return object == null ? [] : baseValues(object, keys(object));
        }
        /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */ function valuesIn(object) {
            return object == null ? [] : baseValues(object, keysIn(object));
        }
        /*------------------------------------------------------------------------*/ /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */ function clamp(number, lower, upper) {
            if (upper === undefined) {
                upper = lower;
                lower = undefined;
            }
            if (upper !== undefined) {
                upper = toNumber(upper);
                upper = upper === upper ? upper : 0;
            }
            if (lower !== undefined) {
                lower = toNumber(lower);
                lower = lower === lower ? lower : 0;
            }
            return baseClamp(toNumber(number), lower, upper);
        }
        /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */ function inRange(number, start, end) {
            start = toFinite(start);
            if (end === undefined) {
                end = start;
                start = 0;
            } else end = toFinite(end);
            number = toNumber(number);
            return baseInRange(number, start, end);
        }
        /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */ function random(lower, upper, floating) {
            if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) upper = floating = undefined;
            if (floating === undefined) {
                if (typeof upper == "boolean") {
                    floating = upper;
                    upper = undefined;
                } else if (typeof lower == "boolean") {
                    floating = lower;
                    lower = undefined;
                }
            }
            if (lower === undefined && upper === undefined) {
                lower = 0;
                upper = 1;
            } else {
                lower = toFinite(lower);
                if (upper === undefined) {
                    upper = lower;
                    lower = 0;
                } else upper = toFinite(upper);
            }
            if (lower > upper) {
                var temp = lower;
                lower = upper;
                upper = temp;
            }
            if (floating || lower % 1 || upper % 1) {
                var rand = nativeRandom();
                return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
            }
            return baseRandom(lower, upper);
        }
        /*------------------------------------------------------------------------*/ /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */ var camelCase = createCompounder(function(result, word, index) {
            word = word.toLowerCase();
            return result + (index ? capitalize(word) : word);
        });
        /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */ function capitalize(string) {
            return upperFirst(toString(string).toLowerCase());
        }
        /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */ function deburr(string) {
            string = toString(string);
            return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
        }
        /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */ function endsWith(string, target, position) {
            string = toString(string);
            target = baseToString(target);
            var length = string.length;
            position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
            var end = position;
            position -= target.length;
            return position >= 0 && string.slice(position, end) == target;
        }
        /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */ function escape(string) {
            string = toString(string);
            return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */ function escapeRegExp(string) {
            string = toString(string);
            return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
        }
        /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */ var kebabCase = createCompounder(function(result, word, index) {
            return result + (index ? "-" : "") + word.toLowerCase();
        });
        /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */ var lowerCase = createCompounder(function(result, word, index) {
            return result + (index ? " " : "") + word.toLowerCase();
        });
        /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */ var lowerFirst = createCaseFirst("toLowerCase");
        /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */ function pad(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            if (!length || strLength >= length) return string;
            var mid = (length - strLength) / 2;
            return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
        }
        /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */ function padEnd(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
        }
        /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */ function padStart(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
        }
        /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */ function parseInt1(string, radix, guard) {
            if (guard || radix == null) radix = 0;
            else if (radix) radix = +radix;
            return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
        }
        /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */ function repeat(string, n, guard) {
            if (guard ? isIterateeCall(string, n, guard) : n === undefined) n = 1;
            else n = toInteger(n);
            return baseRepeat(toString(string), n);
        }
        /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */ function replace() {
            var args = arguments, string = toString(args[0]);
            return args.length < 3 ? string : string.replace(args[1], args[2]);
        }
        /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */ var snakeCase = createCompounder(function(result, word, index) {
            return result + (index ? "_" : "") + word.toLowerCase();
        });
        /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */ function split(string, separator, limit) {
            if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) separator = limit = undefined;
            limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
            if (!limit) return [];
            string = toString(string);
            if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
                separator = baseToString(separator);
                if (!separator && hasUnicode(string)) return castSlice(stringToArray(string), 0, limit);
            }
            return string.split(separator, limit);
        }
        /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */ var startCase = createCompounder(function(result, word, index) {
            return result + (index ? " " : "") + upperFirst(word);
        });
        /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */ function startsWith(string, target, position) {
            string = toString(string);
            position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
            target = baseToString(target);
            return string.slice(position, position + target.length) == target;
        }
        /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */ function template(string, options, guard) {
            // Based on John Resig's `tmpl` implementation
            // (http://ejohn.org/blog/javascript-micro-templating/)
            // and Laura Doktorova's doT.js (https://github.com/olado/doT).
            var settings = lodash.templateSettings;
            if (guard && isIterateeCall(string, options, guard)) options = undefined;
            string = toString(string);
            options = assignInWith({}, options, settings, customDefaultsAssignIn);
            var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
            var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
            // Compile the regexp to match each delimiter.
            var reDelimiters = RegExp1((options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$", "g");
            // Use a sourceURL for easier debugging.
            // The sourceURL gets injected into the source that's eval-ed, so be careful
            // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
            // and escape the comment, thus injecting code that gets evaled.
            var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
            string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
                interpolateValue || (interpolateValue = esTemplateValue);
                // Escape characters that can't be included in string literals.
                source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
                // Replace delimiters with snippets.
                if (escapeValue) {
                    isEscaping = true;
                    source += "' +\n__e(" + escapeValue + ") +\n'";
                }
                if (evaluateValue) {
                    isEvaluating = true;
                    source += "';\n" + evaluateValue + ";\n__p += '";
                }
                if (interpolateValue) source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
                index = offset + match.length;
                // The JS engine embedded in Adobe products needs `match` returned in
                // order to produce the correct `offset` value.
                return match;
            });
            source += "';\n";
            // If `variable` is not specified wrap a with-statement around the generated
            // code to add the data object to the top of the scope chain.
            var variable = hasOwnProperty.call(options, "variable") && options.variable;
            if (!variable) source = "with (obj) {\n" + source + "\n}\n";
            else if (reForbiddenIdentifierChars.test(variable)) throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
            // Cleanup code by stripping empty strings.
            source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
            // Frame code as the function body.
            source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
            var result = attempt(function() {
                return Function1(importsKeys, sourceURL + "return " + source).apply(undefined, importsValues);
            });
            // Provide the compiled function's source by its `toString` method or
            // the `source` property as a convenience for inlining compiled templates.
            result.source = source;
            if (isError(result)) throw result;
            return result;
        }
        /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */ function toLower(value) {
            return toString(value).toLowerCase();
        }
        /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */ function toUpper(value) {
            return toString(value).toUpperCase();
        }
        /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */ function trim(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return baseTrim(string);
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
            return castSlice(strSymbols, start, end).join("");
        }
        /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */ function trimEnd(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return string.slice(0, trimmedEndIndex(string) + 1);
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
            return castSlice(strSymbols, 0, end).join("");
        }
        /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */ function trimStart(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return string.replace(reTrimStart, "");
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
            return castSlice(strSymbols, start).join("");
        }
        /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */ function truncate(string, options) {
            var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
            if (isObject(options)) {
                var separator = "separator" in options ? options.separator : separator;
                length = "length" in options ? toInteger(options.length) : length;
                omission = "omission" in options ? baseToString(options.omission) : omission;
            }
            string = toString(string);
            var strLength = string.length;
            if (hasUnicode(string)) {
                var strSymbols = stringToArray(string);
                strLength = strSymbols.length;
            }
            if (length >= strLength) return string;
            var end = length - stringSize(omission);
            if (end < 1) return omission;
            var result = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
            if (separator === undefined) return result + omission;
            if (strSymbols) end += result.length - end;
            if (isRegExp(separator)) {
                if (string.slice(end).search(separator)) {
                    var match, substring = result;
                    if (!separator.global) separator = RegExp1(separator.source, toString(reFlags.exec(separator)) + "g");
                    separator.lastIndex = 0;
                    while(match = separator.exec(substring))var newEnd = match.index;
                    result = result.slice(0, newEnd === undefined ? end : newEnd);
                }
            } else if (string.indexOf(baseToString(separator), end) != end) {
                var index = result.lastIndexOf(separator);
                if (index > -1) result = result.slice(0, index);
            }
            return result + omission;
        }
        /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */ function unescape(string) {
            string = toString(string);
            return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
        }
        /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */ var upperCase = createCompounder(function(result, word, index) {
            return result + (index ? " " : "") + word.toUpperCase();
        });
        /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */ var upperFirst = createCaseFirst("toUpperCase");
        /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */ function words(string, pattern, guard) {
            string = toString(string);
            pattern = guard ? undefined : pattern;
            if (pattern === undefined) return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
            return string.match(pattern) || [];
        }
        /*------------------------------------------------------------------------*/ /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */ var attempt = baseRest(function(func, args) {
            try {
                return apply(func, undefined, args);
            } catch (e) {
                return isError(e) ? e : new Error(e);
            }
        });
        /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */ var bindAll = flatRest(function(object, methodNames) {
            arrayEach(methodNames, function(key) {
                key = toKey(key);
                baseAssignValue(object, key, bind(object[key], object));
            });
            return object;
        });
        /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */ function cond(pairs) {
            var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
            pairs = !length ? [] : arrayMap(pairs, function(pair) {
                if (typeof pair[1] != "function") throw new TypeError(FUNC_ERROR_TEXT);
                return [
                    toIteratee(pair[0]),
                    pair[1]
                ];
            });
            return baseRest(function(args) {
                var index = -1;
                while(++index < length){
                    var pair = pairs[index];
                    if (apply(pair[0], this, args)) return apply(pair[1], this, args);
                }
            });
        }
        /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */ function conforms(source) {
            return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */ function constant(value) {
            return function() {
                return value;
            };
        }
        /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */ function defaultTo(value, defaultValue) {
            return value == null || value !== value ? defaultValue : value;
        }
        /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */ var flow = createFlow();
        /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */ var flowRight = createFlow(true);
        /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */ function identity(value) {
            return value;
        }
        /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */ function iteratee(func) {
            return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */ function matches(source) {
            return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */ function matchesProperty(path, srcValue) {
            return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
        }
        /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */ var method = baseRest(function(path, args) {
            return function(object) {
                return baseInvoke(object, path, args);
            };
        });
        /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */ var methodOf = baseRest(function(object, args) {
            return function(path) {
                return baseInvoke(object, path, args);
            };
        });
        /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */ function mixin(object, source, options) {
            var props = keys(source), methodNames = baseFunctions(source, props);
            if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
                options = source;
                source = object;
                object = this;
                methodNames = baseFunctions(source, keys(source));
            }
            var chain = !(isObject(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
            arrayEach(methodNames, function(methodName) {
                var func = source[methodName];
                object[methodName] = func;
                if (isFunc) object.prototype[methodName] = function() {
                    var chainAll = this.__chain__;
                    if (chain || chainAll) {
                        var result = object(this.__wrapped__), actions = result.__actions__ = copyArray(this.__actions__);
                        actions.push({
                            "func": func,
                            "args": arguments,
                            "thisArg": object
                        });
                        result.__chain__ = chainAll;
                        return result;
                    }
                    return func.apply(object, arrayPush([
                        this.value()
                    ], arguments));
                };
            });
            return object;
        }
        /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */ function noConflict() {
            if (root._ === this) root._ = oldDash;
            return this;
        }
        /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */ function noop() {
        // No operation performed.
        }
        /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */ function nthArg(n) {
            n = toInteger(n);
            return baseRest(function(args) {
                return baseNth(args, n);
            });
        }
        /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */ var over = createOver(arrayMap);
        /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */ var overEvery = createOver(arrayEvery);
        /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */ var overSome = createOver(arraySome);
        /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */ function property(path) {
            return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }
        /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */ function propertyOf(object) {
            return function(path) {
                return object == null ? undefined : baseGet(object, path);
            };
        }
        /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */ var range = createRange();
        /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */ var rangeRight = createRange(true);
        /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */ function stubArray() {
            return [];
        }
        /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */ function stubFalse() {
            return false;
        }
        /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */ function stubObject() {
            return {};
        }
        /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */ function stubString() {
            return "";
        }
        /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */ function stubTrue() {
            return true;
        }
        /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */ function times(n, iteratee) {
            n = toInteger(n);
            if (n < 1 || n > MAX_SAFE_INTEGER) return [];
            var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
            iteratee = getIteratee(iteratee);
            n -= MAX_ARRAY_LENGTH;
            var result = baseTimes(length, iteratee);
            while(++index < n)iteratee(index);
            return result;
        }
        /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */ function toPath(value) {
            if (isArray(value)) return arrayMap(value, toKey);
            return isSymbol(value) ? [
                value
            ] : copyArray(stringToPath(toString(value)));
        }
        /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */ function uniqueId(prefix) {
            var id = ++idCounter;
            return toString(prefix) + id;
        }
        /*------------------------------------------------------------------------*/ /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */ var add = createMathOperation(function(augend, addend) {
            return augend + addend;
        }, 0);
        /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */ var ceil = createRound("ceil");
        /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */ var divide = createMathOperation(function(dividend, divisor) {
            return dividend / divisor;
        }, 1);
        /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */ var floor = createRound("floor");
        /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */ function max(array) {
            return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
        }
        /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */ function maxBy(array, iteratee) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
        }
        /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */ function mean(array) {
            return baseMean(array, identity);
        }
        /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */ function meanBy(array, iteratee) {
            return baseMean(array, getIteratee(iteratee, 2));
        }
        /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */ function min(array) {
            return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
        }
        /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */ function minBy(array, iteratee) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
        }
        /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */ var multiply = createMathOperation(function(multiplier, multiplicand) {
            return multiplier * multiplicand;
        }, 1);
        /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */ var round = createRound("round");
        /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */ var subtract = createMathOperation(function(minuend, subtrahend) {
            return minuend - subtrahend;
        }, 0);
        /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */ function sum(array) {
            return array && array.length ? baseSum(array, identity) : 0;
        }
        /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */ function sumBy(array, iteratee) {
            return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
        }
        /*------------------------------------------------------------------------*/ // Add methods that return wrapped values in chain sequences.
        lodash.after = after;
        lodash.ary = ary;
        lodash.assign = assign;
        lodash.assignIn = assignIn;
        lodash.assignInWith = assignInWith;
        lodash.assignWith = assignWith;
        lodash.at = at;
        lodash.before = before;
        lodash.bind = bind;
        lodash.bindAll = bindAll;
        lodash.bindKey = bindKey;
        lodash.castArray = castArray;
        lodash.chain = chain;
        lodash.chunk = chunk;
        lodash.compact = compact;
        lodash.concat = concat;
        lodash.cond = cond;
        lodash.conforms = conforms;
        lodash.constant = constant;
        lodash.countBy = countBy;
        lodash.create = create;
        lodash.curry = curry;
        lodash.curryRight = curryRight;
        lodash.debounce = debounce;
        lodash.defaults = defaults;
        lodash.defaultsDeep = defaultsDeep;
        lodash.defer = defer;
        lodash.delay = delay;
        lodash.difference = difference;
        lodash.differenceBy = differenceBy;
        lodash.differenceWith = differenceWith;
        lodash.drop = drop;
        lodash.dropRight = dropRight;
        lodash.dropRightWhile = dropRightWhile;
        lodash.dropWhile = dropWhile;
        lodash.fill = fill;
        lodash.filter = filter;
        lodash.flatMap = flatMap;
        lodash.flatMapDeep = flatMapDeep;
        lodash.flatMapDepth = flatMapDepth;
        lodash.flatten = flatten;
        lodash.flattenDeep = flattenDeep;
        lodash.flattenDepth = flattenDepth;
        lodash.flip = flip;
        lodash.flow = flow;
        lodash.flowRight = flowRight;
        lodash.fromPairs = fromPairs;
        lodash.functions = functions;
        lodash.functionsIn = functionsIn;
        lodash.groupBy = groupBy;
        lodash.initial = initial;
        lodash.intersection = intersection;
        lodash.intersectionBy = intersectionBy;
        lodash.intersectionWith = intersectionWith;
        lodash.invert = invert;
        lodash.invertBy = invertBy;
        lodash.invokeMap = invokeMap;
        lodash.iteratee = iteratee;
        lodash.keyBy = keyBy;
        lodash.keys = keys;
        lodash.keysIn = keysIn;
        lodash.map = map;
        lodash.mapKeys = mapKeys;
        lodash.mapValues = mapValues;
        lodash.matches = matches;
        lodash.matchesProperty = matchesProperty;
        lodash.memoize = memoize;
        lodash.merge = merge;
        lodash.mergeWith = mergeWith;
        lodash.method = method;
        lodash.methodOf = methodOf;
        lodash.mixin = mixin;
        lodash.negate = negate;
        lodash.nthArg = nthArg;
        lodash.omit = omit;
        lodash.omitBy = omitBy;
        lodash.once = once;
        lodash.orderBy = orderBy;
        lodash.over = over;
        lodash.overArgs = overArgs;
        lodash.overEvery = overEvery;
        lodash.overSome = overSome;
        lodash.partial = partial;
        lodash.partialRight = partialRight;
        lodash.partition = partition;
        lodash.pick = pick;
        lodash.pickBy = pickBy;
        lodash.property = property;
        lodash.propertyOf = propertyOf;
        lodash.pull = pull;
        lodash.pullAll = pullAll;
        lodash.pullAllBy = pullAllBy;
        lodash.pullAllWith = pullAllWith;
        lodash.pullAt = pullAt;
        lodash.range = range;
        lodash.rangeRight = rangeRight;
        lodash.rearg = rearg;
        lodash.reject = reject;
        lodash.remove = remove;
        lodash.rest = rest;
        lodash.reverse = reverse;
        lodash.sampleSize = sampleSize;
        lodash.set = set;
        lodash.setWith = setWith;
        lodash.shuffle = shuffle;
        lodash.slice = slice;
        lodash.sortBy = sortBy;
        lodash.sortedUniq = sortedUniq;
        lodash.sortedUniqBy = sortedUniqBy;
        lodash.split = split;
        lodash.spread = spread;
        lodash.tail = tail;
        lodash.take = take;
        lodash.takeRight = takeRight;
        lodash.takeRightWhile = takeRightWhile;
        lodash.takeWhile = takeWhile;
        lodash.tap = tap;
        lodash.throttle = throttle;
        lodash.thru = thru;
        lodash.toArray = toArray;
        lodash.toPairs = toPairs;
        lodash.toPairsIn = toPairsIn;
        lodash.toPath = toPath;
        lodash.toPlainObject = toPlainObject;
        lodash.transform = transform;
        lodash.unary = unary;
        lodash.union = union;
        lodash.unionBy = unionBy;
        lodash.unionWith = unionWith;
        lodash.uniq = uniq;
        lodash.uniqBy = uniqBy;
        lodash.uniqWith = uniqWith;
        lodash.unset = unset;
        lodash.unzip = unzip;
        lodash.unzipWith = unzipWith;
        lodash.update = update;
        lodash.updateWith = updateWith;
        lodash.values = values;
        lodash.valuesIn = valuesIn;
        lodash.without = without;
        lodash.words = words;
        lodash.wrap = wrap;
        lodash.xor = xor;
        lodash.xorBy = xorBy;
        lodash.xorWith = xorWith;
        lodash.zip = zip;
        lodash.zipObject = zipObject;
        lodash.zipObjectDeep = zipObjectDeep;
        lodash.zipWith = zipWith;
        // Add aliases.
        lodash.entries = toPairs;
        lodash.entriesIn = toPairsIn;
        lodash.extend = assignIn;
        lodash.extendWith = assignInWith;
        // Add methods to `lodash.prototype`.
        mixin(lodash, lodash);
        /*------------------------------------------------------------------------*/ // Add methods that return unwrapped values in chain sequences.
        lodash.add = add;
        lodash.attempt = attempt;
        lodash.camelCase = camelCase;
        lodash.capitalize = capitalize;
        lodash.ceil = ceil;
        lodash.clamp = clamp;
        lodash.clone = clone;
        lodash.cloneDeep = cloneDeep;
        lodash.cloneDeepWith = cloneDeepWith;
        lodash.cloneWith = cloneWith;
        lodash.conformsTo = conformsTo;
        lodash.deburr = deburr;
        lodash.defaultTo = defaultTo;
        lodash.divide = divide;
        lodash.endsWith = endsWith;
        lodash.eq = eq;
        lodash.escape = escape;
        lodash.escapeRegExp = escapeRegExp;
        lodash.every = every;
        lodash.find = find;
        lodash.findIndex = findIndex;
        lodash.findKey = findKey;
        lodash.findLast = findLast;
        lodash.findLastIndex = findLastIndex;
        lodash.findLastKey = findLastKey;
        lodash.floor = floor;
        lodash.forEach = forEach;
        lodash.forEachRight = forEachRight;
        lodash.forIn = forIn;
        lodash.forInRight = forInRight;
        lodash.forOwn = forOwn;
        lodash.forOwnRight = forOwnRight;
        lodash.get = get;
        lodash.gt = gt;
        lodash.gte = gte;
        lodash.has = has;
        lodash.hasIn = hasIn;
        lodash.head = head;
        lodash.identity = identity;
        lodash.includes = includes;
        lodash.indexOf = indexOf;
        lodash.inRange = inRange;
        lodash.invoke = invoke;
        lodash.isArguments = isArguments;
        lodash.isArray = isArray;
        lodash.isArrayBuffer = isArrayBuffer;
        lodash.isArrayLike = isArrayLike;
        lodash.isArrayLikeObject = isArrayLikeObject;
        lodash.isBoolean = isBoolean;
        lodash.isBuffer = isBuffer;
        lodash.isDate = isDate;
        lodash.isElement = isElement;
        lodash.isEmpty = isEmpty;
        lodash.isEqual = isEqual;
        lodash.isEqualWith = isEqualWith;
        lodash.isError = isError;
        lodash.isFinite = isFinite;
        lodash.isFunction = isFunction;
        lodash.isInteger = isInteger;
        lodash.isLength = isLength;
        lodash.isMap = isMap;
        lodash.isMatch = isMatch;
        lodash.isMatchWith = isMatchWith;
        lodash.isNaN = isNaN;
        lodash.isNative = isNative;
        lodash.isNil = isNil;
        lodash.isNull = isNull;
        lodash.isNumber = isNumber;
        lodash.isObject = isObject;
        lodash.isObjectLike = isObjectLike;
        lodash.isPlainObject = isPlainObject;
        lodash.isRegExp = isRegExp;
        lodash.isSafeInteger = isSafeInteger;
        lodash.isSet = isSet;
        lodash.isString = isString;
        lodash.isSymbol = isSymbol;
        lodash.isTypedArray = isTypedArray;
        lodash.isUndefined = isUndefined;
        lodash.isWeakMap = isWeakMap;
        lodash.isWeakSet = isWeakSet;
        lodash.join = join;
        lodash.kebabCase = kebabCase;
        lodash.last = last;
        lodash.lastIndexOf = lastIndexOf;
        lodash.lowerCase = lowerCase;
        lodash.lowerFirst = lowerFirst;
        lodash.lt = lt;
        lodash.lte = lte;
        lodash.max = max;
        lodash.maxBy = maxBy;
        lodash.mean = mean;
        lodash.meanBy = meanBy;
        lodash.min = min;
        lodash.minBy = minBy;
        lodash.stubArray = stubArray;
        lodash.stubFalse = stubFalse;
        lodash.stubObject = stubObject;
        lodash.stubString = stubString;
        lodash.stubTrue = stubTrue;
        lodash.multiply = multiply;
        lodash.nth = nth;
        lodash.noConflict = noConflict;
        lodash.noop = noop;
        lodash.now = now;
        lodash.pad = pad;
        lodash.padEnd = padEnd;
        lodash.padStart = padStart;
        lodash.parseInt = parseInt1;
        lodash.random = random;
        lodash.reduce = reduce;
        lodash.reduceRight = reduceRight;
        lodash.repeat = repeat;
        lodash.replace = replace;
        lodash.result = result;
        lodash.round = round;
        lodash.runInContext = runInContext;
        lodash.sample = sample;
        lodash.size = size;
        lodash.snakeCase = snakeCase;
        lodash.some = some;
        lodash.sortedIndex = sortedIndex;
        lodash.sortedIndexBy = sortedIndexBy;
        lodash.sortedIndexOf = sortedIndexOf;
        lodash.sortedLastIndex = sortedLastIndex;
        lodash.sortedLastIndexBy = sortedLastIndexBy;
        lodash.sortedLastIndexOf = sortedLastIndexOf;
        lodash.startCase = startCase;
        lodash.startsWith = startsWith;
        lodash.subtract = subtract;
        lodash.sum = sum;
        lodash.sumBy = sumBy;
        lodash.template = template;
        lodash.times = times;
        lodash.toFinite = toFinite;
        lodash.toInteger = toInteger;
        lodash.toLength = toLength;
        lodash.toLower = toLower;
        lodash.toNumber = toNumber;
        lodash.toSafeInteger = toSafeInteger;
        lodash.toString = toString;
        lodash.toUpper = toUpper;
        lodash.trim = trim;
        lodash.trimEnd = trimEnd;
        lodash.trimStart = trimStart;
        lodash.truncate = truncate;
        lodash.unescape = unescape;
        lodash.uniqueId = uniqueId;
        lodash.upperCase = upperCase;
        lodash.upperFirst = upperFirst;
        // Add aliases.
        lodash.each = forEach;
        lodash.eachRight = forEachRight;
        lodash.first = head;
        mixin(lodash, function() {
            var source = {};
            baseForOwn(lodash, function(func, methodName) {
                if (!hasOwnProperty.call(lodash.prototype, methodName)) source[methodName] = func;
            });
            return source;
        }(), {
            "chain": false
        });
        /*------------------------------------------------------------------------*/ /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */ lodash.VERSION = VERSION;
        // Assign default placeholders.
        arrayEach([
            "bind",
            "bindKey",
            "curry",
            "curryRight",
            "partial",
            "partialRight"
        ], function(methodName) {
            lodash[methodName].placeholder = lodash;
        });
        // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
        arrayEach([
            "drop",
            "take"
        ], function(methodName, index) {
            LazyWrapper.prototype[methodName] = function(n) {
                n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
                var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
                if (result.__filtered__) result.__takeCount__ = nativeMin(n, result.__takeCount__);
                else result.__views__.push({
                    "size": nativeMin(n, MAX_ARRAY_LENGTH),
                    "type": methodName + (result.__dir__ < 0 ? "Right" : "")
                });
                return result;
            };
            LazyWrapper.prototype[methodName + "Right"] = function(n) {
                return this.reverse()[methodName](n).reverse();
            };
        });
        // Add `LazyWrapper` methods that accept an `iteratee` value.
        arrayEach([
            "filter",
            "map",
            "takeWhile"
        ], function(methodName, index) {
            var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
            LazyWrapper.prototype[methodName] = function(iteratee) {
                var result = this.clone();
                result.__iteratees__.push({
                    "iteratee": getIteratee(iteratee, 3),
                    "type": type
                });
                result.__filtered__ = result.__filtered__ || isFilter;
                return result;
            };
        });
        // Add `LazyWrapper` methods for `_.head` and `_.last`.
        arrayEach([
            "head",
            "last"
        ], function(methodName, index) {
            var takeName = "take" + (index ? "Right" : "");
            LazyWrapper.prototype[methodName] = function() {
                return this[takeName](1).value()[0];
            };
        });
        // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
        arrayEach([
            "initial",
            "tail"
        ], function(methodName, index) {
            var dropName = "drop" + (index ? "" : "Right");
            LazyWrapper.prototype[methodName] = function() {
                return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
            };
        });
        LazyWrapper.prototype.compact = function() {
            return this.filter(identity);
        };
        LazyWrapper.prototype.find = function(predicate) {
            return this.filter(predicate).head();
        };
        LazyWrapper.prototype.findLast = function(predicate) {
            return this.reverse().find(predicate);
        };
        LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
            if (typeof path == "function") return new LazyWrapper(this);
            return this.map(function(value) {
                return baseInvoke(value, path, args);
            });
        });
        LazyWrapper.prototype.reject = function(predicate) {
            return this.filter(negate(getIteratee(predicate)));
        };
        LazyWrapper.prototype.slice = function(start, end) {
            start = toInteger(start);
            var result = this;
            if (result.__filtered__ && (start > 0 || end < 0)) return new LazyWrapper(result);
            if (start < 0) result = result.takeRight(-start);
            else if (start) result = result.drop(start);
            if (end !== undefined) {
                end = toInteger(end);
                result = end < 0 ? result.dropRight(-end) : result.take(end - start);
            }
            return result;
        };
        LazyWrapper.prototype.takeRightWhile = function(predicate) {
            return this.reverse().takeWhile(predicate).reverse();
        };
        LazyWrapper.prototype.toArray = function() {
            return this.take(MAX_ARRAY_LENGTH);
        };
        // Add `LazyWrapper` methods to `lodash.prototype`.
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
            if (!lodashFunc) return;
            lodash.prototype[methodName] = function() {
                var value = this.__wrapped__, args = isTaker ? [
                    1
                ] : arguments, isLazy = value instanceof LazyWrapper, iteratee = args[0], useLazy = isLazy || isArray(value);
                var interceptor = function(value) {
                    var result = lodashFunc.apply(lodash, arrayPush([
                        value
                    ], args));
                    return isTaker && chainAll ? result[0] : result;
                };
                if (useLazy && checkIteratee && typeof iteratee == "function" && iteratee.length != 1) // Avoid lazy use if the iteratee has a "length" value other than `1`.
                isLazy = useLazy = false;
                var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
                if (!retUnwrapped && useLazy) {
                    value = onlyLazy ? value : new LazyWrapper(this);
                    var result = func.apply(value, args);
                    result.__actions__.push({
                        "func": thru,
                        "args": [
                            interceptor
                        ],
                        "thisArg": undefined
                    });
                    return new LodashWrapper(result, chainAll);
                }
                if (isUnwrapped && onlyLazy) return func.apply(this, args);
                result = this.thru(interceptor);
                return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
            };
        });
        // Add `Array` methods to `lodash.prototype`.
        arrayEach([
            "pop",
            "push",
            "shift",
            "sort",
            "splice",
            "unshift"
        ], function(methodName) {
            var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
            lodash.prototype[methodName] = function() {
                var args = arguments;
                if (retUnwrapped && !this.__chain__) {
                    var value = this.value();
                    return func.apply(isArray(value) ? value : [], args);
                }
                return this[chainName](function(value) {
                    return func.apply(isArray(value) ? value : [], args);
                });
            };
        });
        // Map minified method names to their real names.
        baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var lodashFunc = lodash[methodName];
            if (lodashFunc) {
                var key = lodashFunc.name + "";
                if (!hasOwnProperty.call(realNames, key)) realNames[key] = [];
                realNames[key].push({
                    "name": methodName,
                    "func": lodashFunc
                });
            }
        });
        realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [
            {
                "name": "wrapper",
                "func": undefined
            }
        ];
        // Add methods to `LazyWrapper`.
        LazyWrapper.prototype.clone = lazyClone;
        LazyWrapper.prototype.reverse = lazyReverse;
        LazyWrapper.prototype.value = lazyValue;
        // Add chain sequence methods to the `lodash` wrapper.
        lodash.prototype.at = wrapperAt;
        lodash.prototype.chain = wrapperChain;
        lodash.prototype.commit = wrapperCommit;
        lodash.prototype.next = wrapperNext;
        lodash.prototype.plant = wrapperPlant;
        lodash.prototype.reverse = wrapperReverse;
        lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
        // Add lazy aliases.
        lodash.prototype.first = lodash.prototype.head;
        if (symIterator) lodash.prototype[symIterator] = wrapperToIterator;
        return lodash;
    };
    /*--------------------------------------------------------------------------*/ // Export lodash.
    var _ = runInContext();
    // Some AMD build optimizers, like r.js, check for condition patterns like:
    if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        // Expose Lodash on the global object to prevent errors when Lodash is
        // loaded by a script tag in the presence of an AMD loader.
        // See http://requirejs.org/docs/errors.html#mismatch for more details.
        // Use `_.noConflict` to remove Lodash from the global object.
        root._ = _;
        // Define as an anonymous module so, through path mapping, it can be
        // referenced as the "underscore" module.
        define(function() {
            return _;
        });
    } else if (freeModule) {
        // Export for Node.js.
        (freeModule.exports = _)._ = _;
        // Export for CommonJS support.
        freeExports._ = _;
    } else // Export to the global object.
    root._ = _;
}).call(this);

},{}]},["l57oZ","h7u1C"], "h7u1C", "parcelRequired5aa")

//# sourceMappingURL=index.b71e74eb.js.map
